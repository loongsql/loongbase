/* A Bison parser, made by GNU Bison 3.0.4.  */

/* Bison implementation for Yacc-like parsers in C

   Copyright (C) 1984, 1989-1990, 2000-2015 Free Software Foundation, Inc.

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "3.0.4"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Push parsers.  */
#define YYPUSH 0

/* Pull parsers.  */
#define YYPULL 1


/* Substitute the variable and function names.  */
#define yyparse         MYSQLparse
#define yylex           MYSQLlex
#define yyerror         MYSQLerror
#define yydebug         MYSQLdebug
#define yynerrs         MYSQLnerrs


/* Copy the first part of user declarations.  */
#line 31 "sql_yacc.yy" /* yacc.c:339  */

/*
Note: YYTHD is passed as an argument to yyparse(), and subsequently to yylex().
*/
#define YYP (YYTHD->m_parser_state)
#define YYLIP (& YYTHD->m_parser_state->m_lip)
#define YYPS (& YYTHD->m_parser_state->m_yacc)
#define YYCSCL (YYLIP->query_charset)
#define YYMEM_ROOT (YYTHD->mem_root)
#define YYCLIENT_NO_SCHEMA (YYTHD->get_protocol()->has_client_capability(CLIENT_NO_SCHEMA))

#define YYINITDEPTH 100
#define YYMAXDEPTH 3200                        /* Because of 64K stack */
#define Lex (YYTHD->lex)
#define Select Lex->current_query_block()

#include <sys/types.h>  // TODO: replace with cstdint

#include <algorithm>
#include <cerrno>
#include <climits>
#include <cstdlib>
#include <cstring>
#include <limits>
#include <memory>
#include <string>
#include <type_traits>
#include <utility>

#include "field_types.h"
#include "ft_global.h"
#include "lex_string.h"
#include "libbinlogevents/include/binlog_event.h"
#include "m_ctype.h"
#include "m_string.h"
#include "my_alloc.h"
#include "my_base.h"
#include "my_check_opt.h"
#include "my_dbug.h"
#include "my_inttypes.h"  // TODO: replace with cstdint
#include "my_sqlcommand.h"
#include "my_sys.h"
#include "my_thread_local.h"
#include "my_time.h"
#include "myisam.h"
#include "myisammrg.h"
#include "mysql/mysql_lex_string.h"
#include "mysql/plugin.h"
#include "mysql/udf_registration_types.h"
#include "mysql_com.h"
#include "mysql_time.h"
#include "mysqld_error.h"
#include "prealloced_array.h"
#include "sql/auth/auth_acls.h"
#include "sql/auth/auth_common.h"
#include "sql/binlog.h"                          // for MAX_LOG_UNIQUE_FN_EXT
#include "sql/create_field.h"
#include "sql/dd/types/abstract_table.h"         // TT_BASE_TABLE
#include "sql/dd/types/column.h"
#include "sql/derror.h"
#include "sql/event_parse_data.h"
#include "sql/field.h"
#include "sql/gis/srid.h"                    // gis::srid_t
#include "sql/handler.h"
#include "sql/item.h"
#include "sql/item_cmpfunc.h"
#include "sql/item_create.h"
#include "sql/item_func.h"
#include "sql/item_geofunc.h"
#include "sql/item_json_func.h"
#include "sql/item_regexp_func.h"
#include "sql/item_row.h"
#include "sql/item_strfunc.h"
#include "sql/item_subselect.h"
#include "sql/item_sum.h"
#include "sql/item_timefunc.h"
#include "sql-common/json_dom.h"
#include "sql-common/json_syntax_check.h"           // is_valid_json_syntax
#include "sql/key_spec.h"
#include "sql/keycaches.h"
#include "sql/lex_symbol.h"
#include "sql/lex_token.h"
#include "sql/lexer_yystype.h"
#include "sql/mdl.h"
#include "sql/mem_root_array.h"
#include "sql/mysqld.h"
#include "sql/options_mysqld.h"
#include "sql/parse_location.h"
#include "sql/parse_tree_helpers.h"
#include "sql/parse_tree_node_base.h"
#include "sql/parser_yystype.h"
#include "sql/partition_element.h"
#include "sql/partition_info.h"
#include "sql/protocol.h"
#include "sql/query_options.h"
#include "sql/resourcegroups/platform/thread_attrs_api.h"
#include "sql/resourcegroups/resource_group_basic_types.h"
#include "sql/rpl_filter.h"
#include "sql/rpl_replica.h"                       // Sql_cmd_change_repl_filter
#include "sql/set_var.h"
#include "sql/sp.h"
#include "sql/sp_head.h"
#include "sql/sp_instr.h"
#include "sql/sp_pcontext.h"
#include "sql/spatial.h"
#include "sql/sql_admin.h"                         // Sql_cmd_analyze/Check..._table
#include "sql/sql_alter.h"                         // Sql_cmd_alter_table*
#include "sql/sql_backup_lock.h"                   // Sql_cmd_lock_instance
#include "sql/sql_class.h"      /* Key_part_spec, enum_filetype */
#include "sql/sql_cmd_srs.h"
#include "sql/sql_connect.h"
#include "sql/sql_component.h"
#include "sql/sql_error.h"
#include "sql/sql_exchange.h"
#include "sql/sql_get_diagnostics.h"               // Sql_cmd_get_diagnostics
#include "sql/sql_handler.h"                       // Sql_cmd_handler_*
#include "sql/sql_import.h"                        // Sql_cmd_import_table
#include "sql/sql_lex.h"
#include "sql/sql_list.h"
#include "sql/sql_parse.h"                        /* comp_*_creator */
#include "sql/sql_plugin.h"                      // plugin_is_ready
#include "sql/sql_profile.h"
#include "sql/sql_select.h"                      // Sql_cmd_select...
#include "sql/sql_servers.h"
#include "sql/sql_signal.h"
#include "sql/sql_table.h"                        /* primary_key_name */
#include "sql/sql_tablespace.h"                  // Sql_cmd_alter_tablespace
#include "sql/sql_trigger.h"                     // Sql_cmd_create_trigger
#include "sql/sql_udf.h"
#include "sql/system_variables.h"
#include "sql/table.h"
#include "sql/table_function.h"
#include "sql/thr_malloc.h"
#include "sql/trigger_def.h"
#include "sql/window_lex.h"
#include "sql/xa/sql_cmd_xa.h"                   // Sql_cmd_xa...
#include "sql_chars.h"
#include "sql_string.h"
#include "thr_lock.h"
#include "violite.h"

/* this is to get the bison compilation windows warnings out */
#ifdef _MSC_VER
/* warning C4065: switch statement contains 'default' but no 'case' labels */
#pragma warning (disable : 4065)
#endif

using std::min;
using std::max;

/// The maximum number of histogram buckets.
static const int MAX_NUMBER_OF_HISTOGRAM_BUCKETS= 1024;

/// The default number of histogram buckets when the user does not specify it
/// explicitly. A value of 100 is chosen because the gain in accuracy above this
/// point seems to be generally low.
static const int DEFAULT_NUMBER_OF_HISTOGRAM_BUCKETS= 100;

int yylex(void *yylval, void *yythd);

#define yyoverflow(A,B,C,D,E,F,G,H)           \
  {                                           \
    ulong val= *(H);                          \
    if (my_yyoverflow((B), (D), (F), &val))   \
    {                                         \
      yyerror(NULL, YYTHD, NULL, (const char*) (A));\
      return 2;                               \
    }                                         \
    else                                      \
    {                                         \
      *(H)= (YYSIZE_T)val;                    \
    }                                         \
  }

#define MYSQL_YYABORT YYABORT

#define MYSQL_YYABORT_ERROR(...)              \
  do                                          \
  {                                           \
    my_error(__VA_ARGS__);                    \
    MYSQL_YYABORT;                            \
  } while(0)

#define MYSQL_YYABORT_UNLESS(A)         \
  if (!(A))                             \
  {                                     \
    YYTHD->syntax_error();              \
    MYSQL_YYABORT;                      \
  }

#define NEW_PTN new(YYMEM_ROOT)


/**
  Parse_tree_node::contextualize() function call wrapper
*/
#define CONTEXTUALIZE(x)                                \
  do                                                    \
  {                                                     \
    std::remove_reference<decltype(*x)>::type::context_t pc(YYTHD, Select); \
    if (YYTHD->is_error() ||                                            \
        (YYTHD->lex->will_contextualize && (x)->contextualize(&pc)))    \
      MYSQL_YYABORT;                                                    \
  } while(0)


/**
  Item::itemize() function call wrapper
*/
#define ITEMIZE(x, y)                                                   \
  do                                                                    \
  {                                                                     \
    Parse_context pc(YYTHD, Select);                                    \
    if (YYTHD->is_error() ||                                            \
        (YYTHD->lex->will_contextualize && (x)->itemize(&pc, (y))))     \
      MYSQL_YYABORT;                                                    \
  } while(0)

/**
  Parse_tree_root::make_cmd() wrapper to raise postponed error message on OOM

  @note x may be NULL because of OOM error.
*/
#define MAKE_CMD(x)                                    \
  do                                                   \
  {                                                    \
    if (YYTHD->is_error() || Lex->make_sql_cmd(x))     \
      MYSQL_YYABORT;                                   \
  } while(0)


#ifndef NDEBUG
#define YYDEBUG 1
#else
#define YYDEBUG 0
#endif


/**
  @brief Bison callback to report a syntax/OOM error

  This function is invoked by the bison-generated parser
  when a syntax error or an out-of-memory
  condition occurs, then the parser function MYSQLparse()
  returns 1 to the caller.

  This function is not invoked when the
  parser is requested to abort by semantic action code
  by means of YYABORT or YYACCEPT macros..

  This function is not for use in semantic actions and is internal to
  the parser, as it performs some pre-return cleanup.
  In semantic actions, please use syntax_error or my_error to
  push an error into the error stack and MYSQL_YYABORT
  to abort from the parser.
*/

static
void MYSQLerror(YYLTYPE *location, THD *thd, Parse_tree_root **, const char *s)
{
  if (strcmp(s, "syntax error") == 0) {
    thd->syntax_error_at(*location);
  } else if (strcmp(s, "memory exhausted") == 0) {
    my_error(ER_DA_OOM, MYF(0));
  } else {
    // Find omitted error messages in the generated file (sql_yacc.cc) and fix:
    assert(false);
    my_error(ER_UNKNOWN_ERROR, MYF(0));
  }
}


#ifndef NDEBUG
void turn_parser_debug_on()
{
  /*
     MYSQLdebug is in sql/sql_yacc.cc, in bison generated code.
     Turning this option on is **VERY** verbose, and should be
     used when investigating a syntax error problem only.

     The syntax to run with bison traces is as follows :
     - Starting a server manually :
       mysqld --debug="d,parser_debug" ...
     - Running a test :
       mysql-test-run.pl --mysqld="--debug=d,parser_debug" ...

     The result will be in the process stderr (var/log/master.err)
   */

  extern int yydebug;
  yydebug= 1;
}
#endif

static bool is_native_function(const LEX_STRING &name)
{
  if (find_native_function_builder(name) != nullptr)
    return true;

  if (is_lex_native_function(&name))
    return true;

  return false;
}


/**
  Helper action for a case statement (entering the CASE).
  This helper is used for both 'simple' and 'searched' cases.
  This helper, with the other case_stmt_action_..., is executed when
  the following SQL code is parsed:
<pre>
CREATE PROCEDURE proc_19194_simple(i int)
BEGIN
  DECLARE str CHAR(10);

  CASE i
    WHEN 1 THEN SET str="1";
    WHEN 2 THEN SET str="2";
    WHEN 3 THEN SET str="3";
    ELSE SET str="unknown";
  END CASE;

  SELECT str;
END
</pre>
  The actions are used to generate the following code:
<pre>
SHOW PROCEDURE CODE proc_19194_simple;
Pos     Instruction
0       set str@1 NULL
1       set_case_expr (12) 0 i@0
2       jump_if_not 5(12) (case_expr@0 = 1)
3       set str@1 _latin1'1'
4       jump 12
5       jump_if_not 8(12) (case_expr@0 = 2)
6       set str@1 _latin1'2'
7       jump 12
8       jump_if_not 11(12) (case_expr@0 = 3)
9       set str@1 _latin1'3'
10      jump 12
11      set str@1 _latin1'unknown'
12      stmt 0 "SELECT str"
</pre>

  @param thd thread handler
*/

static void case_stmt_action_case(THD *thd)
{
  LEX *lex= thd->lex;
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp->m_parser_data.new_cont_backpatch();

  /*
    BACKPATCH: Creating target label for the jump to
    "case_stmt_action_end_case"
    (Instruction 12 in the example)
  */

  pctx->push_label(thd, EMPTY_CSTR, sp->instructions());
}

/**
  Helper action for a case then statements.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
*/

static bool case_stmt_action_then(THD *thd, LEX *lex)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp_instr_jump *i =
    new (thd->mem_root) sp_instr_jump(sp->instructions(), pctx);

  if (!i || sp->add_instr(thd, i))
    return true;

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_when" to "case_stmt_action_then"
    (jump_if_not from instruction 2 to 5, 5 to 8 ... in the example)
  */

  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  /*
    BACKPATCH: Registering forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */

  return sp->m_parser_data.add_backpatch_entry(i, pctx->last_label());
}

/**
  Helper action for an end case.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
  @param simple true for simple cases, false for searched cases
*/

static void case_stmt_action_end_case(LEX *lex, bool simple)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */
  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  if (simple)
    pctx->pop_case_expr_id();

  sp->m_parser_data.do_cont_backpatch(sp->instructions());
}


static void init_index_hints(List<Index_hint> *hints, index_hint_type type,
                             index_clause_map clause)
{
  List_iterator<Index_hint> it(*hints);
  Index_hint *hint;
  while ((hint= it++))
  {
    hint->type= type;
    hint->clause= clause;
  }
}

bool my_yyoverflow(short **a, YYSTYPE **b, YYLTYPE **c, ulong *yystacksize);

#include "sql/parse_tree_column_attrs.h"
#include "sql/parse_tree_handler.h"
#include "sql/parse_tree_items.h"
#include "sql/parse_tree_nodes.h"
#include "sql/parse_tree_partitions.h"

void warn_about_deprecated_national(THD *thd)
{
  if (native_strcasecmp(national_charset_info->csname, "utf8") == 0 ||
      native_strcasecmp(national_charset_info->csname, "utf8mb3") == 0)
    push_warning(thd, ER_DEPRECATED_NATIONAL);
}

void warn_about_deprecated_binary(THD *thd)
{
  push_deprecated_warn(thd, "BINARY as attribute of a type",
  "a CHARACTER SET clause with _bin collation");
}


#line 532 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:339  */

# ifndef YY_NULLPTR
#  if defined __cplusplus && 201103L <= __cplusplus
#   define YY_NULLPTR nullptr
#  else
#   define YY_NULLPTR 0
#  endif
# endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* In a future release of Bison, this section will be replaced
   by #include "sql_yacc.h".  */
#ifndef YY_MYSQL_VAR_LIB_PB2_SB_1_7663233_1657143500_24_DIST_GPL_SQL_SQL_YACC_H_INCLUDED
# define YY_MYSQL_VAR_LIB_PB2_SB_1_7663233_1657143500_24_DIST_GPL_SQL_SQL_YACC_H_INCLUDED
/* Debug traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif
#if YYDEBUG
extern int MYSQLdebug;
#endif

/* Token type.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
  enum yytokentype
  {
    ABORT_SYM = 258,
    ACCESSIBLE_SYM = 259,
    ACCOUNT_SYM = 260,
    ACTION = 261,
    ADD = 262,
    ADDDATE_SYM = 263,
    AFTER_SYM = 264,
    AGAINST = 265,
    AGGREGATE_SYM = 266,
    ALGORITHM_SYM = 267,
    ALL = 268,
    ALTER = 269,
    ALWAYS_SYM = 270,
    OBSOLETE_TOKEN_271 = 271,
    ANALYZE_SYM = 272,
    AND_AND_SYM = 273,
    AND_SYM = 274,
    ANY_SYM = 275,
    AS = 276,
    ASC = 277,
    ASCII_SYM = 278,
    ASENSITIVE_SYM = 279,
    AT_SYM = 280,
    AUTOEXTEND_SIZE_SYM = 281,
    AUTO_INC = 282,
    AVG_ROW_LENGTH = 283,
    AVG_SYM = 284,
    BACKUP_SYM = 285,
    BEFORE_SYM = 286,
    BEGIN_SYM = 287,
    BETWEEN_SYM = 288,
    BIGINT_SYM = 289,
    BINARY_SYM = 290,
    BINLOG_SYM = 291,
    BIN_NUM = 292,
    BIT_AND_SYM = 293,
    BIT_OR_SYM = 294,
    BIT_SYM = 295,
    BIT_XOR_SYM = 296,
    BLOB_SYM = 297,
    BLOCK_SYM = 298,
    BOOLEAN_SYM = 299,
    BOOL_SYM = 300,
    BOTH = 301,
    BTREE_SYM = 302,
    BY = 303,
    BYTE_SYM = 304,
    CACHE_SYM = 305,
    CALL_SYM = 306,
    CASCADE = 307,
    CASCADED = 308,
    CASE_SYM = 309,
    CAST_SYM = 310,
    CATALOG_NAME_SYM = 311,
    CHAIN_SYM = 312,
    CHANGE = 313,
    CHANGED = 314,
    CHANNEL_SYM = 315,
    CHARSET = 316,
    CHAR_SYM = 317,
    CHECKSUM_SYM = 318,
    CHECK_SYM = 319,
    CIPHER_SYM = 320,
    CLASS_ORIGIN_SYM = 321,
    CLIENT_SYM = 322,
    CLOSE_SYM = 323,
    COALESCE = 324,
    CODE_SYM = 325,
    COLLATE_SYM = 326,
    COLLATION_SYM = 327,
    COLUMNS = 328,
    COLUMN_SYM = 329,
    COLUMN_FORMAT_SYM = 330,
    COLUMN_NAME_SYM = 331,
    COMMENT_SYM = 332,
    COMMITTED_SYM = 333,
    COMMIT_SYM = 334,
    COMPACT_SYM = 335,
    COMPLETION_SYM = 336,
    COMPRESSED_SYM = 337,
    COMPRESSION_SYM = 338,
    ENCRYPTION_SYM = 339,
    CONCURRENT = 340,
    CONDITION_SYM = 341,
    CONNECTION_SYM = 342,
    CONSISTENT_SYM = 343,
    CONSTRAINT = 344,
    CONSTRAINT_CATALOG_SYM = 345,
    CONSTRAINT_NAME_SYM = 346,
    CONSTRAINT_SCHEMA_SYM = 347,
    CONTAINS_SYM = 348,
    CONTEXT_SYM = 349,
    CONTINUE_SYM = 350,
    CONVERT_SYM = 351,
    COUNT_SYM = 352,
    CPU_SYM = 353,
    CREATE = 354,
    CROSS = 355,
    CUBE_SYM = 356,
    CURDATE = 357,
    CURRENT_SYM = 358,
    CURRENT_USER = 359,
    CURSOR_SYM = 360,
    CURSOR_NAME_SYM = 361,
    CURTIME = 362,
    DATABASE = 363,
    DATABASES = 364,
    DATAFILE_SYM = 365,
    DATA_SYM = 366,
    DATETIME_SYM = 367,
    DATE_ADD_INTERVAL = 368,
    DATE_SUB_INTERVAL = 369,
    DATE_SYM = 370,
    DAY_HOUR_SYM = 371,
    DAY_MICROSECOND_SYM = 372,
    DAY_MINUTE_SYM = 373,
    DAY_SECOND_SYM = 374,
    DAY_SYM = 375,
    DEALLOCATE_SYM = 376,
    DECIMAL_NUM = 377,
    DECIMAL_SYM = 378,
    DECLARE_SYM = 379,
    DEFAULT_SYM = 380,
    DEFAULT_AUTH_SYM = 381,
    DEFINER_SYM = 382,
    DELAYED_SYM = 383,
    DELAY_KEY_WRITE_SYM = 384,
    DELETE_SYM = 385,
    DESC = 386,
    DESCRIBE = 387,
    OBSOLETE_TOKEN_388 = 388,
    DETERMINISTIC_SYM = 389,
    DIAGNOSTICS_SYM = 390,
    DIRECTORY_SYM = 391,
    DISABLE_SYM = 392,
    DISCARD_SYM = 393,
    DISK_SYM = 394,
    DISTINCT = 395,
    DIV_SYM = 396,
    DOUBLE_SYM = 397,
    DO_SYM = 398,
    DROP = 399,
    DUAL_SYM = 400,
    DUMPFILE = 401,
    DUPLICATE_SYM = 402,
    DYNAMIC_SYM = 403,
    EACH_SYM = 404,
    ELSE = 405,
    ELSEIF_SYM = 406,
    ENABLE_SYM = 407,
    ENCLOSED = 408,
    END = 409,
    ENDS_SYM = 410,
    END_OF_INPUT = 411,
    ENGINES_SYM = 412,
    ENGINE_SYM = 413,
    ENUM_SYM = 414,
    EQ = 415,
    EQUAL_SYM = 416,
    ERROR_SYM = 417,
    ERRORS = 418,
    ESCAPED = 419,
    ESCAPE_SYM = 420,
    EVENTS_SYM = 421,
    EVENT_SYM = 422,
    EVERY_SYM = 423,
    EXCHANGE_SYM = 424,
    EXECUTE_SYM = 425,
    EXISTS = 426,
    EXIT_SYM = 427,
    EXPANSION_SYM = 428,
    EXPIRE_SYM = 429,
    EXPORT_SYM = 430,
    EXTENDED_SYM = 431,
    EXTENT_SIZE_SYM = 432,
    EXTRACT_SYM = 433,
    FALSE_SYM = 434,
    FAST_SYM = 435,
    FAULTS_SYM = 436,
    FETCH_SYM = 437,
    FILE_SYM = 438,
    FILE_BLOCK_SIZE_SYM = 439,
    FILTER_SYM = 440,
    FIRST_SYM = 441,
    FIXED_SYM = 442,
    FLOAT_NUM = 443,
    FLOAT_SYM = 444,
    FLUSH_SYM = 445,
    FOLLOWS_SYM = 446,
    FORCE_SYM = 447,
    FOREIGN = 448,
    FOR_SYM = 449,
    FORMAT_SYM = 450,
    FOUND_SYM = 451,
    FROM = 452,
    FULL = 453,
    FULLTEXT_SYM = 454,
    FUNCTION_SYM = 455,
    GE = 456,
    GENERAL = 457,
    GENERATED = 458,
    GROUP_REPLICATION = 459,
    GEOMETRYCOLLECTION_SYM = 460,
    GEOMETRY_SYM = 461,
    GET_FORMAT = 462,
    GET_SYM = 463,
    GLOBAL_SYM = 464,
    GRANT = 465,
    GRANTS = 466,
    GROUP_SYM = 467,
    GROUP_CONCAT_SYM = 468,
    GT_SYM = 469,
    HANDLER_SYM = 470,
    HASH_SYM = 471,
    HAVING = 472,
    HELP_SYM = 473,
    HEX_NUM = 474,
    HIGH_PRIORITY = 475,
    HOST_SYM = 476,
    HOSTS_SYM = 477,
    HOUR_MICROSECOND_SYM = 478,
    HOUR_MINUTE_SYM = 479,
    HOUR_SECOND_SYM = 480,
    HOUR_SYM = 481,
    IDENT = 482,
    IDENTIFIED_SYM = 483,
    IDENT_QUOTED = 484,
    IF = 485,
    IGNORE_SYM = 486,
    IGNORE_SERVER_IDS_SYM = 487,
    IMPORT = 488,
    INDEXES = 489,
    INDEX_SYM = 490,
    INFILE = 491,
    INITIAL_SIZE_SYM = 492,
    INNER_SYM = 493,
    INOUT_SYM = 494,
    INSENSITIVE_SYM = 495,
    INSERT_SYM = 496,
    INSERT_METHOD = 497,
    INSTANCE_SYM = 498,
    INSTALL_SYM = 499,
    INTERVAL_SYM = 500,
    INTO = 501,
    INT_SYM = 502,
    INVOKER_SYM = 503,
    IN_SYM = 504,
    IO_AFTER_GTIDS = 505,
    IO_BEFORE_GTIDS = 506,
    IO_SYM = 507,
    IPC_SYM = 508,
    IS = 509,
    ISOLATION = 510,
    ISSUER_SYM = 511,
    ITERATE_SYM = 512,
    JOIN_SYM = 513,
    JSON_SEPARATOR_SYM = 514,
    JSON_SYM = 515,
    KEYS = 516,
    KEY_BLOCK_SIZE = 517,
    KEY_SYM = 518,
    KILL_SYM = 519,
    LANGUAGE_SYM = 520,
    LAST_SYM = 521,
    LE = 522,
    LEADING = 523,
    LEAVES = 524,
    LEAVE_SYM = 525,
    LEFT = 526,
    LESS_SYM = 527,
    LEVEL_SYM = 528,
    LEX_HOSTNAME = 529,
    LIKE = 530,
    LIMIT = 531,
    LINEAR_SYM = 532,
    LINES = 533,
    LINESTRING_SYM = 534,
    LIST_SYM = 535,
    LOAD = 536,
    LOCAL_SYM = 537,
    OBSOLETE_TOKEN_538 = 538,
    LOCKS_SYM = 539,
    LOCK_SYM = 540,
    LOGFILE_SYM = 541,
    LOGS_SYM = 542,
    LONGBLOB_SYM = 543,
    LONGTEXT_SYM = 544,
    LONG_NUM = 545,
    LONG_SYM = 546,
    LOOP_SYM = 547,
    LOW_PRIORITY = 548,
    LT = 549,
    MASTER_AUTO_POSITION_SYM = 550,
    MASTER_BIND_SYM = 551,
    MASTER_CONNECT_RETRY_SYM = 552,
    MASTER_DELAY_SYM = 553,
    MASTER_HOST_SYM = 554,
    MASTER_LOG_FILE_SYM = 555,
    MASTER_LOG_POS_SYM = 556,
    MASTER_PASSWORD_SYM = 557,
    MASTER_PORT_SYM = 558,
    MASTER_RETRY_COUNT_SYM = 559,
    MASTER_SSL_CAPATH_SYM = 561,
    MASTER_TLS_VERSION_SYM = 562,
    MASTER_SSL_CA_SYM = 563,
    MASTER_SSL_CERT_SYM = 564,
    MASTER_SSL_CIPHER_SYM = 565,
    MASTER_SSL_CRL_SYM = 566,
    MASTER_SSL_CRLPATH_SYM = 567,
    MASTER_SSL_KEY_SYM = 568,
    MASTER_SSL_SYM = 569,
    MASTER_SSL_VERIFY_SERVER_CERT_SYM = 570,
    MASTER_SYM = 571,
    MASTER_USER_SYM = 572,
    MASTER_HEARTBEAT_PERIOD_SYM = 573,
    MATCH = 574,
    MAX_CONNECTIONS_PER_HOUR = 575,
    MAX_QUERIES_PER_HOUR = 576,
    MAX_ROWS = 577,
    MAX_SIZE_SYM = 578,
    MAX_SYM = 579,
    MAX_UPDATES_PER_HOUR = 580,
    MAX_USER_CONNECTIONS_SYM = 581,
    MAX_VALUE_SYM = 582,
    MEDIUMBLOB_SYM = 583,
    MEDIUMINT_SYM = 584,
    MEDIUMTEXT_SYM = 585,
    MEDIUM_SYM = 586,
    MEMORY_SYM = 587,
    MERGE_SYM = 588,
    MESSAGE_TEXT_SYM = 589,
    MICROSECOND_SYM = 590,
    MIGRATE_SYM = 591,
    MINUTE_MICROSECOND_SYM = 592,
    MINUTE_SECOND_SYM = 593,
    MINUTE_SYM = 594,
    MIN_ROWS = 595,
    MIN_SYM = 596,
    MODE_SYM = 597,
    MODIFIES_SYM = 598,
    MODIFY_SYM = 599,
    MOD_SYM = 600,
    MONTH_SYM = 601,
    MULTILINESTRING_SYM = 602,
    MULTIPOINT_SYM = 603,
    MULTIPOLYGON_SYM = 604,
    MUTEX_SYM = 605,
    MYSQL_ERRNO_SYM = 606,
    NAMES_SYM = 607,
    NAME_SYM = 608,
    NATIONAL_SYM = 609,
    NATURAL = 610,
    NCHAR_STRING = 611,
    NCHAR_SYM = 612,
    NDBCLUSTER_SYM = 613,
    NE = 614,
    NEG = 615,
    NEVER_SYM = 616,
    NEW_SYM = 617,
    NEXT_SYM = 618,
    NODEGROUP_SYM = 619,
    NONE_SYM = 620,
    NOT2_SYM = 621,
    NOT_SYM = 622,
    NOW_SYM = 623,
    NO_SYM = 624,
    NO_WAIT_SYM = 625,
    NO_WRITE_TO_BINLOG = 626,
    NULL_SYM = 627,
    NUM = 628,
    NUMBER_SYM = 629,
    NUMERIC_SYM = 630,
    NVARCHAR_SYM = 631,
    OFFSET_SYM = 632,
    ON_SYM = 633,
    ONE_SYM = 634,
    ONLY_SYM = 635,
    OPEN_SYM = 636,
    OPTIMIZE = 637,
    OPTIMIZER_COSTS_SYM = 638,
    OPTIONS_SYM = 639,
    OPTION = 640,
    OPTIONALLY = 641,
    OR2_SYM = 642,
    ORDER_SYM = 643,
    OR_OR_SYM = 644,
    OR_SYM = 645,
    OUTER_SYM = 646,
    OUTFILE = 647,
    OUT_SYM = 648,
    OWNER_SYM = 649,
    PACK_KEYS_SYM = 650,
    PAGE_SYM = 651,
    PARAM_MARKER = 652,
    PARSER_SYM = 653,
    OBSOLETE_TOKEN_654 = 654,
    PARTIAL = 655,
    PARTITION_SYM = 656,
    PARTITIONS_SYM = 657,
    PARTITIONING_SYM = 658,
    PASSWORD = 659,
    PHASE_SYM = 660,
    PLUGIN_DIR_SYM = 661,
    PLUGIN_SYM = 662,
    PLUGINS_SYM = 663,
    POINT_SYM = 664,
    POLYGON_SYM = 665,
    PORT_SYM = 666,
    POSITION_SYM = 667,
    PRECEDES_SYM = 668,
    PRECISION = 669,
    PREPARE_SYM = 670,
    PRESERVE_SYM = 671,
    PREV_SYM = 672,
    PRIMARY_SYM = 673,
    PRIVILEGES = 674,
    PROCEDURE_SYM = 675,
    PROCESS = 676,
    PROCESSLIST_SYM = 677,
    PROFILE_SYM = 678,
    PROFILES_SYM = 679,
    PROXY_SYM = 680,
    PURGE = 681,
    QUARTER_SYM = 682,
    QUERY_SYM = 683,
    QUICK = 684,
    RANGE_SYM = 685,
    READS_SYM = 686,
    READ_ONLY_SYM = 687,
    READ_SYM = 688,
    READ_WRITE_SYM = 689,
    REAL_SYM = 690,
    REBUILD_SYM = 691,
    RECOVER_SYM = 692,
    OBSOLETE_TOKEN_693 = 693,
    REDO_BUFFER_SIZE_SYM = 694,
    REDUNDANT_SYM = 695,
    REFERENCES = 696,
    REGEXP = 697,
    RELAY = 698,
    RELAYLOG_SYM = 699,
    RELAY_LOG_FILE_SYM = 700,
    RELAY_LOG_POS_SYM = 701,
    RELAY_THREAD = 702,
    RELEASE_SYM = 703,
    RELOAD = 704,
    REMOVE_SYM = 705,
    RENAME = 706,
    REORGANIZE_SYM = 707,
    REPAIR = 708,
    REPEATABLE_SYM = 709,
    REPEAT_SYM = 710,
    REPLACE_SYM = 711,
    REPLICATION = 712,
    REPLICATE_DO_DB = 713,
    REPLICATE_IGNORE_DB = 714,
    REPLICATE_DO_TABLE = 715,
    REPLICATE_IGNORE_TABLE = 716,
    REPLICATE_WILD_DO_TABLE = 717,
    REPLICATE_WILD_IGNORE_TABLE = 718,
    REPLICATE_REWRITE_DB = 719,
    REQUIRE_SYM = 720,
    RESET_SYM = 721,
    RESIGNAL_SYM = 722,
    RESOURCES = 723,
    RESTORE_SYM = 724,
    RESTRICT = 725,
    RESUME_SYM = 726,
    RETURNED_SQLSTATE_SYM = 727,
    RETURNS_SYM = 728,
    RETURN_SYM = 729,
    REVERSE_SYM = 730,
    REVOKE = 731,
    RIGHT = 732,
    ROLLBACK_SYM = 733,
    ROLLUP_SYM = 734,
    ROTATE_SYM = 735,
    ROUTINE_SYM = 736,
    ROWS_SYM = 737,
    ROW_FORMAT_SYM = 738,
    ROW_SYM = 739,
    ROW_COUNT_SYM = 740,
    RTREE_SYM = 741,
    SAVEPOINT_SYM = 742,
    SCHEDULE_SYM = 743,
    SCHEMA_NAME_SYM = 744,
    SECOND_MICROSECOND_SYM = 745,
    SECOND_SYM = 746,
    SECURITY_SYM = 747,
    SELECT_SYM = 748,
    SENSITIVE_SYM = 749,
    SEPARATOR_SYM = 750,
    SERIALIZABLE_SYM = 751,
    SERIAL_SYM = 752,
    SESSION_SYM = 753,
    SERVER_SYM = 754,
    OBSOLETE_TOKEN_755 = 755,
    SET_SYM = 756,
    SET_VAR = 757,
    SHARE_SYM = 758,
    SHIFT_LEFT = 759,
    SHIFT_RIGHT = 760,
    SHOW = 761,
    SHUTDOWN = 762,
    SIGNAL_SYM = 763,
    SIGNED_SYM = 764,
    SIMPLE_SYM = 765,
    SLAVE = 766,
    SLOW = 767,
    SMALLINT_SYM = 768,
    SNAPSHOT_SYM = 769,
    SOCKET_SYM = 770,
    SONAME_SYM = 771,
    SOUNDS_SYM = 772,
    SOURCE_SYM = 773,
    SPATIAL_SYM = 774,
    SPECIFIC_SYM = 775,
    SQLEXCEPTION_SYM = 776,
    SQLSTATE_SYM = 777,
    SQLWARNING_SYM = 778,
    SQL_AFTER_GTIDS = 779,
    SQL_AFTER_MTS_GAPS = 780,
    SQL_BEFORE_GTIDS = 781,
    SQL_BIG_RESULT = 782,
    SQL_BUFFER_RESULT = 783,
    OBSOLETE_TOKEN_784 = 784,
    SQL_CALC_FOUND_ROWS = 785,
    SQL_NO_CACHE_SYM = 786,
    SQL_SMALL_RESULT = 787,
    SQL_SYM = 788,
    SQL_THREAD = 789,
    SSL_SYM = 790,
    STACKED_SYM = 791,
    STARTING = 792,
    STARTS_SYM = 793,
    START_SYM = 794,
    STATS_AUTO_RECALC_SYM = 795,
    STATS_PERSISTENT_SYM = 796,
    STATS_SAMPLE_PAGES_SYM = 797,
    STATUS_SYM = 798,
    STDDEV_SAMP_SYM = 799,
    STD_SYM = 800,
    STOP_SYM = 801,
    STORAGE_SYM = 802,
    STORED_SYM = 803,
    STRAIGHT_JOIN = 804,
    STRING_SYM = 805,
    SUBCLASS_ORIGIN_SYM = 806,
    SUBDATE_SYM = 807,
    SUBJECT_SYM = 808,
    SUBPARTITIONS_SYM = 809,
    SUBPARTITION_SYM = 810,
    SUBSTRING = 811,
    SUM_SYM = 812,
    SUPER_SYM = 813,
    SUSPEND_SYM = 814,
    SWAPS_SYM = 815,
    SWITCHES_SYM = 816,
    SYSDATE = 817,
    TABLES = 818,
    TABLESPACE_SYM = 819,
    OBSOLETE_TOKEN_820 = 820,
    TABLE_SYM = 821,
    TABLE_CHECKSUM_SYM = 822,
    TABLE_NAME_SYM = 823,
    TEMPORARY = 824,
    TEMPTABLE_SYM = 825,
    TERMINATED = 826,
    TEXT_STRING = 827,
    TEXT_SYM = 828,
    THAN_SYM = 829,
    THEN_SYM = 830,
    TIMESTAMP_SYM = 831,
    TIMESTAMP_ADD = 832,
    TIMESTAMP_DIFF = 833,
    TIME_SYM = 834,
    TINYBLOB_SYM = 835,
    TINYINT_SYM = 836,
    TINYTEXT_SYN = 837,
    TO_SYM = 838,
    TRAILING = 839,
    TRANSACTION_SYM = 840,
    TRIGGERS_SYM = 841,
    TRIGGER_SYM = 842,
    TRIM = 843,
    TRUE_SYM = 844,
    TRUNCATE_SYM = 845,
    TYPES_SYM = 846,
    TYPE_SYM = 847,
    OBSOLETE_TOKEN_848 = 848,
    ULONGLONG_NUM = 849,
    UNCOMMITTED_SYM = 850,
    UNDEFINED_SYM = 851,
    UNDERSCORE_CHARSET = 852,
    UNDOFILE_SYM = 853,
    UNDO_BUFFER_SIZE_SYM = 854,
    UNDO_SYM = 855,
    UNICODE_SYM = 856,
    UNINSTALL_SYM = 857,
    UNION_SYM = 858,
    UNIQUE_SYM = 859,
    UNKNOWN_SYM = 860,
    UNLOCK_SYM = 861,
    UNSIGNED_SYM = 862,
    UNTIL_SYM = 863,
    UPDATE_SYM = 864,
    UPGRADE_SYM = 865,
    USAGE = 866,
    USER = 867,
    USE_FRM = 868,
    USE_SYM = 869,
    USING = 870,
    UTC_DATE_SYM = 871,
    UTC_TIMESTAMP_SYM = 872,
    UTC_TIME_SYM = 873,
    VALIDATION_SYM = 874,
    VALUES = 875,
    VALUE_SYM = 876,
    VARBINARY_SYM = 877,
    VARCHAR_SYM = 878,
    VARIABLES = 879,
    VARIANCE_SYM = 880,
    VARYING = 881,
    VAR_SAMP_SYM = 882,
    VIEW_SYM = 883,
    VIRTUAL_SYM = 884,
    WAIT_SYM = 885,
    WARNINGS = 886,
    WEEK_SYM = 887,
    WEIGHT_STRING_SYM = 888,
    WHEN_SYM = 889,
    WHERE = 890,
    WHILE_SYM = 891,
    WITH = 892,
    OBSOLETE_TOKEN_893 = 893,
    WITH_ROLLUP_SYM = 894,
    WITHOUT_SYM = 895,
    WORK_SYM = 896,
    WRAPPER_SYM = 897,
    WRITE_SYM = 898,
    X509_SYM = 899,
    XA_SYM = 900,
    XID_SYM = 901,
    XML_SYM = 902,
    XOR = 903,
    YEAR_MONTH_SYM = 904,
    YEAR_SYM = 905,
    ZEROFILL_SYM = 906,
    JSON_UNQUOTED_SEPARATOR_SYM = 907,
    PERSIST_SYM = 908,
    ROLE_SYM = 909,
    ADMIN_SYM = 910,
    INVISIBLE_SYM = 911,
    VISIBLE_SYM = 912,
    EXCEPT_SYM = 913,
    COMPONENT_SYM = 914,
    RECURSIVE_SYM = 915,
    GRAMMAR_SELECTOR_EXPR = 916,
    GRAMMAR_SELECTOR_GCOL = 917,
    GRAMMAR_SELECTOR_PART = 918,
    GRAMMAR_SELECTOR_CTE = 919,
    JSON_OBJECTAGG = 920,
    JSON_ARRAYAGG = 921,
    OF_SYM = 922,
    SKIP_SYM = 923,
    LOCKED_SYM = 924,
    NOWAIT_SYM = 925,
    GROUPING_SYM = 926,
    PERSIST_ONLY_SYM = 927,
    HISTOGRAM_SYM = 928,
    BUCKETS_SYM = 929,
    OBSOLETE_TOKEN_930 = 930,
    CLONE_SYM = 931,
    CUME_DIST_SYM = 932,
    DENSE_RANK_SYM = 933,
    EXCLUDE_SYM = 934,
    FIRST_VALUE_SYM = 935,
    FOLLOWING_SYM = 936,
    GROUPS_SYM = 937,
    LAG_SYM = 938,
    LAST_VALUE_SYM = 939,
    LEAD_SYM = 940,
    NTH_VALUE_SYM = 941,
    NTILE_SYM = 942,
    NULLS_SYM = 943,
    OTHERS_SYM = 944,
    OVER_SYM = 945,
    PERCENT_RANK_SYM = 946,
    PRECEDING_SYM = 947,
    RANK_SYM = 948,
    RESPECT_SYM = 949,
    ROW_NUMBER_SYM = 950,
    TIES_SYM = 951,
    UNBOUNDED_SYM = 952,
    WINDOW_SYM = 953,
    EMPTY_SYM = 954,
    JSON_TABLE_SYM = 955,
    NESTED_SYM = 956,
    ORDINALITY_SYM = 957,
    PATH_SYM = 958,
    HISTORY_SYM = 959,
    REUSE_SYM = 960,
    SRID_SYM = 961,
    THREAD_PRIORITY_SYM = 962,
    RESOURCE_SYM = 963,
    SYSTEM_SYM = 964,
    VCPU_SYM = 965,
    MASTER_PUBLIC_KEY_PATH_SYM = 966,
    GET_MASTER_PUBLIC_KEY_SYM = 967,
    RESTART_SYM = 968,
    DEFINITION_SYM = 969,
    DESCRIPTION_SYM = 970,
    ORGANIZATION_SYM = 971,
    REFERENCE_SYM = 972,
    ACTIVE_SYM = 973,
    INACTIVE_SYM = 974,
    LATERAL_SYM = 975,
    ARRAY_SYM = 976,
    MEMBER_SYM = 977,
    OPTIONAL_SYM = 978,
    SECONDARY_SYM = 979,
    SECONDARY_ENGINE_SYM = 980,
    SECONDARY_LOAD_SYM = 981,
    SECONDARY_UNLOAD_SYM = 982,
    RETAIN_SYM = 983,
    OLD_SYM = 984,
    ENFORCED_SYM = 985,
    OJ_SYM = 986,
    NETWORK_NAMESPACE_SYM = 987,
    RANDOM_SYM = 988,
    MASTER_COMPRESSION_ALGORITHM_SYM = 989,
    MASTER_ZSTD_COMPRESSION_LEVEL_SYM = 990,
    PRIVILEGE_CHECKS_USER_SYM = 991,
    MASTER_TLS_CIPHERSUITES_SYM = 992,
    REQUIRE_ROW_FORMAT_SYM = 993,
    PASSWORD_LOCK_TIME_SYM = 994,
    FAILED_LOGIN_ATTEMPTS_SYM = 995,
    REQUIRE_TABLE_PRIMARY_KEY_CHECK_SYM = 996,
    STREAM_SYM = 997,
    OFF_SYM = 998,
    RETURNING_SYM = 999,
    YYUNDEF = 1150,
    JSON_VALUE_SYM = 1151,
    TLS_SYM = 1152,
    ATTRIBUTE_SYM = 1153,
    ENGINE_ATTRIBUTE_SYM = 1154,
    SECONDARY_ENGINE_ATTRIBUTE_SYM = 1155,
    SOURCE_CONNECTION_AUTO_FAILOVER_SYM = 1156,
    ZONE_SYM = 1157,
    GRAMMAR_SELECTOR_DERIVED_EXPR = 1158,
    REPLICA_SYM = 1159,
    REPLICAS_SYM = 1160,
    ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS_SYM = 1161,
    GET_SOURCE_PUBLIC_KEY_SYM = 1162,
    SOURCE_AUTO_POSITION_SYM = 1163,
    SOURCE_BIND_SYM = 1164,
    SOURCE_COMPRESSION_ALGORITHM_SYM = 1165,
    SOURCE_CONNECT_RETRY_SYM = 1166,
    SOURCE_DELAY_SYM = 1167,
    SOURCE_HEARTBEAT_PERIOD_SYM = 1168,
    SOURCE_HOST_SYM = 1169,
    SOURCE_LOG_FILE_SYM = 1170,
    SOURCE_LOG_POS_SYM = 1171,
    SOURCE_PASSWORD_SYM = 1172,
    SOURCE_PORT_SYM = 1173,
    SOURCE_PUBLIC_KEY_PATH_SYM = 1174,
    SOURCE_RETRY_COUNT_SYM = 1175,
    SOURCE_SSL_SYM = 1176,
    SOURCE_SSL_CA_SYM = 1177,
    SOURCE_SSL_CAPATH_SYM = 1178,
    SOURCE_SSL_CERT_SYM = 1179,
    SOURCE_SSL_CIPHER_SYM = 1180,
    SOURCE_SSL_CRL_SYM = 1181,
    SOURCE_SSL_CRLPATH_SYM = 1182,
    SOURCE_SSL_KEY_SYM = 1183,
    SOURCE_SSL_VERIFY_SERVER_CERT_SYM = 1184,
    SOURCE_TLS_CIPHERSUITES_SYM = 1185,
    SOURCE_TLS_VERSION_SYM = 1186,
    SOURCE_USER_SYM = 1187,
    SOURCE_ZSTD_COMPRESSION_LEVEL_SYM = 1188,
    ST_COLLECT_SYM = 1189,
    KEYRING_SYM = 1190,
    AUTHENTICATION_SYM = 1191,
    FACTOR_SYM = 1192,
    FINISH_SYM = 1193,
    INITIATE_SYM = 1194,
    REGISTRATION_SYM = 1195,
    UNREGISTER_SYM = 1196,
    INITIAL_SYM = 1197,
    CHALLENGE_RESPONSE_SYM = 1198,
    GTID_ONLY_SYM = 1199,
    KEYWORD_USED_AS_IDENT = 1201,
    KEYWORD_USED_AS_KEYWORD = 1202,
    CONDITIONLESS_JOIN = 1203,
    SUBQUERY_AS_EXPR = 1204,
    EMPTY_FROM_CLAUSE = 1205
  };
#endif
/* Tokens.  */
#define ABORT_SYM 258
#define ACCESSIBLE_SYM 259
#define ACCOUNT_SYM 260
#define ACTION 261
#define ADD 262
#define ADDDATE_SYM 263
#define AFTER_SYM 264
#define AGAINST 265
#define AGGREGATE_SYM 266
#define ALGORITHM_SYM 267
#define ALL 268
#define ALTER 269
#define ALWAYS_SYM 270
#define OBSOLETE_TOKEN_271 271
#define ANALYZE_SYM 272
#define AND_AND_SYM 273
#define AND_SYM 274
#define ANY_SYM 275
#define AS 276
#define ASC 277
#define ASCII_SYM 278
#define ASENSITIVE_SYM 279
#define AT_SYM 280
#define AUTOEXTEND_SIZE_SYM 281
#define AUTO_INC 282
#define AVG_ROW_LENGTH 283
#define AVG_SYM 284
#define BACKUP_SYM 285
#define BEFORE_SYM 286
#define BEGIN_SYM 287
#define BETWEEN_SYM 288
#define BIGINT_SYM 289
#define BINARY_SYM 290
#define BINLOG_SYM 291
#define BIN_NUM 292
#define BIT_AND_SYM 293
#define BIT_OR_SYM 294
#define BIT_SYM 295
#define BIT_XOR_SYM 296
#define BLOB_SYM 297
#define BLOCK_SYM 298
#define BOOLEAN_SYM 299
#define BOOL_SYM 300
#define BOTH 301
#define BTREE_SYM 302
#define BY 303
#define BYTE_SYM 304
#define CACHE_SYM 305
#define CALL_SYM 306
#define CASCADE 307
#define CASCADED 308
#define CASE_SYM 309
#define CAST_SYM 310
#define CATALOG_NAME_SYM 311
#define CHAIN_SYM 312
#define CHANGE 313
#define CHANGED 314
#define CHANNEL_SYM 315
#define CHARSET 316
#define CHAR_SYM 317
#define CHECKSUM_SYM 318
#define CHECK_SYM 319
#define CIPHER_SYM 320
#define CLASS_ORIGIN_SYM 321
#define CLIENT_SYM 322
#define CLOSE_SYM 323
#define COALESCE 324
#define CODE_SYM 325
#define COLLATE_SYM 326
#define COLLATION_SYM 327
#define COLUMNS 328
#define COLUMN_SYM 329
#define COLUMN_FORMAT_SYM 330
#define COLUMN_NAME_SYM 331
#define COMMENT_SYM 332
#define COMMITTED_SYM 333
#define COMMIT_SYM 334
#define COMPACT_SYM 335
#define COMPLETION_SYM 336
#define COMPRESSED_SYM 337
#define COMPRESSION_SYM 338
#define ENCRYPTION_SYM 339
#define CONCURRENT 340
#define CONDITION_SYM 341
#define CONNECTION_SYM 342
#define CONSISTENT_SYM 343
#define CONSTRAINT 344
#define CONSTRAINT_CATALOG_SYM 345
#define CONSTRAINT_NAME_SYM 346
#define CONSTRAINT_SCHEMA_SYM 347
#define CONTAINS_SYM 348
#define CONTEXT_SYM 349
#define CONTINUE_SYM 350
#define CONVERT_SYM 351
#define COUNT_SYM 352
#define CPU_SYM 353
#define CREATE 354
#define CROSS 355
#define CUBE_SYM 356
#define CURDATE 357
#define CURRENT_SYM 358
#define CURRENT_USER 359
#define CURSOR_SYM 360
#define CURSOR_NAME_SYM 361
#define CURTIME 362
#define DATABASE 363
#define DATABASES 364
#define DATAFILE_SYM 365
#define DATA_SYM 366
#define DATETIME_SYM 367
#define DATE_ADD_INTERVAL 368
#define DATE_SUB_INTERVAL 369
#define DATE_SYM 370
#define DAY_HOUR_SYM 371
#define DAY_MICROSECOND_SYM 372
#define DAY_MINUTE_SYM 373
#define DAY_SECOND_SYM 374
#define DAY_SYM 375
#define DEALLOCATE_SYM 376
#define DECIMAL_NUM 377
#define DECIMAL_SYM 378
#define DECLARE_SYM 379
#define DEFAULT_SYM 380
#define DEFAULT_AUTH_SYM 381
#define DEFINER_SYM 382
#define DELAYED_SYM 383
#define DELAY_KEY_WRITE_SYM 384
#define DELETE_SYM 385
#define DESC 386
#define DESCRIBE 387
#define OBSOLETE_TOKEN_388 388
#define DETERMINISTIC_SYM 389
#define DIAGNOSTICS_SYM 390
#define DIRECTORY_SYM 391
#define DISABLE_SYM 392
#define DISCARD_SYM 393
#define DISK_SYM 394
#define DISTINCT 395
#define DIV_SYM 396
#define DOUBLE_SYM 397
#define DO_SYM 398
#define DROP 399
#define DUAL_SYM 400
#define DUMPFILE 401
#define DUPLICATE_SYM 402
#define DYNAMIC_SYM 403
#define EACH_SYM 404
#define ELSE 405
#define ELSEIF_SYM 406
#define ENABLE_SYM 407
#define ENCLOSED 408
#define END 409
#define ENDS_SYM 410
#define END_OF_INPUT 411
#define ENGINES_SYM 412
#define ENGINE_SYM 413
#define ENUM_SYM 414
#define EQ 415
#define EQUAL_SYM 416
#define ERROR_SYM 417
#define ERRORS 418
#define ESCAPED 419
#define ESCAPE_SYM 420
#define EVENTS_SYM 421
#define EVENT_SYM 422
#define EVERY_SYM 423
#define EXCHANGE_SYM 424
#define EXECUTE_SYM 425
#define EXISTS 426
#define EXIT_SYM 427
#define EXPANSION_SYM 428
#define EXPIRE_SYM 429
#define EXPORT_SYM 430
#define EXTENDED_SYM 431
#define EXTENT_SIZE_SYM 432
#define EXTRACT_SYM 433
#define FALSE_SYM 434
#define FAST_SYM 435
#define FAULTS_SYM 436
#define FETCH_SYM 437
#define FILE_SYM 438
#define FILE_BLOCK_SIZE_SYM 439
#define FILTER_SYM 440
#define FIRST_SYM 441
#define FIXED_SYM 442
#define FLOAT_NUM 443
#define FLOAT_SYM 444
#define FLUSH_SYM 445
#define FOLLOWS_SYM 446
#define FORCE_SYM 447
#define FOREIGN 448
#define FOR_SYM 449
#define FORMAT_SYM 450
#define FOUND_SYM 451
#define FROM 452
#define FULL 453
#define FULLTEXT_SYM 454
#define FUNCTION_SYM 455
#define GE 456
#define GENERAL 457
#define GENERATED 458
#define GROUP_REPLICATION 459
#define GEOMETRYCOLLECTION_SYM 460
#define GEOMETRY_SYM 461
#define GET_FORMAT 462
#define GET_SYM 463
#define GLOBAL_SYM 464
#define GRANT 465
#define GRANTS 466
#define GROUP_SYM 467
#define GROUP_CONCAT_SYM 468
#define GT_SYM 469
#define HANDLER_SYM 470
#define HASH_SYM 471
#define HAVING 472
#define HELP_SYM 473
#define HEX_NUM 474
#define HIGH_PRIORITY 475
#define HOST_SYM 476
#define HOSTS_SYM 477
#define HOUR_MICROSECOND_SYM 478
#define HOUR_MINUTE_SYM 479
#define HOUR_SECOND_SYM 480
#define HOUR_SYM 481
#define IDENT 482
#define IDENTIFIED_SYM 483
#define IDENT_QUOTED 484
#define IF 485
#define IGNORE_SYM 486
#define IGNORE_SERVER_IDS_SYM 487
#define IMPORT 488
#define INDEXES 489
#define INDEX_SYM 490
#define INFILE 491
#define INITIAL_SIZE_SYM 492
#define INNER_SYM 493
#define INOUT_SYM 494
#define INSENSITIVE_SYM 495
#define INSERT_SYM 496
#define INSERT_METHOD 497
#define INSTANCE_SYM 498
#define INSTALL_SYM 499
#define INTERVAL_SYM 500
#define INTO 501
#define INT_SYM 502
#define INVOKER_SYM 503
#define IN_SYM 504
#define IO_AFTER_GTIDS 505
#define IO_BEFORE_GTIDS 506
#define IO_SYM 507
#define IPC_SYM 508
#define IS 509
#define ISOLATION 510
#define ISSUER_SYM 511
#define ITERATE_SYM 512
#define JOIN_SYM 513
#define JSON_SEPARATOR_SYM 514
#define JSON_SYM 515
#define KEYS 516
#define KEY_BLOCK_SIZE 517
#define KEY_SYM 518
#define KILL_SYM 519
#define LANGUAGE_SYM 520
#define LAST_SYM 521
#define LE 522
#define LEADING 523
#define LEAVES 524
#define LEAVE_SYM 525
#define LEFT 526
#define LESS_SYM 527
#define LEVEL_SYM 528
#define LEX_HOSTNAME 529
#define LIKE 530
#define LIMIT 531
#define LINEAR_SYM 532
#define LINES 533
#define LINESTRING_SYM 534
#define LIST_SYM 535
#define LOAD 536
#define LOCAL_SYM 537
#define OBSOLETE_TOKEN_538 538
#define LOCKS_SYM 539
#define LOCK_SYM 540
#define LOGFILE_SYM 541
#define LOGS_SYM 542
#define LONGBLOB_SYM 543
#define LONGTEXT_SYM 544
#define LONG_NUM 545
#define LONG_SYM 546
#define LOOP_SYM 547
#define LOW_PRIORITY 548
#define LT 549
#define MASTER_AUTO_POSITION_SYM 550
#define MASTER_BIND_SYM 551
#define MASTER_CONNECT_RETRY_SYM 552
#define MASTER_DELAY_SYM 553
#define MASTER_HOST_SYM 554
#define MASTER_LOG_FILE_SYM 555
#define MASTER_LOG_POS_SYM 556
#define MASTER_PASSWORD_SYM 557
#define MASTER_PORT_SYM 558
#define MASTER_RETRY_COUNT_SYM 559
#define MASTER_SSL_CAPATH_SYM 561
#define MASTER_TLS_VERSION_SYM 562
#define MASTER_SSL_CA_SYM 563
#define MASTER_SSL_CERT_SYM 564
#define MASTER_SSL_CIPHER_SYM 565
#define MASTER_SSL_CRL_SYM 566
#define MASTER_SSL_CRLPATH_SYM 567
#define MASTER_SSL_KEY_SYM 568
#define MASTER_SSL_SYM 569
#define MASTER_SSL_VERIFY_SERVER_CERT_SYM 570
#define MASTER_SYM 571
#define MASTER_USER_SYM 572
#define MASTER_HEARTBEAT_PERIOD_SYM 573
#define MATCH 574
#define MAX_CONNECTIONS_PER_HOUR 575
#define MAX_QUERIES_PER_HOUR 576
#define MAX_ROWS 577
#define MAX_SIZE_SYM 578
#define MAX_SYM 579
#define MAX_UPDATES_PER_HOUR 580
#define MAX_USER_CONNECTIONS_SYM 581
#define MAX_VALUE_SYM 582
#define MEDIUMBLOB_SYM 583
#define MEDIUMINT_SYM 584
#define MEDIUMTEXT_SYM 585
#define MEDIUM_SYM 586
#define MEMORY_SYM 587
#define MERGE_SYM 588
#define MESSAGE_TEXT_SYM 589
#define MICROSECOND_SYM 590
#define MIGRATE_SYM 591
#define MINUTE_MICROSECOND_SYM 592
#define MINUTE_SECOND_SYM 593
#define MINUTE_SYM 594
#define MIN_ROWS 595
#define MIN_SYM 596
#define MODE_SYM 597
#define MODIFIES_SYM 598
#define MODIFY_SYM 599
#define MOD_SYM 600
#define MONTH_SYM 601
#define MULTILINESTRING_SYM 602
#define MULTIPOINT_SYM 603
#define MULTIPOLYGON_SYM 604
#define MUTEX_SYM 605
#define MYSQL_ERRNO_SYM 606
#define NAMES_SYM 607
#define NAME_SYM 608
#define NATIONAL_SYM 609
#define NATURAL 610
#define NCHAR_STRING 611
#define NCHAR_SYM 612
#define NDBCLUSTER_SYM 613
#define NE 614
#define NEG 615
#define NEVER_SYM 616
#define NEW_SYM 617
#define NEXT_SYM 618
#define NODEGROUP_SYM 619
#define NONE_SYM 620
#define NOT2_SYM 621
#define NOT_SYM 622
#define NOW_SYM 623
#define NO_SYM 624
#define NO_WAIT_SYM 625
#define NO_WRITE_TO_BINLOG 626
#define NULL_SYM 627
#define NUM 628
#define NUMBER_SYM 629
#define NUMERIC_SYM 630
#define NVARCHAR_SYM 631
#define OFFSET_SYM 632
#define ON_SYM 633
#define ONE_SYM 634
#define ONLY_SYM 635
#define OPEN_SYM 636
#define OPTIMIZE 637
#define OPTIMIZER_COSTS_SYM 638
#define OPTIONS_SYM 639
#define OPTION 640
#define OPTIONALLY 641
#define OR2_SYM 642
#define ORDER_SYM 643
#define OR_OR_SYM 644
#define OR_SYM 645
#define OUTER_SYM 646
#define OUTFILE 647
#define OUT_SYM 648
#define OWNER_SYM 649
#define PACK_KEYS_SYM 650
#define PAGE_SYM 651
#define PARAM_MARKER 652
#define PARSER_SYM 653
#define OBSOLETE_TOKEN_654 654
#define PARTIAL 655
#define PARTITION_SYM 656
#define PARTITIONS_SYM 657
#define PARTITIONING_SYM 658
#define PASSWORD 659
#define PHASE_SYM 660
#define PLUGIN_DIR_SYM 661
#define PLUGIN_SYM 662
#define PLUGINS_SYM 663
#define POINT_SYM 664
#define POLYGON_SYM 665
#define PORT_SYM 666
#define POSITION_SYM 667
#define PRECEDES_SYM 668
#define PRECISION 669
#define PREPARE_SYM 670
#define PRESERVE_SYM 671
#define PREV_SYM 672
#define PRIMARY_SYM 673
#define PRIVILEGES 674
#define PROCEDURE_SYM 675
#define PROCESS 676
#define PROCESSLIST_SYM 677
#define PROFILE_SYM 678
#define PROFILES_SYM 679
#define PROXY_SYM 680
#define PURGE 681
#define QUARTER_SYM 682
#define QUERY_SYM 683
#define QUICK 684
#define RANGE_SYM 685
#define READS_SYM 686
#define READ_ONLY_SYM 687
#define READ_SYM 688
#define READ_WRITE_SYM 689
#define REAL_SYM 690
#define REBUILD_SYM 691
#define RECOVER_SYM 692
#define OBSOLETE_TOKEN_693 693
#define REDO_BUFFER_SIZE_SYM 694
#define REDUNDANT_SYM 695
#define REFERENCES 696
#define REGEXP 697
#define RELAY 698
#define RELAYLOG_SYM 699
#define RELAY_LOG_FILE_SYM 700
#define RELAY_LOG_POS_SYM 701
#define RELAY_THREAD 702
#define RELEASE_SYM 703
#define RELOAD 704
#define REMOVE_SYM 705
#define RENAME 706
#define REORGANIZE_SYM 707
#define REPAIR 708
#define REPEATABLE_SYM 709
#define REPEAT_SYM 710
#define REPLACE_SYM 711
#define REPLICATION 712
#define REPLICATE_DO_DB 713
#define REPLICATE_IGNORE_DB 714
#define REPLICATE_DO_TABLE 715
#define REPLICATE_IGNORE_TABLE 716
#define REPLICATE_WILD_DO_TABLE 717
#define REPLICATE_WILD_IGNORE_TABLE 718
#define REPLICATE_REWRITE_DB 719
#define REQUIRE_SYM 720
#define RESET_SYM 721
#define RESIGNAL_SYM 722
#define RESOURCES 723
#define RESTORE_SYM 724
#define RESTRICT 725
#define RESUME_SYM 726
#define RETURNED_SQLSTATE_SYM 727
#define RETURNS_SYM 728
#define RETURN_SYM 729
#define REVERSE_SYM 730
#define REVOKE 731
#define RIGHT 732
#define ROLLBACK_SYM 733
#define ROLLUP_SYM 734
#define ROTATE_SYM 735
#define ROUTINE_SYM 736
#define ROWS_SYM 737
#define ROW_FORMAT_SYM 738
#define ROW_SYM 739
#define ROW_COUNT_SYM 740
#define RTREE_SYM 741
#define SAVEPOINT_SYM 742
#define SCHEDULE_SYM 743
#define SCHEMA_NAME_SYM 744
#define SECOND_MICROSECOND_SYM 745
#define SECOND_SYM 746
#define SECURITY_SYM 747
#define SELECT_SYM 748
#define SENSITIVE_SYM 749
#define SEPARATOR_SYM 750
#define SERIALIZABLE_SYM 751
#define SERIAL_SYM 752
#define SESSION_SYM 753
#define SERVER_SYM 754
#define OBSOLETE_TOKEN_755 755
#define SET_SYM 756
#define SET_VAR 757
#define SHARE_SYM 758
#define SHIFT_LEFT 759
#define SHIFT_RIGHT 760
#define SHOW 761
#define SHUTDOWN 762
#define SIGNAL_SYM 763
#define SIGNED_SYM 764
#define SIMPLE_SYM 765
#define SLAVE 766
#define SLOW 767
#define SMALLINT_SYM 768
#define SNAPSHOT_SYM 769
#define SOCKET_SYM 770
#define SONAME_SYM 771
#define SOUNDS_SYM 772
#define SOURCE_SYM 773
#define SPATIAL_SYM 774
#define SPECIFIC_SYM 775
#define SQLEXCEPTION_SYM 776
#define SQLSTATE_SYM 777
#define SQLWARNING_SYM 778
#define SQL_AFTER_GTIDS 779
#define SQL_AFTER_MTS_GAPS 780
#define SQL_BEFORE_GTIDS 781
#define SQL_BIG_RESULT 782
#define SQL_BUFFER_RESULT 783
#define OBSOLETE_TOKEN_784 784
#define SQL_CALC_FOUND_ROWS 785
#define SQL_NO_CACHE_SYM 786
#define SQL_SMALL_RESULT 787
#define SQL_SYM 788
#define SQL_THREAD 789
#define SSL_SYM 790
#define STACKED_SYM 791
#define STARTING 792
#define STARTS_SYM 793
#define START_SYM 794
#define STATS_AUTO_RECALC_SYM 795
#define STATS_PERSISTENT_SYM 796
#define STATS_SAMPLE_PAGES_SYM 797
#define STATUS_SYM 798
#define STDDEV_SAMP_SYM 799
#define STD_SYM 800
#define STOP_SYM 801
#define STORAGE_SYM 802
#define STORED_SYM 803
#define STRAIGHT_JOIN 804
#define STRING_SYM 805
#define SUBCLASS_ORIGIN_SYM 806
#define SUBDATE_SYM 807
#define SUBJECT_SYM 808
#define SUBPARTITIONS_SYM 809
#define SUBPARTITION_SYM 810
#define SUBSTRING 811
#define SUM_SYM 812
#define SUPER_SYM 813
#define SUSPEND_SYM 814
#define SWAPS_SYM 815
#define SWITCHES_SYM 816
#define SYSDATE 817
#define TABLES 818
#define TABLESPACE_SYM 819
#define OBSOLETE_TOKEN_820 820
#define TABLE_SYM 821
#define TABLE_CHECKSUM_SYM 822
#define TABLE_NAME_SYM 823
#define TEMPORARY 824
#define TEMPTABLE_SYM 825
#define TERMINATED 826
#define TEXT_STRING 827
#define TEXT_SYM 828
#define THAN_SYM 829
#define THEN_SYM 830
#define TIMESTAMP_SYM 831
#define TIMESTAMP_ADD 832
#define TIMESTAMP_DIFF 833
#define TIME_SYM 834
#define TINYBLOB_SYM 835
#define TINYINT_SYM 836
#define TINYTEXT_SYN 837
#define TO_SYM 838
#define TRAILING 839
#define TRANSACTION_SYM 840
#define TRIGGERS_SYM 841
#define TRIGGER_SYM 842
#define TRIM 843
#define TRUE_SYM 844
#define TRUNCATE_SYM 845
#define TYPES_SYM 846
#define TYPE_SYM 847
#define OBSOLETE_TOKEN_848 848
#define ULONGLONG_NUM 849
#define UNCOMMITTED_SYM 850
#define UNDEFINED_SYM 851
#define UNDERSCORE_CHARSET 852
#define UNDOFILE_SYM 853
#define UNDO_BUFFER_SIZE_SYM 854
#define UNDO_SYM 855
#define UNICODE_SYM 856
#define UNINSTALL_SYM 857
#define UNION_SYM 858
#define UNIQUE_SYM 859
#define UNKNOWN_SYM 860
#define UNLOCK_SYM 861
#define UNSIGNED_SYM 862
#define UNTIL_SYM 863
#define UPDATE_SYM 864
#define UPGRADE_SYM 865
#define USAGE 866
#define USER 867
#define USE_FRM 868
#define USE_SYM 869
#define USING 870
#define UTC_DATE_SYM 871
#define UTC_TIMESTAMP_SYM 872
#define UTC_TIME_SYM 873
#define VALIDATION_SYM 874
#define VALUES 875
#define VALUE_SYM 876
#define VARBINARY_SYM 877
#define VARCHAR_SYM 878
#define VARIABLES 879
#define VARIANCE_SYM 880
#define VARYING 881
#define VAR_SAMP_SYM 882
#define VIEW_SYM 883
#define VIRTUAL_SYM 884
#define WAIT_SYM 885
#define WARNINGS 886
#define WEEK_SYM 887
#define WEIGHT_STRING_SYM 888
#define WHEN_SYM 889
#define WHERE 890
#define WHILE_SYM 891
#define WITH 892
#define OBSOLETE_TOKEN_893 893
#define WITH_ROLLUP_SYM 894
#define WITHOUT_SYM 895
#define WORK_SYM 896
#define WRAPPER_SYM 897
#define WRITE_SYM 898
#define X509_SYM 899
#define XA_SYM 900
#define XID_SYM 901
#define XML_SYM 902
#define XOR 903
#define YEAR_MONTH_SYM 904
#define YEAR_SYM 905
#define ZEROFILL_SYM 906
#define JSON_UNQUOTED_SEPARATOR_SYM 907
#define PERSIST_SYM 908
#define ROLE_SYM 909
#define ADMIN_SYM 910
#define INVISIBLE_SYM 911
#define VISIBLE_SYM 912
#define EXCEPT_SYM 913
#define COMPONENT_SYM 914
#define RECURSIVE_SYM 915
#define GRAMMAR_SELECTOR_EXPR 916
#define GRAMMAR_SELECTOR_GCOL 917
#define GRAMMAR_SELECTOR_PART 918
#define GRAMMAR_SELECTOR_CTE 919
#define JSON_OBJECTAGG 920
#define JSON_ARRAYAGG 921
#define OF_SYM 922
#define SKIP_SYM 923
#define LOCKED_SYM 924
#define NOWAIT_SYM 925
#define GROUPING_SYM 926
#define PERSIST_ONLY_SYM 927
#define HISTOGRAM_SYM 928
#define BUCKETS_SYM 929
#define OBSOLETE_TOKEN_930 930
#define CLONE_SYM 931
#define CUME_DIST_SYM 932
#define DENSE_RANK_SYM 933
#define EXCLUDE_SYM 934
#define FIRST_VALUE_SYM 935
#define FOLLOWING_SYM 936
#define GROUPS_SYM 937
#define LAG_SYM 938
#define LAST_VALUE_SYM 939
#define LEAD_SYM 940
#define NTH_VALUE_SYM 941
#define NTILE_SYM 942
#define NULLS_SYM 943
#define OTHERS_SYM 944
#define OVER_SYM 945
#define PERCENT_RANK_SYM 946
#define PRECEDING_SYM 947
#define RANK_SYM 948
#define RESPECT_SYM 949
#define ROW_NUMBER_SYM 950
#define TIES_SYM 951
#define UNBOUNDED_SYM 952
#define WINDOW_SYM 953
#define EMPTY_SYM 954
#define JSON_TABLE_SYM 955
#define NESTED_SYM 956
#define ORDINALITY_SYM 957
#define PATH_SYM 958
#define HISTORY_SYM 959
#define REUSE_SYM 960
#define SRID_SYM 961
#define THREAD_PRIORITY_SYM 962
#define RESOURCE_SYM 963
#define SYSTEM_SYM 964
#define VCPU_SYM 965
#define MASTER_PUBLIC_KEY_PATH_SYM 966
#define GET_MASTER_PUBLIC_KEY_SYM 967
#define RESTART_SYM 968
#define DEFINITION_SYM 969
#define DESCRIPTION_SYM 970
#define ORGANIZATION_SYM 971
#define REFERENCE_SYM 972
#define ACTIVE_SYM 973
#define INACTIVE_SYM 974
#define LATERAL_SYM 975
#define ARRAY_SYM 976
#define MEMBER_SYM 977
#define OPTIONAL_SYM 978
#define SECONDARY_SYM 979
#define SECONDARY_ENGINE_SYM 980
#define SECONDARY_LOAD_SYM 981
#define SECONDARY_UNLOAD_SYM 982
#define RETAIN_SYM 983
#define OLD_SYM 984
#define ENFORCED_SYM 985
#define OJ_SYM 986
#define NETWORK_NAMESPACE_SYM 987
#define RANDOM_SYM 988
#define MASTER_COMPRESSION_ALGORITHM_SYM 989
#define MASTER_ZSTD_COMPRESSION_LEVEL_SYM 990
#define PRIVILEGE_CHECKS_USER_SYM 991
#define MASTER_TLS_CIPHERSUITES_SYM 992
#define REQUIRE_ROW_FORMAT_SYM 993
#define PASSWORD_LOCK_TIME_SYM 994
#define FAILED_LOGIN_ATTEMPTS_SYM 995
#define REQUIRE_TABLE_PRIMARY_KEY_CHECK_SYM 996
#define STREAM_SYM 997
#define OFF_SYM 998
#define RETURNING_SYM 999
#define YYUNDEF 1150
#define JSON_VALUE_SYM 1151
#define TLS_SYM 1152
#define ATTRIBUTE_SYM 1153
#define ENGINE_ATTRIBUTE_SYM 1154
#define SECONDARY_ENGINE_ATTRIBUTE_SYM 1155
#define SOURCE_CONNECTION_AUTO_FAILOVER_SYM 1156
#define ZONE_SYM 1157
#define GRAMMAR_SELECTOR_DERIVED_EXPR 1158
#define REPLICA_SYM 1159
#define REPLICAS_SYM 1160
#define ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS_SYM 1161
#define GET_SOURCE_PUBLIC_KEY_SYM 1162
#define SOURCE_AUTO_POSITION_SYM 1163
#define SOURCE_BIND_SYM 1164
#define SOURCE_COMPRESSION_ALGORITHM_SYM 1165
#define SOURCE_CONNECT_RETRY_SYM 1166
#define SOURCE_DELAY_SYM 1167
#define SOURCE_HEARTBEAT_PERIOD_SYM 1168
#define SOURCE_HOST_SYM 1169
#define SOURCE_LOG_FILE_SYM 1170
#define SOURCE_LOG_POS_SYM 1171
#define SOURCE_PASSWORD_SYM 1172
#define SOURCE_PORT_SYM 1173
#define SOURCE_PUBLIC_KEY_PATH_SYM 1174
#define SOURCE_RETRY_COUNT_SYM 1175
#define SOURCE_SSL_SYM 1176
#define SOURCE_SSL_CA_SYM 1177
#define SOURCE_SSL_CAPATH_SYM 1178
#define SOURCE_SSL_CERT_SYM 1179
#define SOURCE_SSL_CIPHER_SYM 1180
#define SOURCE_SSL_CRL_SYM 1181
#define SOURCE_SSL_CRLPATH_SYM 1182
#define SOURCE_SSL_KEY_SYM 1183
#define SOURCE_SSL_VERIFY_SERVER_CERT_SYM 1184
#define SOURCE_TLS_CIPHERSUITES_SYM 1185
#define SOURCE_TLS_VERSION_SYM 1186
#define SOURCE_USER_SYM 1187
#define SOURCE_ZSTD_COMPRESSION_LEVEL_SYM 1188
#define ST_COLLECT_SYM 1189
#define KEYRING_SYM 1190
#define AUTHENTICATION_SYM 1191
#define FACTOR_SYM 1192
#define FINISH_SYM 1193
#define INITIATE_SYM 1194
#define REGISTRATION_SYM 1195
#define UNREGISTER_SYM 1196
#define INITIAL_SYM 1197
#define CHALLENGE_RESPONSE_SYM 1198
#define GTID_ONLY_SYM 1199
#define KEYWORD_USED_AS_IDENT 1201
#define KEYWORD_USED_AS_KEYWORD 1202
#define CONDITIONLESS_JOIN 1203
#define SUBQUERY_AS_EXPR 1204
#define EMPTY_FROM_CLAUSE 1205

/* Value type.  */

/* Location type.  */
#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE YYLTYPE;
struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
};
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif



int MYSQLparse (class THD *YYTHD, class Parse_tree_root **parse_tree);

#endif /* !YY_MYSQL_VAR_LIB_PB2_SB_1_7663233_1657143500_24_DIST_GPL_SQL_SQL_YACC_H_INCLUDED  */

/* Copy the second part of user declarations.  */

#line 2187 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:358  */

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#else
typedef signed char yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(Msgid) dgettext ("bison-runtime", Msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(Msgid) Msgid
# endif
#endif

#ifndef YY_ATTRIBUTE
# if (defined __GNUC__                                               \
      && (2 < __GNUC__ || (__GNUC__ == 2 && 96 <= __GNUC_MINOR__)))  \
     || defined __SUNPRO_C && 0x5110 <= __SUNPRO_C
#  define YY_ATTRIBUTE(Spec) __attribute__(Spec)
# else
#  define YY_ATTRIBUTE(Spec) /* empty */
# endif
#endif

#ifndef YY_ATTRIBUTE_PURE
# define YY_ATTRIBUTE_PURE   YY_ATTRIBUTE ((__pure__))
#endif

#ifndef YY_ATTRIBUTE_UNUSED
# define YY_ATTRIBUTE_UNUSED YY_ATTRIBUTE ((__unused__))
#endif

#if !defined _Noreturn \
     && (!defined __STDC_VERSION__ || __STDC_VERSION__ < 201112)
# if defined _MSC_VER && 1200 <= _MSC_VER
#  define _Noreturn __declspec (noreturn)
# else
#  define _Noreturn YY_ATTRIBUTE ((__noreturn__))
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(E) ((void) (E))
#else
# define YYUSE(E) /* empty */
#endif

#if defined __GNUC__ && 407 <= __GNUC__ * 100 + __GNUC_MINOR__
/* Suppress an incorrect diagnostic about yylval being uninitialized.  */
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN \
    _Pragma ("GCC diagnostic push") \
    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")\
    _Pragma ("GCC diagnostic ignored \"-Wmaybe-uninitialized\"")
# define YY_IGNORE_MAYBE_UNINITIALIZED_END \
    _Pragma ("GCC diagnostic pop")
#else
# define YY_INITIAL_VALUE(Value) Value
#endif
#ifndef YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_END
#endif
#ifndef YY_INITIAL_VALUE
# define YY_INITIAL_VALUE(Value) /* Nothing. */
#endif


#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
      /* Use EXIT_SUCCESS as a witness for stdlib.h.  */
#     ifndef EXIT_SUCCESS
#      define EXIT_SUCCESS 0
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's 'empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (0)
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
       && ! ((defined YYMALLOC || defined malloc) \
             && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef EXIT_SUCCESS
#    define EXIT_SUCCESS 0
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined EXIT_SUCCESS
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined EXIT_SUCCESS
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
         || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
             && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss_alloc;
  YYSTYPE yyvs_alloc;
  YYLTYPE yyls_alloc;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

# define YYCOPY_NEEDED 1

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack_alloc, Stack)                           \
    do                                                                  \
      {                                                                 \
        YYSIZE_T yynewbytes;                                            \
        YYCOPY (&yyptr->Stack_alloc, Stack, yysize);                    \
        Stack = &yyptr->Stack_alloc;                                    \
        yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
        yyptr += yynewbytes / sizeof (*yyptr);                          \
      }                                                                 \
    while (0)

#endif

#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
/* Copy COUNT objects from SRC to DST.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(Dst, Src, Count) \
      __builtin_memcpy (Dst, Src, (Count) * sizeof (*(Src)))
#  else
#   define YYCOPY(Dst, Src, Count)              \
      do                                        \
        {                                       \
          YYSIZE_T yyi;                         \
          for (yyi = 0; yyi < (Count); yyi++)   \
            (Dst)[yyi] = (Src)[yyi];            \
        }                                       \
      while (0)
#  endif
# endif
#endif /* !YYCOPY_NEEDED */

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  1137
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   89846

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  818
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  1019
/* YYNRULES -- Number of rules.  */
#define YYNRULES  3223
/* YYNSTATES -- Number of states.  */
#define YYNSTATES  5572

/* YYTRANSLATE[YYX] -- Symbol number corresponding to YYX as returned
   by yylex, with out-of-bounds checking.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   1205

#define YYTRANSLATE(YYX)                                                \
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[TOKEN-NUM] -- Symbol number corresponding to TOKEN-NUM
   as returned by yylex, without out-of-bounds checking.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   815,     2,     2,     2,   803,   798,     2,
     807,   808,   801,   800,   812,   799,   813,   802,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   814,   810,
       2,     2,     2,     2,   811,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,   804,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   816,   797,   817,   805,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
       2,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
       2,   794,   795,   796,   806,   809
};

#if YYDEBUG
  /* YYRLINE[YYN] -- Source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,  2181,  2181,  2182,  2187,  2197,  2215,  2219,  2227,  2240,
    2239,  2264,  2271,  2273,  2277,  2278,  2283,  2284,  2285,  2286,
    2287,  2288,  2289,  2290,  2291,  2292,  2293,  2294,  2295,  2296,
    2297,  2298,  2299,  2300,  2301,  2302,  2303,  2304,  2305,  2306,
    2307,  2308,  2309,  2310,  2311,  2312,  2313,  2314,  2315,  2316,
    2317,  2318,  2319,  2320,  2321,  2322,  2323,  2324,  2325,  2326,
    2327,  2328,  2329,  2330,  2331,  2332,  2333,  2334,  2335,  2336,
    2337,  2338,  2339,  2340,  2341,  2342,  2343,  2344,  2345,  2346,
    2347,  2348,  2349,  2350,  2351,  2352,  2353,  2354,  2355,  2356,
    2357,  2358,  2359,  2360,  2361,  2362,  2363,  2364,  2365,  2366,
    2367,  2368,  2369,  2370,  2371,  2372,  2373,  2374,  2375,  2376,
    2377,  2378,  2379,  2380,  2381,  2382,  2383,  2384,  2385,  2386,
    2387,  2388,  2389,  2390,  2391,  2392,  2393,  2394,  2395,  2396,
    2397,  2398,  2399,  2400,  2401,  2402,  2403,  2404,  2405,  2406,
    2407,  2408,  2409,  2410,  2411,  2412,  2413,  2414,  2415,  2416,
    2417,  2421,  2431,  2432,  2436,  2456,  2463,  2474,  2473,  2484,
    2486,  2490,  2491,  2495,  2508,  2507,  2526,  2531,  2536,  2535,
    2552,  2551,  2569,  2570,  2573,  2580,  2587,  2594,  2601,  2608,
    2616,  2625,  2631,  2638,  2645,  2653,  2662,  2668,  2674,  2682,
    2690,  2696,  2703,  2710,  2718,  2730,  2736,  2743,  2750,  2758,
    2768,  2769,  2773,  2779,  2783,  2788,  2792,  2798,  2802,  2807,
    2811,  2816,  2820,  2825,  2829,  2834,  2838,  2843,  2847,  2852,
    2856,  2861,  2865,  2870,  2874,  2879,  2883,  2888,  2892,  2897,
    2901,  2906,  2910,  2915,  2919,  2924,  2928,  2933,  2937,  2942,
    2946,  2951,  2955,  2960,  2964,  2969,  2973,  2978,  2982,  2987,
    2991,  2996,  3000,  3004,  3008,  3012,  3016,  3026,  3030,  3034,
    3039,  3050,  3055,  3059,  3063,  3067,  3068,  3072,  3076,  3080,
    3085,  3089,  3093,  3097,  3103,  3137,  3141,  3145,  3149,  3155,
    3156,  3172,  3173,  3189,  3190,  3207,  3210,  3212,  3213,  3217,
    3223,  3229,  3238,  3242,  3246,  3253,  3257,  3261,  3275,  3280,
    3288,  3293,  3297,  3302,  3306,  3310,  3326,  3330,  3341,  3342,
    3347,  3357,  3367,  3372,  3380,  3387,  3400,  3399,  3414,  3416,
    3429,  3449,  3468,  3488,  3505,  3510,  3519,  3524,  3536,  3548,
    3562,  3578,  3582,  3589,  3598,  3606,  3617,  3618,  3622,  3626,
    3630,  3634,  3638,  3643,  3647,  3655,  3654,  3686,  3685,  3694,
    3703,  3704,  3710,  3716,  3726,  3732,  3740,  3742,  3751,  3752,
    3756,  3762,  3771,  3772,  3780,  3780,  3838,  3839,  3840,  3841,
    3842,  3843,  3844,  3845,  3846,  3847,  3848,  3849,  3850,  3854,
    3868,  3887,  3888,  3892,  3893,  3898,  3900,  3902,  3904,  3906,
    3908,  3910,  3916,  3917,  3918,  3922,  3926,  3933,  3940,  3941,
    3948,  3950,  3954,  3955,  3959,  4010,  4012,  4016,  4017,  4021,
    4071,  4072,  4073,  4074,  4078,  4079,  4083,  4084,  4089,  4092,
    4116,  4215,  4233,  4232,  4311,  4307,  4384,  4385,  4390,  4392,
    4397,  4420,  4431,  4435,  4457,  4458,  4462,  4466,  4479,  4485,
    4491,  4500,  4513,  4539,  4545,  4546,  4552,  4553,  4558,  4564,
    4577,  4579,  4581,  4587,  4589,  4591,  4593,  4595,  4597,  4599,
    4601,  4603,  4605,  4607,  4609,  4614,  4628,  4645,  4646,  4648,
    4653,  4659,  4668,  4674,  4683,  4691,  4719,  4727,  4729,  4738,
    4743,  4749,  4758,  4766,  4768,  4770,  4772,  4774,  4776,  4778,
    4780,  4782,  4784,  4786,  4788,  4790,  4795,  4815,  4839,  4843,
    4851,  4852,  4853,  4854,  4855,  4856,  4857,  4858,  4859,  4860,
    4861,  4862,  4863,  4868,  4867,  4878,  4878,  4943,  4942,  4999,
    4999,  5021,  5078,  5125,  5149,  5148,  5173,  5195,  5197,  5198,
    5202,  5220,  5241,  5249,  5287,  5241,  5315,  5317,  5318,  5322,
    5323,  5328,  5338,  5327,  5390,  5389,  5403,  5404,  5408,  5409,
    5414,  5422,  5413,  5472,  5480,  5471,  5526,  5539,  5544,  5543,
    5581,  5582,  5587,  5586,  5620,  5620,  5639,  5638,  5686,  5701,
    5709,  5700,  5767,  5775,  5764,  5817,  5819,  5824,  5826,  5828,
    5843,  5844,  5851,  5852,  5859,  5860,  5864,  5870,  5879,  5880,
    5881,  5882,  5883,  5884,  5885,  5886,  5887,  5888,  5889,  5893,
    5894,  5898,  5904,  5913,  5914,  5915,  5916,  5917,  5918,  5919,
    5923,  5924,  5928,  5934,  5943,  5947,  5948,  5952,  5958,  5967,
    5968,  5969,  5970,  5971,  5972,  5973,  5977,  5978,  5982,  5988,
    5997,  5998,  5999,  6003,  6007,  6008,  6012,  6016,  6023,  6030,
    6034,  6041,  6048,  6055,  6062,  6069,  6076,  6083,  6090,  6094,
    6101,  6108,  6115,  6116,  6191,  6197,  6201,  6206,  6211,  6217,
    6225,  6235,  6236,  6250,  6258,  6262,  6266,  6270,  6274,  6278,
    6285,  6286,  6291,  6292,  6310,  6311,  6323,  6324,  6329,  6338,
    6339,  6344,  6350,  6360,  6361,  6373,  6374,  6378,  6384,  6393,
    6402,  6405,  6410,  6418,  6419,  6423,  6427,  6434,  6441,  6451,
    6450,  6468,  6474,  6483,  6484,  6489,  6490,  6494,  6500,  6509,
    6516,  6517,  6521,  6527,  6536,  6538,  6540,  6542,  6544,  6546,
    6548,  6550,  6559,  6560,  6564,  6565,  6586,  6587,  6591,  6592,
    6596,  6601,  6606,  6621,  6622,  6626,  6632,  6641,  6647,  6655,
    6657,  6661,  6665,  6669,  6673,  6677,  6681,  6694,  6698,  6702,
    6706,  6710,  6714,  6718,  6722,  6726,  6744,  6748,  6752,  6756,
    6760,  6764,  6768,  6772,  6776,  6780,  6784,  6788,  6792,  6796,
    6800,  6804,  6818,  6822,  6826,  6830,  6837,  6851,  6855,  6859,
    6863,  6867,  6868,  6869,  6870,  6871,  6872,  6876,  6877,  6878,
    6882,  6883,  6884,  6885,  6889,  6895,  6904,  6905,  6909,  6916,
    6917,  6925,  6931,  6937,  6942,  6952,  6960,  6968,  6972,  6973,
    6977,  6978,  6982,  6983,  6987,  6991,  6995,  7016,  7018,  7022,
    7023,  7024,  7028,  7032,  7036,  7040,  7044,  7048,  7052,  7056,
    7061,  7066,  7075,  7084,  7088,  7092,  7097,  7106,  7110,  7133,
    7137,  7141,  7145,  7149,  7153,  7157,  7158,  7162,  7166,  7170,
    7175,  7180,  7185,  7190,  7195,  7199,  7203,  7208,  7212,  7219,
    7221,  7223,  7225,  7227,  7229,  7231,  7233,  7238,  7239,  7243,
    7244,  7248,  7249,  7250,  7251,  7252,  7256,  7257,  7258,  7259,
    7260,  7264,  7269,  7273,  7275,  7279,  7280,  7281,  7282,  7287,
    7291,  7300,  7304,  7309,  7313,  7322,  7323,  7327,  7328,  7329,
    7337,  7338,  7342,  7346,  7350,  7351,  7352,  7361,  7362,  7363,
    7364,  7367,  7368,  7373,  7377,  7381,  7382,  7386,  7405,  7424,
    7428,  7432,  7436,  7440,  7444,  7448,  7452,  7456,  7460,  7464,
    7468,  7472,  7476,  7480,  7484,  7493,  7498,  7511,  7515,  7519,
    7526,  7527,  7528,  7532,  7533,  7534,  7538,  7544,  7548,  7552,
    7553,  7557,  7566,  7570,  7571,  7575,  7584,  7588,  7589,  7593,
    7599,  7603,  7604,  7608,  7609,  7614,  7618,  7623,  7631,  7640,
    7647,  7658,  7662,  7667,  7672,  7677,  7684,  7690,  7701,  7702,
    7710,  7709,  7721,  7723,  7727,  7742,  7743,  7747,  7754,  7764,
    7765,  7766,  7767,  7772,  7776,  7781,  7786,  7792,  7801,  7802,
    7803,  7804,  7805,  7809,  7810,  7814,  7815,  7819,  7820,  7824,
    7825,  7826,  7830,  7831,  7835,  7836,  7840,  7846,  7855,  7856,
    7870,  7871,  7875,  7881,  7890,  7894,  7895,  7899,  7905,  7914,
    7915,  7920,  7921,  7925,  7929,  7933,  7957,  7958,  7959,  7963,
    7964,  7968,  7969,  7973,  7974,  7978,  7979,  7980,  7984,  7990,
    8000,  8006,  8021,  8027,  8037,  8038,  8047,  8048,  8052,  8058,
    8070,  8080,  8094,  8093,  8114,  8113,  8135,  8134,  8156,  8155,
    8174,  8168,  8191,  8190,  8226,  8248,  8267,  8287,  8295,  8317,
    8341,  8352,  8355,  8367,  8379,  8384,  8396,  8408,  8419,  8426,
    8434,  8435,  8439,  8449,  8459,  8464,  8471,  8480,  8481,  8485,
    8486,  8490,  8496,  8502,  8510,  8525,  8533,  8541,  8548,  8555,
    8562,  8569,  8575,  8581,  8587,  8599,  8611,  8620,  8621,  8625,
    8626,  8630,  8636,  8642,  8648,  8657,  8670,  8671,  8672,  8673,
    8677,  8678,  8690,  8691,  8695,  8696,  8700,  8701,  8716,  8721,
    8729,  8733,  8741,  8745,  8750,  8751,  8760,  8764,  8775,  8779,
    8783,  8787,  8791,  8796,  8801,  8806,  8811,  8818,  8822,  8826,
    8830,  8835,  8840,  8845,  8850,  8854,  8861,  8862,  8866,  8870,
    8877,  8878,  8886,  8893,  8898,  8902,  8907,  8918,  8919,  8927,
    8931,  8935,  8939,  8943,  8947,  8952,  8956,  8960,  8964,  8968,
    8972,  8976,  8980,  8984,  8988,  8993,  8997,  9001,  9005,  9009,
    9013,  9017,  9021,  9025,  9031,  9035,  9042,  9047,  9052,  9060,
    9061,  9066,  9071,  9077,  9086,  9090,  9094,  9111,  9115,  9119,
    9135,  9137,  9141,  9142,  9146,  9147,  9148,  9152,  9153,  9154,
    9158,  9159,  9160,  9161,  9165,  9166,  9174,  9182,  9184,  9188,
    9189,  9193,  9194,  9195,  9199,  9211,  9224,  9231,  9232,  9236,
    9251,  9266,  9250,  9290,  9307,  9310,  9317,  9321,  9328,  9332,
    9336,  9343,  9346,  9353,  9356,  9363,  9366,  9373,  9376,  9384,
    9387,  9394,  9398,  9405,  9409,  9417,  9421,  9446,  9447,  9448,
    9453,  9458,  9465,  9479,  9480,  9481,  9485,  9494,  9495,  9499,
    9500,  9508,  9509,  9510,  9514,  9524,  9525,  9544,  9549,  9556,
    9566,  9574,  9582,  9583,  9587,  9588,  9596,  9598,  9600,  9602,
    9604,  9606,  9611,  9618,  9619,  9620,  9625,  9624,  9630,  9637,
    9642,  9650,  9651,  9655,  9668,  9672,  9681,  9687,  9696,  9703,
    9704,  9708,  9713,  9720,  9726,  9735,  9742,  9749,  9750,  9760,
    9761,  9765,  9769,  9774,  9778,  9814,  9818,  9822,  9826,  9830,
    9869,  9875,  9882,  9888,  9895,  9900,  9906,  9914,  9918,  9922,
    9926,  9930,  9938,  9939,  9940,  9947,  9952,  9956,  9968,  9990,
   10014, 10015, 10019, 10023, 10024, 10028, 10034, 10043, 10050, 10062,
   10065, 10069, 10074, 10078, 10082, 10091, 10097, 10106, 10110, 10114,
   10121, 10122, 10126, 10130, 10131, 10135, 10136, 10140, 10146, 10152,
   10162, 10163, 10171, 10172, 10173, 10174, 10175, 10179, 10180, 10185,
   10191, 10196, 10202, 10206, 10210, 10214, 10218, 10222, 10226, 10230,
   10234, 10238, 10242, 10246, 10259, 10263, 10267, 10272, 10276, 10283,
   10287, 10296, 10300, 10304, 10308, 10316, 10320, 10324, 10329, 10334,
   10342, 10350, 10354, 10355, 10359, 10363, 10367, 10371, 10375, 10379,
   10383, 10387, 10391, 10395, 10399, 10403, 10407, 10411, 10415, 10419,
   10420, 10424, 10425, 10432, 10433, 10437, 10438, 10442, 10443, 10444,
   10445, 10446, 10447, 10448, 10452, 10453, 10457, 10458, 10459, 10460,
   10461, 10462, 10466, 10467, 10468, 10469, 10470, 10471, 10472, 10476,
   10480, 10484, 10488, 10492, 10496, 10497, 10501, 10505, 10509, 10513,
   10517, 10522, 10526, 10530, 10538, 10542, 10546, 10550, 10554, 10558,
   10563, 10570, 10581, 10582, 10592, 10596, 10600, 10604, 10608, 10612,
   10616, 10620, 10624, 10628, 10635, 10639, 10643, 10647, 10651, 10655,
   10659, 10663, 10667, 10672, 10677, 10682, 10686, 10690, 10694, 10698,
   10703, 10707, 10726, 10730, 10734, 10738, 10742, 10747, 10752, 10756,
   10760, 10765, 10769, 10773, 10777, 10781, 10785, 10789, 10793, 10798,
   10802, 10806, 10810, 10814, 10825, 10828, 10839, 10843, 10847, 10851,
   10855, 10859, 10863, 10867, 10871, 10875, 10879, 10883, 10887, 10891,
   10895, 10899, 10903, 10907, 10911, 10915, 10919, 10923, 10927, 10931,
   10937, 10943, 10949, 10955, 10961, 10965, 10983, 10987, 10994, 10996,
   11009, 11010, 11014, 11015, 11019, 11020, 11024, 11030, 11039, 11046,
   11047, 11051, 11055, 11059, 11063, 11067, 11077, 11087, 11091, 11095,
   11099, 11103, 11107, 11111, 11120, 11124, 11128, 11132, 11136, 11140,
   11144, 11148, 11152, 11156, 11166, 11170, 11174, 11178, 11182, 11186,
   11190, 11201, 11212, 11216, 11220, 11233, 11237, 11249, 11250, 11254,
   11255, 11256, 11261, 11264, 11272, 11275, 11279, 11288, 11291, 11295,
   11303, 11306, 11313, 11320, 11324, 11331, 11338, 11345, 11366, 11369,
   11377, 11380, 11388, 11391, 11399, 11402, 11411, 11416, 11423, 11427,
   11431, 11435, 11439, 11446, 11453, 11457, 11461, 11465, 11469, 11477,
   11480, 11484, 11488, 11492, 11498, 11499, 11500, 11504, 11511, 11521,
   11525, 11533, 11534, 11539, 11544, 11548, 11549, 11553, 11558, 11568,
   11575, 11582, 11601, 11609, 11616, 11623, 11630, 11637, 11644, 11651,
   11658, 11665, 11672, 11679, 11687, 11694, 11701, 11708, 11715, 11722,
   11729, 11736, 11746, 11747, 11751, 11757, 11766, 11767, 11771, 11777,
   11786, 11787, 11791, 11792, 11796, 11804, 11813, 11814, 11815, 11828,
   11829, 11910, 11914, 11919, 11923, 11927, 11937, 11944, 11945, 11946,
   11950, 11951, 11952, 11953, 11956, 11957, 11960, 11962, 11965, 11967,
   11975, 11976, 11980, 12009, 12010, 12011, 12012, 12014, 12016, 12020,
   12021, 12030, 12031, 12035, 12042, 12043, 12047, 12060, 12071, 12087,
   12094, 12100, 12109, 12113, 12123, 12130, 12133, 12144, 12148, 12153,
   12158, 12167, 12168, 12179, 12182, 12185, 12189, 12193, 12201, 12204,
   12205, 12206, 12210, 12211, 12215, 12221, 12230, 12231, 12239, 12240,
   12244, 12249, 12255, 12259, 12265, 12274, 12280, 12288, 12292, 12301,
   12313, 12314, 12315, 12316, 12317, 12318, 12319, 12320, 12321, 12322,
   12323, 12324, 12328, 12329, 12330, 12331, 12332, 12333, 12334, 12335,
   12336, 12340, 12341, 12342, 12343, 12346, 12348, 12352, 12353, 12356,
   12358, 12362, 12363, 12367, 12371, 12372, 12379, 12383, 12390, 12395,
   12404, 12421, 12429, 12436, 12442, 12452, 12455, 12462, 12468, 12477,
   12491, 12492, 12499, 12504, 12515, 12516, 12531, 12536, 12546, 12553,
   12554, 12558, 12565, 12570, 12580, 12581, 12585, 12586, 12590, 12591,
   12595, 12602, 12608, 12614, 12623, 12627, 12631, 12635, 12639, 12646,
   12647, 12651, 12652, 12653, 12654, 12655, 12656, 12660, 12661, 12662,
   12663, 12664, 12668, 12669, 12670, 12671, 12672, 12676, 12677, 12678,
   12679, 12680, 12684, 12689, 12690, 12694, 12700, 12709, 12713, 12720,
   12727, 12733, 12737, 12745, 12758, 12774, 12783, 12793, 12816, 12851,
   12858, 12873, 12883, 12898, 12907, 12918, 12938, 12960, 12983, 12991,
   12998, 13005, 13011, 13020, 13026, 13035, 13036, 13040, 13041, 13045,
   13046, 13050, 13051, 13055, 13061, 13070, 13071, 13078, 13098, 13118,
   13136, 13149, 13166, 13182, 13183, 13184, 13193, 13197, 13198, 13209,
   13211, 13215, 13220, 13225, 13233, 13238, 13243, 13251, 13257, 13266,
   13273, 13274, 13278, 13282, 13283, 13287, 13292, 13302, 13307, 13316,
   13317, 13320, 13322, 13326, 13330, 13335, 13340, 13344, 13350, 13359,
   13360, 13368, 13372, 13386, 13390, 13399, 13416, 13417, 13421, 13428,
   13440, 13448, 13449, 13455, 13468, 13478, 13491, 13493, 13497, 13498,
   13502, 13503, 13504, 13508, 13514, 13516, 13520, 13521, 13525, 13526,
   13530, 13531, 13532, 13533, 13534, 13535, 13536, 13537, 13538, 13542,
   13543, 13555, 13561, 13568, 13575, 13582, 13589, 13596, 13603, 13610,
   13617, 13624, 13641, 13648, 13655, 13662, 13669, 13677, 13694, 13701,
   13708, 13715, 13722, 13729, 13740, 13747, 13754, 13761, 13768, 13775,
   13782, 13789, 13793, 13797, 13804, 13811, 13818, 13825, 13832, 13841,
   13848, 13855, 13862, 13869, 13876, 13883, 13890, 13897, 13904, 13905,
   13909, 13910, 13913, 13915, 13919, 13920, 13924, 13925, 13929, 13930,
   13934, 13935, 13936, 13937, 13941, 13942, 13946, 13947, 13951, 13952,
   13956, 13957, 13958, 13963, 13970, 13977, 13978, 13979, 13980, 13981,
   13982, 13989, 13990, 13995, 13998, 14014, 14032, 14042, 14043, 14048,
   14056, 14055, 14068, 14067, 14081, 14085, 14086, 14099, 14098, 14121,
   14122, 14127, 14129, 14131, 14133, 14135, 14137, 14143, 14145, 14147,
   14149, 14151, 14153, 14158, 14159, 14164, 14163, 14170, 14180, 14181,
   14186, 14191, 14201, 14200, 14212, 14211, 14219, 14218, 14238, 14239,
   14243, 14244, 14259, 14258, 14269, 14273, 14277, 14291, 14303, 14304,
   14305, 14311, 14322, 14361, 14362, 14366, 14367, 14371, 14372, 14373,
   14377, 14378, 14382, 14383, 14387, 14388, 14392, 14397, 14401, 14406,
   14412, 14417, 14425, 14426, 14430, 14435, 14439, 14444, 14452, 14453,
   14457, 14458, 14462, 14463, 14467, 14468, 14469, 14473, 14479, 14488,
   14489, 14496, 14497, 14501, 14509, 14529, 14550, 14555, 14561, 14566,
   14574, 14581, 14588, 14598, 14617, 14618, 14619, 14629, 14630, 14634,
   14649, 14650, 14651, 14652, 14656, 14660, 14664, 14668, 14672, 14679,
   14680, 14684, 14685, 14689, 14700, 14701, 14702, 14707, 14711, 14715,
   14722, 14723, 14732, 14733, 14737, 14741, 14751, 14758, 14765, 14769,
   14773, 14777, 14781, 14785, 14794, 14800, 14811, 14817, 14828, 14829,
   14859, 14872, 14885, 14901, 14917, 14934, 14938, 14939, 14946, 14962,
   14963, 14974, 14975, 14985, 14986, 14997, 14998, 15008, 15009, 15010,
   15014, 15015, 15016, 15020, 15025, 15033, 15037, 15050, 15055, 15063,
   15087, 15088, 15089, 15090, 15091, 15098, 15099, 15100, 15107, 15108,
   15109, 15110, 15111, 15112, 15113, 15114, 15115, 15116, 15117, 15118,
   15119, 15120, 15121, 15122, 15123, 15124, 15125, 15126, 15127, 15128,
   15129, 15130, 15131, 15132, 15133, 15134, 15135, 15136, 15137, 15138,
   15139, 15140, 15141, 15156, 15157, 15158, 15165, 15166, 15167, 15168,
   15169, 15170, 15171, 15172, 15173, 15181, 15182, 15183, 15184, 15185,
   15186, 15187, 15188, 15189, 15190, 15191, 15192, 15193, 15194, 15195,
   15196, 15197, 15198, 15199, 15200, 15201, 15202, 15203, 15204, 15205,
   15206, 15207, 15208, 15209, 15210, 15211, 15212, 15213, 15214, 15215,
   15216, 15217, 15218, 15219, 15220, 15221, 15222, 15223, 15224, 15225,
   15226, 15227, 15228, 15229, 15230, 15231, 15232, 15233, 15234, 15235,
   15236, 15237, 15238, 15239, 15240, 15241, 15242, 15243, 15244, 15245,
   15246, 15247, 15248, 15249, 15250, 15251, 15252, 15253, 15254, 15255,
   15256, 15257, 15258, 15259, 15260, 15261, 15262, 15263, 15264, 15265,
   15266, 15267, 15268, 15269, 15270, 15271, 15272, 15273, 15274, 15275,
   15276, 15277, 15278, 15279, 15280, 15281, 15282, 15283, 15284, 15285,
   15286, 15287, 15288, 15289, 15290, 15291, 15292, 15293, 15294, 15295,
   15296, 15297, 15298, 15299, 15300, 15301, 15302, 15303, 15304, 15305,
   15306, 15307, 15308, 15309, 15310, 15311, 15312, 15313, 15314, 15315,
   15316, 15317, 15318, 15319, 15320, 15321, 15322, 15323, 15324, 15325,
   15326, 15327, 15328, 15329, 15330, 15331, 15332, 15333, 15334, 15335,
   15336, 15337, 15338, 15339, 15340, 15341, 15342, 15343, 15344, 15345,
   15346, 15347, 15348, 15349, 15350, 15351, 15352, 15353, 15354, 15355,
   15356, 15357, 15358, 15359, 15360, 15361, 15362, 15363, 15364, 15365,
   15366, 15367, 15368, 15369, 15370, 15371, 15372, 15373, 15374, 15375,
   15376, 15377, 15378, 15379, 15380, 15381, 15382, 15383, 15384, 15385,
   15386, 15387, 15388, 15389, 15390, 15391, 15392, 15393, 15394, 15395,
   15396, 15397, 15398, 15399, 15400, 15401, 15402, 15403, 15404, 15405,
   15406, 15407, 15408, 15409, 15410, 15411, 15412, 15413, 15414, 15415,
   15416, 15417, 15418, 15419, 15420, 15421, 15422, 15423, 15424, 15425,
   15426, 15427, 15428, 15429, 15430, 15431, 15432, 15433, 15434, 15435,
   15436, 15437, 15438, 15439, 15440, 15441, 15442, 15443, 15444, 15445,
   15446, 15447, 15448, 15449, 15450, 15451, 15452, 15453, 15454, 15455,
   15456, 15457, 15458, 15459, 15460, 15461, 15462, 15463, 15464, 15465,
   15466, 15467, 15468, 15469, 15470, 15471, 15472, 15473, 15474, 15475,
   15476, 15477, 15478, 15479, 15480, 15481, 15482, 15483, 15484, 15485,
   15486, 15487, 15488, 15489, 15490, 15491, 15492, 15493, 15494, 15495,
   15496, 15497, 15498, 15499, 15500, 15501, 15502, 15503, 15504, 15505,
   15506, 15507, 15508, 15509, 15510, 15511, 15512, 15513, 15514, 15515,
   15516, 15517, 15518, 15519, 15520, 15521, 15522, 15523, 15524, 15525,
   15526, 15527, 15528, 15529, 15530, 15531, 15532, 15533, 15534, 15535,
   15536, 15537, 15538, 15539, 15540, 15541, 15542, 15543, 15544, 15545,
   15546, 15547, 15548, 15549, 15550, 15551, 15552, 15553, 15554, 15555,
   15556, 15557, 15558, 15559, 15560, 15561, 15562, 15563, 15564, 15565,
   15566, 15567, 15568, 15569, 15570, 15571, 15572, 15573, 15574, 15575,
   15576, 15577, 15578, 15579, 15580, 15581, 15582, 15583, 15584, 15585,
   15586, 15587, 15588, 15589, 15590, 15591, 15592, 15593, 15594, 15595,
   15596, 15597, 15598, 15599, 15600, 15601, 15602, 15603, 15604, 15616,
   15617, 15618, 15630, 15631, 15632, 15633, 15642, 15643, 15644, 15645,
   15646, 15657, 15666, 15670, 15674, 15678, 15685, 15693, 15701, 15713,
   15717, 15722, 15727, 15732, 15737, 15742, 15750, 15751, 15755, 15759,
   15766, 15772, 15781, 15786, 15793, 15803, 15804, 15809, 15813, 15821,
   15825, 15829, 15830, 15831, 15832, 15833, 15837, 15838, 15839, 15840,
   15844, 15845, 15846, 15847, 15851, 15852, 15853, 15854, 15855, 15856,
   15861, 15870, 15874, 15878, 15884, 15888, 15895, 15899, 15906, 15910,
   15923, 15930, 15934, 15946, 15950, 15957, 15964, 15965, 15969, 15976,
   15977, 15981, 15982, 15986, 15987, 15988, 15989, 15993, 15994, 15995,
   15999, 16003, 16007, 16011, 16021, 16020, 16033, 16043, 16044, 16048,
   16049, 16053, 16081, 16082, 16083, 16088, 16093, 16092, 16105, 16116,
   16124, 16131, 16138, 16154, 16158, 16162, 16165, 16168, 16183, 16198,
   16208, 16212, 16216, 16225, 16236, 16252, 16253, 16257, 16258, 16259,
   16260, 16264, 16265, 16266, 16267, 16268, 16274, 16281, 16299, 16298,
   16319, 16326, 16339, 16344, 16361, 16360, 16377, 16390, 16391, 16392,
   16393, 16396, 16398, 16402, 16408, 16417, 16424, 16426, 16428, 16430,
   16432, 16434, 16436, 16438, 16440, 16442, 16444, 16446, 16448, 16450,
   16452, 16454, 16456, 16461, 16463, 16477, 16479, 16481, 16483, 16485,
   16487, 16489, 16491, 16493, 16495, 16497, 16499, 16501, 16503, 16508,
   16509, 16512, 16514, 16518, 16519, 16523, 16533, 16543, 16556, 16570,
   16582, 16594, 16606, 16623, 16629, 16638, 16644, 16653, 16654, 16658,
   16659, 16663, 16673, 16682, 16696, 16703, 16717, 16726, 16727, 16732,
   16741, 16742, 16743, 16744, 16745, 16746, 16750, 16763, 16777, 16791,
   16805, 16820, 16835, 16841, 16847, 16856, 16867, 16878, 16885, 16892,
   16903, 16910, 16917, 16924, 16932, 16938, 16946, 16963, 16971, 16985,
   16996, 17019, 17033, 17038, 17046, 17051, 17059, 17060, 17064, 17070,
   17078, 17080, 17084, 17088, 17092, 17099, 17100, 17105, 17106, 17110,
   17111, 17115, 17120, 17122, 17127, 17128, 17136, 17135, 17145, 17146,
   17151, 17152, 17153, 17158, 17159, 17160, 17164, 17165, 17169, 17181,
   17190, 17200, 17209, 17223, 17224, 17225, 17229, 17233, 17237, 17244,
   17245, 17246, 17247, 17248, 17249, 17250, 17256, 17267, 17276, 17278,
   17280, 17285, 17286, 17287, 17288, 17289, 17293, 17294, 17295, 17296,
   17297, 17298, 17308, 17309, 17314, 17327, 17340, 17342, 17344, 17349,
   17354, 17356, 17358, 17364, 17365, 17367, 17373, 17372, 17412, 17463,
   17464, 17465, 17466, 17476, 17478, 17484, 17489, 17508, 17497, 17576,
   17610, 17650, 17676, 17682, 17723, 17646, 17791, 17812, 17817, 17825,
   17788, 17846, 17851, 17856, 17861, 17866, 17871, 17879, 17880, 17883,
   17892, 17902, 17920, 17921, 17925, 17926, 17927, 17931, 17932, 17937,
   17938, 17940, 17945, 17951, 17960, 17966, 17975, 17981, 17990, 18007,
   18016, 18038, 18042, 18050, 18053, 18057, 18064, 18065, 18070, 18076,
   18080, 18087, 18097, 18104, 18117, 18118, 18122, 18123, 18131, 18132,
   18137, 18145, 18146, 18151
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || 0
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "ABORT_SYM", "ACCESSIBLE_SYM",
  "ACCOUNT_SYM", "ACTION", "ADD", "ADDDATE_SYM", "AFTER_SYM", "AGAINST",
  "AGGREGATE_SYM", "ALGORITHM_SYM", "ALL", "ALTER", "ALWAYS_SYM",
  "OBSOLETE_TOKEN_271", "ANALYZE_SYM", "AND_AND_SYM", "AND_SYM", "ANY_SYM",
  "AS", "ASC", "ASCII_SYM", "ASENSITIVE_SYM", "AT_SYM",
  "AUTOEXTEND_SIZE_SYM", "AUTO_INC", "AVG_ROW_LENGTH", "AVG_SYM",
  "BACKUP_SYM", "BEFORE_SYM", "BEGIN_SYM", "BETWEEN_SYM", "BIGINT_SYM",
  "BINARY_SYM", "BINLOG_SYM", "BIN_NUM", "BIT_AND_SYM", "BIT_OR_SYM",
  "BIT_SYM", "BIT_XOR_SYM", "BLOB_SYM", "BLOCK_SYM", "BOOLEAN_SYM",
  "BOOL_SYM", "BOTH", "BTREE_SYM", "BY", "BYTE_SYM", "CACHE_SYM",
  "CALL_SYM", "CASCADE", "CASCADED", "CASE_SYM", "CAST_SYM",
  "CATALOG_NAME_SYM", "CHAIN_SYM", "CHANGE", "CHANGED", "CHANNEL_SYM",
  "CHARSET", "CHAR_SYM", "CHECKSUM_SYM", "CHECK_SYM", "CIPHER_SYM",
  "CLASS_ORIGIN_SYM", "CLIENT_SYM", "CLOSE_SYM", "COALESCE", "CODE_SYM",
  "COLLATE_SYM", "COLLATION_SYM", "COLUMNS", "COLUMN_SYM",
  "COLUMN_FORMAT_SYM", "COLUMN_NAME_SYM", "COMMENT_SYM", "COMMITTED_SYM",
  "COMMIT_SYM", "COMPACT_SYM", "COMPLETION_SYM", "COMPRESSED_SYM",
  "COMPRESSION_SYM", "ENCRYPTION_SYM", "CONCURRENT", "CONDITION_SYM",
  "CONNECTION_SYM", "CONSISTENT_SYM", "CONSTRAINT",
  "CONSTRAINT_CATALOG_SYM", "CONSTRAINT_NAME_SYM", "CONSTRAINT_SCHEMA_SYM",
  "CONTAINS_SYM", "CONTEXT_SYM", "CONTINUE_SYM", "CONVERT_SYM",
  "COUNT_SYM", "CPU_SYM", "CREATE", "CROSS", "CUBE_SYM", "CURDATE",
  "CURRENT_SYM", "CURRENT_USER", "CURSOR_SYM", "CURSOR_NAME_SYM",
  "CURTIME", "DATABASE", "DATABASES", "DATAFILE_SYM", "DATA_SYM",
  "DATETIME_SYM", "DATE_ADD_INTERVAL", "DATE_SUB_INTERVAL", "DATE_SYM",
  "DAY_HOUR_SYM", "DAY_MICROSECOND_SYM", "DAY_MINUTE_SYM",
  "DAY_SECOND_SYM", "DAY_SYM", "DEALLOCATE_SYM", "DECIMAL_NUM",
  "DECIMAL_SYM", "DECLARE_SYM", "DEFAULT_SYM", "DEFAULT_AUTH_SYM",
  "DEFINER_SYM", "DELAYED_SYM", "DELAY_KEY_WRITE_SYM", "DELETE_SYM",
  "DESC", "DESCRIBE", "OBSOLETE_TOKEN_388", "DETERMINISTIC_SYM",
  "DIAGNOSTICS_SYM", "DIRECTORY_SYM", "DISABLE_SYM", "DISCARD_SYM",
  "DISK_SYM", "DISTINCT", "DIV_SYM", "DOUBLE_SYM", "DO_SYM", "DROP",
  "DUAL_SYM", "DUMPFILE", "DUPLICATE_SYM", "DYNAMIC_SYM", "EACH_SYM",
  "ELSE", "ELSEIF_SYM", "ENABLE_SYM", "ENCLOSED", "END", "ENDS_SYM",
  "END_OF_INPUT", "ENGINES_SYM", "ENGINE_SYM", "ENUM_SYM", "EQ",
  "EQUAL_SYM", "ERROR_SYM", "ERRORS", "ESCAPED", "ESCAPE_SYM",
  "EVENTS_SYM", "EVENT_SYM", "EVERY_SYM", "EXCHANGE_SYM", "EXECUTE_SYM",
  "EXISTS", "EXIT_SYM", "EXPANSION_SYM", "EXPIRE_SYM", "EXPORT_SYM",
  "EXTENDED_SYM", "EXTENT_SIZE_SYM", "EXTRACT_SYM", "FALSE_SYM",
  "FAST_SYM", "FAULTS_SYM", "FETCH_SYM", "FILE_SYM", "FILE_BLOCK_SIZE_SYM",
  "FILTER_SYM", "FIRST_SYM", "FIXED_SYM", "FLOAT_NUM", "FLOAT_SYM",
  "FLUSH_SYM", "FOLLOWS_SYM", "FORCE_SYM", "FOREIGN", "FOR_SYM",
  "FORMAT_SYM", "FOUND_SYM", "FROM", "FULL", "FULLTEXT_SYM",
  "FUNCTION_SYM", "GE", "GENERAL", "GENERATED", "GROUP_REPLICATION",
  "GEOMETRYCOLLECTION_SYM", "GEOMETRY_SYM", "GET_FORMAT", "GET_SYM",
  "GLOBAL_SYM", "GRANT", "GRANTS", "GROUP_SYM", "GROUP_CONCAT_SYM",
  "GT_SYM", "HANDLER_SYM", "HASH_SYM", "HAVING", "HELP_SYM", "HEX_NUM",
  "HIGH_PRIORITY", "HOST_SYM", "HOSTS_SYM", "HOUR_MICROSECOND_SYM",
  "HOUR_MINUTE_SYM", "HOUR_SECOND_SYM", "HOUR_SYM", "IDENT",
  "IDENTIFIED_SYM", "IDENT_QUOTED", "IF", "IGNORE_SYM",
  "IGNORE_SERVER_IDS_SYM", "IMPORT", "INDEXES", "INDEX_SYM", "INFILE",
  "INITIAL_SIZE_SYM", "INNER_SYM", "INOUT_SYM", "INSENSITIVE_SYM",
  "INSERT_SYM", "INSERT_METHOD", "INSTANCE_SYM", "INSTALL_SYM",
  "INTERVAL_SYM", "INTO", "INT_SYM", "INVOKER_SYM", "IN_SYM",
  "IO_AFTER_GTIDS", "IO_BEFORE_GTIDS", "IO_SYM", "IPC_SYM", "IS",
  "ISOLATION", "ISSUER_SYM", "ITERATE_SYM", "JOIN_SYM",
  "JSON_SEPARATOR_SYM", "JSON_SYM", "KEYS", "KEY_BLOCK_SIZE", "KEY_SYM",
  "KILL_SYM", "LANGUAGE_SYM", "LAST_SYM", "LE", "LEADING", "LEAVES",
  "LEAVE_SYM", "LEFT", "LESS_SYM", "LEVEL_SYM", "LEX_HOSTNAME", "LIKE",
  "LIMIT", "LINEAR_SYM", "LINES", "LINESTRING_SYM", "LIST_SYM", "LOAD",
  "LOCAL_SYM", "OBSOLETE_TOKEN_538", "LOCKS_SYM", "LOCK_SYM",
  "LOGFILE_SYM", "LOGS_SYM", "LONGBLOB_SYM", "LONGTEXT_SYM", "LONG_NUM",
  "LONG_SYM", "LOOP_SYM", "LOW_PRIORITY", "LT", "MASTER_AUTO_POSITION_SYM",
  "MASTER_BIND_SYM", "MASTER_CONNECT_RETRY_SYM", "MASTER_DELAY_SYM",
  "MASTER_HOST_SYM", "MASTER_LOG_FILE_SYM", "MASTER_LOG_POS_SYM",
  "MASTER_PASSWORD_SYM", "MASTER_PORT_SYM", "MASTER_RETRY_COUNT_SYM",
  "MASTER_SSL_CAPATH_SYM", "MASTER_TLS_VERSION_SYM", "MASTER_SSL_CA_SYM",
  "MASTER_SSL_CERT_SYM", "MASTER_SSL_CIPHER_SYM", "MASTER_SSL_CRL_SYM",
  "MASTER_SSL_CRLPATH_SYM", "MASTER_SSL_KEY_SYM", "MASTER_SSL_SYM",
  "MASTER_SSL_VERIFY_SERVER_CERT_SYM", "MASTER_SYM", "MASTER_USER_SYM",
  "MASTER_HEARTBEAT_PERIOD_SYM", "MATCH", "MAX_CONNECTIONS_PER_HOUR",
  "MAX_QUERIES_PER_HOUR", "MAX_ROWS", "MAX_SIZE_SYM", "MAX_SYM",
  "MAX_UPDATES_PER_HOUR", "MAX_USER_CONNECTIONS_SYM", "MAX_VALUE_SYM",
  "MEDIUMBLOB_SYM", "MEDIUMINT_SYM", "MEDIUMTEXT_SYM", "MEDIUM_SYM",
  "MEMORY_SYM", "MERGE_SYM", "MESSAGE_TEXT_SYM", "MICROSECOND_SYM",
  "MIGRATE_SYM", "MINUTE_MICROSECOND_SYM", "MINUTE_SECOND_SYM",
  "MINUTE_SYM", "MIN_ROWS", "MIN_SYM", "MODE_SYM", "MODIFIES_SYM",
  "MODIFY_SYM", "MOD_SYM", "MONTH_SYM", "MULTILINESTRING_SYM",
  "MULTIPOINT_SYM", "MULTIPOLYGON_SYM", "MUTEX_SYM", "MYSQL_ERRNO_SYM",
  "NAMES_SYM", "NAME_SYM", "NATIONAL_SYM", "NATURAL", "NCHAR_STRING",
  "NCHAR_SYM", "NDBCLUSTER_SYM", "NE", "NEG", "NEVER_SYM", "NEW_SYM",
  "NEXT_SYM", "NODEGROUP_SYM", "NONE_SYM", "NOT2_SYM", "NOT_SYM",
  "NOW_SYM", "NO_SYM", "NO_WAIT_SYM", "NO_WRITE_TO_BINLOG", "NULL_SYM",
  "NUM", "NUMBER_SYM", "NUMERIC_SYM", "NVARCHAR_SYM", "OFFSET_SYM",
  "ON_SYM", "ONE_SYM", "ONLY_SYM", "OPEN_SYM", "OPTIMIZE",
  "OPTIMIZER_COSTS_SYM", "OPTIONS_SYM", "OPTION", "OPTIONALLY", "OR2_SYM",
  "ORDER_SYM", "OR_OR_SYM", "OR_SYM", "OUTER_SYM", "OUTFILE", "OUT_SYM",
  "OWNER_SYM", "PACK_KEYS_SYM", "PAGE_SYM", "PARAM_MARKER", "PARSER_SYM",
  "OBSOLETE_TOKEN_654", "PARTIAL", "PARTITION_SYM", "PARTITIONS_SYM",
  "PARTITIONING_SYM", "PASSWORD", "PHASE_SYM", "PLUGIN_DIR_SYM",
  "PLUGIN_SYM", "PLUGINS_SYM", "POINT_SYM", "POLYGON_SYM", "PORT_SYM",
  "POSITION_SYM", "PRECEDES_SYM", "PRECISION", "PREPARE_SYM",
  "PRESERVE_SYM", "PREV_SYM", "PRIMARY_SYM", "PRIVILEGES", "PROCEDURE_SYM",
  "PROCESS", "PROCESSLIST_SYM", "PROFILE_SYM", "PROFILES_SYM", "PROXY_SYM",
  "PURGE", "QUARTER_SYM", "QUERY_SYM", "QUICK", "RANGE_SYM", "READS_SYM",
  "READ_ONLY_SYM", "READ_SYM", "READ_WRITE_SYM", "REAL_SYM", "REBUILD_SYM",
  "RECOVER_SYM", "OBSOLETE_TOKEN_693", "REDO_BUFFER_SIZE_SYM",
  "REDUNDANT_SYM", "REFERENCES", "REGEXP", "RELAY", "RELAYLOG_SYM",
  "RELAY_LOG_FILE_SYM", "RELAY_LOG_POS_SYM", "RELAY_THREAD", "RELEASE_SYM",
  "RELOAD", "REMOVE_SYM", "RENAME", "REORGANIZE_SYM", "REPAIR",
  "REPEATABLE_SYM", "REPEAT_SYM", "REPLACE_SYM", "REPLICATION",
  "REPLICATE_DO_DB", "REPLICATE_IGNORE_DB", "REPLICATE_DO_TABLE",
  "REPLICATE_IGNORE_TABLE", "REPLICATE_WILD_DO_TABLE",
  "REPLICATE_WILD_IGNORE_TABLE", "REPLICATE_REWRITE_DB", "REQUIRE_SYM",
  "RESET_SYM", "RESIGNAL_SYM", "RESOURCES", "RESTORE_SYM", "RESTRICT",
  "RESUME_SYM", "RETURNED_SQLSTATE_SYM", "RETURNS_SYM", "RETURN_SYM",
  "REVERSE_SYM", "REVOKE", "RIGHT", "ROLLBACK_SYM", "ROLLUP_SYM",
  "ROTATE_SYM", "ROUTINE_SYM", "ROWS_SYM", "ROW_FORMAT_SYM", "ROW_SYM",
  "ROW_COUNT_SYM", "RTREE_SYM", "SAVEPOINT_SYM", "SCHEDULE_SYM",
  "SCHEMA_NAME_SYM", "SECOND_MICROSECOND_SYM", "SECOND_SYM",
  "SECURITY_SYM", "SELECT_SYM", "SENSITIVE_SYM", "SEPARATOR_SYM",
  "SERIALIZABLE_SYM", "SERIAL_SYM", "SESSION_SYM", "SERVER_SYM",
  "OBSOLETE_TOKEN_755", "SET_SYM", "SET_VAR", "SHARE_SYM", "SHIFT_LEFT",
  "SHIFT_RIGHT", "SHOW", "SHUTDOWN", "SIGNAL_SYM", "SIGNED_SYM",
  "SIMPLE_SYM", "SLAVE", "SLOW", "SMALLINT_SYM", "SNAPSHOT_SYM",
  "SOCKET_SYM", "SONAME_SYM", "SOUNDS_SYM", "SOURCE_SYM", "SPATIAL_SYM",
  "SPECIFIC_SYM", "SQLEXCEPTION_SYM", "SQLSTATE_SYM", "SQLWARNING_SYM",
  "SQL_AFTER_GTIDS", "SQL_AFTER_MTS_GAPS", "SQL_BEFORE_GTIDS",
  "SQL_BIG_RESULT", "SQL_BUFFER_RESULT", "OBSOLETE_TOKEN_784",
  "SQL_CALC_FOUND_ROWS", "SQL_NO_CACHE_SYM", "SQL_SMALL_RESULT", "SQL_SYM",
  "SQL_THREAD", "SSL_SYM", "STACKED_SYM", "STARTING", "STARTS_SYM",
  "START_SYM", "STATS_AUTO_RECALC_SYM", "STATS_PERSISTENT_SYM",
  "STATS_SAMPLE_PAGES_SYM", "STATUS_SYM", "STDDEV_SAMP_SYM", "STD_SYM",
  "STOP_SYM", "STORAGE_SYM", "STORED_SYM", "STRAIGHT_JOIN", "STRING_SYM",
  "SUBCLASS_ORIGIN_SYM", "SUBDATE_SYM", "SUBJECT_SYM", "SUBPARTITIONS_SYM",
  "SUBPARTITION_SYM", "SUBSTRING", "SUM_SYM", "SUPER_SYM", "SUSPEND_SYM",
  "SWAPS_SYM", "SWITCHES_SYM", "SYSDATE", "TABLES", "TABLESPACE_SYM",
  "OBSOLETE_TOKEN_820", "TABLE_SYM", "TABLE_CHECKSUM_SYM",
  "TABLE_NAME_SYM", "TEMPORARY", "TEMPTABLE_SYM", "TERMINATED",
  "TEXT_STRING", "TEXT_SYM", "THAN_SYM", "THEN_SYM", "TIMESTAMP_SYM",
  "TIMESTAMP_ADD", "TIMESTAMP_DIFF", "TIME_SYM", "TINYBLOB_SYM",
  "TINYINT_SYM", "TINYTEXT_SYN", "TO_SYM", "TRAILING", "TRANSACTION_SYM",
  "TRIGGERS_SYM", "TRIGGER_SYM", "TRIM", "TRUE_SYM", "TRUNCATE_SYM",
  "TYPES_SYM", "TYPE_SYM", "OBSOLETE_TOKEN_848", "ULONGLONG_NUM",
  "UNCOMMITTED_SYM", "UNDEFINED_SYM", "UNDERSCORE_CHARSET", "UNDOFILE_SYM",
  "UNDO_BUFFER_SIZE_SYM", "UNDO_SYM", "UNICODE_SYM", "UNINSTALL_SYM",
  "UNION_SYM", "UNIQUE_SYM", "UNKNOWN_SYM", "UNLOCK_SYM", "UNSIGNED_SYM",
  "UNTIL_SYM", "UPDATE_SYM", "UPGRADE_SYM", "USAGE", "USER", "USE_FRM",
  "USE_SYM", "USING", "UTC_DATE_SYM", "UTC_TIMESTAMP_SYM", "UTC_TIME_SYM",
  "VALIDATION_SYM", "VALUES", "VALUE_SYM", "VARBINARY_SYM", "VARCHAR_SYM",
  "VARIABLES", "VARIANCE_SYM", "VARYING", "VAR_SAMP_SYM", "VIEW_SYM",
  "VIRTUAL_SYM", "WAIT_SYM", "WARNINGS", "WEEK_SYM", "WEIGHT_STRING_SYM",
  "WHEN_SYM", "WHERE", "WHILE_SYM", "WITH", "OBSOLETE_TOKEN_893",
  "WITH_ROLLUP_SYM", "WITHOUT_SYM", "WORK_SYM", "WRAPPER_SYM", "WRITE_SYM",
  "X509_SYM", "XA_SYM", "XID_SYM", "XML_SYM", "XOR", "YEAR_MONTH_SYM",
  "YEAR_SYM", "ZEROFILL_SYM", "JSON_UNQUOTED_SEPARATOR_SYM", "PERSIST_SYM",
  "ROLE_SYM", "ADMIN_SYM", "INVISIBLE_SYM", "VISIBLE_SYM", "EXCEPT_SYM",
  "COMPONENT_SYM", "RECURSIVE_SYM", "GRAMMAR_SELECTOR_EXPR",
  "GRAMMAR_SELECTOR_GCOL", "GRAMMAR_SELECTOR_PART", "GRAMMAR_SELECTOR_CTE",
  "JSON_OBJECTAGG", "JSON_ARRAYAGG", "OF_SYM", "SKIP_SYM", "LOCKED_SYM",
  "NOWAIT_SYM", "GROUPING_SYM", "PERSIST_ONLY_SYM", "HISTOGRAM_SYM",
  "BUCKETS_SYM", "OBSOLETE_TOKEN_930", "CLONE_SYM", "CUME_DIST_SYM",
  "DENSE_RANK_SYM", "EXCLUDE_SYM", "FIRST_VALUE_SYM", "FOLLOWING_SYM",
  "GROUPS_SYM", "LAG_SYM", "LAST_VALUE_SYM", "LEAD_SYM", "NTH_VALUE_SYM",
  "NTILE_SYM", "NULLS_SYM", "OTHERS_SYM", "OVER_SYM", "PERCENT_RANK_SYM",
  "PRECEDING_SYM", "RANK_SYM", "RESPECT_SYM", "ROW_NUMBER_SYM", "TIES_SYM",
  "UNBOUNDED_SYM", "WINDOW_SYM", "EMPTY_SYM", "JSON_TABLE_SYM",
  "NESTED_SYM", "ORDINALITY_SYM", "PATH_SYM", "HISTORY_SYM", "REUSE_SYM",
  "SRID_SYM", "THREAD_PRIORITY_SYM", "RESOURCE_SYM", "SYSTEM_SYM",
  "VCPU_SYM", "MASTER_PUBLIC_KEY_PATH_SYM", "GET_MASTER_PUBLIC_KEY_SYM",
  "RESTART_SYM", "DEFINITION_SYM", "DESCRIPTION_SYM", "ORGANIZATION_SYM",
  "REFERENCE_SYM", "ACTIVE_SYM", "INACTIVE_SYM", "LATERAL_SYM",
  "ARRAY_SYM", "MEMBER_SYM", "OPTIONAL_SYM", "SECONDARY_SYM",
  "SECONDARY_ENGINE_SYM", "SECONDARY_LOAD_SYM", "SECONDARY_UNLOAD_SYM",
  "RETAIN_SYM", "OLD_SYM", "ENFORCED_SYM", "OJ_SYM",
  "NETWORK_NAMESPACE_SYM", "RANDOM_SYM",
  "MASTER_COMPRESSION_ALGORITHM_SYM", "MASTER_ZSTD_COMPRESSION_LEVEL_SYM",
  "PRIVILEGE_CHECKS_USER_SYM", "MASTER_TLS_CIPHERSUITES_SYM",
  "REQUIRE_ROW_FORMAT_SYM", "PASSWORD_LOCK_TIME_SYM",
  "FAILED_LOGIN_ATTEMPTS_SYM", "REQUIRE_TABLE_PRIMARY_KEY_CHECK_SYM",
  "STREAM_SYM", "OFF_SYM", "RETURNING_SYM", "YYUNDEF", "JSON_VALUE_SYM",
  "TLS_SYM", "ATTRIBUTE_SYM", "ENGINE_ATTRIBUTE_SYM",
  "SECONDARY_ENGINE_ATTRIBUTE_SYM", "SOURCE_CONNECTION_AUTO_FAILOVER_SYM",
  "ZONE_SYM", "GRAMMAR_SELECTOR_DERIVED_EXPR", "REPLICA_SYM",
  "REPLICAS_SYM", "ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS_SYM",
  "GET_SOURCE_PUBLIC_KEY_SYM", "SOURCE_AUTO_POSITION_SYM",
  "SOURCE_BIND_SYM", "SOURCE_COMPRESSION_ALGORITHM_SYM",
  "SOURCE_CONNECT_RETRY_SYM", "SOURCE_DELAY_SYM",
  "SOURCE_HEARTBEAT_PERIOD_SYM", "SOURCE_HOST_SYM", "SOURCE_LOG_FILE_SYM",
  "SOURCE_LOG_POS_SYM", "SOURCE_PASSWORD_SYM", "SOURCE_PORT_SYM",
  "SOURCE_PUBLIC_KEY_PATH_SYM", "SOURCE_RETRY_COUNT_SYM", "SOURCE_SSL_SYM",
  "SOURCE_SSL_CA_SYM", "SOURCE_SSL_CAPATH_SYM", "SOURCE_SSL_CERT_SYM",
  "SOURCE_SSL_CIPHER_SYM", "SOURCE_SSL_CRL_SYM", "SOURCE_SSL_CRLPATH_SYM",
  "SOURCE_SSL_KEY_SYM", "SOURCE_SSL_VERIFY_SERVER_CERT_SYM",
  "SOURCE_TLS_CIPHERSUITES_SYM", "SOURCE_TLS_VERSION_SYM",
  "SOURCE_USER_SYM", "SOURCE_ZSTD_COMPRESSION_LEVEL_SYM", "ST_COLLECT_SYM",
  "KEYRING_SYM", "AUTHENTICATION_SYM", "FACTOR_SYM", "FINISH_SYM",
  "INITIATE_SYM", "REGISTRATION_SYM", "UNREGISTER_SYM", "INITIAL_SYM",
  "CHALLENGE_RESPONSE_SYM", "GTID_ONLY_SYM", "KEYWORD_USED_AS_IDENT",
  "KEYWORD_USED_AS_KEYWORD", "CONDITIONLESS_JOIN", "'|'", "'&'", "'-'",
  "'+'", "'*'", "'/'", "'%'", "'^'", "'~'", "SUBQUERY_AS_EXPR", "'('",
  "')'", "EMPTY_FROM_CLAUSE", "';'", "'@'", "','", "'.'", "':'", "'!'",
  "'{'", "'}'", "$accept", "start_entry", "sql_statement", "$@1",
  "opt_end_of_input", "simple_statement_or_begin", "simple_statement",
  "deallocate", "deallocate_or_drop", "prepare", "prepare_src", "execute",
  "$@2", "execute_using", "execute_var_list", "execute_var_ident", "help",
  "$@3", "change_replication_source", "change", "$@4", "$@5",
  "filter_defs", "filter_def", "opt_filter_db_list", "filter_db_list",
  "filter_db_ident", "opt_filter_db_pair_list", "filter_db_pair_list",
  "opt_filter_table_list", "filter_table_list", "filter_table_ident",
  "opt_filter_string_list", "filter_string_list", "filter_string",
  "source_defs", "change_replication_source_auto_position",
  "change_replication_source_host", "change_replication_source_bind",
  "change_replication_source_user", "change_replication_source_password",
  "change_replication_source_port",
  "change_replication_source_connect_retry",
  "change_replication_source_retry_count",
  "change_replication_source_delay", "change_replication_source_ssl",
  "change_replication_source_ssl_ca",
  "change_replication_source_ssl_capath",
  "change_replication_source_ssl_cipher",
  "change_replication_source_ssl_crl",
  "change_replication_source_ssl_crlpath",
  "change_replication_source_ssl_key",
  "change_replication_source_ssl_verify_server_cert",
  "change_replication_source_tls_version",
  "change_replication_source_tls_ciphersuites",
  "change_replication_source_ssl_cert",
  "change_replication_source_public_key",
  "change_replication_source_get_source_public_key",
  "change_replication_source_heartbeat_period",
  "change_replication_source_compression_algorithm",
  "change_replication_source_zstd_compression_level", "source_def",
  "ignore_server_id_list", "ignore_server_id", "privilege_check_def",
  "table_primary_key_check_def",
  "assign_gtids_to_anonymous_transactions_def",
  "source_tls_ciphersuites_def", "source_log_file", "source_log_pos",
  "source_file_def", "opt_channel", "create_table_stmt",
  "create_role_stmt", "create_resource_group_stmt", "create", "$@6",
  "create_srs_stmt", "srs_attributes", "default_role_clause",
  "create_index_stmt", "server_options_list", "server_option",
  "event_tail", "$@7", "ev_schedule_time", "$@8", "opt_ev_status",
  "ev_starts", "ev_ends", "opt_ev_on_completion", "ev_on_completion",
  "opt_ev_comment", "ev_sql_stmt", "$@9", "ev_sql_stmt_inner", "sp_name",
  "sp_a_chistics", "sp_c_chistics", "sp_chistic", "sp_c_chistic",
  "sp_suid", "call_stmt", "opt_paren_expr_list", "sp_fdparam_list",
  "sp_fdparams", "sp_fdparam", "sp_pdparam_list", "sp_pdparams",
  "sp_pdparam", "sp_opt_inout", "sp_proc_stmts", "sp_proc_stmts1",
  "sp_decls", "sp_decl", "$@10", "$@11", "sp_handler_type",
  "sp_hcond_list", "sp_hcond_element", "sp_cond", "sqlstate", "opt_value",
  "sp_hcond", "signal_stmt", "signal_value", "opt_signal_value",
  "opt_set_signal_information", "signal_information_item_list",
  "signal_allowed_expr", "signal_condition_information_item_name",
  "resignal_stmt", "get_diagnostics", "which_area",
  "diagnostics_information", "statement_information",
  "statement_information_item", "simple_target_specification",
  "statement_information_item_name", "condition_number",
  "condition_information", "condition_information_item",
  "condition_information_item_name", "sp_decl_idents", "sp_opt_default",
  "sp_proc_stmt", "sp_proc_stmt_if", "$@12", "sp_proc_stmt_statement",
  "$@13", "sp_proc_stmt_return", "$@14", "sp_proc_stmt_unlabeled", "$@15",
  "sp_proc_stmt_leave", "sp_proc_stmt_iterate", "sp_proc_stmt_open",
  "sp_proc_stmt_fetch", "$@16", "sp_proc_stmt_close", "sp_opt_fetch_noise",
  "sp_fetch_list", "sp_if", "$@17", "$@18", "$@19", "sp_elseifs",
  "case_stmt_specification", "simple_case_stmt", "$@20", "$@21",
  "searched_case_stmt", "$@22", "simple_when_clause_list",
  "searched_when_clause_list", "simple_when_clause", "$@23", "$@24",
  "searched_when_clause", "$@25", "$@26", "else_clause_opt",
  "sp_labeled_control", "$@27", "sp_opt_label", "sp_labeled_block", "$@28",
  "sp_unlabeled_block", "$@29", "sp_block_content", "$@30",
  "sp_unlabeled_control", "$@31", "$@32", "$@33", "$@34",
  "trg_action_time", "trg_event", "opt_ts_datafile_name",
  "opt_logfile_group_name", "opt_tablespace_options",
  "tablespace_option_list", "tablespace_option",
  "opt_alter_tablespace_options", "alter_tablespace_option_list",
  "alter_tablespace_option", "opt_undo_tablespace_options",
  "undo_tablespace_option_list", "undo_tablespace_option",
  "opt_logfile_group_options", "logfile_group_option_list",
  "logfile_group_option", "opt_alter_logfile_group_options",
  "alter_logfile_group_option_list", "alter_logfile_group_option",
  "ts_datafile", "undo_tablespace_state", "lg_undofile",
  "ts_option_initial_size", "ts_option_autoextend_size",
  "option_autoextend_size", "ts_option_max_size", "ts_option_extent_size",
  "ts_option_undo_buffer_size", "ts_option_redo_buffer_size",
  "ts_option_nodegroup", "ts_option_comment", "ts_option_engine",
  "ts_option_file_block_size", "ts_option_wait", "ts_option_encryption",
  "ts_option_engine_attribute", "size_number",
  "opt_create_table_options_etc", "opt_create_partitioning_etc",
  "opt_duplicate_as_qe", "as_create_query_expression", "partition_clause",
  "part_type_def", "opt_linear", "opt_key_algo", "opt_num_parts",
  "opt_sub_part", "opt_name_list", "name_list", "opt_num_subparts",
  "opt_part_defs", "part_def_list", "part_definition", "opt_part_values",
  "part_func_max", "part_values_in", "part_value_list",
  "part_value_item_list_paren", "$@35", "part_value_item_list",
  "part_value_item", "opt_sub_partition", "sub_part_list",
  "sub_part_definition", "opt_part_options", "part_option_list",
  "part_option", "alter_database_options", "alter_database_option",
  "opt_create_database_options", "create_database_options",
  "create_database_option", "opt_if_not_exists",
  "create_table_options_space_separated", "create_table_options",
  "opt_comma", "create_table_option", "ternary_option", "default_charset",
  "default_collation", "default_encryption", "row_types",
  "merge_insert_types", "udf_type", "table_element_list", "table_element",
  "column_def", "opt_references", "table_constraint_def",
  "check_constraint", "opt_constraint_name", "opt_not",
  "opt_constraint_enforcement", "constraint_enforcement", "field_def",
  "opt_generated_always", "opt_stored_attribute", "type", "spatial_type",
  "nchar", "varchar", "nvarchar", "int_type", "real_type", "opt_PRECISION",
  "numeric_type", "standard_float_options", "float_options", "precision",
  "type_datetime_precision", "func_datetime_precision", "field_options",
  "field_opt_list", "field_option", "field_length", "opt_field_length",
  "opt_precision", "opt_column_attribute_list", "column_attribute_list",
  "column_attribute", "column_format", "storage_media", "now",
  "now_or_signed_literal", "character_set", "charset_name",
  "opt_load_data_charset", "old_or_new_charset_name",
  "old_or_new_charset_name_or_default", "collation_name", "opt_collate",
  "opt_default", "ascii", "unicode", "opt_charset_with_opt_binary",
  "opt_bin_mod", "ws_num_codepoints", "$@36", "opt_primary", "references",
  "opt_ref_list", "reference_list", "opt_match_clause",
  "opt_on_update_delete", "delete_option", "constraint_key_type",
  "key_or_index", "opt_key_or_index", "keys_or_index", "opt_unique",
  "opt_fulltext_index_options", "fulltext_index_options",
  "fulltext_index_option", "opt_spatial_index_options",
  "spatial_index_options", "spatial_index_option", "opt_index_options",
  "index_options", "index_option", "common_index_option",
  "opt_index_name_and_type", "opt_index_type_clause", "index_type_clause",
  "visibility", "index_type", "key_list", "key_part",
  "key_list_with_expression", "key_part_with_expression", "opt_ident",
  "string_list", "alter_table_stmt", "alter_database_stmt", "$@37",
  "alter_procedure_stmt", "$@38", "alter_function_stmt", "$@39",
  "alter_view_stmt", "$@40", "$@41", "alter_event_stmt", "$@42",
  "alter_logfile_stmt", "alter_tablespace_stmt",
  "alter_undo_tablespace_stmt", "alter_server_stmt", "alter_user_stmt",
  "opt_replace_password", "alter_resource_group_stmt",
  "alter_user_command", "opt_user_attribute",
  "opt_account_lock_password_expire_options",
  "opt_account_lock_password_expire_option_list",
  "opt_account_lock_password_expire_option", "connect_options",
  "connect_option_list", "connect_option", "user_func",
  "ev_alter_on_schedule_completion", "opt_ev_rename_to", "opt_ev_sql_stmt",
  "ident_or_empty", "opt_alter_table_actions",
  "standalone_alter_table_action", "alter_table_partition_options",
  "opt_alter_command_list", "standalone_alter_commands",
  "opt_with_validation", "with_validation", "all_or_alt_part_name_list",
  "alter_list", "alter_commands_modifier_list", "alter_list_item",
  "alter_commands_modifier", "opt_index_lock_and_algorithm",
  "alter_algorithm_option", "alter_algorithm_option_value",
  "alter_lock_option", "alter_lock_option_value", "opt_column",
  "opt_ignore", "opt_restrict", "opt_place", "opt_to", "group_replication",
  "group_replication_start", "opt_group_replication_start_options",
  "group_replication_start_options", "group_replication_start_option",
  "group_replication_user", "group_replication_password",
  "group_replication_plugin_auth", "replica", "stop_replica_stmt",
  "start_replica_stmt", "$@43", "$@44", "start",
  "opt_start_transaction_option_list", "start_transaction_option_list",
  "start_transaction_option", "opt_user_option", "opt_password_option",
  "opt_default_auth_option", "opt_plugin_dir_option",
  "opt_replica_thread_option_list", "replica_thread_option_list",
  "replica_thread_option", "opt_replica_until", "replica_until",
  "checksum", "opt_checksum_type", "repair_table_stmt",
  "opt_mi_repair_types", "mi_repair_types", "mi_repair_type",
  "analyze_table_stmt", "opt_num_buckets", "opt_histogram",
  "binlog_base64_event", "check_table_stmt", "opt_mi_check_types",
  "mi_check_types", "mi_check_type", "optimize_table_stmt",
  "opt_no_write_to_binlog", "rename", "$@45", "rename_list",
  "table_to_table_list", "table_to_table", "keycache_stmt",
  "keycache_list", "assign_to_keycache", "key_cache_name", "preload_stmt",
  "preload_list", "preload_keys", "adm_partition", "opt_cache_key_list",
  "opt_ignore_leaves", "select_stmt", "select_stmt_with_into",
  "query_expression", "query_expression_body", "query_expression_parens",
  "query_primary", "query_specification", "opt_from_clause", "from_clause",
  "from_tables", "table_reference_list", "table_value_constructor",
  "explicit_table", "select_options", "select_option_list",
  "select_option", "locking_clause_list", "locking_clause",
  "lock_strength", "table_locking_list", "opt_locked_row_action",
  "locked_row_action", "select_item_list", "select_item", "select_alias",
  "optional_braces", "expr", "bool_pri", "predicate", "opt_of", "bit_expr",
  "or", "and", "not", "not2", "comp_op", "all_or_any", "simple_expr",
  "opt_array_cast", "function_call_keyword", "function_call_nonkeyword",
  "opt_returning_type", "function_call_conflict", "geometry_function",
  "function_call_generic", "fulltext_options", "opt_natural_language_mode",
  "opt_query_expansion", "opt_udf_expr_list", "udf_expr_list", "udf_expr",
  "set_function_specification", "sum_expr", "window_func_call",
  "opt_lead_lag_info", "stable_integer", "param_or_var", "opt_ll_default",
  "opt_null_treatment", "opt_from_first_last", "opt_windowing_clause",
  "windowing_clause", "window_name_or_spec", "window_name", "window_spec",
  "window_spec_details", "opt_existing_window_name",
  "opt_partition_clause", "opt_window_order_by_clause",
  "opt_window_frame_clause", "window_frame_extent", "window_frame_start",
  "window_frame_between", "window_frame_bound",
  "opt_window_frame_exclusion", "window_frame_units", "grouping_operation",
  "in_expression_user_variable_assignment",
  "rvalue_system_or_user_variable", "opt_distinct",
  "opt_gconcat_separator", "opt_gorder_clause", "gorder_list",
  "in_sum_expr", "cast_type", "opt_expr_list", "expr_list",
  "ident_list_arg", "ident_list", "opt_expr", "opt_else", "when_list",
  "table_reference", "esc_table_reference", "joined_table",
  "natural_join_type", "inner_join_type", "outer_join_type", "opt_inner",
  "opt_outer", "opt_use_partition", "use_partition", "table_factor",
  "table_reference_list_parens", "single_table_parens", "single_table",
  "joined_table_parens", "derived_table", "table_function",
  "columns_clause", "columns_list", "jt_column", "jt_column_type",
  "opt_on_empty_or_error", "opt_on_empty_or_error_json_table", "on_empty",
  "on_error", "json_on_response", "index_hint_clause", "index_hint_type",
  "index_hint_definition", "index_hints_list", "opt_index_hints_list",
  "opt_key_definition", "opt_key_usage_list", "key_usage_element",
  "key_usage_list", "using_list", "ident_string_list", "interval",
  "interval_time_stamp", "date_time_type", "opt_as", "opt_table_alias",
  "opt_all", "opt_where_clause", "where_clause", "opt_having_clause",
  "with_clause", "with_list", "common_table_expr",
  "opt_derived_column_list", "simple_ident_list", "opt_window_clause",
  "window_definition_list", "window_definition", "opt_group_clause",
  "group_list", "olap_opt", "alter_order_list", "alter_order_item",
  "opt_order_clause", "order_clause", "order_list",
  "opt_ordering_direction", "ordering_direction", "opt_limit_clause",
  "limit_clause", "limit_options", "limit_option", "opt_simple_limit",
  "ulong_num", "real_ulong_num", "ulonglong_num", "real_ulonglong_num",
  "dec_num_error", "dec_num", "select_var_list", "select_var_ident",
  "into_clause", "into_destination", "do_stmt", "drop_table_stmt",
  "drop_index_stmt", "drop_database_stmt", "drop_function_stmt",
  "drop_resource_group_stmt", "drop_procedure_stmt", "drop_user_stmt",
  "drop_view_stmt", "drop_event_stmt", "drop_trigger_stmt",
  "drop_tablespace_stmt", "drop_undo_tablespace_stmt", "drop_logfile_stmt",
  "drop_server_stmt", "drop_srs_stmt", "drop_role_stmt", "table_list",
  "table_alias_ref_list", "if_exists", "opt_ignore_unknown_user",
  "opt_temporary", "opt_drop_ts_options", "drop_ts_option_list",
  "drop_ts_option", "insert_stmt", "replace_stmt", "insert_lock_option",
  "replace_lock_option", "opt_INTO", "insert_from_constructor",
  "insert_query_expression", "fields", "insert_values",
  "query_expression_or_parens", "value_or_values", "values_list",
  "values_row_list", "equal", "opt_equal", "row_value",
  "row_value_explicit", "opt_values", "values", "expr_or_default",
  "opt_values_reference", "opt_insert_update_list", "update_stmt",
  "opt_with_clause", "update_list", "update_elem", "opt_low_priority",
  "delete_stmt", "opt_wild", "opt_delete_options", "opt_delete_option",
  "truncate_stmt", "opt_table", "opt_profile_defs", "profile_defs",
  "profile_def", "opt_for_query", "show_databases_stmt",
  "show_tables_stmt", "show_triggers_stmt", "show_events_stmt",
  "show_table_status_stmt", "show_open_tables_stmt", "show_plugins_stmt",
  "show_engine_logs_stmt", "show_engine_mutex_stmt",
  "show_engine_status_stmt", "show_columns_stmt", "show_binary_logs_stmt",
  "show_replicas_stmt", "show_binlog_events_stmt",
  "show_relaylog_events_stmt", "show_keys_stmt", "show_engines_stmt",
  "show_count_warnings_stmt", "show_count_errors_stmt",
  "show_warnings_stmt", "show_errors_stmt", "show_profiles_stmt",
  "show_profile_stmt", "show_status_stmt", "show_processlist_stmt",
  "show_variables_stmt", "show_character_set_stmt", "show_collation_stmt",
  "show_privileges_stmt", "show_grants_stmt", "show_create_database_stmt",
  "show_create_table_stmt", "show_create_view_stmt",
  "show_master_status_stmt", "show_replica_status_stmt",
  "show_create_procedure_stmt", "show_create_function_stmt",
  "show_create_trigger_stmt", "show_procedure_status_stmt",
  "show_function_status_stmt", "show_procedure_code_stmt",
  "show_function_code_stmt", "show_create_event_stmt",
  "show_create_user_stmt", "engine_or_all", "master_or_binary",
  "opt_storage", "opt_db", "opt_full", "opt_extended", "opt_show_cmd_type",
  "from_or_in", "opt_binlog_in", "binlog_from", "opt_wild_or_where",
  "describe_stmt", "explain_stmt", "explainable_stmt", "describe_command",
  "opt_explain_format_type", "opt_explain_analyze_type",
  "opt_describe_column", "flush", "$@46", "flush_options", "$@47",
  "opt_flush_lock", "$@48", "flush_options_list", "flush_option",
  "opt_table_list", "reset", "$@49", "reset_options",
  "opt_if_exists_ident", "reset_option", "$@50", "$@51", "$@52",
  "opt_replica_reset_options", "source_reset_options", "purge", "$@53",
  "purge_options", "purge_option", "kill", "kill_option", "use",
  "load_stmt", "data_or_xml", "opt_local", "load_data_lock",
  "opt_duplicate", "duplicate", "opt_field_term", "field_term_list",
  "field_term", "opt_line_term", "line_term_list", "line_term",
  "opt_xml_rows_identified_by", "opt_ignore_lines", "lines_or_rows",
  "opt_field_or_var_spec", "fields_or_vars", "field_or_var",
  "opt_load_data_set_spec", "load_data_set_list", "load_data_set_elem",
  "text_literal", "text_string", "param_marker", "signed_literal",
  "signed_literal_or_null", "null_as_literal", "literal",
  "literal_or_null", "NUM_literal", "int64_literal", "temporal_literal",
  "opt_interval", "insert_ident", "table_wild", "order_expr",
  "grouping_expr", "simple_ident", "simple_ident_nospvar",
  "simple_ident_q", "table_ident", "table_ident_opt_wild", "IDENT_sys",
  "TEXT_STRING_sys_nonewline", "filter_wild_db_table_string",
  "TEXT_STRING_sys", "TEXT_STRING_literal", "TEXT_STRING_filesystem",
  "TEXT_STRING_password", "TEXT_STRING_hash", "TEXT_STRING_validated",
  "ident", "role_ident", "label_ident", "lvalue_ident", "ident_or_text",
  "role_ident_or_text", "user_ident_or_text", "user", "role", "schema",
  "ident_keyword", "ident_keywords_ambiguous_1_roles_and_labels",
  "ident_keywords_ambiguous_2_labels", "label_keyword",
  "ident_keywords_ambiguous_3_roles", "ident_keywords_unambiguous",
  "role_keyword", "lvalue_keyword",
  "ident_keywords_ambiguous_4_system_variables", "set",
  "start_option_value_list", "set_role_stmt", "opt_except_role_list",
  "set_resource_group_stmt", "thread_id_list", "thread_id_list_options",
  "start_option_value_list_following_option_type",
  "option_value_list_continued", "option_value_list", "option_value",
  "option_type", "opt_var_type", "opt_rvalue_system_variable_type",
  "opt_set_var_ident_type", "option_value_following_option_type",
  "option_value_no_option_type", "lvalue_variable",
  "rvalue_system_variable", "transaction_characteristics",
  "transaction_access_mode", "opt_transaction_access_mode",
  "isolation_level", "opt_isolation_level",
  "transaction_access_mode_types", "isolation_types",
  "set_expr_or_default", "lock", "$@54", "table_or_tables",
  "table_lock_list", "table_lock", "lock_option", "unlock", "$@55",
  "shutdown_stmt", "restart_server_stmt", "alter_instance_stmt",
  "alter_instance_action", "handler_stmt", "handler_scan_function",
  "handler_rkey_function", "handler_rkey_mode", "revoke", "$@56", "grant",
  "$@57", "opt_acl_type", "opt_privileges", "role_or_privilege_list",
  "role_or_privilege", "opt_with_admin_option", "opt_and", "require_list",
  "require_list_element", "grant_ident", "user_list", "role_list",
  "opt_retain_current_password", "opt_discard_old_password",
  "opt_user_registration", "create_user", "opt_create_user_with_mfa",
  "identification", "identified_by_password",
  "identified_by_random_password", "identified_with_plugin",
  "identified_with_plugin_as_auth", "identified_with_plugin_by_password",
  "identified_with_plugin_by_random_password", "opt_initial_auth",
  "alter_user", "factor", "create_user_list", "alter_user_list",
  "opt_column_list", "column_list", "require_clause", "grant_options",
  "opt_grant_option", "opt_with_roles", "opt_grant_as", "begin_stmt",
  "$@58", "opt_work", "opt_chain", "opt_release", "opt_savepoint",
  "commit", "rollback", "savepoint", "release", "union_option",
  "row_subquery", "table_subquery", "subquery", "query_spec_option",
  "init_lex_create_info", "view_or_trigger_or_sp_or_event", "definer_tail",
  "no_definer_tail", "definer_opt", "no_definer", "definer",
  "view_replace_or_algorithm", "view_replace", "view_algorithm",
  "view_suid", "view_tail", "$@59", "view_query_block",
  "view_check_option", "trigger_action_order",
  "trigger_follows_precedes_clause", "trigger_tail", "$@60", "udf_tail",
  "sf_tail", "$@61", "$@62", "$@63", "$@64", "sp_tail", "$@65", "$@66",
  "$@67", "$@68", "xa", "opt_convert_xid", "xid", "begin_or_start",
  "opt_join_or_resume", "opt_one_phase", "opt_suspend", "install",
  "uninstall", "TEXT_STRING_sys_list", "import_stmt", "clone_stmt",
  "opt_datadir_ssl", "opt_ssl", "resource_group_types",
  "opt_resource_group_vcpu_list", "vcpu_range_spec_list",
  "vcpu_num_or_range", "signed_num", "opt_resource_group_priority",
  "opt_resource_group_enable_disable", "opt_force", "json_attribute", YY_NULLPTR
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[NUM] -- (External) token number corresponding to the
   (internal) symbol number NUM (which must be that of a token).  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,  1200,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
     746,   747,   748,   749,   750,   751,   752,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,   794,   795,
     796,   797,   798,   799,   800,   801,   802,   803,   804,   805,
     806,   807,   808,   809,   810,   811,   812,   813,   814,   815,
     816,   817,   818,   819,   820,   821,   822,   823,   824,   825,
     826,   827,   828,   829,   830,   831,   832,   833,   834,   835,
     836,   837,   838,   839,   840,   841,   842,   843,   844,   845,
     846,   847,   848,   849,   850,   851,   852,   853,   854,   855,
     856,   857,   858,   859,   860,   861,   862,   863,   864,   865,
     866,   867,   868,   869,   870,   871,   872,   873,   874,   875,
     876,   877,   878,   879,   880,   881,   882,   883,   884,   885,
     886,   887,   888,   889,   890,   891,   892,   893,   894,   895,
     896,   897,   898,   899,   900,   901,   902,   903,   904,   905,
     906,   907,   908,   909,   910,   911,   912,   913,   914,   915,
     916,   917,   918,   919,   920,   921,   922,   923,   924,   925,
     926,   927,   928,   929,   930,   931,   932,   933,   934,   935,
     936,   937,   938,   939,   940,   941,   942,   943,   944,   945,
     946,   947,   948,   949,   950,   951,   952,   953,   954,   955,
     956,   957,   958,   959,   960,   961,   962,   963,   964,   965,
     966,   967,   968,   969,   970,   971,   972,   973,   974,   975,
     976,   977,   978,   979,   980,   981,   982,   983,   984,   985,
     986,   987,   988,   989,   990,   991,   992,   993,   994,   995,
     996,   997,   998,   999,  1150,  1151,  1152,  1153,  1154,  1155,
    1156,  1157,  1158,  1159,  1160,  1161,  1162,  1163,  1164,  1165,
    1166,  1167,  1168,  1169,  1170,  1171,  1172,  1173,  1174,  1175,
    1176,  1177,  1178,  1179,  1180,  1181,  1182,  1183,  1184,  1185,
    1186,  1187,  1188,  1189,  1190,  1191,  1192,  1193,  1194,  1195,
    1196,  1197,  1198,  1199,  1201,  1202,  1203,   124,    38,    45,
      43,    42,    47,    37,    94,   126,  1204,    40,    41,  1205,
      59,    64,    44,    46,    58,    33,   123,   125
};
# endif

#define YYPACT_NINF -4515

#define yypact_value_is_default(Yystate) \
  (!!((Yystate) == (-4515)))

#define YYTABLE_NINF -3002

#define yytable_value_is_error(Yytable_value) \
  0

  /* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
     STATE-NUM.  */
static const int yypact[] =
{
    6930,  2567,   243, -4515,   -68,   289, 72596,   156,  1756,  1756,
     -72,  3312, -4515, -4515, -4515, 13036,  3754, -4515, 72596,   243,
     670, 48926, 72596, -4515,    20,  1844,    26,  1261,   295,  1464,
     243, 72596, -4515,   104,  1896,   243,  1923,   634, 64706,  1498,
     -72, 72596,  2607, 30754,  6832, -4515, 64706,   207,   457, 72596,
    1262,  1263,  1660, 72596,  1544, 65495,  2787, 22780,  2269,  1749,
    1361,   296, -4515, 17096,  1922,  2175, -4515,  2053, -4515, -4515,
    1823, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, 56816, -4515,   411,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515,  2174,    91,  1540, -4515, -4515, -4515,
   -4515,  1310, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515,   506, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, 66284, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,  2091,
   72596,  2125, 72596,  1808,  2078, 72596, 63128, 72596, 72596,  1789,
    1498,  2181,  2246, -4515, -4515,  2333, -4515, -4515,  1756,   -72,
   -4515, -4515, 72596, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515,  1762, -4515,  1781, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515,  1031,  2096, -4515, -4515, 72596, 72596, -4515,  2676,  2514,
    2528,  2557,  2324, 63128,   159, 72596, -4515,  2225, -4515,  2514,
    2514,  2586,  2565,  2260, -4515, -4515, -4515,  2333,  2805, -4515,
    2023,  2025,  2044, 22780, -4515,  2052,  2054,  2062, 17096,  2071,
    2081,  2110,  2117,  2137,  2140,  2154,  2164,  2164,  2177,  2232,
    2240,  2247,  -153,  2250, -4515,  2270,  1361,  2271, -4515, -4515,
    2287,  2301,  2311,  2319, -4515,  2321,  2341,  2346, 17908,  2352,
    2366, -4515, 41800,  2373,  2383,  2388,  2403,  2404,  2411,  2412,
    2424,  2426, -4515, -4515, 17096,  2177, -4515, -4515, -4515,  2427,
    2432,  2433,  2434,  2447,  2460,  2462,  2468,  2501,  2502,  2508,
    2510,  2511,  2526,  2529,  2531,  2177, -4515,  1106,  2532,  2547,
    1142,  2550, -4515,  2561, -4515,   388,  2570,  2164,  2177,  2177,
    2575,  2584,  2590,  2598,  2603,  2615,  2617,  2620,  2628,  2635,
    2648,  2650,  2656,  2659,  2662,  2667,  2668,  2678,  2680,  2681,
    2688,  2693, 22780, 22780, -4515, 22780, 10600, 31543, -4515, 72596,
   -4515, -4515,  2074, -4515, 52082,  3778, -4515,  2955, 22780,   352,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515,  2337, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
     169, -4515,  2698,  2090, -4515, -4515,  1498,  1498,  1498, 72596,
    2699,  1498,  1498,  2238, 72596,  1498,  2520,  1498,  1498,  1498,
    2822,  1756, -4515, -4515, -4515, -4515,  2950,  2754,  2627,  2374,
   -4515,  2539, -4515, -4515, -4515,  2828, -4515,  2709, -4515,  2664,
   -4515,  2875,  2709, -4515,   271,  2709,   380, -4515, -4515, -4515,
    2709, -4515, -4515, -4515, -4515,  1963, -4515, -4515, -4515, -4515,
      24, -4515,  2897,   164, 63128,  3132, -4515, -4515, -4515,  3120,
   72596,   -68, -4515, -4515, 17096, -4515,  3197, -4515,   379,  3327,
   -4515,  1756,  3309,   389, 72596, 57605, -4515,  1756, -4515, -4515,
    3278, -4515,   162,   891,  2906, -4515, -4515,  3029, -4515,  3361,
   49715,   424, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, 13036,  2607, -4515, -4515,    83,  3034,  1528, -4515,
   -4515, 52871,  1573, -4515,   886, -4515, 76541, -4515,  3328, 32332,
   54449, -4515,  2728, -4515, -4515, -4515, -4515, -4515, -4515, 74963,
    2749,  1190, -4515,  3396, -4515,   167,  2774,  3101,   167, 58394,
    3315,  1938,   298,   255,   343, -4515,  3393, -4515,  3046,  3030,
   -4515, -4515,   580,  2605, -4515,  3429, -4515,  3377, -4515,  3060,
    3315, -4515, -4515,   167,  3061,  3317,  3452,  1678,   313,   305,
    1221,  3029, -4515, -4515,    50,    87, -4515,    87, -4515,  2797,
   -4515, 72596, 72596,   -68, -4515,  1756, -4515,  2806,  2802, -4515,
   72596,  2816, -4515,  2810, -4515,   530,   530,   530,  3522,   530,
   -4515,   530,  3911,  2818,  2826,  3581,  3478,  2643,  3479, -4515,
    3440,  3527,   416,  2831,   203,  1006,  1310, -4515, -4515,  2833,
   72596,  2164, -4515,  2834,  1931, -4515, -4515,  2836, -4515,  3151,
   -4515,   825,  3482,  3490,  3491, -4515,  2844, -4515, -4515, -4515,
   -4515,  1849, 29965,  3409,  2174, -4515,   333,  3612,   484,  3315,
   -4515, 55238,   484,  3315, -4515, -4515,    91,  1527,  2016,  3368,
    3470,  3517, -4515,  2393, 59183,   131, -4515, -4515, 57605, -4515,
   72596, 72596,  -203, 63128, -4515, 72596, -4515,  3301,  2596,  9244,
   72596, -4515, 72596, 72596,  3149, -4515, 72596, -4515,    72, -4515,
     259, 17096, -4515, 72596, -4515, -4515, -4515,   113, -4515,   326,
    1124,  1954,  2275, 72596, 72596, 72596,  3168,  3497, 72596,  2983,
    3685, 72596, 57605, 79697, 72596, 72596,  2514,  2251,  1009, -4515,
   -4515, 17096, 17096,  1817,  3622,  3681,  3681,  3681,  1968,  3062,
   17096, 17096, 17096, 17096, 17096, 17096,  2326,  2889, -4515, -4515,
     -37, -4515,  2895, 17096, 17096, -4515, 17096, 17096, 72596, -4515,
    5117, 17096, 17096,  1607,  3566, 17096, 17096, 17096, 10600,  4742,
   17096, 17096, 72596,  3697,  2896, -4515,  2910,  2382, 17096, 17096,
    2389, 17096, 17096, 17096, 17096, 17096, -4515, -4515, 17096, 17096,
   22780, 17096, 17096, 17096, 17096, 17096, 17096,  2916, 17096,  3681,
    3681, 17096, 17096,  2410, -4515, -4515, 17096,  3749,  3749, -4515,
   17096, 11412, 17096, -4515, -4515, -4515,  2919, -4515, -4515, -4515,
   72596,  3681,  3681, 17096, 17096, 17096,  3681,  3681, 17096,  2921,
    2922, 17096, 17096, 17096, 17096, 17096, 29176,  2923,  2924,  2927,
   22780,  2413,  3622,  3622,  3622,   -88,    69,   134,   215,  1837,
    3236, 17096, 17096, -4515, -4515, 67073, -4515, -4515, -4515, 17096,
   -4515, 17096, 17096, -4515, -4515, -4515, -4515, -4515, -4515,  2449,
   -4515, -4515, -4515, 18720, 22780, 22780,  2931, 22780, 22780, -4515,
   -4515, 22780, 22780, 22780,  3467,  3084, 22780, 22780, 23592, 24404,
   22780, 22780, 22780, 22780,  1834,  3622, 63128, 22780, -4515, -4515,
    2337,  2337, 17096, 44956, 72596, 72596, 72596,  3383, 72596, 72596,
   63128,  3054,  1065, 72596, 72596, 57605, 72596, 79697, 72596,  1498,
    3150,  4531, 34699, -4515, -4515, -4515, -4515, -4515,  3201, -4515,
   -4515, -4515, -4515, -4515, 72596, -4515, -4515, 57605, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, 63128, -4515,   986, 57605, 50504,
     214, -4515, 73385, 72596, -4515,   -68, -4515,  3278,  3254, -4515,
    2959,  1968,  3725, -4515, -4515,  3496,  3751, 72596, 72596,  -104,
   -4515,  3492, -4515, -4515,  2970,  3204, 72596, 72596, -4515, 72596,
   72596, -4515, -4515, -4515, -4515,  2971, -4515, -4515,  2337,  4333,
   -4515, -4515,  2754,  3412,    71,  3306,  1954,   224, -4515, -4515,
   78119, 72596, -4515, -4515, -4515, -4515,  3723, 17096, -4515, 57605,
    3065,  3228,  3538,    79, -4515,  2988,  3001, -4515,  3157, -4515,
   -4515,  3004, -4515,  3005, 72596,  1656,  1190, -4515, -4515, -4515,
   -4515, -4515, 72596,  3003,   886, -4515,  2749,  1190, 33121, -4515,
   12224,  3569,  2337, 17096, -4515, -4515,  3018,  2514, 72596, 72596,
   72596, 72596, 72596, 57605, 72596, -4515, -4515,  1472, -4515, -4515,
   -4515, -4515, -4515,   167, 72596, -4515, 72596,   167, 57605, -4515,
    1938, 72596,   167, -4515,  3570,  3261, -4515, -4515, -4515,  3648,
   -4515, -4515,  3632,  3019, -4515,  3569, -4515,  1938, -4515, -4515,
    3638, -4515, -4515, -4515,  1938, -4515, -4515, -4515,  1938,  1938,
    1938,   167,   167, -4515,  1060,  3747, -4515,  3024, -4515, -4515,
   -4515, -4515,  3025, -4515,  3638, -4515, -4515,  2959, -4515, 19532,
    1544,  2816, 72596, 72596,  3817, -4515, -4515,  3031, -4515,  3463,
    3284, -4515,  3199, -4515, -4515,   954, -4515, 72596, 17096,  2101,
   -4515,   134, -4515, 57605,  3712, -4515, -4515, -4515,   359, -4515,
    3693, -4515, -4515,  3052,  3133,  3818,  3082, -4515,  3416,  3416,
    1943, 63128,  3500,  3220,  3146,  3500,   252,  3500, -4515, -4515,
      19,   811, -4515,  3156,   897,  3156,  1482, 57605,  3248,   -68,
     -68,   -68,   411, -4515, -4515,  2536,  3314,  3314, 63128,  3076,
   -4515, -4515, -4515,  3384, -4515, -4515,   333, 17096, -4515, -4515,
    1310, -4515, -4515, -4515, -4515, -4515,   321, -4515, -4515,  1310,
   -4515,  3315,  3315, -4515, -4515, -4515, -4515, 67862,  2016,  3120,
    3517, -4515, 63128,  3802, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515,  1463, -4515, -4515, 72596,
   72596,  1557, -4515,  3575,  3885, -4515,  3088,  3787,  1190,  1190,
    3787,  1190,  1190, -4515,  3316, -4515,  1190,   249, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515,  3741,  3373,  1190,
    2540,  3506,  1190,  1190,  3834,  1190,  3509,  3513,  1190,  1190,
    1190,  1190,  3332,  3780, -4515,  1190,  3656,   868,  3319,  3657,
    1190,  3519, -4515,  1770,  3784,  1190,  1190,  1190,  1190,  1190,
    3834,  3525,  3874,  1190,  1190,  3528,  1637,  3530,  3533,  1190,
    3356,  1190,  1190,  1190,  1672,  1190,  1190,  3541,  1190,  3324,
    3325,  1190, -4515, -4515,  1190,  1190, -4515,  6150, -4515, -4515,
   -4515,  2591, -4515, -4515,   149, -4515, -4515,  3134,  3138, -4515,
   -4515, -4515, -4515,  3444,  3243, -4515,  3464,  3329, -4515,  3149,
      98, 68651, 72596, -4515, -4515,  3152,  3155,  1016, -4515,  1968,
    3158,  3145, -4515,  3021, 89053, -4515, -4515, 72596, -4515, -4515,
   -4515, -4515,  3354, -4515, -4515, -4515, -4515,  1786, -4515,  3907,
    3520, -4515, -4515,  3798, -4515,  3594,  3965,  3262,  3866,  3605,
    2514,  3787,  3371,  3979,  1626, -4515,   115,  3005,  3397,   687,
   72596,  3790,  2514,  2514,  2514,  2514, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515,  2514, -4515, -4515, -4515, -4515, -4515, -4515,
    3149,   291,   339, -4515,  3681,  3179, 17096,  3183,  3185,  3186,
   17096,   396,  2606,   422,  1516,  1953,   759,   260, 17096,  3188,
   13848, -4515,  3189, -4515, -4515,   324,   334,  1281,  1507,  3192,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
    3806, -4515,   345,  3196, -4515, -4515, -4515, -4515,  3193, -4515,
   17096,  1565,   381,   420,   269,  3207,   435,  1978,  2001,  3202,
   72596, 72596,  3681,  3200,  1582,  1611,  3681,  3206,   465,  1634,
    2087,  2114,  2115,   480,  2148,  3699,  1642,   533,   697,  1654,
    1001,  1099, -4515,  1664,  3208,  3214,  1105,   248,  3681,  3215,
     285,  3203,  3209,  1682, 14660, 15472, 16284,   322,  1110, -4515,
    3216, -4515,  2910,  3218,  3219,   358,   205,  1691,  3221,  3222,
    2158,  3339,  3339,  1717,  1121,  1824,  1121,  1230, 63128,  3226,
   -4515, -4515, -4515, -4515,  3339,  3339,  3339,   154,  3681,  3231,
     210, -4515, 17096,  3237,  3238,  3241, 63128, 17096,   193, -4515,
   -4515, -4515,  2516,   443, -4515, -4515, -4515, -4515, -4515,  1343,
   -4515,  3249, -4515,  1361,  2300,  3240, 10600, -4515,  1668,  3240,
    3507,  1606,  1606, 22780, -4515,  3250,  2289,  2823, 17908,   239,
   17908,   239,  3240,  3240,  3240, -4515, 22780,  3256, 22780, 22780,
   -4515,  3622, -4515, -4515, 52082,  3247,  3252, -4515, -4515,  1618,
   -4515, -4515,  3255, 72596,  1065, -4515, -4515,  1498, -4515, -4515,
   -4515,   266, -4515, -4515,   228, -4515,  3257,   209,  3005,  3879,
   72596,  3264, -4515,  3789,  3793,  3794,  3797, -4515, -4515, -4515,
   -4515,  3803, -4515,  3804, -4515, -4515,  3265, -4515, 72596, 28387,
   63128, -4515,  3280, -4515,  3933, -4515,  3721, -4515, -4515,  2169,
    3521, -4515, -4515, -4515, -4515, 45750,  -171, -4515, -4515, 72596,
   -4515,   141,   274,  4035,  3465, -4515,  2959, 72596,   -68,   -68,
   72596, -4515,  3865, -4515,   263,  3292, -4515,  3295, 63128, -4515,
   -4515,   251, 57605, 57605,  3299, -4515,  3531,   290,  3714, -4515,
    3534,  4099,  4099,   891, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515,  3313,  3967,  3318,
   57605, 57605,   986, -4515, 72596, -4515, 26010,  3465, -4515,  3929,
    3550,  3551,  -109, -4515, 59972, -4515,  1968,  1163,  3416, -4515,
    3416,   102, -4515, -4515,  3880, -4515,  3702, -4515, 79697, -4515,
   63128, 79697,  3943,  3330,  3331,  3333,  3335,  3340, 75752, 17096,
   -4515, -4515, -4515, 12224,  3326, -4515, 75752, -4515, -4515, 22780,
    2270, -4515,  2501, -4515,  1968, -4515,   -68,  3944, -4515,  1968,
    3344, 72596, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515,  3542,   167, -4515, -4515,
   -4515, -4515, -4515,  3730,  3315,  2605,  3944,   167,  4098, -4515,
     167, 72596, 72596,   167, -4515, -4515, -4515, -4515,  3651,    50,
    3558,    87, -4515,  2270,  1968,  3358,  3355, -4515, -4515, -4515,
    2182, -4515,  1361,   530,  3768, -4515,  3982, -4515, -4515, -4515,
   -4515, -4515,  1904,  1829, -4515,   177,   191,  3779,  1022,  3365,
    1190, -4515, -4515, -4515, -4515,  3783,  1494, -4515,  3228,  3156,
    3156,  3410,  3411, -4515, -4515,  3977, 78908,  3805,  4062, 63128,
    3977,  3228,  4104, -4515,  3228, -4515, -4515,  3228, -4515, -4515,
    3644,  3647, -4515, -4515,  3652, -4515, -4515,  1202,  2204, -4515,
    2487,   293, -4515, -4515, -4515, -4515, -4515, 72596,  3559, -4515,
    1942, -4515, -4515, -4515, -4515,  2622, -4515, 33910,  3878,   610,
    3413, -4515, -4515, -4515, 55238, 55238, -4515, -4515, -4515, -4515,
   72596,   122, -4515,  3420, -4515, 26804, -4515,  2893,  3847,   190,
   -4515, -4515, -4515, -4515, -4515,  2689,  1374, -4515, -4515,  4169,
    3758,  3980,  3643,  1374,  2535,   -68,   299, -4515,  1529,   -68,
     299,  1529,  1529, 72596,   -68, -4515,  1836,  1190, -4515, 72596,
    1016,   243,  1016, -4515,  1273, 72596, 42589, 69440, 72596, 72596,
   72596, 72596,   243,  1574,  1574, 72596,  3311, 70229,   243,   -68,
     -68,   -68,   -68,  2622,  1190,  3311, -4515, 70229, -4515, 72596,
   72596,  3984, 72596,  3987, 72596, 72596, -4515, 63128, 72596, 70229,
   -4515,  1190,  1653,  1574, 71018,  1574,  1574, 72596,   243, 72596,
    3557,   -68,   243, -4515, 72596, -4515, -4515, 72596, 72596,   243,
     243,  3074, -4515,  3557,  3557,  3577, -4515, -4515, 72596,  3311,
   70229,  3435, -4515, -4515, 60761,   -68,   -68, -4515,  1190,  1190,
    3843, -4515, -4515,  8681,  9748,  2132,  1190,  3545,  3876,  2139,
   72596, -4515,  3582,  3585, -4515, -4515, -4515, -4515, -4515,  1016,
   70229, 71807,  4011, -4515, 17096,  4103,  4105,  4106,  4107,  4108,
    4110,  4113,    92, -4515,  4115, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515,  4117,  4118, -4515,
   -4515,  4120, -4515, -4515,  4121, -4515,  4122,  4124,  4125,  4126,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515,  4127,    99,  4128,
    4130,  4134,  4135,  4136,  4137,  4139,  4152,  4153,  4154,  4155,
    4156,  4159,  4161,  4163,  4165,  4167,  4168,  4171,  4172,  4173,
    4174,  4175,  4178,  4179, -4515,  4184,  4185, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515,   183, 72596,  3643,  3556,  3705, 72596,
    3367, -4515,  4007,  2992,  3787,  3977, -4515,  4328, -4515, -4515,
    3560, -4515, -4515, -4515,  3696, 57605,  3886,  1190,   344,   344,
    3975, -4515,  4133,  2514, 72596, 72596, 72596, 72596, 72596, -4515,
   20344, -4515,  3546,  3339,  1968,  3339,  3339,  3339,   461, 17096,
   17096,  4201,  4787,   120, -4515, 61550, -4515, -4515, -4515, 61550,
    4787,  2205,  3339,  3548, -4515,  4129,  4131, -4515, -4515, -4515,
   17096, 17096, -4515, 17096,   -43, -4515, 17096, 17096, 17096, 17096,
   17096, -4515, -4515, 22780, -4515,  3547,  3554,  3339, -4515, -4515,
    3555,  3339, 17096, -4515, -4515, -4515, -4515, 17096, -4515, 17096,
   -4515, 17096, 17096, -4515, 17096, 17096, -4515,  3339,  3339, 21156,
   17096, 17096,  3561,  3339, -4515, 17096, 17096, 17096, -4515, 17096,
    1747, 17096,  1863, 17096,  2227, 17096, -4515, 17096, -4515,  3339,
    3339, -4515, 17096,  1259, -4515,  3311, -4515,  3681,  3339, -4515,
   43378, -4515, -4515,    93, 29176,  3565,    93,  3571, 22780, -4515,
    3339, -4515, -4515, -4515,   105,  3576,  3339,  2208, -4515, -4515,
   -4515,  3564, -4515,  1968, -4515, -4515, -4515, -4515, -4515, -4515,
   22780,   433, 22780,  3507, 22780,  4742,  4742,  2445, 10600, -4515,
    1670,  3507, -4515, -4515, 17096, 17096, 46544, 72596,   417, -4515,
    3367,  1346, -4515,   119, -4515, -4515, 57605, -4515, -4515, -4515,
   -4515, -4515,   209, 63128,  3574, -4515, -4515, -4515, -4515, -4515,
    3638, -4515,  4283,  3295, -4515,  3796,  3807,  3816, 31543, -4515,
   36277, -4515, -4515, -4515, -4515, 36277,  1871,   986, -4515, 72596,
   57605,  3579,  3583,  3588,  3776,  3736, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515,  3465,  3587,  3315,
   -4515,  3714, -4515, -4515,  3590, -4515,   259,  3314,  1375, 72596,
   -4515, 17096,   -68, -4515,  3822, -4515, 72596, 72596, -4515, -4515,
   -4515, -4515,  1210, -4515,  3598,  2216, -4515,  3367, -4515, -4515,
    3638,  3638, -4515,  4333, 28387,  4196,  4033,  4214,   117, 45750,
   -4515, -4515,  3609,  1361, 25216,  3682, -4515,  3608,  1766, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515,  3714,  3298,  4210,
    3465, 79697, 79697, 79697, -4515, -4515, -4515,  3700,  3228,  3156,
    3156,   476,  3999, -4515, -4515, -4515, -4515,  3005, -4515, -4515,
    2893, -4515, -4515, -4515, -4515, -4515,  1190,  1968, -4515, 33121,
   -4515, -4515,  1574,  3315,   153, -4515, 57605, -4515,  4072, -4515,
   -4515,  3315, -4515,   -68, -4515,  1938,  1938, -4515, -4515, -4515,
    2984,  3835, -4515, -4515, 19532, -4515, 72596, -4515,  3636, -4515,
    4138, 72596,  4294,  3646, 22780,  3649, 22780,  2893,  3903,  3655,
    4447,  3311,  3314, -4515,  4060, -4515, -4515, -4515, -4515,  3968,
   -4515,  4458, -4515, -4515, -4515,  3005, -4515,  3500,  2587,  4143,
    3156,  4066,  3156,  3156, -4515, -4515, -4515, -4515,  1171,  3311,
    3311,  3311,  3311,  2487, -4515,   957,  1133,  2679,  2893,   188,
     293, -4515,  3658, -4515, -4515, 61550,  4401, -4515, -4515, -4515,
   -4515, -4515, -4515, 17096, -4515, -4515,  -145,   264,  1249, 26804,
   72596, 47338, -4515,   831, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515,  1190, -4515,  1190,   -68,  3946,  3947,  3948,
    3949,  3956,  4001, -4515, -4515, 72596,  4116, -4515,   -68,  2030,
     -68,   -68,   -68,   -68,  3311,   -68,   -68,  2214, -4515, -4515,
   -4515,   277, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, 63128, -4515,
   -4515, -4515, 72596,   -39, 72596,  3683,  4231,  4232,  1016,     6,
   72596,  3711,  3890,  3925, 53660, 89136, -4515, -4515, -4515,  4157,
    4157,  2276,   222, 70229, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, 72596, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
    1786,  3707, -4515,  2893, -4515, -4515, -4515, -4515, 56027,   -68,
   -4515,  3957, -4515, -4515, 72596,  3707, -4515, -4515,   675, -4515,
    3888,  3959,   -68, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, 89136, 70229,  3718, -4515,   494, -4515, -4515,
   -4515, -4515, 70229,  3950,  3952, -4515, 72596, 70229, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, 72596, -4515, -4515, -4515, -4515, 59972, 61550, -4515,
    3738,  3453,  6150, -4515, -4515, -4515,  3134, -4515, -4515, -4515,
     228,  4166,  1190,  1680,   306, -4515,  4076, -4515, -4515,  2810,
    4158,  4162,  3732, -4515,  3733, -4515,  3719, -4515, 68651,  1968,
    3735,  3735,  3737,  3737,  3739,  3739,  3740,  3021, -4515,  3742,
     -68,  3311,   -68, 62339,  3311,   728,  2893,    48,  2893, 89053,
   -4515,  3311,   -68,   -68,   -68,   -68,  3311,  3311,  3311,  3311,
    3311,   -68,   -68,   -68,   -68,   -68,   -68,  3311,   -68,  1434,
     -68,   -68,  3311,  1927,   -68,  3311,   -68,  1574, -4515,   240,
   -4515,  3743,  3174,  3367, 63128,  3745, -4515,  4336,  1190,  1190,
    1190,  1190, -4515,   288, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515,   228,  4526, -4515,  3769,
   -4515, 79697, -4515,  3248,   -85, -4515, -4515, -4515, -4515, -4515,
   72596,  2643, -4515, 72596, -4515, 40222, -4515, -4515, -4515, -4515,
    1027,   361, -4515,   333,  1527, -4515,   372, 72596, -4515,  3746,
     -57, -4515,   556, 17908,  1839,  3339, -4515, -4515, -4515, -4515,
   -4515, 17096,  1968,  2521, -4515,  3748,  3748,  3753, -4515,  3755,
    4145,  3748, -4515, -4515, -4515, -4515, -4515, -4515,  4501, -4515,
   -4515, -4515, -4515,  4317,  3753,  4318, -4515,  3748, -4515,  3848,
    4546,  3820,  3761,  3765,  3770,  3339, -4515,  3339, 17096, 17096,
    1841,   472,  1850,  4529,  4085,  1236,  1242,   490, -4515,  1868,
    3709,  3339, -4515,  3339, -4515,  1879,  1890,  1905,  1916,  1285,
    1918,  2220, -4515, -4515, 17908,  1924,   256,   584,  3339, -4515,
    1946,  1309,  1364,  1951, 17096,  1958, 17096,  1960, 17096,  1970,
    1972, -4515, -4515,  1974,  3774,  3774,  3771,  3777, -4515, 72596,
   -4515, -4515, -4515, -4515,  3895,  3899,  3339,  3775,    93,  3339,
      93,   175, -4515,  4019,  1205,  3339, -4515, -4515, 72596, -4515,
   -4515, 17096,   352,   201, -4515, -4515, 22780,   590, 22780, -4515,
    3785, -4515, -4515, -4515, -4515,  4307,  4582, -4515, -4515,  4049,
   -4515, -4515, -4515,  3264, -4515, -4515,   563, -4515,  4436,  3786,
   -4515, -4515, -4515, -4515, -4515, 45750, -4515,   572,  3799, 48132,
   57605,  4213,  3315, 19532, -4515,  2355, 72596,  1016,  4368,   237,
    3960,  4319, -4515, -4515, -4515,  1968, -4515, 57605, -4515, -4515,
   -4515, 72596, 72596,  1544, -4515, 37855, -4515, -4515, -4515, -4515,
    3800, -4515, -4515, -4515,  4444, -4515,  4222,   986, 57605,  4004,
   -4515,  4412, 17096,  3298,  3801,  3809,  3810,  3811,  3812,  3813,
   26804, 26804,  4352,  4353, -4515,  4224,  1614,  4224, -4515, 41011,
   26804, 26804,  3549,  2810,  4564,  4405,  4210,  3005,  3005,  3005,
    3416,  3416, -4515, -4515, -4515, -4515, -4515, -4515,   303, -4515,
   12224, -4515, -4515, -4515, -4515, -4515,  3257, -4515,  3638, -4515,
    3465,   167,  4463, -4515,  4464, -4515,  3821,  4468,  4226, -4515,
   -4515,  3311, -4515, -4515, 72596,  2870, 72596,  3055, -4515,  4587,
    3823, 22780,  4477,  3831,  4411, -4515, -4515,  3850,  3500, -4515,
     995,  1630,  3500, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515,  1665,  4537,  3589,  4399, -4515,
   -4515, -4515,  2337,  2337, -4515, -4515, -4515,  1080,  4367, -4515,
   26804,  3714, 47338,  -127, -4515, -4515,  3833, 72596,  3557,   -68,
   -4515, -4515, -4515,  4538, -4515,  4539,  2252,  4280,  4489, -4515,
   -4515,   348, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515,  2535, -4515,  3845,  2893,  4253,  3854,
   17096, 72596, -4515, -4515, -4515,  3928, -4515, -4515,  3855, 44167,
     344,   344,  2228, -4515, -4515, -4515, 89136, -4515,  3748,  3748,
    3748, -4515, -4515,  2077,  3753, -4515, -4515,  3857, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515,   509,  2079, -4515, -4515,
     509, -4515, -4515, -4515,   221,  2113, -4515, -4515, -4515, -4515,
   -4515,  3860, -4515,  3748,  3753,  3753, -4515, -4515,   509,  3748,
   -4515,  3748,  4228,  4400, -4515,   180,  3748,  3748,  3748,  3862,
    3755, -4515, -4515, -4515, -4515, -4515,  4545,   508, -4515, 89136,
   -4515, 72596, -4515,  3723,  3723, -4515, -4515, -4515, -4515,  4089,
   -4515, -4515,   466, -4515, 72596, -4515, -4515, 72596, 72596,    44,
    1210,  3867, -4515, -4515, -4515,  3881,   109, -4515,    16, -4515,
   -4515,  3879,   940,  1799,  4096,  2365, -4515, 72596, 72596, -4515,
   -4515, 71807, -4515, 38644, -4515, -4515, 39433, -4515, -4515,   802,
   -4515, -4515,  2126, -4515, -4515,  3311, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, 44167,  1190,  1190, -4515,   349, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,  4298, 44167,
     990, 72596,   -68,  1529,  1529,  2893,  3341, -4515,  3977,  4456,
    3005,   293, -4515, -4515,  3243,  3883, -4515, -4515, 72596,  2256,
   -4515, -4515,  7520,   333, -4515,  4215,  4308, -4515,  1274,  3884,
   -4515, -4515,   569,  4742, -4515, -4515,  1968, 17096,  1073, -4515,
   -4515,   509,  4314, -4515,  1131, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,  3887,  4787,
    4449, -4515, -4515, -4515, -4515, -4515,  4742,  4742, -4515, -4515,
   17096, -4515, 17096,   530,  3889, 17096, 17096, -4515, 17096, -4515,
    1108,  3896,  4056, -4515, -4515, -4515, -4515, -4515, -4515, 17096,
   -4515, -4515,  4742, -4515, 17096, -4515, -4515, 17096, -4515, -4515,
   17096, 17096, -4515,  1983, -4515,  1991, -4515,  2014, -4515, -4515,
   -4515,  2893,  3897,  3898,  3311,  3339, -4515,  3908,  4303, -4515,
   -4515, -4515, 17096, -4515,  3339, -4515,  3339,  4510,  4787,  2018,
   -4515, -4515,  2272, -4515, -4515, -4515, 17096,   352, -4515, -4515,
   -4515, -4515, -4515, -4515,  4285, -4515,  4327, 36277,  4140,  4508,
   -4515, -4515, -4515, -4515,  1104, -4515, -4515,  2298, 72596,  4700,
    4346, -4515,  1016,  4368,  4459, -4515,  4481, -4515, -4515, -4515,
   -4515,  3921,  3707,  3918, -4515,  1190,  2551,  2309, -4515, -4515,
   -4515,  3919, 19532,  3922, -4515, 28387,  4534, 45750,   117,  4132,
   57605,  1429,  2810, 26804, -4515, -4515, -4515, -4515, -4515,  1766,
    3920,  3927,  3931,  1766, -4515, -4515, -4515,  4484, -4515,  4224,
    4224,  4487,  4488, -4515,  3451,  3966,  1019, -4515, 17096, 17096,
    4042,  4405,  3156,  3156,  2893, -4515, -4515, -4515, -4515,   -68,
     -68,  2471,   -68,  4589,  4625, -4515,  2331, -4515, -4515,  2332,
   -4515,  4479,  4253, -4515,  3320,  2893, 72596,  4706,  4736,  3977,
   -4515, -4515, -4515,  4355, -4515,  3977, -4515,  2893, -4515,   133,
   -4515, -4515,  3645, -4515, -4515,  4714,  4715,  4611,  4719,  1080,
   -4515,   727, -4515,  -127,  3465,  1518, -4515,  3969, -4515,  1245,
   -4515, -4515, -4515, -4515, -4515, -4515,  4291, -4515,  1604, -4515,
   44167, -4515, 72596,  2367, -4515, 44167,  2026,  3973, -4515, 44167,
   17096, -4515,  2369, -4515,   196, -4515, -4515, -4515, 53660,  4228,
   -4515, -4515, -4515,  4737,   385, -4515,  4739, -4515,   509, 61550,
   -4515, -4515, -4515, -4515,   530, -4515,  1867, -4515,   509, -4515,
   -4515,  4151, -4515, -4515, -4515,   530,   509, -4515, -4515, -4515,
   -4515,  2084, 72596,   466, -4515, -4515, 59972,  2458,   -68,  2926,
    4052, -4515,  4170, -4515,  4657,  1816,  4520,  3367,  1190,  1190,
    4721, -4515, -4515,  3971, -4515,  4583,  4524, -4515,   432, -4515,
    4753, -4515,   509,  4753,  2084,  4417, -4515,  2084,  2084, -4515,
    3213, -4515,   466, -4515, -4515, -4515, 72596, 72596, -4515, -4515,
   -4515, -4515, -4515,  3985, -4515, -4515,  4419,  4166, -4515,  4421,
   -4515, -4515,  4380, -4515, 17096, 17096,  4420, 72596,  4422, -4515,
    4723,  4775,  3707,  1349, -4515, -4515,  2377, -4515, -4515, -4515,
    2385, -4515, -4515,  3988, -4515,  2405, -4515, -4515, -4515, 72596,
   -4515,  2416,  2451, -4515, -4515,  2470,  1529,  1529,  2947,   990,
    3995,  2475,   -68,   -68,   -68,   -68, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515,   281, -4515, -4515, -4515,   188,  3545, 44167,
    3997,  5952, -4515,  1274,  4316, 72596, -4515, -4515, -4515, -4515,
    4292, -4515, -4515, -4515, -4515,  4429,  -239,  1968,  4000,  4002,
    4003,  4005, -4515,  4008,  2482, -4515,  3848, -4515,  2337,  4012,
    4015,  2060,  4017, -4515, -4515,  3339,  2089,  1505,  2488,  4471,
    4544, -4515,  4404, -4515,  2138,  1866,  2147,  2171,  2213,  2253,
   -4515, -4515, -4515, -4515, -4515, -4515,  4021, -4515, -4515,  4779,
    4441,  1968, -4515, -4515,   327,    93, -4515,  3859, -4515, -4515,
    4026,  2018, -4515,  4460, -4515,  2494,  4660,  4553, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, 57605,  4455,  4630,  4820,  3465,   189, 72596,
    4346,  4695, -4515, -4515, -4515,  4279, -4515, 72596, 19532, -4515,
   -4515,  2551, 72596, 44956,  4043,  3800, -4515, 57605,  4655, -4515,
   -4515,   117,   105, -4515,   514, -4515, -4515,  4595,  4596, -4515,
   -4515, 17096,  4048, 17096,  4057, -4515, -4515,  1016,  1016, -4515,
    1019, -4515, -4515,  1968,  1223, -4515,  1968, 72596, -4515,  4042,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515,   -68,  4703,  4461,
   -4515, 72596, -4515,  1048,  2522, -4515, -4515,  4059,  4053,   -68,
     995, -4515, -4515, -4515,  4748, -4515, -4515, -4515,  4749,   530,
     530,  4823,   530, -4515,  4824,  4825,   727, -4515, -4515,  4491,
    4491,  4497, -4515,  2538,  4256, -4515,  4253,  2541, -4515, 72596,
    2544,  2265,  1813, 44167,  4504, -4515, -4515, -4515, -4515, -4515,
   -4515, 61550, -4515, -4515,  4753,  2572, -4515, -4515, -4515,  2626,
   -4515, -4515, -4515, -4515, -4515,  2084, -4515,  4077, -4515,   479,
   -4515, -4515, -4515, -4515, -4515,  3796,  3807,  3816,  1927,  1927,
   17096, -4515, -4515, -4515, -4515, -4515, -4515,  4512,  4266, -4515,
   -4515, -4515, -4515, -4515, -4515,   -68,   -68, -4515, 59972, -4515,
    4872,  4869, -4515, -4515, -4515, -4515, -4515, -4515, -4515,  4083,
   -4515, -4515, 17096, -4515, -4515,  2187, -4515,  4253, -4515, -4515,
   -4515, -4515,  1968,  4742,  4816, -4515, -4515,  4388,   -68,  4758,
    2643,  4533, -4515, -4515, 72596, -4515, 72596, 72596, -4515,   -68,
    4091, -4515,  4100, -4515,  3311,  1797, -4515, -4515, -4515,  2535,
    1622, -4515, -4515, -4515,  4680, 63128, -4515,  1680,  2636, -4515,
   -4515,  4394,  1799,  4109,  4102, -4515, 89136,   -68,   238, 72596,
   -4515, -4515, -4515, -4515, -4515, -4515,  4543,  4111,  4895, -4515,
   -4515, -4515, 17096, -4515, -4515, 17096, -4515, -4515,  4577,  4750,
   -4515, -4515, -4515, -4515, -4515, -4515,  4119,  3311, 17096,  4873,
    1424, -4515, -4515,  3339, -4515, -4515, -4515,  4547,   241, -4515,
   -4515, -4515,  1104, -4515,  4541, 57605, -4515,  3315,  4346,  2810,
   -4515,  4663, 72596, -4515, -4515, -4515, -4515, -4515,  4123, -4515,
   -4515,   117, 57605, -4515,   226, -4515, -4515, -4515,  1968, 72596,
    1968, 72596,  4734,  4734, -4515, -4515, 17096, -4515,  4909,  4141,
   -4515, -4515, -4515,   -68,  4771, -4515, -4515,  4144,  4447, -4515,
   -4515,   301, -4515, -4515, -4515, -4515, -4515,   530, -4515,   530,
     530, -4515,  4656,  4656,  4776,  1797,  2442,  3002, -4515,  1622,
    2641, -4515,  1813,   494,   -68,  1190,  1190,  1190, -4515,  1813,
   -4515, -4515, -4515, -4515, -4515,  4142, -4515, -4515,   509,   530,
     509, -4515, 72596,  4615, -4515, -4515,  2274, -4515, -4515, -4515,
   -4515, -4515, -4515,  4148,  2278, -4515, -4515,  2644, -4515, -4515,
   -4515, -4515, -4515,  4301, -4515,  4268, -4515, -4515, -4515, -4515,
   72596, 72596, -4515,  4542,   417,  1797, -4515, -4515,  2652,   417,
    1622, -4515, -4515,  4894,  4923, -4515,  1813,   -68,  4420, -4515,
   72596,  3723, -4515, -4515, -4515, -4515,  4149,  4146, -4515, 72596,
    4754,  4176, -4515,  4835, -4515,  2398, -4515, -4515, -4515,  4180,
    4147, 17096, -4515, -4515, -4515, -4515,  2769, -4515,  4790, -4515,
   -4515,  4820, -4515,  4320, -4515, -4515, -4515,  4354,  3714, -4515,
     117,  4182,  4183,  4186,  4187,  2048,  4189,  4192, -4515,  4194,
   72596, -4515,   -68,  3638, 22780,  4195,  4828,  1550, -4515, -4515,
   -4515, -4515, -4515, 55238, -4515, -4515, -4515, -4515,  4198,  4387,
    1190,  4838,  4839,  1190,  1190,  1190,  1190,  4199,  3002, -4515,
    4803, -4515,  4228, 72596, -4515, -4515, -4515,  3311,   -68,   -68,
   -4515,   494, -4515, -4515, -4515,  2690, -4515,  1379,  4600, -4515,
   17096, -4515, -4515,  4442, -4515, 86798,  1977, -4515, -4515,  4200,
    4181,  2269, -4515, -4515, -4515, -4515, -4515,  3367,   417, -4515,
    2365, -4515,  4506, -4515, -4515, -4515,  2127, 89136,  4833, -4515,
    3753, -4515, -4515,  3413,  2884,  4503, 17096,  4296,  4312, -4515,
   -4515,  4321,  4322, -4515,  4356, -4515, 72596,  2622, -4515, 74174,
    3824, -4515, -4515,  4959, -4515,  4962, 71807, 71807, -4515, -4515,
   -4515, -4515,  3390, 72596,  1190,  4485, -4515, -4515,  4204, -4515,
   -4515,   197,   -68,  1190,  1190,  3367,  3367,  2893, 72596,  4462,
   -4515, -4515,  1190, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   72596, -4515, -4515, -4515,   518, -4515,  2419, 17096,  4860,  4385,
   72596,  1899, -4515, 88376, 88376, 72596, -4515, -4515, -4515, -4515,
    7883, -4515, -4515,   910, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515,  4988, -4515,  4207, -4515, -4515,
   -4515, -4515,  4958,  4639,  4960, -4515, 72596, -4515, -4515, -4515,
    4723, 89136, -4515, -4515,  3723,  4548,  4217, 17096,  -114, -4515,
    5008,  1783,  1825, -4515,  4742, -4515,   497, -4515, -4515, -4515,
   77330,  3918,  4549,  4326,  2727, -4515,  9610, -4515, -4515, -4515,
    4221,  2738,  4480,  2741,  3314, -4515, -4515,  2752, -4515, 21968,
   -4515, -4515, -4515, -4515,   -68,   -68, -4515, -4515, -4515, -4515,
   63128,  2755, -4515, 63128, -4515,  1149,  1149,  1284,  1968, 17096,
   -4515, 17096,  4402, -4515, -4515,  4837, 72596, -4515, -4515, -4515,
   -4515, 17096, -4515, 86798, 86798, -4515, -4515, -4515, -4515,  5000,
    4652, -4515,  4659,  4233,  4896,  3723,  4482, -4515,   235, -4515,
    4742, -4515,  2884, -4515, -4515,  4349,  4561, -4515,  4357, -4515,
    3157, -4515, -4515,  3005,  4818,  4401,   105, -4515, 74174,  4347,
    3723, -4515, -4515,  2893, -4515,  4480,  4585, -4515,  4204, -4515,
    2763, -4515,  3507, -4515, -4515,  3002, -4515,  4462, -4515, -4515,
    5044, -4515,   312,  4674,  4676, -4515, -4515,  3971,  1968,  1968,
   -4515,   425, -4515, -4515,  4808,  4903, 17096,  1968, 82853,  4248,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, 87587, 17096, -4515,   910,  4988, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515,  4925, 86798, -4515, -4515,
   63128, -4515,  1910, -4515, -4515, -4515, -4515, -4515,  5012,  4367,
     226, -4515, -4515,  4890, -4515, -4515, -4515, -4515, -4515, 21968,
   -4515, -4515, -4515, -4515, -4515,  4454,  4933, -4515,  4431, 17096,
   86798, -4515,  4913, -4515,  4840,  1968,  4777,  4258, -4515,  4261,
    1968,  4948, 88376, 88376, -4515, -4515, -4515, -4515, -4515, 86798,
   -4515,   530,  4846, -4515, -4515,  4379, -4515,  1149,  1149, -4515,
     488, -4515,  1968, 83642,  5028, 72596, -4515,  4509, -4515, -4515,
   17096,  4941, 63917, 84431,  4275, -4515, -4515, -4515,  4482, -4515,
   -4515,  4716,  4282,   105, -4515, -4515, 17096, -4515,  4932,  4516,
   -4515,  4286, -4515, 86798,  1968, 86798, -4515, -4515,  4876,  7364,
    1724, -4515,  4284, -4515, 86798,  1477, 35488,  4592,  1147,  1968,
    5041, 86798, 72596, 80486,  4943, 85220,  4905, 72596,  3723,  4907,
    4908, -4515, -4515, -4515, -4515, -4515, -4515, 63128,  2765, -4515,
   -4515, 72596, -4515, -4515, -4515,  2018,  4530, -4515, 81275, -4515,
    2832,  4653,  4473, -4515, -4515,  4981,  3069, -4515, -4515, -4515,
   37066,  4297, -4515,  1190, -4515,  4735, 86798, 86798, -4515, -4515,
   -4515, -4515, 51293, 17096, -4515, -4515, -4515, -4515,  1922, -4515,
   72596, 19532,  4415, 82064, 86009, -4515, -4515, -4515, 27597, -4515,
   -4515, -4515,  4918, -4515,  1968, -4515, -4515, -4515, 51293, -4515,
   -4515, -4515
};

  /* YYDEFACT[STATE-NUM] -- Default reduction number in state STATE-NUM.
     Performed when YYTABLE does not specify something else to do.  Zero
     means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
    2026,  3134,  1313,  3086,     0,     0,     0,     0,     0,     0,
    3088,  3134,   152,  2141,  2142,     0,  1969,     8,     0,  1313,
     467,     0,     0,   164,     0,  1983,     0,  2198,     0,     0,
    1313,     0,  2192,     0,     0,  1313,  2031,  2175,   444,  1965,
    3088,     0,  1379,     0,  2118,  2919,     0,     0,     0,     0,
    2044,     0,  2916,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2920,     0,     0,     0,     2,     9,    14,    43,
       0,    80,    63,    70,    32,    42,    40,    39,    37,    41,
      38,    31,   141,    87,    66,    26,    16,    21,    18,    28,
      17,    20,    24,    25,    23,    27,    22,     0,    67,  1237,
     144,   143,   142,    34,    84,    29,    30,    33,    77,    83,
      78,    79,    92,  1344,  1341,  1889,  1343,  1357,  1365,  1366,
    1367,  2027,    46,    59,    50,    47,    49,    53,    52,    61,
      62,    48,    60,    57,    58,    51,    55,    56,    54,    72,
      85,   148,     0,    44,   145,   111,   136,   137,   117,   135,
     123,   124,   112,   113,   114,   100,    96,   133,    97,   131,
     121,   115,   102,   101,   139,   116,   130,   129,   134,   128,
     138,    98,    99,   125,   120,   103,   107,   110,   122,   132,
     106,   105,   108,   127,   119,   126,   118,   104,   109,    45,
      64,  2143,    65,    86,    81,    74,   149,    75,    93,    95,
      94,    76,   147,   140,    88,    19,    69,    89,    68,    15,
      36,    90,    91,    82,   150,    73,   146,    71,    35,     0,
    1134,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1965,     0,  1070,  3132,  3133,  3134,  1315,  1314,     0,  3088,
    2302,  1300,     0,  2386,  2385,  2388,  2390,  2391,  2392,  2393,
    2394,  2395,  2338,  2397,  2400,  2401,  2402,  2403,  2404,  2339,
    2405,  2406,  2407,  2408,  2409,  2410,  2340,  2341,  2412,  2413,
    2414,  2416,  2417,  2342,  2343,  2418,  2419,  2420,  2421,  2422,
    2423,  2424,  2425,  2426,  2427,  2345,  2428,  2346,  2429,  2430,
    2432,  2433,  2463,  2434,  2435,  2436,  2437,  2438,  2439,  2347,
    2440,  2441,  2442,  2443,  2444,  2445,  2446,  2447,  2448,  2348,
    2449,  2450,  2452,  2454,  2455,  2456,  2457,  2458,  2349,  2459,
    2460,  2461,  2462,  2350,  2464,  2466,  2467,  2469,  2471,  2470,
    2472,  2473,  2376,  2474,  2475,  2335,  2477,  2478,  2479,  2480,
    2481,  2484,  2485,  2377,  2486,  2487,  2489,  2490,  2351,  2352,
    2492,  2493,  2494,  2495,  2502,  2496,  2497,  2498,  2816,  2501,
    2353,  2504,  2354,  2508,  2507,  2509,  2298,  2510,  2299,  2511,
    2355,  2513,  2514,  2517,  2518,  2356,  2520,  2521,  2522,  2523,
    2524,  2525,  2527,  2357,  2529,  2530,  2531,  2532,  2533,  2534,
    2817,  2536,  2537,  2538,  2539,  2541,  2542,  2544,  2546,  2547,
    2548,  2549,  2551,  2552,  2562,  2553,  2554,  2555,  2557,  2556,
    2558,  2559,  2560,  2563,  2543,  2565,  2566,  2567,  2568,  2569,
    2570,  2571,  2573,  2574,  2575,  2576,  2577,  2578,  2579,  2580,
    2581,  2582,  2583,  2584,  2585,  2586,  2587,  2588,  2589,  2590,
    2591,  2592,  2594,  2595,  2596,  2597,  2378,  2358,  2599,  2601,
    2602,  2604,  2607,  2608,  2609,  2611,  2615,  2616,  2617,  2618,
    2619,  2621,  2620,  2622,  2625,  2627,  2628,  2626,  2629,  2630,
    2631,  2359,  2360,  2633,  2634,  2635,  2379,  2637,  2639,  2638,
    2380,  2640,  2641,  2642,  2644,  2645,  2646,  2647,  2648,  2651,
    2652,  2653,  2654,  2655,  2381,  2656,  2658,  2361,  2659,  2382,
    2661,  2663,  2662,  2664,  2666,  2667,  2665,  2362,  2671,  2673,
    2674,  2676,  2678,  2680,  2363,  2682,  2683,  2684,  2686,  2685,
    2687,  2364,  2688,  2689,  2695,  2696,  2697,  2698,  2820,  2699,
    2700,  2337,  2365,  2701,  2366,  2703,  2704,  2705,  2706,  2707,
    2731,  2736,  2737,  2738,  2739,  2740,  2741,  2743,  2744,  2367,
    2745,  2746,  2747,  2748,  2368,  2749,  2751,  2753,  2754,  2755,
    2756,  2757,  2384,  2758,  2759,  2760,  2761,  2762,  2763,  2764,
    2765,  2766,  2767,  2768,  2773,  2771,  2772,  2774,  2776,  2777,
    2369,  2778,  2779,  2781,  2782,  2783,  2784,  2370,  2371,  2785,
    2787,  2788,  2789,  2790,  2791,  2792,  2793,  2795,  2797,  2798,
    2799,  2800,  2801,  2802,  2803,  2804,  2372,  2805,  2806,  2807,
    2818,  2681,  2389,  2519,  2796,  2431,  2702,  2535,  2598,  2819,
    2505,  2411,  2344,  2476,  2491,  2600,  2614,  2632,  2672,  2770,
    2780,  2593,  2612,  2624,  2506,  2679,  2742,  2769,  2383,  2794,
    2550,  2499,  2336,  2451,  2453,  2613,  2649,  2387,  2512,  2396,
    2572,  2610,  2693,  2690,  2692,  2694,  2675,  2606,  2465,  2605,
    2545,  2643,  2540,  2564,  2636,  2561,  2669,  2623,  2483,  2670,
    2750,  2603,  2677,  2526,  2775,  2398,  2468,  2691,  2711,  2808,
    2668,  2660,  2657,  2500,  2708,  2709,  2710,  2712,  2713,  2714,
    2715,  2716,  2717,  2718,  2719,  2720,  2721,  2729,  2723,  2722,
    2724,  2725,  2727,  2726,  2728,  2730,  2732,  2733,  2734,  2735,
    2752,  2528,  2399,  2482,  2488,  2516,  2650,  2786,  2515,  2415,
    2503,   398,  2309,   380,  2310,  2331,  2332,  2333,  2330,  2334,
     166,     0,     0,  2908,  2907,     0,     0,  3089,  3090,   733,
       0,     0,     0,     0,     0,     0,  1970,     0,  1013,   733,
     733,     0,     0,     0,   318,  3117,  3117,  3134,  3136,  3138,
    2388,  2338,  2403,     0,  2266,     0,     0,     0,  1740,     0,
    2342,     0,  2422,  2424,     0,     0,  1407,  1407,   897,     0,
       0,     0,  2447,  2448,  2272,     0,     0,     0,  2263,  2273,
    2492,  2496,  2498,     0,  2265,  2509,     0,     0,     0,     0,
    2533,  2275,     0,     0,  2576,  2578,     0,     0,  2582,  2583,
    2584,  2585,  2247,  1466,     0,   897,  2259,  2274,  2253,  2629,
    2630,     0,  2640,     0,     0,  2680,     0,     0,  2685,  2695,
       0,     0,  2754,     0,     0,   897,  2246,  2773,  2771,  2772,
    2774,     0,  2264,  2369,  2276,     0,  2789,  1407,   897,   897,
       0,     0,     0,  2799,  2800,  2807,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2526,  2752,     0,     0,  1399,     0,     0,     0,  1465,     0,
    1550,  3108,  1943,  1398,  1402,  1419,  1424,  1441,     0,  1458,
    1477,  1478,  1480,  1588,  1479,  1486,  1609,  1487,  1610,  1485,
    1484,  2260,  1483,  2270,  2269,  1482,  2261,  2271,  2262,  1400,
    1476,  2289,  2309,  2288,  1493,  3106,  1965,  1965,  1965,     0,
       0,  1965,  1965,     0,     0,  1965,     0,  1965,  1965,  1965,
       0,     0,   157,  2150,   468,   469,     0,  2961,  2974,  2975,
    2971,  2976,  2994,  2977,  2981,     0,  2973,  3066,  2322,     0,
    2980,     0,  3066,  2978,     0,  3066,     0,  2979,  2984,  2995,
    3066,  2972,  2311,  2321,  2320,  3066,  2810,  2809,  2312,  2811,
       0,  2963,     0,  2294,     0,     0,  1985,  1986,  1984,  1222,
       0,     0,  2199,  2200,     0,  2203,     0,  2204,  2207,     0,
    2904,     0,     0,     0,     0,     0,  1316,     0,  1988,  2032,
    1989,  1987,  1965,     0,   434,   443,   445,   446,   442,     0,
       0,  3090,  3101,  3116,  3111,  3110,  3113,  3114,  3115,  1384,
    3112,  3109,     0,  1380,  1382,  1383,   950,     0,     0,  2851,
    2854,  2588,  2622,  2855,  2776,  2852,  2681,  2853,  2383,     0,
       0,  2315,  2878,  2813,  2814,  2815,  2812,  2316,  2821,     0,
    2845,     0,  2111,     0,   950,  2130,     0,     0,  2130,     0,
    1898,  2114,  2119,  2117,     0,  2857,  2091,  2858,  2110,     0,
    2067,  2090,     0,  2046,  2083,     0,  2859,  1247,  2113,     0,
    1898,  1248,  2074,  2130,     0,     0,     0,     0,     0,     0,
       0,   446,  1236,  1247,  1254,  1269,  1235,  1269,  1378,  2294,
    2045,     0,     0,     0,  2918,     0,  2201,     0,  1377,  2008,
       0,  1866,  1869,  1871,  3182,     0,     0,     0,  3177,     0,
    3183,     0,     0,  2288,     0,     0,     0,     0,     0,  3107,
       0,     0,     0,     0,     0,     0,     0,     1,    11,     0,
       0,  1407,  2319,  2789,     0,  2318,  2317,  2323,  2325,  3019,
    3064,  3070,     0,     0,     0,  1234,  1238,  1239,  1241,  1242,
    1243,     0,     0,     0,  1342,  1386,  1346,     0,  3103,  1898,
    1890,     0,  3103,  1898,  1354,  1349,  1889,  1356,  2038,  2031,
    2143,  2492,  2146,  2026,  2147,     0,  1062,  1135,     0,  1066,
       0,     0,     0,     0,  2921,     0,  1064,     0,  2112,  1142,
       0,  1093,     0,     0,  3143,  1068,     0,  3087,     0,  1326,
    1337,  1732,   397,     0,   170,   167,   168,  1283,  1961,  1302,
       0,  3093,     0,     0,     0,     0,  3139,     0,     0,     0,
     580,     0,     0,     0,     0,     0,   733,  3143,  3143,  3117,
    3137,     0,     0,  1859,  1500,  1859,  1859,  1859,  1741,     0,
       0,     0,     0,     0,     0,     0,  1859,     0,  1544,  1516,
       0,  1545,     0,     0,     0,  2277,     0,     0,     0,  1497,
       0,     0,  1732,     0,  1701,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1736,  1738,  2288,  1859,     0,     0,
    1859,     0,     0,     0,     0,     0,  1412,   946,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1859,
    1859,     0,     0,  1859,  1558,  2279,     0,     0,     0,  2278,
       0,     0,     0,  2268,  2267,  2248,     0,  1561,  1563,  1562,
       0,  1859,  1859,     0,     0,     0,  1859,  1859,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1859,  1490,  1489,  1491,     0,     0,  3108,     0,  2860,
    1699,     0,     0,  1462,  1461,     0,  1460,  1459,  2308,     0,
    1401,     0,     0,  1406,  1405,  1467,  1468,  1469,  1470,     0,
    1471,  1472,  1473,     0,     0,     0,     0,     0,     0,  1464,
    1463,     0,     0,     0,     0,  1443,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1492,     0,     0,  2303,  2249,
       0,     0,  1604,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1971,     0,     0,     0,     0,     0,     0,  1965,
     159,     0,     0,  2962,  2954,  2992,  2991,  2996,     0,  2993,
    2989,  2997,  2998,  2982,     0,  2968,  2986,     0,  2970,  2988,
    2987,  2967,  2983,  2990,  2969,     0,  2965,  2957,     0,     0,
    1855,  2931,     0,     0,   165,     0,  1223,  1989,     0,  3196,
    3193,  2197,     0,  2208,  2209,  2205,     0,     0,     0,     0,
    2110,     0,  2193,  3102,  1318,     0,     0,     0,  1990,     0,
       0,  2177,  2186,  2182,  2184,  2176,  2179,   435,     0,     0,
     465,  1966,  2961,     0,     0,  3096,  3093,  1370,  1381,   949,
       0,     0,   952,  2877,  2009,  2010,   961,     0,   951,     0,
       0,     0,     0,     0,  2823,  2889,  2886,  2885,  2836,  2831,
    2830,  2327,  3015,  2829,     0,  2864,     0,   956,   958,   957,
    2874,   955,     0,     0,  2776,  2824,  2845,     0,     0,  2822,
       0,  2126,     0,     0,  2132,  2089,     0,   733,     0,     0,
       0,     0,     0,     0,     0,  2061,  2109,     0,  2108,  2082,
    1899,  2124,  2125,  2130,     0,  2123,     0,  2130,     0,  2097,
    2114,     0,  2130,  2058,     0,     0,  2050,  2055,  2051,     0,
    2057,  2056,  2059,  2047,  2048,  2126,  2073,  2114,  2081,  2088,
     308,  2072,  2078,  2086,  2114,  1011,  1010,  1009,     0,     0,
    2114,  2130,  2130,   441,     0,     0,  1253,  1255,  1256,  1274,
    1273,  1250,  1270,  1271,   308,  2043,  3194,  3195,  2917,  2015,
       0,  1867,     0,     0,     0,  2252,  2251,  3179,  2250,  3187,
    3189,  3173,     0,  3176,  3175,  3184,     3,     0,     0,   670,
       4,     0,     6,     0,     0,     7,  1345,  1363,     0,  1362,
      12,   151,  2326,     0,     0,     0,     0,  1089,  1090,  1090,
       0,     0,     0,     0,     0,     0,     0,     0,  3054,  1088,
    3017,  3017,  3050,  3017,  3017,  3017,     0,     0,  1117,     0,
       0,     0,     0,  1391,  1390,  1393,  2459,     0,     0,  1942,
    1936,  1939,  1938,     0,  1385,  1348,  1347,     0,  3105,  3104,
       0,  1350,  1907,  1908,  1906,  1900,  1901,  1905,  1904,     0,
    1352,  1898,  1898,  1355,  2042,  2041,  2040,     0,  2038,  1222,
       0,  2145,     0,     0,  2135,  2136,  2137,  2138,  2139,  2134,
    2133,  2148,  2149,  3141,  3142,  3140,   963,  3135,   381,     0,
       0,  2923,  2929,     0,     0,   381,     0,     0,  2011,  2011,
       0,  2011,  2011,   649,     0,   648,  2011,   739,   601,   603,
     604,   638,   605,   606,   607,   608,   609,     0,  1220,  2011,
    1220,     0,  2011,  2011,  1220,  2011,     0,     0,  2011,  2011,
    2011,  2011,     0,     0,   964,  2011,     0,     0,  1220,     0,
    2011,     0,  1204,     0,     0,  2011,  2011,  2011,  2011,  2011,
    1220,     0,     0,  2011,  2011,     0,  1230,     0,     0,  2011,
       0,  2011,  2011,  2011,     0,  2011,  2011,     0,  2011,     0,
       0,  2011,  1164,  1165,  2011,  2011,   775,  1175,   735,   762,
     763,     0,  1060,  1061,  1136,  1138,  1208,  1144,  1143,  1172,
    1177,  1206,  1207,     0,  3208,  1072,     0,     0,  1071,  3143,
    1297,     0,     0,  1006,  1005,     0,     0,  1337,  1328,  1734,
       0,  1733,   379,     0,     0,  1285,  1284,     0,  1282,  1310,
    1309,  1307,     0,  1308,  1306,  1301,  1303,  1304,  3092,     0,
       0,  3094,  3098,     0,   316,     0,     0,     0,     0,     0,
     733,     0,   582,     0,  3027,  3062,   331,   314,     0,  1039,
       0,     0,   733,   733,   733,   733,  3131,  3119,  3126,  3127,
    3130,  3129,  3128,   733,  3125,  3118,  3121,  3122,  3124,  3123,
    3143,     0,     0,  1860,  1859,     0,     0,     0,     0,     0,
       0,  1742,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1408,     0,   898,  1570,     0,     0,     0,     0,     0,
    1831,  1832,  1833,  1834,  1842,  1835,  1836,  1837,  1844,  1849,
    1838,  1839,  1845,  1846,  1847,  1840,  1848,  1843,  1841,  1850,
       0,  1830,     0,     0,  1854,  1851,  1853,  1852,     0,  1702,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1859,     0,     0,     0,  1859,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1580,     0,     0,     0,     0,     0,  1859,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1540,
       0,  2291,  2290,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1645,     0,  1645,     0,     0,     0,
    1648,  1649,  1647,  1650,     0,     0,     0,     0,  1859,     0,
       0,  1494,     0,     0,     0,     0,     0,     0,     0,  1397,
    1404,  1403,  1410,  1409,  1411,  1415,  1420,  1413,  1417,     0,
    1474,  2395,  1422,     0,     0,  1455,     0,  1425,  1435,  1456,
    1439,  1446,  1447,     0,  1442,     0,  1444,  1445,     0,  1449,
       0,  1448,  1452,  1453,  1454,  1457,     0,     0,     0,     0,
    1481,  1488,  1510,  1511,  1402,     0,  1605,  1606,  2284,  2292,
    1946,  1953,  1948,     0,  1971,  1950,  1958,  1965,  1975,  1976,
    1955,   739,  1973,  1954,   610,  3013,  1951,  1224,  1960,  3221,
       0,     0,   158,     0,     0,     0,     0,  2167,  2169,  2172,
    2168,     0,  2171,     0,  2170,  2151,  2154,  2160,  2173,     0,
       0,   466,   470,   472,     0,   475,     0,  2985,  3068,     0,
       0,  2966,  2959,  2960,  2958,     0,  2999,  2964,  1856,     0,
    2930,  2489,  2596,     0,  1861,  2295,  3198,     0,     0,     0,
       0,  2206,     0,  2906,  1855,  2905,  2909,  1312,     0,   154,
     155,     0,     0,     0,  1317,  1321,     0,  1287,  1770,  2181,
    2190,  2188,  2188,     0,   433,   458,   453,   461,   455,   457,
     456,   462,   463,   464,   459,   454,   460,   447,     0,  2948,
       0,     0,  2957,  3097,     0,  3099,     0,  1861,  1371,  1370,
       0,     0,     0,  2880,     0,  2876,  2875,     0,  1090,  2305,
    1090,     0,  2891,  2892,     0,  2883,     0,  2884,     0,  2835,
       0,     0,  2838,     0,     0,     0,     0,     0,     0,     0,
    2879,  2844,  2843,     0,  2846,  2847,     0,  2850,  2900,  2901,
    2898,  2899,  2902,  2903,  2897,  2871,     0,  2128,  2131,  1863,
       0,     0,  2106,  2100,  2099,  2095,  2101,  2107,  2096,  2068,
    2069,  2070,  2064,  2115,  2105,  2103,  2092,  2130,  2104,  2102,
    2052,  2053,  2054,     0,  1898,     0,  2128,  2130,     0,  2098,
    2130,     0,     0,  2130,  2085,  2087,  1259,  1260,     0,     0,
    1275,     0,  1249,  2020,  2019,     0,  2016,  2018,  2007,  1868,
       0,  1873,     0,     0,     0,  3174,  3190,  3172,  3178,  3185,
    3186,  3171,  2292,     0,   671,     0,     0,   674,     0,     0,
    2011,  1364,    13,    10,  1125,     0,     0,  3061,     0,  3017,
    3017,     0,     0,  3022,  2324,     0,     0,     0,  3059,     0,
       0,     0,     0,  3047,     0,  3048,  3051,     0,  3052,  3053,
       0,     0,  3074,  3072,     0,  3073,  3071,  3004,  3019,  3065,
       0,  1097,  1246,  2300,  1245,  1244,  1240,     0,     0,  1396,
    1393,  1387,  1394,  2304,  1941,   953,  1937,     0,     0,  1894,
    1891,  1893,  1360,  1358,     0,     0,  1361,  1359,  1351,  1353,
       0,     0,  1963,  2036,  2039,     0,  2144,     0,     0,   963,
     722,   724,   731,   730,   732,     0,  1067,  2928,  2927,     0,
       0,     0,     0,  1065,     0,     0,   599,  2012,     0,     0,
     599,     0,     0,     0,     0,   740,  2112,  2011,  1221,  1056,
    1007,  1313,  1007,  1181,     0,  1056,     0,     0,     0,     0,
       0,     0,  1313,     0,     0,     0,     0,     0,  1313,     0,
       0,     0,     0,     0,  2011,     0,  1190,     0,  1146,     0,
       0,     0,     0,     0,     0,     0,  1191,     0,     0,     0,
    1147,  2011,     0,     0,     0,     0,     0,     0,  1313,     0,
       0,     0,  1313,  1233,     0,  1232,  1231,     0,     0,  1313,
    1313,     0,   772,     0,     0,     0,   768,   769,     0,     0,
       0,     0,  1168,  1169,     0,     0,     0,   736,  2011,  2011,
       0,  1140,  1137,   963,   963,     0,  2011,  3216,  1126,     0,
       0,  1069,     0,     0,  1294,  1330,  1324,  1329,  1327,  1337,
       0,  1821,     0,   399,     0,     0,     0,     0,     0,     0,
       0,     0,   308,   172,     0,   202,   206,   214,   218,   204,
     300,   302,   210,   212,   216,   224,   236,   222,   240,   226,
     228,   230,   232,   220,   234,   208,   246,     0,     0,   242,
     244,     0,   248,   250,     0,   238,     0,     0,     0,     0,
     245,   203,   207,   249,   215,   219,   247,   205,   301,   303,
     211,   213,   243,   217,   221,   223,   225,   241,   227,   229,
     231,   233,   235,   239,   237,   209,   251,     0,   308,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   200,     0,     0,   285,  1962,  1311,
    1305,  3091,  3095,   734,   963,     0,     0,     0,     0,     0,
       0,   581,     0,   584,     0,     0,  3026,  3027,  3030,  3031,
    3032,  3033,  3034,  3035,     0,     0,  3070,  2011,     0,     0,
       0,  1040,   963,   733,     0,     0,     0,     0,     0,  3120,
       0,  1566,     0,  1660,  1709,  1660,  1660,  1660,     0,     0,
       0,     0,     0,     0,  1567,     0,  1514,  1568,  1569,     0,
       0,     0,  1660,     0,   899,     0,     0,  1517,  1518,  1507,
       0,     0,  1589,     0,  1705,  1519,     0,     0,     0,     0,
       0,  1590,  1737,     0,  1739,  2292,     0,  1660,  1574,  1525,
       0,  1660,     0,  1526,  1591,  1592,  1593,     0,  1595,     0,
    1576,     0,     0,  1579,     0,     0,  1528,  1660,  1660,     0,
       0,     0,     0,  1660,  1530,     0,     0,     0,  1529,     0,
       0,     0,     0,     0,     0,     0,  1532,     0,  1508,  1660,
    1660,  1582,     0,     0,  1584,     0,  1541,  1859,  1660,  1697,
       0,  1637,  1636,  1654,     0,     0,  1654,     0,     0,  1651,
       0,  1638,  1635,  1634,     0,     0,  1660,     0,  2861,  2862,
    2863,  2881,  1700,  1698,  1498,  1416,  1421,  1414,  1418,  1423,
       0,     0,     0,  1434,     0,     0,     0,     0,     0,  1426,
    1437,  1440,  1608,  1596,     0,  1732,     0,     0,  1209,  1957,
       0,  2112,  1956,   611,   612,   614,     0,  1226,  1225,  1952,
    3222,  1949,  1224,     0,   160,   162,  2165,  2162,  2161,  2163,
     308,  2164,     0,  2174,  2152,  2447,  2773,  2774,     0,   479,
       0,   451,   450,   452,   476,     0,     0,  2957,  3067,     0,
       0,  3008,  3011,     0,     0,     0,  2952,  1858,  2941,  2937,
    2942,  2944,  2940,  2943,  2945,  2938,  2939,  1861,     0,  1898,
    1862,  1770,  3192,  3197,  1332,  1333,  1337,     0,     0,     0,
     156,     0,     0,  2194,     0,  1319,     0,     0,  1292,  1291,
    1293,  1286,  1288,  1289,     0,     0,  1771,     0,  2187,  2189,
     308,   308,  2178,     0,     0,     0,     0,     0,  1967,     0,
    3100,  1373,     0,     0,     0,     0,  1372,  1374,  1375,  1747,
    1746,  1777,  1774,  1773,  1776,  1775,  1778,  1770,  1855,  1880,
    1861,     0,     0,     0,   960,   962,   959,     0,     0,  3017,
    3017,     0,     0,  2896,  2888,  2890,  2887,  2837,  2328,  3016,
       0,  2867,  2868,  2869,  2865,  2866,     0,  2872,  2870,     0,
    2849,  2127,     0,  1898,     0,  2094,     0,  2066,     0,  2084,
    2049,  1898,  2065,     0,  2063,  2114,  2114,  2062,  1258,  1257,
       0,  1261,  1272,  2014,     0,  1872,     0,  1870,  3180,  3188,
       0,     0,     0,     0,     0,     0,     0,     0,   676,     0,
     672,     0,     0,  1084,     0,  3036,  1091,  1083,  1082,     0,
    3021,  3055,  3032,  1085,  1086,  1087,  3020,     0,  3038,  3057,
    3017,     0,  3017,  3017,  3007,  3006,  3005,  3002,     0,     0,
       0,     0,     0,  1118,  1120,     0,     0,     0,     0,  1094,
    1098,  1099,  1392,  1395,  1388,     0,  2214,  1935,  1389,  1896,
    1897,  2286,  1895,     0,  1903,  1902,     0,  1855,  2294,     0,
       0,     0,  2296,     0,  1933,  1934,  1918,  1919,  1917,  1920,
    2140,  1921,  1932,  2011,   723,  2011,     0,     0,     0,     0,
       0,     0,     0,   382,   391,     0,     0,  2922,     0,   626,
       0,     0,     0,     0,     0,     0,     0,     0,   336,   633,
    1075,   739,  1928,  1930,  1927,  1929,   639,   652,  1931,   653,
     650,  1076,   637,   640,  1077,  3223,   651,   602,     0,   809,
    1057,  1008,  1056,  1148,  1056,     0,     0,     0,  1007,   812,
    1056,     0,  1036,  1057,   808,     0,  1215,  1214,  1216,   810,
     810,     0,     0,     0,  1925,  1926,  1924,  1922,  1923,   751,
     746,     0,  1915,  1916,  1912,  1913,  1911,  1914,   757,  1170,
    1302,  1171,  1828,     0,   748,   749,   750,   770,     0,     0,
     759,     0,  1188,  1189,     0,  1151,  1186,  1187,  1224,   741,
       0,     0,     0,   788,   789,   787,   764,   771,  1218,  1217,
    1219,   744,   745,     0,     0,  1205,  1887,  1894,   777,   752,
     776,   747,     0,     0,     0,  1199,  1159,     0,   786,   784,
     781,   783,   782,   785,   760,   753,   754,   756,   755,   767,
     758,  1158,  2173,   742,   743,   773,   774,     0,     0,  1141,
    1220,  1220,  1176,  1173,  1174,  1139,  1145,  1178,   634,   635,
     610,     0,  2011,  3218,     0,  1128,  1130,  3144,  3145,  1871,
       0,     0,     0,  1824,     0,  1825,  1822,  1823,     0,  1735,
       0,     0,     0,     0,     0,     0,     0,     0,   171,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     169,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   317,   963,
     728,     0,   615,     0,     0,     0,   326,     0,  2011,  2011,
    2011,  2011,   321,   739,   586,   588,   589,   590,   591,   592,
     595,   593,   596,   594,   597,   598,   610,  3028,  3024,     0,
    3025,     0,  3063,  1117,     0,  1045,  1047,  1046,  1042,  1041,
       0,     0,  2213,     0,  2212,   808,   311,   655,   657,   660,
     658,   739,   737,  2000,  2002,   662,     0,     0,   345,     0,
     380,  3166,     0,     0,     0,  1660,  1611,  1661,  1613,  1614,
    1619,     0,  1743,     0,  1504,   911,   911,   895,  1717,   891,
     883,   889,  1731,  1722,  1726,  1729,  1728,  1730,     0,   867,
    1725,  1727,   881,  1713,   895,  1715,  1718,   911,  1723,  1512,
       0,     0,     0,     0,     0,  1660,  1621,  1660,     0,     0,
       0,     0,     0,     0,  1703,     0,     0,     0,  1509,     0,
    1600,  1660,  1625,  1660,  1623,     0,     0,     0,     0,     0,
       0,     0,  1629,  1627,     0,     0,     0,     0,  1660,  1631,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1628,  1630,     0,     0,     0,     0,     0,  1615,  1668,
    1662,  1663,  1664,  1665,     0,     0,     0,  1652,  1654,     0,
    1654,     0,  1639,     0,  1564,  1660,  1617,  1495,     0,  1432,
    1427,     0,  1436,     0,  1451,  1450,     0,     0,     0,  1607,
       0,  2285,  2293,  1947,  1945,  1211,  1210,  1959,  1974,  2112,
    3014,  1944,   163,     0,  2166,  2159,  2155,  1699,     0,   471,
     480,   473,   477,   478,   474,     0,  3069,  3077,     0,     0,
       0,     0,  1898,     0,  2932,     0,     0,  1337,  1339,  2210,
       0,  2912,  2913,  2911,  2910,  2196,  2195,     0,  1322,  1323,
    1290,     0,     0,  2004,  2003,     0,  1980,  1982,  1991,  1994,
       0,  2191,  2183,  2185,     0,   448,     0,  2957,     0,     0,
    2946,     0,     0,  1855,     0,  1747,  1777,  1774,  1773,  1776,
       0,     0,     0,     0,  1760,  1768,  1766,  1768,  1763,     0,
       0,     0,  1855,  1871,     0,  1864,  1880,  2834,  2833,  2832,
    1090,  1090,  2826,  2825,  2894,  2893,  2895,  2840,   739,  2839,
       0,  2848,  2129,  2075,  2080,  2079,  2093,  2060,   308,   309,
    1861,  2130,     0,  1281,     0,  1277,  1276,     0,  1263,  2017,
    1874,     0,  3191,     5,     0,     0,     0,     0,   675,     0,
     685,     0,     0,     0,     0,  3199,  3037,     0,     0,  3060,
       0,     0,     0,  3045,  3018,  3049,  3046,  3003,  1123,  1121,
    1122,  1124,  1119,  1102,  1101,  1103,     0,     0,     0,  1116,
    1115,  1114,     0,     0,  1081,  1100,   954,     0,  2222,  1892,
       0,  1770,     0,  1861,  1964,  2037,  2036,     0,     0,     0,
     385,   388,   386,     0,   387,     0,     0,  2925,     0,   636,
    1074,   739,   628,   630,   631,   632,   340,   339,   341,   342,
     344,   343,   338,  1080,     0,   646,     0,     0,     0,     0,
       0,  1056,  1003,  1004,   811,     0,   806,   813,     0,     0,
       0,     0,     0,   794,   796,   797,     0,   880,   834,   825,
     911,   828,   827,   971,   895,   839,   886,     0,   888,   885,
     860,   859,   876,   858,   863,   847,   971,   971,   846,   879,
     971,   864,   862,   866,     0,   867,   887,   872,   861,   865,
     857,     0,   878,   911,   895,   895,   843,   877,   971,     0,
     870,   911,   799,   915,   845,   978,     0,     0,   911,   913,
     891,  1197,  1198,  1044,  1043,  1196,     0,     0,  1154,     0,
    1155,     0,  1157,   961,   961,   765,  1162,  1185,  1184,     0,
    1163,   766,  1227,  1153,     0,  1888,  1152,     0,     0,     0,
    1287,     0,   779,   778,  1079,  3212,  3209,  3210,     0,  3220,
    3219,  3221,     0,     0,     0,   350,  3146,     0,     0,  1336,
    1338,     0,  1325,     0,   174,   175,     0,   176,   177,     0,
     178,   179,     0,   180,   173,   286,   306,   307,   253,   291,
     279,   290,   280,   293,   292,   294,   281,   282,   296,   297,
     295,   283,   284,   201,   278,   252,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   267,   270,   271,   268,
     269,   264,   299,   265,   298,   266,   272,   273,   274,   276,
     277,   304,   305,   729,     0,  2011,  2011,   320,   739,   617,
     619,   620,   621,   622,   625,   623,   624,   326,     0,     0,
     325,     0,     0,     0,     0,     0,  2112,   322,     0,     0,
     332,  1097,  3206,  3207,  3208,     0,   661,   312,     0,     0,
     656,   654,   963,  2001,   659,     0,     0,  3161,     0,     0,
     576,   575,     0,     0,  1542,  1612,  1744,     0,     0,   912,
    1710,   971,     0,  1720,     0,  1721,   893,   892,   884,   882,
    1724,   890,   868,  1714,  1719,  1716,  1712,  1513,     0,     0,
    2280,  1515,  1506,  1505,  1622,  1620,     0,     0,  1548,  1572,
       0,  1549,     0,     0,     0,     0,     0,  1521,     0,  1524,
       0,     0,  1602,  1626,  1624,  1575,  1594,  1551,  1577,     0,
    1527,  1496,     0,  1552,     0,  1557,  1555,     0,  1632,  1531,
       0,     0,  1538,     0,  1536,     0,  1537,     0,  1539,  1581,
    1583,     0,     0,     0,     0,  1660,  1669,     0,  1670,  1656,
    1655,  1642,     0,  1646,     0,  1643,     0,  1657,     0,  1797,
    1618,  2882,     0,  1431,  1433,  1429,     0,  1438,  1597,  1213,
    1212,   613,   161,  2157,     0,  2153,     0,     0,     0,     0,
    2956,  3010,  3009,  3012,  3075,  3000,  2933,     0,     0,  2021,
    2023,  1334,  1337,  1339,     0,  1335,     0,  2211,  2914,  2915,
    1320,     0,  1827,  1981,  2029,     0,     0,     0,  1998,  2283,
    2282,  2290,  2015,  1999,  2006,     0,     0,     0,  1967,     0,
       0,     0,  1871,     0,  1785,  1779,  1781,  1782,  1784,     0,
       0,  1747,  1746,  1376,  1762,  1761,  1769,     0,  1767,  1768,
    1768,     0,     0,  1756,  1755,     0,  1818,  1786,     0,     0,
    1875,  1864,  3017,  3017,     0,  2873,  2076,  2077,  2071,     0,
       0,     0,     0,     0,  1265,  3181,     0,   681,   668,     0,
     666,   670,     0,   663,     0,     0,   679,     0,     0,     0,
    2307,  2306,  3039,     0,  3040,     0,  1106,     0,  1105,  1111,
    1108,  1107,     0,  1096,  1095,     0,     0,     0,     0,  2215,
    2217,     0,  1940,  1861,  1861,  2295,  2034,     0,  2297,  1861,
     725,   780,   390,   389,   395,   396,     0,  2924,  2112,   337,
       0,  1150,     0,     0,   687,     0,     0,     0,   814,     0,
       0,  1054,     0,  1053,  1894,  1037,  1038,  1180,   808,   799,
     833,   826,   844,   965,   976,   974,   968,   869,   971,     0,
     972,   973,   830,   842,     0,   853,     0,   848,   971,   856,
     852,   868,   871,   873,   875,     0,   971,   841,   840,   850,
     837,   900,     0,  1227,   800,   925,     0,     0,     0,     0,
    1463,   919,     0,   983,     0,     0,   928,     0,  2011,  2011,
       0,   936,   815,   916,   918,   817,     0,   939,     0,   979,
     978,   832,   971,   978,   900,     0,   914,   900,   900,  1194,
       0,  1195,  1227,  1829,  1203,  1202,     0,     0,  1229,  1183,
    1886,  1201,  1200,     0,  1156,   761,     0,     0,  3214,     0,
    3217,  1092,     0,   360,     0,     0,  1127,     0,   353,   351,
     362,     0,  1299,  1295,  1826,   181,     0,   183,   185,   190,
       0,   192,  2329,     0,   195,     0,   197,  2301,   199,     0,
     186,     0,     0,   287,   289,     0,     0,     0,  2112,   324,
       0,     0,     0,     0,     0,     0,   583,   645,   641,   647,
     644,   587,  3029,     0,  3044,  3042,  3043,  1094,  3216,     0,
       0,   963,   738,     0,     0,   400,   792,   793,   791,   790,
       0,  3167,   579,   577,   578,     0,     0,  1745,     0,     0,
       0,     0,  1711,     0,     0,  1501,  1512,  2281,     0,     0,
       0,     0,  1706,  1708,  1704,  1660,     0,     0,     0,     0,
       0,  1499,     0,  1598,     0,     0,     0,     0,     0,     0,
    1535,  1533,  1534,   980,  1586,  1585,     0,  1616,  1666,     0,
    1672,  1653,  1641,  1640,     0,  1654,  1565,     0,  1805,  1806,
       0,  1798,  1799,     0,  1428,     0,     0,     0,   488,   483,
     491,   485,   487,   486,   492,   493,   494,   495,   489,   484,
     490,   482,   481,     0,     0,     0,  3084,  1861,  2021,     0,
    2023,     0,  1979,  1331,  1340,     0,  1772,     0,     0,  1992,
    1995,     0,     0,     0,     0,     0,   449,     0,     0,  2951,
    1968,  1967,     0,  1787,  1376,  1748,  1764,     0,     0,  1757,
    1765,     0,     0,     0,     0,  1812,  1813,     0,     0,  1816,
    1819,  1820,  1783,  2287,  1884,  1883,  1865,     0,  1369,  1875,
    2828,  2827,  2841,  1280,  1279,  1278,  1262,     0,     0,  1267,
     669,     0,   667,     0,     0,   665,   673,     0,   680,     0,
       0,  3056,  3041,  3058,     0,  1112,  1113,  1110,     0,     0,
       0,     0,     0,  2216,     0,     0,  2223,  2225,  2035,  1889,
    1889,     0,   629,     0,   690,  1149,     0,     0,   807,     0,
       0,     0,  1025,     0,     0,  1050,   795,   798,   967,   966,
     970,     0,   969,   829,   978,     0,  1058,   849,   874,     0,
     851,   904,   905,   906,   838,   901,   903,   985,  1179,   931,
     940,   942,   941,   932,   930,     0,     0,     0,     0,     0,
       0,   947,   922,  2257,   948,  2258,  2254,     0,     0,   943,
     944,   945,   933,   929,   934,     0,     0,   935,     0,   917,
       0,     0,   927,   920,   921,   831,   835,   836,   822,     0,
     823,   824,     0,  1192,  1182,  1166,  1228,     0,  3213,  3211,
    3215,   361,   349,     0,     0,  1129,  1131,     0,     0,  1132,
       0,     0,  1298,   182,     0,   191,     0,     0,   196,     0,
       0,   187,     0,   275,     0,  1014,   643,   642,   618,     0,
    1020,   327,   328,   330,     0,     0,   319,  3218,     0,   313,
     310,     0,     0,     0,   401,   403,     0,     0,   410,     0,
    1543,   909,   907,   910,   908,   896,     0,     0,     0,  1546,
    1547,  1573,     0,  1633,  1571,     0,  1522,  1599,     0,     0,
    1578,  1553,  1556,  1554,  1559,  1560,     0,     0,     0,     0,
    1674,  1658,  1659,     0,  1807,  1523,  1800,     0,     0,  1430,
    2158,  2156,  3075,  3078,     0,     0,  2953,  1898,  2023,  1871,
    1977,     0,     0,  2028,  2030,  1993,  1996,  1997,  2292,  2013,
    2005,  1967,     0,  2947,     0,  1780,  1759,  1758,  1751,     0,
    1753,     0,  1808,  1808,  1817,  1885,     0,  1881,     0,  1876,
    1877,  1368,  1264,     0,     0,  1251,   682,     0,   672,   686,
     664,  3203,  3023,  1104,  1109,  2220,  2221,     0,  2218,     0,
       0,  2224,  1909,  1909,     0,  1014,     0,   710,   688,  1020,
       0,  1049,  1025,  1894,     0,  2011,  2011,  2011,   801,  1026,
    1027,  1029,  1030,  1033,  1052,     0,   977,   975,   971,     0,
     971,   902,     0,   989,  2256,  2255,     0,   924,   926,   937,
     938,   931,   818,     0,     0,  1161,  1167,     0,   347,   352,
     363,   364,  1073,  3149,  3147,     0,   184,   193,   194,   198,
       0,     0,   288,     0,  1209,  1015,  1016,  1018,     0,  1209,
    1021,  1022,  1024,     0,     0,   315,  1025,     0,   358,  3162,
       0,   961,  3160,   413,   411,   412,     0,   406,   408,     0,
       0,     0,  1502,     0,  1707,     0,  1601,  1603,   981,     0,
    1671,     0,  1695,  1694,  1696,  1667,     0,  1644,     0,  1804,
    1803,  3084,  3076,  3079,  2934,  1978,  2022,     0,  1770,  2950,
    1967,     0,     0,     0,     0,     0,     0,     0,  1882,     0,
       0,  1266,     0,   308,     0,     0,     0,     0,  3200,  3201,
    2219,  2227,  2226,     0,  2033,  2025,  2926,   802,     0,     0,
    2011,     0,     0,  2011,  2011,  2011,  2011,   705,   711,   713,
       0,   803,     0,     0,   804,  1055,  1032,     0,     0,     0,
    1028,  1894,   854,  1059,   855,     0,   988,     0,   993,   923,
       0,  1193,  1160,   354,  1133,   515,     0,  3148,  1296,     0,
       0,     0,   334,  1017,   323,   335,  1023,     0,  1209,  3159,
     350,   359,     0,   402,   404,  3168,   410,     0,     0,   894,
     895,  1520,  1587,  1673,     0,     0,     0,     0,  1689,  1676,
    1677,     0,     0,  2955,     0,  3085,     0,   953,  2949,     0,
    1855,  1752,  1754,     0,  1809,     0,  1821,     0,  1879,  1878,
    1268,  1252,     0,     0,  2011,     0,  3204,  1910,   699,   692,
     695,     0,     0,  2011,  2011,     0,     0,     0,     0,     0,
     689,   712,  2011,   805,  1048,  1031,  1034,  1035,  1051,   986,
       0,   990,   991,   992,     0,   984,     0,     0,   356,   541,
    2421,   527,   513,     0,     0,  2609,   517,   365,   368,   366,
    2026,   367,   373,     0,   374,   375,   376,   377,   378,   369,
     539,   540,   372,   370,   371,     0,  2313,     0,  2314,  2374,
    2373,  2375,     0,     0,     0,   188,     0,  1019,   329,   333,
     362,     0,   383,   407,   961,     0,     0,     0,     0,  1684,
       0,     0,     0,  1682,     0,  1678,     0,  1675,  1680,  1679,
       0,  2024,  2228,  2593,     0,  1790,     0,  1788,  1811,  1810,
       0,     0,   683,     0,     0,  3205,   699,     0,   697,     0,
     693,   691,   694,   721,     0,     0,   717,   718,   716,   714,
       0,     0,   707,     0,   987,     0,     0,   819,   355,     0,
     348,     0,     0,   526,   529,     0,     0,   532,   522,   521,
     523,     0,   516,   515,   515,   569,   520,   566,   565,   558,
       0,  3150,     0,     0,     0,   961,  3169,   409,  3155,  1503,
       0,  1685,     0,  1687,  1686,     0,     0,  1691,     0,  1692,
    2836,  3083,  3082,  3080,     0,  2214,     0,  1789,     0,     0,
     961,  1815,  1814,     0,   677,   683,  3203,   696,     0,   703,
       0,   701,   704,   719,   720,   710,   706,     0,   715,   999,
       0,   998,     0,   995,   994,   821,   820,   915,   357,   542,
     553,   556,   548,   528,     0,     0,     0,   518,   515,     0,
     502,   500,   501,   507,   508,   509,   510,   511,   512,   503,
     506,   504,   505,   515,     0,   418,     0,     0,  3151,  3152,
     189,   364,  3163,   393,   392,   384,     0,   515,  3153,  3154,
       0,  3157,     0,  1683,  1681,  1690,  1693,  3081,     0,  2222,
       0,  1791,  1792,  1795,   684,   678,  3202,   698,   700,     0,
     709,   708,  1001,  1002,  1000,     0,     0,   816,     0,     0,
     515,   549,     0,   524,     0,   533,     0,     0,   416,   572,
     570,   414,   560,   560,   346,   383,   394,  3170,  3156,   515,
    1688,     0,  2230,  1794,  1796,     0,   702,     0,     0,   550,
     556,   546,   554,   515,     0,     0,   514,     0,   568,   417,
       0,     0,     0,   515,     0,   559,   561,   563,  3164,  3158,
    2229,     0,  2234,     0,   997,   996,     0,   547,     0,     0,
     545,   525,   530,   515,   573,   515,   427,   426,     0,     0,
     496,   567,     0,   419,   515,     0,     0,  2241,  1797,   551,
       0,   515,     0,   515,     0,   515,     0,     0,   961,     0,
       0,   415,  3165,  2232,  2233,  2231,  2236,     0,     0,  2238,
    2239,     0,  2202,  1801,  1793,  1799,     0,   543,   515,   531,
     536,     0,     0,   422,   497,   498,     0,   424,  2240,  2235,
       0,  2242,  2244,     0,  1802,     0,   515,   515,   532,   535,
     574,   571,     0,     0,   420,   421,   432,   431,     0,  2237,
       0,     0,     0,   515,   515,   537,   440,   438,   515,   428,
     436,   430,     0,   437,   499,   425,  2243,  2245,     0,   423,
     439,   429
};

  /* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -4515, -4515, -4515, -4515, -4515, -4515,   -55, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515,  1533, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515,  1784,  1787, -4515, -4182, -4515, -4515,  1790,
   -4515,   374,  1791, -4515,   373, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515,  1775, -4515,   371, -4515, -4515, -4515, -4515, -4515, -4515,
   -2887, -1590, -4515, -4515, -4515, -4515, -4515, -4515,  1140, -4515,
   -4515,   377,  1353,  3892, -4515,   366, -4515,    59, -4515, -4515,
   -4515, -4076,   -59,  -229, -4515, -4515,    31,  3391,  -280, -3446,
   -4515, -4515, -4515, -4515, -4515, -4515,   187, -4515, -4515,    64,
   -4515, -4515, -2417, -4515, -4515, -4515, -4515, -4515, -4515,  -417,
    -374,  2666, -4515, -4515, -4515,  5107, -4515,  4064, -4515, -2826,
    2183, -4515, -4515, -4515, -4515, -4515,  2242, -2760, -4515, -4515,
   -4515,  1021, -4515, -4515, -4515,  -573,    95, -4515,    96, -4515,
      97, -4515,   100, -4515,   101,   106,   107,   114, -4515,   116,
   -4515, -4515,  -375, -4515, -4515, -4515, -4515,   118, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515,  -276, -4515, -4515,  -174, -4515,
   -4515,  -271,   123, -4515,  -253,   124, -4515,   126, -4515,  -193,
   -4515,  -188, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515,  1184,  2712,  3986,  2710, -2795, -4515,  1608, -4515,
   -4515,   764, -4515, -4515,   915, -1551, -4515,  2498, -2602, -2552,
   -1140, -2543, -4515, -4515, -4515, -3215, -3185, -1384, -4515, -1386,
   -2537, -2532, -2360,   746,  1767,  1769,  1764,    34, -4515,   970,
     335, -4515, -4515, -4515, -3563,  -113, -4515, -3915,   558, -4515,
   -4515, -4515, -4515, -2932, -4515, -4515,  -194, -4515, -4515,  -121,
    -118, -4515,   171, -4515,  2761, -4515, -4515, -2465,  -437,  2649,
   -4515, -1994, -1769, -2342, -1619, -1615, -4515, -4515, -4515,   758,
    1788,   916, -4515,   917, -1641,   865, -3714, -4515, -4515,  -370,
   -2914, -4515, -4515, -4514, -4515, -2589,  1390, -4515, -4515, -2512,
   -4515, -4515, -4515,  1358,  1360, -3359,  2104, -1526, -4515,   545,
     627,  -791, -4515,  -112, -4515,   870, -4515, -4515, -3170, -4515,
     -33, -2623,   132, -4515, -4515, -3132, -3670, -1600, -4515, -4515,
   -3575, -2490,  1689, -4515, -4515,   184, -4515, -4515, -4515, -4515,
   -3431, -4515, -1698, -2241, -4515, -4515,   353, -4515,   283,   340,
   -4515,   280, -4361, -4515,   341, -2204,  2041, -4515,  3334, -3129,
   -2527, -4515, -4280, -2600,   589, -2293,   920, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -1579, -4515, -4515,   799,  1247, -4515,
    2141,  1840, -4515,  2149, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515,  2686, -4515,   529,  -567,  2691, -4515,  2696,
     434, -2372, -1128, -4515, -1121, -4515, -1622,  3532, -2456, -3077,
   -4515, -4515, -4515, -4515, -4515,  3572, -4515, -4515, -4515,  2960,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515,  2917, -4515, -4515,
   -4515, -4515,  4177, -4515,  2932, -4515, -4515, -4515, -4515, -4515,
    1372, -4515,  2303, -4515, -4515, -4515, -4515, -4515,  2033,  3385,
   -4515, -4515,    57, -4515, -4515, -4515, -4515,  2320, -4515, -4515,
    3415,  1947, -4515, -4515,  1675,  2339, -1836,  1125, -1166,  5222,
       5,    84,    15,   394, -4515,  3040, -4515, -4515, -2239, -4515,
   -4515, -4515, -4515,  4267, -1080, -1120, -4515, -4515,  2878, -4515,
    4277,  3938,  3177,  -346,  5056, -4515, -1311, -4515,   -31, -4515,
   -4515,  -886, -4515, -4515, -4515,  -693,   830, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,  2438, -4515,
   -4515, -4515,  3267,  2479, -4515, -4515, -2706, -4515, -2430, -1968,
   -4515, -2603,   316, -4515, -4515, -4515, -4515, -4515, -4515,   347,
   -4515,    37, -4515, -4515, -4515, -4515, -2081, -4515, -4515, -4515,
   -4515,  -976, -2559, -1143, -1186, -4515,  4044, -4515, -4515, -4515,
   -3034, -4515, -2730, -4515, -4515, -4515, -4515, -3093, -2864, -4515,
   -1091,  2347,  2350,  2351,  2360, -4515, -4515,   -60, -4515,    38,
   -4515,  -149, -4515,  -170, -4313, -4332,   495, -4515,   757, -4515,
   -4515, -4515,   236,  1442,   245, -2126, -2406, -1261,  1745, -4515,
   -4515, -2175,  4114, -2182, -2091,  1144,     7,  4246,  3731, -3187,
   -4515,   765, -4515,   362,  1703,   568, -4515, -4515,  1487, -1149,
    -111,   398, -3144, -4515, -1059,   -86, -4515, -2373,   498, -2411,
   -2939, -2266, -2641, -2408, -4515, -4515,  2953,    39, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515,  -563,   275,   -90, -3961,
    5366,  3258, -4515,  2503,  4203,  4211, -4515, -4515,  3916,  1792,
    1793, -4515, -3785, -2841, -4515, -4515, -4515, -1018,  1581,   837,
    3766,  1233,  1803, -2997,   847, -4123,  4227, -4515, -3613,   854,
    4241,  4238, -3424,  3694, -4515, -4515, -4515, -4515, -4515,  3099,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515,  4432,   -41, -1410, -4515,
   -4515, -4515,  1462,  3832,  3100,  -942, -4515, -4515, -4515, -4515,
    4249, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
    2530,  2142, -4515, -4515, -4515, -4515,  3210, -4515, -4515, -4515,
    3223, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515,  1822,   130, -4515,  1178,    49, -4515,
     804, -4515, -4515, -4515, -4515, -4515,   -83, -4515, -4515,  -108,
   -2792, -1162, -1147,   924,  1074, -3794, -2070, -2080, -3256, -1221,
   -4515, -4515,   887, -3427, -3018,   592,  -754, -1289, -1302,    53,
    2322,  4016, -1570, -4515,  5489,  -899, -1677, -2201,   836,  4092,
      -6, -4515, -2766, -4515,   -77,   121,  2107,   -89,  3187, -3709,
   -4515,    -4,     2, -4515,   467,   302, -4515, -4515,   310, -4515,
   -4515, -4515,   160, -4515, -4515, -4515, -4515,  3913, -4515,  2435,
    5418, -4515, -4515, -4515,  3181,  5420,  -875, -4515,  3924,  3205,
   -4515,  3212, -4515, -4515, -4515, -2148, -4515, -4515,   350, -4515,
    2523, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515, -4515,
   -4515, -4515, -4515, -4515, -4515, -4515, -2058,  3976,  4467,  4010,
   -4515, -4515,  2372, -4515, -2801, -1416, -1214, -1436, -4515,  4330,
    2766,  2775, -2286, -1094, -1093, -1004, -1103,  -985,  -968, -4515,
    3808, -1518, -4515, -4515,  2007, -4515,  2767,   662, -4515, -4515,
     496, -4515, -4515,  1921,  4474,  3983, -4515, -4515, -4515, -4515,
   -4515,  4324, -4515,    -7,   -54, -4515,  -382, -4515, -4515, -4515,
      56,  5477,  5479, -4515, -4515,   220, -4515,  -936, -4515, -4515,
   -4515, -4515, -4515,  4254, -4515, -4515,  4259, -4515, -4515, -4515,
   -4515,  4260, -4515, -4515, -4515, -4515, -4515, -4515,  1760, -4515,
   -4515, -4515, -4515, -4515, -4515,   213, -4515, -4515, -4515,   178,
   -4515,  1495, -4515,  1113, -4515,  1054,   736,  1603, -2482
};

  /* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    65,    66,  1139,  2373,    67,    68,    69,    70,    71,
    2209,    72,  1430,  2152,  2894,  2895,    73,   974,   732,    74,
    1874,  1873,  2592,  2593,  3914,  4406,  4407,  3923,  4421,  3917,
    4410,  4411,  3920,  4415,  4416,  2658,  2659,  2660,  2661,  2662,
    2663,  2664,  2665,  2666,  2667,  2668,  2669,  2670,  2671,  2672,
    2673,  2674,  2675,  2676,  2677,  2678,  2679,  2680,  2681,  2682,
    2683,  2684,  4422,  4423,  3930,  3936,  3941,  3963,  2685,  2686,
    2687,  2329,    75,    76,    77,    78,  2694,    79,  3990,  2716,
      80,  3167,  3168,  1916,  4016,  4396,  5063,  4400,  5158,  5260,
    5080,  3315,  4739,  5064,  5065,  5167,  3439,  2456,  5286,  3153,
    5375,  3154,    81,  1212,  4773,  4774,  4775,  4966,  4967,  4968,
    4969,  5453,  5348,  5421,  5454,  5542,  5548,  5478,  5558,  5559,
    5560,  5546,  1498,  5561,    82,  1006,  1007,  1500,  2237,  2909,
    2238,    83,    84,   936,  2171,  2172,  2173,  2174,  3594,  2910,
    3589,  3590,  4541,  5479,  5544,  5349,  5350,  5267,  5351,  5170,
    5352,  5271,  5353,  5173,  5354,  5355,  5356,  5357,  5445,  5358,
    5266,  5471,  5345,  5346,  5447,  5520,  5539,  5359,  5180,  5261,
    5408,  5181,  5262,  5440,  5341,  5441,  5466,  5516,  5342,  5409,
    5469,  5412,  5360,  5366,  5455,  5361,  5367,  5362,  5185,  5278,
    5365,  5276,  5364,  5451,  5450,  5494,  4022,  4465,  1902,  2703,
    3392,  3393,  3394,  3170,  3171,  1768,  2882,  2883,  2884,  3977,
    3978,  3979,  3770,  3771,  3772,  2466,  3310,  3159,  1769,  1770,
    1836,  1772,  3398,  3981,  3982,  3399,  3400,  1773,  3402,  1774,
    1775,  1776,  3176,  3426,  3427,  3428,  3429,  3430,  2367,  2368,
    3713,  3068,  3710,  4617,  4226,  5314,  4233,  4283,  4284,  4887,
    5241,  5129,  5237,  5130,  5239,  5320,  5321,  5140,  5251,  5252,
    5037,  5038,  5039,  2449,  2450,  3378,  3379,  2451,  1223,  1837,
    3431,  2476,  1838,  3269,  1839,  1840,  2454,  3284,  3256,  4460,
    3802,  3803,  3804,  4333,  3805,  3199,  2484,  3795,  3796,  4351,
    3852,  4711,  5337,  3853,  3854,  3855,  3856,  3857,  3858,  3859,
    4039,  3860,  4040,  4035,  4036,  4033,  1261,  4674,  4675,  4676,
    4029,  4030,  4367,  4352,  4353,  4354,  4683,  4702,   880,  4692,
    4309,  1516,  3116,  1539,  1540,  3005,  2255,  1841,  4310,  4311,
    4312,  4361,  4102,  4806,  4356,  4334,  4913,  5055,  5058,  5155,
    5333,  3200,  1866,  3192,  1608,   752,  4944,  4945,  4946,  4949,
    4950,  4951,  4898,  4899,  4900,  4901,  3201,  2720,  4902,  4903,
    3418,  4890,  4291,  4292,  4293,  3202,  4665,    85,    86,  1746,
      87,  1755,    88,  1748,    89,  1859,  1204,    90,  2568,    91,
      92,    93,    94,    95,  2379,    96,    97,  3744,  3109,  3110,
    3111,  2411,  3103,  3104,  1144,  3316,  3905,  4932,  1186,  1842,
    1843,  2562,  1844,  1845,  4925,  1846,  3230,  1847,  1848,  1849,
    1850,  3574,  3575,  3207,  3576,  3259,  2486,  1467,  2889,  4379,
    2538,    98,    99,  1155,  1156,  1157,  1158,  1159,  1160,  1084,
     100,   101,  2340,  5013,   102,  1616,  1617,  1618,  3698,  4224,
    4609,  4865,  1621,  1622,  1623,  3051,  3696,   103,  1878,   104,
    2961,  2962,  2963,   105,  4742,  2574,   106,   107,  1885,  1886,
    1887,   108,   238,   109,  1486,  1484,  2214,  2215,   110,  1208,
    1209,  2576,   111,  2944,  2945,  1867,  1868,  4155,   112,   113,
    3433,   115,   881,   117,   118,  2247,  2248,  2986,  2987,   119,
     120,  1022,  1023,  1024,  1164,  1165,  1695,  2420,  2421,  2422,
     882,   883,  1370,  1258,  1869,   885,   886,  2105,   887,  1371,
    1372,  4358,   888,  1383,  2093,   889,  4048,   890,   891,  4119,
     892,   893,   894,  4071,  4072,  4493,  2125,  2126,  2127,   895,
     896,   897,  2835,  2059,  2060,  4113,  3546,  4515,  3446,  3447,
    3540,  4858,  3542,  4107,  4108,  4510,  4810,  4985,  5098,  5209,
    5100,  5210,  5217,  4986,   898,   899,   900,  1990,  4064,  3494,
    4482,  1935,  3479,  1870,  1871,  1283,  1284,  1249,  2741,  1941,
    2988,  4190,  2989,  3659,  3660,  3661,  4201,  4197,  2965,  2966,
    2990,  2991,  2992,  2993,  2994,  2995,  2996,  5002,  5224,  5225,
    5435,  4520,  5514,  4521,  4522,  4523,  5006,  4588,  4589,  4590,
    4591,  4592,  3324,  3325,  3326,  4161,  3231,  1980,  1981,  1988,
    2189,  2190,  1936,  2939,  1554,  4210,  1136,  1111,  1112,  1634,
    2350,  4598,  4859,  4860,  3665,  4594,  4857,  3265,  3266,  1169,
    1173,  2430,  3121,  3122,  1569,  1570,  1715,  1716,  5024,  3270,
    3140,  3219,  3177,  3141,  3142,  1699,  1700,  1166,  1701,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,   138,  2903,  2441,  1010,  3640,
     753,  2140,  2141,  2142,   139,   140,   979,  1000,  1489,  3626,
    3627,  4167,  3628,  3435,  3630,  4173,  1108,  2467,  2468,  4174,
    1109,  2345,  2346,  2347,  4550,  4552,   141,   142,  4163,  4164,
    1001,   143,  3132,  1727,  1728,   144,  1101,  1592,  1593,  1594,
    2324,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,   188,  1567,  1085,  1777,  1573,  1087,
    1088,  1089,  1574,  2297,  3033,  1555,   189,   190,  1739,   191,
    1182,  1183,  1740,   192,  1431,  2165,  3586,  4135,  4526,  2166,
    2167,  2904,   193,  1003,  1495,  1491,  1496,  2221,  2222,  2220,
    2970,  2968,   194,   993,  1482,  2953,   195,   984,   196,   197,
     988,  2202,  1475,  4156,  3436,  3748,  4259,  4260,  4262,  4636,
    4637,  5305,  5462,  5505,  5487,  5508,  5509,  5512,  5531,  5532,
     901,  1637,   902,  4693,  4694,   903,   904,   905,   906,   907,
     908,  4478,  4168,   909,  2431,  4595,   910,  4165,   911,  2997,
    2442,   722,  4417,  4418,  1145,  1638,  2424,  2260,  4242,  1373,
    1123,   964,  5187,  1042,  1147,  1531,  1148,  2145,  1532,  2923,
     724,   725,   726,  5188,   727,   728,   968,  1047,   729,   198,
    1048,   199,  2269,   200,  3678,  3679,  1545,  1549,  2284,  2285,
    2286,  1090,  2076,  2278,  1546,  2287,  1051,  2852,  1524,  1525,
    2267,  1526,  2265,  1527,  3014,  2295,   201,  1477,   735,  2205,
    2206,  3613,   202,  1105,   203,   204,   205,  1194,   206,  2194,
    2937,  2938,   207,  2976,   208,  2176,  2185,  1434,   970,   971,
    2926,  3098,  2406,  2407,  2924,  2146,  1533,  2393,  1678,  1667,
    1905,  2706,  2707,  2708,  2709,  3082,  2711,  2712,  2713,  3410,
    1150,  1670,  1906,  1151,  1445,  2179,  1688,  4546,  4140,  5105,
    4826,   209,   239,   738,  1221,  1892,  2244,   210,   211,   212,
     213,  1710,   914,  2998,   915,  1025,  1237,   754,  1925,  1917,
     232,   233,   234,   757,   758,   235,  1857,  1858,  4401,  4934,
    5067,  5380,  5381,  1919,  5429,  1920,  1921,  4455,  5082,  5425,
    5484,  1922,  4019,  4778,  5202,  5377,   214,  1643,  1639,  1121,
    2361,  2355,  2357,   215,   216,  1470,   217,   218,  5018,  5019,
    4004,  2567,  3896,  3897,  4390,  3313,  3901,  2891,  3186
};

  /* YYTABLE[YYPACT[STATE-NUM]] -- What to do in state STATE-NUM.  If
     positive, shift that token.  If negative, reduce the rule whose
     number is the opposite.  If YYTABLE_NINF, syntax error.  */
static const yytype_int16 yytable[] =
{
     723,  1404,  1409,  1086,  1170,   114,  1129,   121,  1149,   913,
    1040,  1083,   932,  1517,  1521,   116,   973,  1734,  1995,  1907,
    2425,  1598,  1741,   966,  1717,   992,  1122,  1721,  2041,  2948,
    1174,  2582,  1008,  1550,  2342,  1012,  2139,   721,  2138,  1043,
    1008,  2040,  2186,  1099,  1704,  1044,  1683,  1106,  1285,  1113,
    1668,  1669,  3554,  1128,  1658,  1680,  1681,  3699,  1771,  3386,
    3178,  3124,  3125,  3178,  3178,  2999,  1944,  1945,  2557,  1134,
    1244,  1851,  2092,  3295,  3296,   972,   933,  3605,  1852,  1135,
    2485,  3677,  3865,  2831,  2832,  3228,  1706,   991,  2911,  2912,
    2380,  1146,   997,  1126,  3240,  1997,  2841,  2842,  2843,  3081,
    2514,  3395,  1098,  2940,  3089,  3749,  3245,  2010,  2011,  2012,
    1711,  3182,  3183,  2014,  1720,  4044,  1565,  3968,  2537,  2412,
    2414,  2415,  3482,  3885,  3629,  2062,  3483,  2452,  3708,  1983,
    3549,  2453,  3906,  3662,  3288,  3028,  1177,  2483,  3290,  4350,
    1201,  1599,   965,  4229,  4269,  1682,  2455,  2881,  3635,  1197,
    3588,  3396,  2050,  3477,  2385,  1175,  2940,  2388,  2491,  2390,
    3397,  3477,  2495,  3695,  1684,  3892,  3404,  3983,  3740,  3741,
    2317,  3405,  1217,  1219,  1547,  3075,  2515,  3076,  3641,  1352,
    1353,  1685,  1354,  4355,  2979,  1099,  3189,  2327,  2527,  4817,
    3090,  3484,  3419,  3092,  2330,  1405,  3093,  3984,  4169,  2061,
    2333,  3285,  3286,  4374,  4375,  1176,  3133,  4413,  4816,  2470,
    4549,  1363,  1364,  2148,  1187,  4359,   723,  4569,  3119,   723,
    1146,  1198,  1099,  1363,  1364,  1406,  2823,  3541,  3220,  3380,
    3478,   759,  1461,  1363,  1364,  2188,  1099,  4750,  3478,  3577,
    2714,  3194,  2572, -2342,  1184,  2395,  1406,  2396,  2398,  2399,
    3063,  4315,  4319,  1189,  3645,  4320,  1196,  3257,  4625,  3261,
    3262,  2887,  4961,  1161,  3065,  3742,  1363,  1364,  2241,  1937,
    1938,  1939,  1406,  4329,  1363,  1364,  2070,  -739,  1363,  1364,
    1949,  1199,  2951,  4321,  2188,  2188,  2328,  1363,  1364,  1875,
    4383,  1205,  3178,  2328,  3872,  1210,  2252, -2935,  3105,  5001,
    2376,  1918,  1926,  1363,  1364,  3448,  3449,  3450,  1794,  1363,
    1364,  2003,  1232,  1233,  2007,  1794,  3684,  4614, -2180,  3129,
    4735,  1861,  3486,   967,  3544,  1758,  3631,  3120, -2121,  2376,
    3938,   969,  4268,  2024,  2025,  1952,  1893,  2029,  1449,  -726,
    1363,  1364,  1363,  1364,  3493,  1046, -1063,  3502,  3639,  3882,
    2701,  3504,  1363,  1364,  1163,  2043,  2044,  1363,  1364,   736,
    2048,  2049,  3787,  1363,  1364,  1794,  3866,  3512,  3513,  4891,
   -1857, -2122,  3794,  3519,  1238,  2069,  1363,  1364,  1609,   990,
    1385,  4559,  3421,  1759,   996,  1879, -2112,  3902,  4388,  3531,
    3532,  3415,  1009,  3421,  1228,  1107,  -727,  1161,  3538,  1363,
    1364,  1457,  3480,  4989,  1161, -1078,   985,  3937,  4659,  3942,
    1171,  1092,  5016,  1576,  3536,  4018,  3556, -2935,  1265,  3407,
   -1857,  2246, -1972,  1406,  1052,  1323,  5378,  4830,  1410,  1779,
   -2936,  1259,   980,  -600,  1363,  1364,  3581,  5403,  1363,  1364,
    1363,  1364,  1552,  1220,  -585,  2800,  1054,  1027,  2242,  1162,
    4084,  1363,  1364,  1363,  1364,  4313,  4472, -2112,  2262, -2842,
     812,  1363,  1364,  1743,  1473,  2925,  2958,   240,  3422,  3750,
    1162,   730,  3178,  3003,  2391,  4377,  4207,  4963,  1167,  1363,
    1364,  -739,  1614,  1363,  1364,  4327,  4328,  4964,  1163,  1452,
    1363,  1364,  3746,  2089,  1863,  1163,  1575,  1708,  1363,  1364,
    -962,  1327,  1880,   240,  -627,  -616,  1881,  1553,  1363,  1364,
    1045,  2122,  2123,  4811,  1959,  3894,  3119,  -658,  2279,  2815,
    1882,  1167,  1864,  5240,   242,   236,  4002,  1161,  1285,  2283,
     986,  5044,  4303,  1619,  3011,  4548,  1761,  1152,  1704,  1130,
   -1857,  1876,  1407,  1751,  4304,  4695,  2739,  1605,  1606,  1125,
   -2936,  1363,  1364,  1161,  3674,  3012, -1857,  3773,  4305,  3178,
    3416,  2769,  4936,  1407,  4202,  4020,  5291,  1635,   737,  4780,
    1054,  1027,  1655,  5204,  1607,  5410,  4695,  5215,  1131,  1366,
    4006,  1752,  1367,  1388, -2342,   975,  1704,  4021,  1206,  1407,
     994,  1366,  3422,  4812,  1367,  5078,  1462,  3013,  2560,  2224,
    5296,  1366,  1363,  1364,  1367,  1162,  1458,  1324,  1363,  1364,
    4843,  3997,   731,   237,  3652,  3874,  4189,  4193,  1163,  3939,
    1620,  1762,  2448,  4003,  1709,  3120,  4204,  4205,  1363,  1364,
    4965,  2312,  3119,  4370,  1366,  2315,  1178,  1367,  5410,  4350,
    2319,  2886,  1366,  1860,  1163,  1367,  1366,  5379,  5255,  1367,
    1581, -1857,  4378,  2298,  1266,  1366,  1883,  2067,  1367,  1865,
    3714,  1096,  2438,  2439, -1857,  -739,  1227,  3130,  1763,  2334,
    2335,  1366,  1474,  4618,  1367,  3893,   836,  1366,  2888,  3009,
    1367,  3010,  -962,  5404,   981,  3651,  1615,  5285,  3728,  3729,
    3730,  3731,  3424,  1168,  2098, -1857,  3106,  2434,  3481,  4462,
    1744,  3553,  1807,  2271,  1480,  4995,  2573,  2208,  1366,  5297,
    1366,  1367,  5310,  1367,  2121,  1363,  1364,  1093,  2959,  1330,
    1366,  2263,  3867,  1367,  4357,  1366,  1745,  2887,  1367,  1099,
    1099,  1366,  1129,  4663,  1367,  -810,  1172,  1146,  4371,  1230,
    1407,  3120,  3987,  4667,  1366,  3644,  2392,  1367,  2139,  1636,
    2138,  4670,  3653,  3780,  1884,  3602,  1213,  4133,  5069,  5070,
    2885,  1125,  2751,  5144,  3629,  5017,  3682,  1366,  3788,  2584,
    1367,  1953,  3654,   934,  1078, -2935,  4835,  1363,  1364,  1269,
    3980,  1450,  3191,  3685,  3191,  3655,  3545,  4716,  1218,  1218,
    3940,  1094,  3878,  3903,  4138,  1662,  1286,  1408,  4251,  1910,
    1360,  1553,  1366,  4713,  2764,  1367,  1366,  3671,  1366,  1367,
    4463,  1367,  4927,  1239,  1153,  4389,  3424, -2121,  3666,  1366,
    1411,  1366,  1367,  3663,  1367,  2978,  1414,  1415,  1416,  3417,
    2452,  1419,  1420,  2952,  2453,  1423,  1459,  1425,  1426,  1427,
    1369,  4268,  4114,  4322,  4116,  1078,  2940,  1366,  4281,  2455,
    1367,  1366,  1369,    42,  1367,  4626,  3871,  1930,  1366,  3595,
   -2122,  1367,  1369,  2147,    42,  5298,  1366,  1610,  3656,  1367,
    3889,  1146,  3552,  1361,  2749,  1229,  1366,  1657,  1374,  1367,
    4999,  1356,  5081,  1459,  1862,  1577,  2847,  4264,  2389,  3579,
    3753,  1357,  4299,  2911,  2912,  1369, -2342,  1464, -1857,  3786,
    2710,  3789,  2960,  1369,  3337, -1857,  1485,  1369, -2936,  2940,
    1877,  3349,  1490,  1417,  3973,  2207,  1369,  4765,  1422,  1366,
    4191,  2475,  1367,  2571,  2217,  1877,    49,  2715,  1765,  2886,
    3927,  2475,  1369,  3932,  3130,  3743,  4106,    49,  1369,  4990,
    3944,   987,  1659,  3077,  3078,  3949,  3950,  3951,  3952,  3953,
    1704, -2935,  3751,  3432,  1518,  4372,  3960,  3793,  2732,  1325,
    1081,  3967,  1536,  1541,  3970,  5498,  2844,  1093,  1146,  1369,
    1366,  1369, -2180,  1367,  1468,  3178,  1366,  1463,  1240,  1367,
      54,  1369,  1568,  4117,  3064,  4660,  1369,  4028,  1483,  1146,
    3657,    54,  1369,  -726,  2729,  4573,  1366,    55,  3066,  1367,
   -1063,  4557,  3338,  4654,  5236,  1369,  1505,  1453,    55,  4123,
    2854,  1657,   966,  2824,  5283,  4025,   913,  2825,  2371,  1363,
    1364,  1877,  1154,  2071, -1857,  1146,  2776,  2072,  1369,  2740,
    2780,  3107,  3108,  1146,  1146,  3451,  1362,  4413,   966,  5108,
    1400,  1401,  1402,  1403,  4483,  1043,  -405,  1766,  3421,  1174,
    -727,  1044,  2802,  1146,  3017,  4054,  4440,  4055,  5340, -1078,
    2801,  2475,  3658,  1369,  4085,  1170,  1722,  1369,  3350,  1369,
    3675,  4073,  2750,  4074, -1857,  2452, -1972,  2071,  2475,  2453,
    1369,  2768,  1369,  1366, -2936,  1702,  1367,  -600,  4088,  2475,
    1369,  1723,  2845,  2804,  2455,  1099,  1626,  2805,  -585,  1747,
    2475,  1408,  1877,  2730,  1113,  3933,  4577,  4578,  1369,  4306,
    3608,  3972,  1369, -2842,  1179,  2475,  1753,  1363,  1364,  1369,
    2301,  5439,  1582,  1363,  1364,  4120,  5256,  1369,  1363,  1364,
    2816,   965,  1356,  2435,  1661,  4169,  2755,  1369,  1877,  1363,
    1364,  1522,  1651,  1904,  2888,  1366,  2756,  2731,  1367,  4574,
    4655,  1177,  4489,  3406,  1625,  4714,  1146,  2761,  -627,  -616,
    2475,  2475,  4503,  3863,  3864,  1718,  2821,  2371,  1127,  4691,
    2822,  -658,  3085,  2475,  1175,  5515,  1912,  4464,  1742,  1127,
    1369,  1888,  1146,  5535,  1749,  1750,  2182,  1146,   114,  1754,
     121,  3058,  5299,  2766,  1853,  4468,  1854,   723,   116,  4134,
    1099,  5329,  5273,  1705,  4679,   935,  1492,  1872,  4139,  1923,
    1081,  4585,  2359,  3983,  4240,  4162,  1214,  1894,  1895,  1896,
    1176,  3097,  1899, -2112,  4357,  1903,  1146,  2041,  1908,  1909,
    2744,  1369,  2767,  4255,  1855,   966,  2400,  1369,  3069,  3008,
    3267,  3560,  3733,  3984,  4256,  3561,  2774,  2770,  1363,  1364,
    4586,  1863,  1162,  4468,  1363,  1364,  4678,  1369,  3422,  1218,
    1363,  1364,  1286,  4634,  4867,  3039,  2394, -3001,  2507,  2015,
    3609,  1174,  4517,  4295,  4296,  4602,  1286,  2782,  2718,  1864,
    4059,  1429,  1171,  1356,  4060,  3070,  1002,  1717,  1717,  1686,
    4225,  5084,  2787,  1357,  3534,  4724,  4616,  4635,  4067,  1363,
    1364,  2719,  4068,  1363,  1364,  1683,  4392,  3735,  4624,  4518,
    3584,  4868,   967,  4628,  1680,  1681,  1627,  3403,  1523,  3401,
     969,  3535,  4845,  1514,  2042,  4560,  1771,  1363,  1364,  2120,
    1771,  3757,  1129,  5052,  4605,  5054,  1771,  3195,   967,  2150,
    2063,  1478,  4432,  2136,  1369,  2791,   969,  1487,   982,  4566,
    1514,  1046,  2397,  2094,  2095,  4393,   913,  2099,  2180,  2081,
    2100,  2101,  2102,  4469,  5274,  2106,  2107,  2109,  2111,  2112,
    2113,  2114,  2115,   240,  4425,  3037,  4568,  3588,  2181,  2097,
    3632,  3633,  1363,  1364,  2886,  3042,  2958,  1366,  3044,  4431,
    1367,  3047,  4086,  1167,  3395,  3715,  4087,  4456,  4125,  3996,
    1146,  1493,  4126,  3026,  1682,  2183,  1369,  2129,  2130,   723,
    2132,  1547,  2134,   723,  1146,  2913,  4270,   723,  2144,  1146,
    1099,  4469,  2149,  1684,  2360,  2870,  2175,  2401,  1914,   966,
    2257,  2508,  4914,  4915,  1763,  1851,  1851,  4012,  2178,  2336,
    1685,  1146,  1852,  1852,  3396,  4470,  2131,  1363,  1364,  1146,
    2135,  3146,  1146,  3397,  2143,  1628,  2193,  2195, -3001,  3404,
    3477,   966,  4490,  2700,  3405,  4257,  3196,  3147,  4182,  3934,
    3935,  1099,  1099,  3689,  2307,  2724,  2725,  2726,  2727,  1218,
    1099,  1099,  3424,  1099,  2219,  1366,  2728,  4206,  1367,  2316,
    4476,  1366,  1889,  5221,  1367,  2139,  1366,  2138,  4287,  1367,
    3191,  4402,  4403,  4474,  3597,  2253,  2485,  1366,  4217,  2792,
    1367,  4263,   966,  1146,  4424,  1040,  1045,  5330,  4519,    42,
    4244,  4457,  2855,  1363,  1364,  1363,  1364,  4917,  2272,  3477,
    2204,  1218,  4215,  2557,  5287,   967,  2280,  3478,  2392,  2216,
    1218,  1856,  2218,   969,  1043,  5275,  2249,  2400,  1215,  3559,
    1044,  2184,   723,   723,   723,  1099,   723,  1146,  1099,  4516,
    5233,  4834,  3734,  1771,  2369,  1174,   240,  2748,  2313,  3719,
     723,  4266,  1146,  3672,  3673,   723,  4921,  5151,  4111,  4177,
     965,  4115,  2847,  1363,  1364,  3178,  3178,  2892,  1794,  2302,
    2303,  2304,    49,  2306,  2384,  1915,  1244,  3736,  2408,  2940,
    1363,  1364,  2485,  2514,  3564,  3565,  3478,  2314,  1172,  3511,
    4414,  1078,  2318,  2062,  2305,  5372,  1366,  2308,  5331,  1367,
    3686,  2426,  1366,  4350,  2392,  1367,  1113,  2351,  1366,  1363,
    1364,  1367,  4587,  4438,  4439,  3690,  3691,  1687,  2959,  3148,
    5393,  2362,  4996,  3651,  1494,  2705,    54,  1146,  1369,  5332,
    4258,  3134,  1363,  1364,  3723,  2446,  3725,  3726,  2533,  2483,
    1363,  1364,  2940,    55,  1515,  1146,  4471,  1366,  3610,  1102,
    1367,  1366,  1363,  1364,  1367,  4507,  3773,  1315,  2196,  2515,
    4643,  1146,  1363,  1364,  4214,  4647,  4664,  2061,   983,  4650,
    3197,  1515,  1146,  4506,  1765,  1366,  3214,  1705,  1367,  4894,
    1363,  1364,  2337,  4433,  4434,  4435,  4704,   989,  4458,  1363,
    1364,  2534,  4442,  1319,  2856,  1763,  3149,  3135,  1408,  1984,
    4836,  2443,  1985,  2404,  4471,  2432,  1146,  2485,  1009,   967,
    5102,  5206,  3570,  1514,  2436,  1363,  1364,   969,  2401,  1406,
    4545,  1406,  3150,  2457,  2458,  3007,  1369,  1385,  3172,  5045,
    1366,  2459,  1369,  1367, -3001,  5503,   366,  1369,   368,  2309,
    2452,   967,  3215,  1611,  2453,  1363,  1364,  1519,  1369,   969,
    3926,  4153,  3928,  3775,  4974,  3774,  1408,  4278,  5152,  2455,
    4844,  2168,  3945,  3946,  3947,  3948,  1162,  3667,  3668,  3669,
    4246,  3954,  3955,  3956,  3957,  3958,  3959,  2535,  3961,  3964,
    3965,  3966,    42,  1171,  3151,  3962,  3971,  3611,  2559,  4813,
    5499,  2546,   967,  2794,  1659,  1366,  1171,  3899,  1367,  3173,
     969,  2310,  2960,  4459,  4394,  5334,  3980,  1100,  5525,  5500,
    1933,  5335,  3900,  2862,  1127,  3568,  3737,  3738,  5212,  3253,
    5374,  1761,  1363,  1364,  1612,  1879,  2402,  1363,  1364,  4768,
    1046,  3537,  4198,  4982,  1676,  2577,  1099,  1363,  1364,  1363,
    1364,  4855,  1758, -2036,  3216,  2273,  3652,  2116,  1363,  1364,
    4715,  1099,  1863,  4717,  4894,    49,  3198,  1369,  2561,  1553,
    3604,  1363,  1364,  1369,  4895,  4199,  1363,  1364,  5153,  1369,
    4894,  1366,  1078,  1366,  1367,  2448,  1367,  1363,  1364,  4933,
    1864,  3174,  4387,  1104,  1099,  4983,  3152,  5148,  1363,  1364,
    4247,  2795,  5336,  1316,  1167,  2579,  2886,  2799,  5125,  3254,
    1759,  1103,  2817,  1363,  1364,  2460,  2885,  1167,  1369,    54,
    2688,  2857,  1369,  2834,  1363,  1364,  1363,  1364,  2274,  3178,
    3241,  4699,  1363,  1364,  3524,  1190,  3217,  2858,  4118,  1320,
    1388,  1366,  3251,  4621,  1367,  4700,  1369,  1934,  5504,  4623,
    1191,  1011,  1880,  2722,  1363,  1364,  1881,  4395,  1366,  1363,
    1364,  1367,   976,  1763,  3683,  1765,  1363,  1364,  1363,  1364,
    1882,  2839,  3688,  3291,  4428,  4741,  1363,  1364,  1363,  1364,
    1363,  1364,  1363,  1364,  1286,  2775,  3986,  1366,  3985,  2851,
    1367,  1363,  1364,  2547,  3653,   240,  5464,  5465,  3680,  1363,
    1364,  1369,  5374,  3322,  2311,  1045,  2403,  3612,  3178,  3178,
    1366,  3255,  2885,  1367,  3654,  4248,   733,  1107,  1366,   734,
    5192,  1367,  1363,  1364,  2404,  4856,  5212,  3655,  4906,  1129,
    1366,  5193,  2838,  1367,  1363,  1364,  2073,  2880,  4065,   784,
    1366,   998,  1146,  1367,  4066,  4793,  1407,  4557,  1407,  4895,
    3526, -2036,  3752,  1129,   977,  2259,  4756,  4757,  1366,  1664,
    1146,  1367,  2863,  1761,  1515,  4895,  1369,  1366,  1363,  1364,
    1367,  4638,  4639,  2117,  5126,  2867,  2859,  4640,  2871,  2757,
    4200,  4212,  4213,  2914,  2911,  2912,  5264,  4079,  4216,  1603,
    4303,  1356,  4303,  1366,  2433,  4984,  1367,  1363,  1364,  2118,
    2869,  1357,  4304,  2437,  4304,   789,  1883,  1127,  1374,  2074,
    3656,  4090,  3175,  2954,  2955,  2405,  4305,  1099,  4305,  1172,
    2745,  2950, -2036,  1366,  5107,  1571,  1367,   978,  1054,  1027,
    1054,  4316,  1172,  4517,  1099,  3551,  4512,  4701,  4513,  1125,
    1078,  2977,  1369,  2275,  1369,  1520,  1363,  1364,  1762,  1665,
    1207,  3871,  1099,  1286,  1146,  1363,  1364,  3218,  1127,  3562,
    2519,  3563,  2940,  2940,  4907,  1137,  4091,  3006,  2940,  2922,
    4518,  1510,  1986,  2927,  4144,  1987,  2878,  1572, -2112,  1363,
    1364,  1099,  1129,  3018,  1099,  2885,  5238,  4000,  5248,  5242,
    4239,  2259,  1146,  1218,  4245,  1763,  1146,  1146,  4357,  1138,
    1366,  1672,  1369,  1367,  1884,  1366,   999,   801,  1367,  2536,
    2913,  1218,  4178,  4919,  4920,  1366,  3074,  1366,  1367,  1369,
    1367,  1363,  1364,  1765,  1146,  1146,  1366,  1140,  2980,  1367,
    1099,  4572,  3657,  4452,  3592,  1363,  1364,  1724,  1146,  1366,
    2941,  1185,  1367,  2946,  1366,  4124,  1192,  1367,  1369,  5194,
    5113,  5265,  1911,  1604,  1146,  1366,  3317,  1761,  1367,  4696,
     966,  1363,  1364,   966,  1043,  2119,  1366,  3863,  3864,  1367,
    1044,  1369,  1043,  1363,  1364,  1188,  3437,  1193,  1044,  1369,
    1195,  1366,  1363,  1364,  1367,  3035,  1363,  1364,  1129,   817,
    4696,  1369,  1366,  1666,  1366,  1367,  5114,  1367,  2276,  1725,
    1366,  1369,  3088,  1367,  3658,  2758,  3608,  4795,   733,  2860,
    2041,   734,  1890,  2041,  2746,  1099,  1099,  2277,  2584,  1369,
   -2036,  4267,  1366,  2520,  2075,  1367,  4170,  1366,  1369,  1933,
    1367,  1511,  1674,  4424,  1366,  3057,  1366,  1367,  1675,  1367,
    1702,  1693,  1200,  4013,  1366,  3593,  1366,  1367,  1366,  1367,
    1366,  1367,  4243,  1367,  1369,  4827,  4963,  1509,  1161,  1366,
    4896,  4897,  1367,  2765,  5394,  4122,  4964,  1366,  2364,  4274,
    1367,  2365,  1078,  1146,  3045,  3046,  5397,  3318,   966,  4519,
    2778,  1129,  3115,  1202,  1369,  1933,  4979,  5268,  5269,  1763,
    1366,  1891,  1933,  1367,  2718,  1398,  1399,  1400,  1401,  1402,
    1403,  2443,  1366,  1203,    42,  1367,  1363,  1364,  1912,  2779,
    1162,  1146,  2559,  1933,  3528,  2875,  1933,  2719,  1718,  1718,
    1385,  2876,  1676,  4943,  3128,  5115,  5198,  1363,  1364,  1099,
    3249,  1385,  2783,  4162,  1726,  4162,  1366,  4696,  4130,  1367,
    2790,  1913,  3863,  3864,  4129,  2041,  2940,  1694,   733,  1163,
     221,   734,  2793,  5293,  3566,  1765,  1948,  3184,  3863,  3864,
    3238,  1369,  2796,  3190,  5218,  1366,  1369,  3294,  1367,  3203,
    3205,  3208,  3209,  3210,  3211,  3212,  1369,    49,  1369,  3221,
    2808,  3232,  4307,  3127,  5246,  5247,   366,  1369,   368,  2826,
    4275,  3232,  4398,  3242,  3243,  5294,  3232,   995,  3247,  3248,
    1369,  1146,  3250,  3232,  5390,  1369,  5219,  4399,  3260,  4965,
     844,  3263,  2002,  2042,  1366,  2833,  1369,  1367,  3273,  2006,
    2366,  3274,  1099,  1366,  1363,  1364,  1367,  1369,  3193,  1363,
    1364,    54,  3289,  4146,  3232,  4896,  4897,  1677,  1146,  3213,
    2028,  4947,  1369,  2068,  5567,  3233,  4952,  1366,    55,  4192,
    1367,  4896,  4897,  1369,  1099,  1369,  5146,  5147,  4203,  1211,
     967,  1369,  5072,   967,  3232,  3327,  1078,  5075,   969,   219,
    1046,   969,  2041,  4680,  1766,  3264,  1385,  1733,  1046,  3272,
    5430,  3275,  4671,  1369,  1213,  3267,  3276,  3277,  1369,  1366,
    2485,  5384,  1367,  1757,  2488,  1369,  4681,  1369,  3720,  2418,
    3403,  2419,  3401,  1366,  2478,  1369,  1367,  1369,  1583,  1369,
    1013,  1369,  1758,  3319,  1363,  1364,  1904,  2742,  2085,  2489,
    1369,  2743,  2836,  1388,    25,  3721,  5145,  3062,  1369,  1366,
    1389,  1390,  1367,  3160,  1388,  4682,  3868,  4024,  1584,  4058,
    5127,  1366,  1054,  1027,  1367,  1409,  5456,  5456,  4061,  1765,
    1366,  1369,  2558,  1367,  1366,  4031,  2769,  1367,  1518,  3178,
    1914,  5488,  1518,  1369,  4801,   220,  4069,  4306,  1216,  4306,
    1759,  4947,  3432,  1054,  1027,  4952,  4046,  4075,   967,  1099,
    4672,  5028,  3112,  1099,   221,  1220,   969,  3883,  4076,  1585,
    4317,  3850,  4307,  1586,  1005,  3886,  5199,  1369,    42,  1146,
    3890,  2875,  1005,  4077,  5029,  3126,  3622,  3061,   723,  3440,
     723,   723,   723,  5003,  4078,  5004,  4080,  3178,  3178,    64,
    2381,  2382,  4083,  2383,  4673,  4323,  1369,  3434,  4324,  1146,
    1760,  4947,  3500,  1146,  1222,  1045,  4952,  1014,  3381,  4218,
    1054,  1027,  3385,  1045,  4089,  3438,  3161,  3441,  3442,  4092,
    2558,  2747,  4466,  1224,  4571,  2584,  4094,   222,  4096,  1225,
    1444,  2600,  2601,  3145,  1455,  2490,  4600,  4601,  4098,  1226,
    4099,    49,  4100,  1856,  1366,  1369,  2771,  1367,  1231,  1388,
    2584,  4500,  1392,  1393,  1369,  4479,  4480,  3580,  1234,  4501,
    1235,  3134,  5094,  1392,  1393,  1366,  3099,  3100,  1367,  2772,
     223,  3101,  3102,  2000,  1389,  1390,  3582,   219,  1369,  1114,
    2086,  4495,  4502,  1829,  3543,  1236,  1830,  1015,  2063,  3797,
    1241,  3587,  1242,  1761,  4648,  3623,  3624,  1915,  4718,  3861,
    3862,  4720,  4721,  4253,  4254,  4987,  2041,    42,    36,  3308,
    3309,  1243,    55,   224,  1436,  4148,  1771,  5363,  1587,  1245,
    1369,  1246,  4761,  4762,  4763,  4764,  1115,  3135,  4791,  1247,
    3572,  3573,  5095,  1356,  1369,  4127,  1640,  1641,  1250,  1644,
    1146,  1645,  4488,  1357,  4028,    42,  1362,  1146,  1251,  4852,
    4853,   784,  3775,  1704,  3774,  2784,  4446,  4794,  3136,  2584,
    1369,  4484,  1146,  1413,  2175,  4444,  4445,  1366,  1408,  2175,
    1367,  1418,  1369,  3596,  1146,  2617,  2618,  1252,  1762,  1297,
      49,  1369,  2785,  2786,  1253,  1369,  2584,  2584,  3162,  1129,
    1129,  3863,  3864,  4419,  4420,  5227,  1588,  1437,  3163,  1314,
    4525,  1116,  1438,  1099,  1254,  3164,  4800,  1255,  1392,  1393,
    1099,  1099,  1328,  1329,  1421,  4802,  2788,   789,    49,  1448,
    2584,  1256,  1451,   764,  1385,  1763,  2829,  1454,  1286,  3137,
    2584,  1257,  1456,  2922,  3623,  3624,  3643,  2918,  1099,  4803,
    3434,  2919,  5537,  5538,  1260,  1439,   225,  5095,  1384,  1356,
    3055,    55,  1366,  5443,  3056,  1367,  1040,  3304,  3307,  1357,
    1589,  1440,  2204,   966,   966,   966,   784,  1095,  1097,  2216,
    3619,  1385,    54,  3485,  5096,  3134,  3557,  2584,  1758,  4302,
    2584,  4804,  3783,  3625,  3388,  1043,  3784,  1441,  4081,    55,
    1146,  1044,  2584,  3705,  1428,  3707,  4297,  2087,  1518,  1262,
    4298,  4685,  3986,    42,  3985,  1369,  1764,  1263,   784,  3165,
    3700,  3138,  4326,  2088,  1264,  3572,  5493,  1267,  5495,   801,
    4331,  4805,  2031,  2032,  4451,   226,  1369,  4364,  4298,  3388,
    2331,  2332,   789,  4893,  5518,  1129,  1759,  1268,  1270,  5030,
    4524,  3135,  5059,  1424,  2584,  1432,  5061,  1397,  1398,  1399,
    1400,  1401,  1402,  1403,  1271,  4027,  1385,  1396,  1397,  1398,
    1399,  1400,  1401,  1402,  1403,   788,  4547,  1435,  1272,  1146,
    3054,  3785,  3136,  5031,   789,  5547,    49,  4561,  1273,  5553,
    5554,  4562,  1590,  1099,  2443,  3756,  1274,  4822,  1275,  5207,
     227,  5547,   228,  1016,  1017,    42,  1018,  1019,  1020,  4610,
    4612,   817,  1078,  4611,  4611,   794,  3166,  4558,  1276,  3767,
   -2112,  4841,  4666,  1277,  3278,  1021,  3279,  5547,  1672,  1280,
   -2112,  1518,  3625,  4666,  1591,   818,   229,  1388,  1369,  3389,
    3623,  3624,  1433,  1281,   801,  4645,  3390,  4652,   230,  4646,
    1287,  4653,  1146,  3137,  1761,  4743,  3190,    55,  3190,  4744,
    1288,  3222,  1442,  4745,  3203,  1289,  1385,  4746,  3806,  3280,
      64,  1117,  2417,  2418,  1386,  2419,  5091,  3232,    49,  1557,
    1290,  1291,  1443,  4748,  1388,  3869,   801,  4749,  1292,  1293,
    3006,  1518,  3281,  1118,  4751,  1765,  1446,  5257,  4752,  1761,
    1387,  1294,  1146,  1295,  1298,  2638,  2639,  5032,  3877,  1299,
    1300,  1301,  1396,  1397,  1398,  1399,  1400,  1401,  1402,  1403,
     764,  3388,  1447,  1369,  1302,  2041,   817,  3223,  3232,  4753,
    2041,  3282,    54,  4754,  1119,  3138,  3232,  1303,  1558,  1304,
    3232,  3232,  3139,  4170,   231,  1305,  1673,  1460,  4755,    55,
     818,   812,  4653,  4760,  2600,  2601,  1099,  4653,  3224,  1674,
    4783,  1146,  1146,   815,  4786,  1675,  4796,   816,   817,  1388,
    2584,  1559,  4819,   967,   967,   967,  2584,  3988,  1306,  1307,
    3391,   969,   969,   969,  1762,  1308,  1763,  1309,  1310,  2188,
    1389,  1390,  2577,  5033,   219,  1120,  1392,  1393,  4685,  1465,
    4869,  1046, -2112,  1311,  4646,   784,  1312,  1146,  1313,  1317,
    2469,  5034,  2471,  2472,  1766,  1218,  4885,  2474,  1174,  4889,
    4653,  1466,  4892,  4653,  1318,  3391,  4653,  1321,  1127,  3225,
    2487,  1763,   844,  2493,  2494,  5035,  2496,  1758,  1322,  2499,
    2500,  2501,  2502,  1392,  1393,  3739,  2505,  1326,  1146,  1676,
    4908,  2517,  1330,  2509,  4909,  3975,  2522,  2523,  2524,  2525,
    2526,  1331,   788,  2478,  2530,  2531,  1391,  1332, -1857,  1388,
    2541,   789,  2543,  2544,  2545,  1333,  2548,  2549,  2510,  2551,
    1334,  1761,  2554,   966,  1099,  2555,  2556,  1099,  3388,  3806,
     739,  2913,  1335,  5121,  1336,  1759,  5000,  1337,  2617,  2618,
    1356,  4015,   794,  3222,  4910,  1338,  3434,  -808,  4909,   221,
    1651,  3226,  1339,  1472,  4956,  3434,  3434,  2478,  4653,  5042,
    1127,  3434,  5062,  5043, -1857,  1340,  4646,  1341,  1392,  1393,
    5074,  1385,  2479,  1342,  3784,  5097,  1343,  4875,  4876,  1344,
    4878,  1394,  4928,  4005,  1345,  1346,  4007,   844,  2585,  2586,
    2587,  2588,  2589,  2590,  2591,  1347,  3139,  1348,  1349,  3134,
    4882,  4883, -1857,  1078,  1677,  1350,  1045,   836,  5149,  3223,
    1351,  4686,  5150,   801,  4687,  1412,  1479,  3692,  3693,  3694,
   -1857,   740,  2511,  3283,   842, -1857,  1444,  2509,  3389,   844,
    1560,  1476,   845,  1666,  1488,  3390,  1497,  2478,  4160,  1499,
    3224,  1385,  1501,  3543,  1509,  5307, -1857,  3391,  1078,  5308,
    1534,  1542,  2510,  1763, -1857,  3976,  5312, -1012,  1078,  5315,
    3911,  3652,  4121,  4611,  1863,  3135, -1857,  5316,  1392,  1393,
    5317,  1548,  1551,  5326,  5318,  5036,  -808,  5327,   812, -1857,
    2188,  5398,  2480,  5529, -1857,  5399,  1765,  5530,  1761,  4788,
    5208,  1556,  1864, -1857,   816,   817,  3172,  1578,  1579,  2922,
    1004,  1171,  1580,  4143,  1146,  1595,  1129,  1129,   741,  1596,
    1099,  3225,  1597,  1600,  1601,  1129,  1129,  1129,  1863,  1602,
    1463,  1146,  3975,  1629,  1630,  3232,  2042,  1633,  1642,  4171,
    3434,  1765,  1398,  1399,  1400,  1401,  1402,  1403,  1632,  1649,
    1356,  1647,  1146,  1648,  1650,  1652,  1864,  1653,  1654,  1656,
    1651,  1663,  1689,  1660,  1099,  1099,  2511,  1671,  1385, -1857,
    1690,  1691, -1857,  1099,  1099,  1099,  1692,  3173,  1703,  4152,
    1707,   999,  3227,  1762,  1388,  1730,  1561,  1396,  1397,  1398,
    1399,  1400,  1401,  1402,  1403, -1857,  1395,  1732,  4228,  3222,
    4234,  1856,  3268,  3226,  1756, -1857,  1897,  1562,  1863,  3653,
    1898,  1900,  1901,  1406,  1933,  1940,  1129,  1951,  4227,  3222,
    4227,   742,  3287,  1954,  3391, -1857,  1989,  1999,  2000,  3654,
    1763,  3134,  1563,   967,  4250,  5020,  1864,  5021,  5022,  2512,
    1078,   969,  3655,  2001,  2022,  4688,  4689,  2039,  1564,  2051,
    2052,  2064,  2065,  4690,  1388,  2066,  2513,  2077,  2096,  3174,
    1766, -1857,  2103, -1857,  1099,  3223,  4265,  5053,  2638,  2639,
    2104,  2042,  1396,  1397,  1398,  1399,  1400,  1401,  1402,  1403,
    2133, -1857,  2137,  2177,  2151,  3223, -1857,  3134,  4994,  2198,
    4627,  2199,  3976,  2481, -1857,  2200,  3224,  3135,  2201,  2211,
   -1857,  2203,  2212,  2223,   836,  3190,  2213, -1857,  4686,  2240,
    -808,  4687,  2243,  4294,  2254, -1857,  3224,  2258, -1857,  2259,
    2264,   842,  -808,  1765,  2041,  3656,   844, -1857,  3136,   845,
     743,  2261,  2478,  2266,  2268,  2270,  1511,  2271,  2296,  2300,
   -1857,  2321,  2320,  1392,  1393, -1857,  2323,  2479,  4581,  2322,
     744,  2325,  2328,  3135, -1857,  2338,  2339,  2341,  2352,  5101,
    1385,  2354,  2356,  2353,  2358,  2188, -1857,  3225,  2370,  2372,
    1385,  1388,  1396,  1397,  1398,  1399,  1400,  1401,  1402,  1403,
    2374,  2375,   916,  4230,  3136,  4373,  2376,  3225,  2377,  1964,
    2513,  2378,  1666,  2386,  2387,   745,  1717, -1969,  2042,  3137,
     746,  4381,  4382,  2392,  2410,  2423,  2428,  1078,  2427,  2447,
    2461,  2482,  2462,  1392,  1393,  2464,   764,  2465,  2473,  2477,
   -1857,  3232,  3232, -1857,  3227,  3327,  2492,  4408,  2478,  2497,
    4412,   747, -1857,  2498,  2503,   748,  2504,  2506,  2516,  2518,
    2521,   917,  2529,   749, -1857,  2528, -1857,  3657,  2532,  3226,
    2539,  -808, -1857,  2540, -1857,  3137, -1857,  2480,  1375,  1376,
    2542,  2550,  2552,  2553,  2565,  1409,  2563,  5211,  2789,  3226,
    2564,  3072,  2566,  5295,   918,  2569,  2570,  2584,  4070,  2580,
    3175,  3138,  2581,  2689,  2691,   750,  2583,  2692,  4294,  2693,
    1765,  2695,  2696,  1863,  4685,  1968,  -808,  2698,  2697,  1377,
   -1857,   784,  2699,  4294,  2702,  4436,  2704,  2733,  2717,   919,
    2723,  2735,  1378,  2736,  2737, -1857,  2752,  2754,  4335,  3658,
    2759,  1864,  1099,  2760,  2762,  2763,  5303,  2769,  2777,  2773,
    1392,  1393,  4688,  4689,  2781,  2806,  2797,  3138, -1857,   751,
    4722,  2807,  2798,  2803,  2818, -1857,  2819,  2820,  2830,  5382,
    2828,   912,  1379,  2827,  2840,  -808, -1857,   962,   788,  2846,
     920, -1857,  4708,  1388,  1403,  1380,  4337,   789,  4338, -1857,
    2848,  2849,  1385,  1388,  2850,  2873, -1475,  2864,  3188,  1041,
    2479,  4450, -1857,  2868,  2874,  4582,  3652,  1646,  2877,  2886,
   -1857,  2890,  1381,   912,  1124,  2893,  2896,  2902,   794,   912,
    2897,  2898, -1857,  1969,  2899,  3239,  4037,  1972,  4041,  1766,
    2900,  2901,  2915,  2916,  1973, -1857,  4339, -1857,  2917,  1553,
   -1857,  2947,  3252,  2920,  2949, -1857, -1857,  1877, -1857, -1857,
   -1857,  2956,  2969,  2957,  2964, -1857,  2967,  1396,  1397,  1398,
    1399,  1400,  1401,  1402,  1403,  2973,  2246,  2974,  4615,  1129,
    2975,  2175,  3001,  3002,  1523,  1522,  1382,  3020,  3029,  3297,
    3298,  3032,  2042,  3021,  3022,  5211,  3023,  3311,  3024,   801,
    3227, -1857,  3034,  3025,  3421,  -808,  3036,  3038,  3043,  1758,
    1782,  1783, -1857, -1857,  3048,  3050,  3053,  3054,  -153,  1286,
    3227,  2922,  3059,   921,  1146,  1974,  3060,  1099, -1857,  3071,
    3067,  3434,  3139, -1857,  2041, -1857,  3073,  1396,  1397,  1398,
    1399,  1400,  1401,  1402,  1403,  2928,  1785,  5510,  5232,  3079,
    3080, -1857,  1392,  1393,  3653,  1676,  3087,  3091,  3086,  2041,
    1788, -1857,  1392,  1393,   812,  3094,  1789,  1790,  3095,  3118,
    1791,  2929,  5533,  3096,  3654,  3123,  3143,  3113,  2041,  3155,
    4227,   817,  1518,  3131,  -982,  3156,  2930,  3655,  3139,  1976,
    3158,  5510,  3292,  3157,  1793,  3299, -1857,  3244,  2041,  2931,
    3246,  3312,   922,  3314,  3320,  1388,  2482,  3321,  1794,  3006,
    3328,  5533,  1795,  3330,  3383,  3331,  3332,  3333,  3334,  5460,
    3335,  4661,   923,  3336,  4294,  3339,  4644,  3340,  3341,  4294,
    3342,  3343,  3344,  4294,  3345,  3346,  3347,  3348,  3351,  -658,
    3352,  1800,  3806,  3387,  3353,  3354,  3355,  3356,  3414,  3357,
   -1857,  2932,  2933,  1146,  1396,  1397,  1398,  1399,  1400,  1401,
    1402,  1403,  3358,  3359,  3360,  3361,  3362,   924,  2153,  3363,
    3656,  3364,   746,  3365, -1857,  3366,  1099,  3367,  3368,  2934,
    1146,  3369,  3370,  3371,  3372,  3373,  1389,  4340,  3374,  3375,
     925,  -808,  4341,  4583,  3376,  3377,  3384,  2705,  4342,  3411,
    1686,  3409,  3420,   926,  3445,  3454,  3487, -1857,  3600, -1857,
    3061, -1857,  3501,  3503,  3422,   927, -1857,  1265,  1804,  3518,
    1099,  4726, -1857,  3548,  3488,  1805,  3489,  3558,  1315,  3550,
    1977,   928,  5565,  4528,  3555,  4677,  3583,  1319,  4343,  2225,
    3601,   723,  3598,  4529,  3603,  1806, -2329,  2935,  1979,  2226,
    5376,  3599,  3606,  4530,  3617,  3621,  3636,   929,  3423,  2227,
    3637,  3638,  3650,  4408,  1392,  1393,  3642,  4531,  4532,  4533,
    3651,  -961,  3664,  2228,  2229,  2230, -1857,  4335,  4736,  4725,
     836,  3676,  3670,  4534,  4686,  4300,  4301,  4687, -1857,  2231,
    4308,  2154,  3657,  4294,  3687,  2155,  3697,   842,  3701,  4776,
    3703,  2936,   844,  3704,  1808,   845,  3706,  3709, -1857,  3712,
   -1857,   930,  3711,  3716,  -808,  3718,  3434,  4344,  3717,  3724,
    3130,  4336,  1809,  3702,  3747,  4337,  4330,  4338,  3761,  3762,
    3763,  3764,  4360,  4362,  4363,  2156,  3722,  4037,  3765,  2479,
    3790,  1409,  3766,  3768,  3791,  3792,  1396,  1397,  1398,  1399,
    1400,  1401,  1402,  1403,  3800,  2157,  1396,  1397,  1398,  1399,
    1400,  1401,  1402,  1403,  3658,  5551,  3801,  4345,  3799,  3871,
    3876, -1857,  3880,  3794,  3879,  4339,  3904,  1813,  1170,  1170,
    3884,  3911,  3887,  1125,  3888,  3907,  1814,  1146,  3895,  3908,
    3909,  3910,  3913,  4829,  3916,  3998,  3919,  3922,  3991,  3925,
    3974,  2042,  3989,  4017,  3999,  4028,  4171,  4838,  4038,  3146,
    4032,  1146,  4034,  4042,  4043,  4045,  2153,  4049,  4047,  4051,
    2158,  4050,  5376,  4052,  4346,  3147,  3434,  4062,  4053,  4063,
    4584,  4101,  4109,  4104,  1518,  4105,  4110,  4112,  3424,  1409,
    1325,  3543,  1807,  4128,  1779,  1078,  4136,  4145,  4137,  4154,
    4141,  4159,  4158,  -961,  4175,  4866,  4176,  4172,  4179,  4180,
    4194,  4195,  4208,  4183,  4196,  1819,  5373,  4184,  4185,  4186,
    4187,  4188,  4209,  4219,  4220,    42,  3863,  3864,  4222,  4223,
    4232,  3006, -1857,  4221, -1857,  4231, -1857,  4235,  4236,  4237,
    4249, -1857,  4238,  4294,  4252,  4261,  4267,  4294,  4276,  4272,
    4273,  4277,  4280,  4282,  4376,  1146,  5562,  4288,  4688,  4689,
    4535,  4285,  4289,  -982,  4314,  2159,  2232,  4325,  4332,  4365,
    4369,  1820,  1821,  1822,  1823,  4385,  4347,  4536,  4397,  1824,
    4386,  4430,  5562,  2233,  4443,  4454,  4473,  4453,  4954,  2154,
    4449,  4461,  4492,  2155,  4477,  4475,  1825,  4485,    49,  1826,
    -810,  2160,  1146,  4509,  4491,  4504,  4505,  4514,  1396,  1397,
    1398,  1399,  1400,  1401,  1402,  1403,  4508,  4527,  4544,  4348,
    4349,  4549,  4543,  4551,  3758,  2161,  3759,  4555,  4554,  4556,
    4557,  4567,  4563,  2156,  4565,  1828,  4993,  4575,  4408,  4597,
    4412,  4938,  4576,  4570, -1750,  4579,  4580,  3148, -1749,  4607,
    2162,  4608,    54,  2157,  4619,  3434,  2364,  4620,  4622,  1146,
    1363,  1364,  4629,  4630,  4631,  1389,  4340,  4632,  4641,    55,
    3755,  4341,  4658,  1099,  4662,  5417,  4668,  4342,  4697,   912,
    4649,  -811,  4698,  4703,   912,  3195,  4710,  4712,  4359,  4719,
    5417,  4728,  4727,  4730,  2163,  4731,  4740,  4734,  4537,  4737,
    4738,  4747,  4759,  4772,  5427,  4769,  4779,  4777,  4781,  4798,
    4782,  4783,  4797,  4784,   912,  4538,  4785,  4343,  2158,  1146,
    4789,  2234,  3455,  4790,  3149,  2164,  1099,  4808,  4809,  4792,
     912,  4799,  4970,  4807,  4815,  4820,  1146,  4818,  4821,  4823,
    4824,  4825,  4831,  3232,  4832,  3232,  5040,  1389,  1390,  3456,
    3150,  4839,  4842,  4846,  4847,  4849,  5459,  1831,  1960,  1961,
    1962,  1963,  1964,  4863,  4851,  4611,  4864,  4870,  4873,  4874,
    5417,  4877,  4879,  4880,  4884,  4886,  4905,  4539,  1167,   815,
    5482,  1834,  1835,  2235,  4912,  4998,  4918,  4922,   912,   912,
    4923,   912,   912,  3898,  4540,  4786,  4344,  3902,  4929,  3457,
    2236,  4931,  3458,  4940,   912,  4935,  5056,  4941,  4953,  4957,
    3459,  5502,  3151,  2159,  4960,  4971,  4973,  4959,  4976,  4972,
    5417,  4981,  5417,  4977,  4988,  4992,  4997,  4978,  5005,  3460,
    5009,  5012,  5023,  5057,  4408,  4408,  2876,  5066,  5026,  5071,
    3425,  5068,  5077,  -658,  3720,  5417,  4345,  5090,  5088,  2160,
    5051,  5014,  4989,  5010,  4776,  5060,  5104,  5085,  5086,  4856,
    5131,  5142,  5106,  5087,  5124,  1965,  1966,  1967,  1968,  3992,
    3993,  3994,  3995,  2161,  5133,  5134,  3461,  5154,  5201,  5157,
    5417,  5417,  5205,  5122,  5089,  5569,  5213,  5215,  5092,  5109,
    5216,  5110,  3462,  5196,  5111,  5112,  5116,  5040,  2162,  5117,
     912,  3539,  5123,  4346,  3543,  5128,  5139,  5228,  5195,  5220,
    5229,  5236,  5218,  5219,  3152,  5259,  5250,  1718,  -544,  5235,
    5277,  5279,  5280,  5281,  5282,  5289,   962,  5292,  5306,  5311,
    5304,  5288,  -562,  5313,  5343,  5340,  5368,  4294,   912,  5371,
    5384,  5370,  2163,  5369,  5385,  5386,  5388,  3463,  5392,  5017,
    5402,  5405,   962,  5406,  5413,  3863,  3864,  5414,  5418,  5426,
    5431,  5434,  5437,  5438,  5439,  1041,  3464,  5444,  5449,  5448,
    5446,   884,  5452,  2164,  3115, -2787,  1969,  5461,  1970,  1971,
    1972,  5463,  5470,  5473,  5475,  5483,  5490,  1973,  5485,  5486,
    5491,  5496,  5511,   733,  5501,  5517,   734,  5521,  5492,  5523,
    2042,  5526,  5527,  5226,  5536,  4347,  5543,  5540,  5541,  5550,
    3327,  3327,  5552,  4990,  5570,  5272,  4132,  4227,  3915,  1132,
    4937,  3924,  4939,  3918,  3943,  4942,  3921,  4429,  1366,  -810,
    1924,  1367,  5249,  3465,  3466,  3467,  4948,  4279,  4958,  5200,
    3468,  5284,  5424,  3469,  5254,  5458,  2463,  5083,  4348,  4349,
    5203,  5571,  5545,  1091,  5263,  1613,  3634,  3591,  4542,  5270,
    5168,  5169,  5171,  5555,  5467,  5172,  5174,  5411,  1974,  5468,
    5457,  5175,  5176,  5325,  5423,   114,  5328,   121,  5422,  5177,
    4441,  5178,  3181,  5179,  1767,   116,  3187,  4131,  5182,  5183,
    4408,  5184,  4758,  4642,  3382,  3470,  3471,  4770,  4011,  4010,
    4014,  4613,  5395,  5015,  4888,  5436,  5401,  5400,  5322,  5141,
    3144,  4771,  3302,  4009,  4656,  4707,  4657,  4318,  4368,  4366,
    4911,  3472,   966,  4709,  4103,  5407,  5143,   912,  5073,  5041,
    5076,  1975,  1976,  1960,  1961,  1962,  1963,  1964,  5027,  5222,
    5050,  3798,  4904,  2721,  1146,  4669,  4766,  1146,  4447,   962,
    3305,  3745,  3732,  4001,  4926,  3306,  3049,   912,   912,  3303,
    5344,  2445,  4384,  3870,  2416,  3620,   912,   912,   912,   912,
     912,   912,  2690,  3052,  1624,  3912,  3618,  2578,  4553,   912,
     912,  4151,   912,   912,  5040,  3607,  1133,   912,   912,  3000,
    1508,   912,   912,   912,   912,  3473,   912,   912,  3114,  1507,
    2079,  2872,  5226,  5428,   912,   912,  4787,   912,   912,   912,
     912,   912,  3569,  3547,   912,   912,   912,   912,   912,   912,
     912,   912,   912,  2837,   912,  5118,  1998,   912,   912,  5383,
    5433,  3646,   912,  5099,  3647,  3648,   912,   912,   912,  5513,
    1965,  1966,  1967,  1968,  3649,  5534,  5391,  4854,  5007,   912,
     912,   912,  5230,  4404,   912,  4599,  1631,   912,   912,   912,
     912,   912,  5231,  2349,  4861,  3474,   912,  5190,  5322,  4211,
    1950,  4380,  5119,  1977,  1146,  5191,  4980,   912,   912,  5093,
    3117,  5025,   931,  2197,  3578,   912,  1735,   912,   912,  1369,
    1978,  1979,  2879,  3475,  1736,  4828,  2348,  4149,  4150,   912,
     912,   912,  4840,   912,   912,  4564,  4147,   912,   912,   912,
    1737,  4833,   912,   912,   912,   912,   912,   912,   912,   912,
    1729,  1738,  2444,   912,  3040,  1481,  3041,  2326,   912,  1731,
    5528,  4157,  3585,  2972,  3891,  5389,  3476,  4633,  5432,  5472,
    4881,  4814,  5566,   962,  4723,  2971,  5480,  5549,  5008,  4837,
    3931,  1969,  3754,  1970,  1971,  1972,  4872,  2080,  3019,  2282,
    5387,  1049,  1973,  1050,  3681,  5190,  5190,  3030,  2281,  2187,
    3727,  3016,  3614,  5191,  5191,   962,  3015,  1504,  2239,  1679,
    2042,  3412,  3408,  3413,  4991,  1506,  5519,  5103,   755,  2245,
     756,  5524,  1927,   241,  5396,  2409,  1719,  1928,  1929,  4448,
    4729,  1146,  4767,  4955,  4391,  2042,     0,     0,     0,     0,
     963,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   967,     0,  2042,     0,   962,     0,     0,     0,
     969,     0,  5189,   912,     0,     0,  5563,     0,     0,     0,
       0,     0,     0,  1974,  2042,     0,     0,     0,     0,     0,
       0,     0,     0,   114,     0,     0,  4426,  4427,     0,     0,
       0,     0,  5563,   116,  1041,     0,   912,     0,     0,   912,
       0,     0,     0,     0,     0,  5190,  5190,     0,     0,     0,
       0,     0,     0,  5191,  5191,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1975,  1976,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    5189,  5189,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   912,     0,     0,     0,     0,
    5190,     0,     0,     0,     0,     0,     0,     0,  5191,     0,
       0,     0,     0,     0,   912,  5190,     0,     0,     0,     0,
       0,     0,     0,  5191,     0,     0,     0,     0,     0,  5190,
       0,     0,     0,     0,     0,     0,     0,  5191,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  5190,     0,     0,     0,     0,     0,     0,     0,
    5191,     0,     0,   912,  5190,  5190,     0,     0,     0,     0,
       0,  5190,  5191,  5191,     0,     0,     0,     0,     0,  5191,
    5189,  5189,     0,     0,     0,  5190,     0,     0,  1977,     0,
       0,     0,     0,  5191,     0,  5190,     0,     0,     0,     0,
       0,     0,     0,  5191,     0,  1978,  1979,     0,     0,     0,
       0,     0,     0,     0,     0,  5190,     0,  5190,     0,     0,
       0,     0,     0,  5191,     0,  5191,  5190,     0,     0,     0,
       0,     0,     0,  5190,  5191,  5190,     0,  5190,     0,     0,
       0,  5191,     0,  5191,     0,  5191,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5189,     0,     0,     0,     0,
    5190,     0,     0,     0,  1248,     0,     0,     0,  5191,     0,
    5189,     0,     0,     0,     0,     0,     0,     0,  5190,  5190,
       0,     0,     0,     0,  5189,     0,  5191,  5191,     0,     0,
       0,     0,     0,     0,  1279,  5190,  5190,     0,     0,     0,
    5190,     0,     0,  5191,  5191,     0,     0,     0,  5191,     0,
    1296,     0,     0,     0,     0,     0,     0,  5189,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  5189,
    5189,     0,     0,     0,     0,     0,  5189,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    5189,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    5189,     0,     0,     0,     0,     0,     0,     0,     0,  4705,
    4706,     0,  1358,     0,     0,     0,     0,     0,     0,     0,
    5189,     0,  5189,     0,     0,     0,     0,     0,     0,     0,
       0,  5189,   912,     0,     0,     0,   912,     0,  5189,     0,
    5189,     0,  5189,     0,   912,     0,   912,     0,     0,     0,
       0,     0,     0,  3421,     0,     0,     0,     0,  1758,  1782,
    1783,     0,     0,     0,     0,  5189,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  5189,  5189,     0,   912,     0,     0,     0,
       0,     0,     0,     0,     0,  1785,     0,     0,     0,     0,
    5189,  5189,     0,     0,     0,  5189,     0,     0,     0,  1788,
       0,     0,     0,     0,     0,  1789,  1790,     0,     0,  1791,
    1471,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     912,   912,   912,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1793,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1794,   884,     0,
       0,  1795,     0,     0,     0,     0,     0,     0,   912,     0,
       0,     0,     0,   912,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  -658,     0,
    1800,     0,   912,     0,     0,     0,     0,     0,     0,   912,
       0,     0,     0,     0,   912,     0,   912,     0,     0,     0,
       0,     0,   912,     0,   912,   912,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1758,  1782,  1783,     0,
       0,     0,     0,  3422,     0,     0,     0,  1804,     0,     0,
       0,     0,     0,     0,  1805,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  -963,  -963,  1785,  1806,     0,     0,     0,     0,     0,
       0,  -963,     0,     0,     0,     0,     0,  1788,     0,     0,
       0,     0,     0,  1789,  1790,     0,     0,  1791,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1793,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1808,     0,  1794,     0,     0,     0,  1795,
       0,     0,     0,     0,   962,     0,     0,   962,     0,     0,
       0,  1809,     0,     0,  1041,   912,     0,  1931,  1932,   912,
       0,     0,  1041,     0,     0,   912,  1942,  1943,  1800,     0,
    1946,  1947,     0,     0,     0,     0,     0,     0,     0,  1955,
    1956,     0,  1957,  1958,     0,     0,     0,  1982,     0,     0,
       0,  1991,  1992,  1993,  1994,     0,  1996,     0,     0,     0,
       0,     0,     0,     0,  2004,  2005,  1813,  2008,  2009,     0,
       0,     0,  1125,     0,  2013,  1814,     0,  2016,  2017,  2018,
    2019,  2020,  2021,     0,  2023,     0,     0,  2026,  2027,     0,
       0,     0,  2030,     0,     0,     0,  2033,  2037,  2038,     0,
       0,     0,     0,     0,     0,  1804,     0,     0,     0,  2045,
    2046,  2047,  1805,     0,     0,     0,     0,  2053,  2054,  2055,
    2056,  2057,   962,     0,     0,     0,     0,  3424,     0,     0,
       0,     0,  1806,     0,     0,     0,     0,  2078,   884,     0,
       0,     0,     0,     0,     0,  2082,     0,  2083,  2084,     0,
       0,     0,     0,     0,  1819,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    42,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2124,     0,
    1469,  1808,     0,     0,     0,     0,  5047,  5048,  5049,     0,
       0,     0,     0,     0,  3179,     0,     0,  3179,  3179,  1809,
    1820,  1821,  1822,  1823,     0,     0,     0,     0,  1824,   963,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1825,     0,    49,  1826,     0,
       0,     0,     0,     0,     0,   963,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1813,     0,     0,     0,     0,     0,
       0,     0,     0,  1814,  1828,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    54,     0,  2256,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    55,     0,
       0,     0,  1469,     0,     0,     0,     0,     0,     0,     0,
     912,     0,     0,     0,     0,     0,  2294,     0,     0,  2299,
       0,  5132,     0,     0,  5135,  5136,  5137,  5138,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1819,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1831,     0,     0,     0,
       0,     0,     0,     0,     0,  2344,     0,     0,  1820,  1821,
    1822,  1823,     0,     0,     0,     0,  1824,     0,     0,     0,
    1834,  1835,     0,     0,  2363,  5234,     0,     0,     0,     0,
       0,     0,     0,  1825,  5244,  5245,  1826,     0,     0,     0,
       0,     0,   963,  5253,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   912,     0,     0,     0,
       0,     0,  1828,     0,     0,   912,   912,     0,     0,  1127,
       0,     0,  -658,  2429,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   912,   912,     0,   912,
       0,     0,   912,   912,   912,   912,   912,     0,     0,   912,
       0,     0,     0,     0,     0,     0,     0,     0,   912,     0,
       0,     0,     0,   912,     0,   912,     0,   912,   912,     0,
     912,   912,     0,     0,     0,   912,   912,   912,     0,     0,
       0,   912,   912,   912,     0,   912,     0,   912,     0,   912,
       0,   912,     0,   912,     0,     0,     0,     0,   912,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   912,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1052,  1053,     0,
       0,     0,     0,     0,  1831,     0,   912,     0,   912,     0,
     912,     0,     0,     0,   912,     0,     0,     0,     0,     0,
     912,   912,     0,  1054,  1027,     0,     0,     0,  1834,  1835,
       0,     0,     0,     0,  1055, -2120,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   963,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1056,
       0,  1057,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1058,     0,     0,     1,     0,     0,     2,   963,     0,
       0,     0,     0,     0,  1469,     0,     0,     0,     0,     0,
       0,     0,     3,     0,     0,     0,     4,   912,  2210,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       5,     6,     0,     0,     0,     0,     0,     0,     7, -2112,
    1059,     0,  2734,     8,     9,  1060,  2738,     0,  1061,   963,
       0,     0,     0,     0,     0,     0,  2734,     0,  1062,    10,
       0,     0,     0,     0,     0,     0,     0,   962,   962,   962,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    11,
    1063,     0,  1064,     0,     0,     0,     0,     0,     0,     0,
       0,  1065,     0,  1066,     0,  1041,     0,     0,     0,     0,
       0,    12,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    13,    14,     0,     0,     0,     0,     0,     0,     0,
     912,     0,     0,    15,    16,     0,     0,     0,     0,     0,
     912,     0,   912,     0,     0,     0,    17,     0,     0,     0,
    2810,  2812,  2814,     0,     0,     0,     0,     0,     0,     0,
      18,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1067,     0,     0,     0,     0,     0,
      19,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2853,     0,     0,     0,     0,    20,   912,
      21,     0,     0,     0,     0,    22,     0,  1068,    23,     0,
       0,     0,  2861,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    24,  2865,     0,  2866,     0,     0,     0,
       0,    25,     0,     0,    26,     0,     0,     0,  2413,  2413,
    2413,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    27,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    28,  1069,     0,     0,    29,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1070,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1071,  1072,     0, -2116,  1073,  1074,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1075,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    30,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1076,
       0,     0,     0,     0,     0,  3027,     0,     0,     0,  2294,
       0,     0,  1077,     0,    31,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    32,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0, -2856,     0,     0,    33,  1078,     0,
      34,     0,    35,     0,     0,    36,     0,     0,     0,     0,
       0,     0,     0,     0, -2120,    37,    38,  1079,  3807,  3808,
       0,     0,     0,     0,  3809,    39,  3810,    40,  3811,  3812,
       0,     0,     0,     0,     0,     0,    41, -2116,     0,     0,
       0,     0,    42,     0,     0,     0,  3813,   962,     0,     0,
      43,     0,     0,     0,     0,    44,    45,    46,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0, -2856,     0,     0,     0,   912,
       0,     0,  1080,     0,     0,     0,     0,   912,    47,     0,
       0,     0,     0,     0,     0,    48,  3814,     0,     0,  3815,
       0,     0,     0,     0,     0,     0,     0,  3816,     0,     0,
       0,     0,     0,     0,     0,    49,     0,     0,     0,     0,
       0,     0,     0,     0,   912,   912,  3460,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    50,
       0,     0,     0,  3817,     0,     0,     0,     0,     0,     0,
     912,    51,     0,     0,     0,    52,     0,     0,     0,     0,
     912,     0,   912,    53,   912,     0,  1758,  1782,  1783,    54,
       0,  3818,     0,  3819,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    55,     0,     0,  3820,
    3821,     0,     0,     0,    56,     0,     0,   912,     0,     0,
       0,     0,   912,  1785,   912,  1081,  1082,     0,     0,     0,
      57,    58,    59,    60,     0,     0,     0,  1788,     0,     0,
       0,     0,     0,  1789,  1790,    61,     0,  1791,     0,     0,
       0,  3822,     0,     0,     0,     0,     0,     0,     0,   912,
       0,     0,     0,     0,  3823,     0,     0,     0,     0,     0,
       0,  1793,     0,     0,     0,     0,     0,     0,     0,     0,
    3329,     0,    62,  3824,     0,  1794,     0,     0,     0,  1795,
       0,     0,  3825,  3826,     0,  3827,     0,     0,   912,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1800,     0,
       0,     0,    63,     0,     0,     0,     0,  2942,  2943,     0,
       0,  3828,  3829,  3830,     0,     0,   912,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3831,  3832,  3833,     0,     0,     0,     0,  3834,     0,     0,
    3835,     0,     0,     0,     0,     0,     0,   912,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    64,  3836,  3837,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1804,     0,   963,     0,     0,
     963,     0,  1805,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3838,  3839,     0,     0,     0,     0,     0,     0,
       0,     0,  1806,     0,     0,  3031,  3444,     0,     0,     0,
       0,     0,     0,     0,     0,  3452,  3453,     0,  3472,     0,
       0,     0,     0,     0,     0,     0,   912,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3490,  3491,     0,  3492,
       0,     0,  3495,  3496,  3497,  3498,  3499,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3505,     0,
       0,  1808,     0,  3506,     0,  3507,     0,  3508,  3509,     0,
    3510,     0,     0,     0,     0,  3515,  3516,  3517,     0,  1809,
    3840,  3520,  3521,  3522,  3841,  3523,     0,  3525,     0,  3527,
       0,  3529,     0,  3530,     0,   963,  3842,     0,  3533,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     1,     0,     0,
       2,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1813,     0,     0,     0,     0,     4,
       0,     0,     0,  1814,  3567,     0,     0,     0,     0,     0,
    2124,     0,     0,     5,     6,     0,  3843,     0,     0,  3844,
       0,     7,  3845,  3846,  3847,  3848,     8,     9,     0,     0,
       0,     0,     0,     0,  3169,     0,     0,     0,  3180,     0,
       0,     0,    10,  3185,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    11,     0,     0,  3849,  3850,     0,  3234,  3235,
    3236,  3237,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1819,     0,    12,     0,     0,  3615,     0,  3179,
    3179,     0,     0,  3851,    13,    14,     0,     0,     0,     0,
    3271,     0,     0,     0,     0,     0,    15,    16,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   912,  3185,  3185,     0,     0,     0,     0,
       0,     0,     0,    18,     0,     0,     0,     0,  1820,  1821,
    1822,  1823,     0,     0,     0,     0,  1824,     0,     0,     0,
       0,     0,     0,    19,     0,     0,   912,     0,   912,     0,
       0,   912,   912,  1825,   912,     0,  1826,     0,     0,     0,
       0,    20,     0,    21,     0,   912,     0,     0,    22,     0,
     912,    23,     0,   912,     0,     0,   912,   912,     0,     0,
    2344,     0,     0,     0,     0,     0,    24,     0,     0,     0,
       0,     0,  1828,     0,    25,     0,     0,    26,   912,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   912,     0,     0,     0,     0,    27,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    28,     0,     0,     0,    29,     0,
       0,     0,     0,     0,     0,     0,  5497,     0,     0,  2429,
       0,     0,     0,     0,     0,     0,     0,     0,   912,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   912,   912,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1831,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    30,     0,     0,     0,  1834,  1835,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    31,     0,     0,
       0,     0,     0,     0,     0,     0,   912,     0,    32,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      33,     0,     0,    34,     0,    35,     0,     0,    36,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    37,    38,
       0,     0,     0,     0,     0,     0,     0,     0,    39,     0,
      40,     0,     0,     0,     0,     0,     0,     0,     0,    41,
       0,     0,     0,     0,     0,    42,     0,     0,     0,     0,
       0,     0,     0,    43,     0,     0,     0,     0,    44,    45,
      46,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     912,   912,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    47,     0,     0,     0,     0,     0,     0,    48,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3616,  3179,  3179,     0,     0,     0,     0,    49,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    50,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    51,     0,     0,     0,    52,     0,
     963,   963,   963,     0,     0,     0,    53,     0,     0,  4023,
       0,     0,    54,     0,     0,     0,     0,  4026,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    55,
       0,     0,     0,     0,     0,     0,     0,    56,     0,     0,
       0,     0,  2413,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4056,  4057,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    61,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4082,     0,     0,     0,   912,     0,     0,     0,     0,     0,
    4093,     0,  4095,     0,  4097,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    62,     0,   912,     0,   912,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3760,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3769,     0,  3776,
    3777,  3778,  3779,     0,  3781,  3782,     0,     0,     0,  2344,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3300,     0,
      64,     0,     0,  1779,     0,  1780,     0,     0,  4181,     0,
       0,     0,     0,     0,     0,     0,   912,  1758,  1782,  1783,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3875,     0,
       0,     0,     0,     0,     0,     0,  2294,     0,   912,  1784,
       0,  3881,     0,     0,  1785,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1788,     0,
       0,     0,     0,     0,  1789,  1790,     0,     0,  1791,     0,
       0,     0,     0,     0,     0,     0,     0,  1792,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1793,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1794,     0,   912,     0,
    1795,   912,     0,     0,     0,     0,     0,     0,  1796,     0,
       0,     0,     0,     0,   912,  3301,     0,     0,     0,  2413,
       0,  2413,     0,  1799,     0,     0,     0,     0,     0,  1800,
       0,  2413,  2413,  2413,  2413,     0,  4286,     0,     0,     0,
    2413,  2413,  2413,  2413,  2413,  2413,     0,  2413,  2413,  2413,
    2413,     0,     0,  3969,     0,  2413,     0,     0,     0,     0,
       0,     0,   912,  1802,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     963,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1804,     0,     0,     0,
       0,     0,     0,  1805,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1806,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1807,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   912,     0,     0,
       0,     0,  1808,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1809,     0,     0,     0,  1810,     0,     0,     0,     0,     0,
     912,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1812,     0,
       0,     0,     0,     0,     0,  1813,   912,     0,     0,     0,
       0,  5186,     0,  4467,  1814,     0,     0,  5197,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   912,     0,     0,     0,  4481,     0,  2429,     0,
       0,  4486,  4487,     0,     0,     0,     0,     0,     0,     0,
       0,  1816,     0,     0,     0,  4494,     0,     0,     0,     0,
    4496,     0,     0,  4497,     0,     0,  4498,  4499,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1819,     0,     0,     0,     0,  4511,     0,
       0,     0,     0,   912,     0,     0,     0,     0,     0,  5186,
    5186,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4241,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1820,
    1821,  1822,  1823,   912,     0,     0,     0,  1824,  2344,     0,
       0,     0,     0,     0,     0,     0,   962,     0,     0,     0,
       0,     0,     0,     0,  1825,     0,     0,  1826,  4271,     0,
       0,  1778,     0,     0,     0,   912,  1779,     0,  1780,     0,
       0,  1781,     0,     0,  4593,  4596,     0,     0,     0,     0,
    1758,  1782,  1783,     0,     0,   912,     0,   912,     0,     0,
       0,     0,     0,  1828,     0,     0,     0,   912,     0,  5186,
    5186,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1784,     0,     0,  -963,  -963,  1785,  1786,     0,
       0,     0,     0,  1787,     0,  -963,     0,  1829,     0,     0,
    1830,  1788,     0,     0,     0,     0,     0,  1789,  1790,     0,
       0,  1791,     0,     0,     0,     0,     0,     0,     0,     0,
    1792,     0,     0,     0,     0,     0,  4651,     0,     0,     0,
       0,     0,     0,     0,     0,  1793,     0,     0,     0,     0,
       0,     0,   912,     0,  5186,     0,     0,     0,     0,  1794,
       0,     0,     0,  1795,     0,     0,     0,     0,     0,  5186,
     912,  1796,  1797,     0,     0,     0,     0,     0,  1798,     0,
       0,     0,     0,  5186,     0,     0,  1799,     0,     0,     0,
       0,     0,  1800,     0,     0,  1831,     0,     0,  2413,     0,
       0,     0,     0,  1801,     0,   912,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   912,  5186,     0,     0,  1834,
    1835,     0,     0,     0,     0,     0,  1802,     0,  5186,  5186,
       0,     0,     0,     0,     0,  5186,     0,     0,     0,     0,
    4732,  4733,     0,     0,     0,     0,     0,     0,     0,  5186,
       0,     0,     0,     0,     0,     0,   912,     0,     0,  5186,
       0,     0,     0,     0,     0,     0,     0,  1803,     0,  1804,
       0,  4437,   912,     0,     0,     0,  1805,     0,     0,  5186,
       0,  5186,     0,     0,     0,     0,     0,     0,     0,     0,
    5186,     0,     0,     0,     0,     0,  1806,  5186,     0,  5186,
       0,  5186,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1807,
       0,     0,     0,     0,  5186,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  5186,  5186,     0,     0,     0,     0,     0,   912,
       0,     0,     0,     0,     0,  1808,     0,   912,     0,  5186,
    5186,     0,     0,     0,  5186,     0,     0,     0,     0,     0,
       0,     0,     0,  1809,     0,     0,     0,  1810,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2344,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1811,     0,     0,     0,     0,
       0,  1812,     0,     0,     0,     0,     0,  4848,  1813,  4850,
       0,     0,     0,     0,  3807,  3808,     0,  1814,     0,     0,
    3809,     0,  3810,     0,  3811,  3812,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3813,     0,     0,     0,     0,     0,     0,  1815,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1816,  1817,  1818,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4603,  4604,
       0,  4606,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3814,     0,     0,  3815,  1819,     0,     0,     0,
       0,     0,     0,  3816,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4916,     0,     0,     0,
       0,     0,  3460,     0,     0,  1778,     0,     0,     0,     0,
    1779,     0,  1780,     0,     0,  1781,     0,     0,     0,  3817,
       0,     0,     0,     0,  1758,  1782,  1783,     0,  4924,     0,
       0,     0,  1820,  1821,  1822,  1823,     0,     0,     0,     0,
    1824,     0,     0,     0,     0,     0,     0,  3818,     0,  3819,
       0,     0,     0,     0,  5309,     0,  1784,  1825,     0,     0,
    1826,  1785,  1786,     0,     0,  3820,  3821,  1787,     0,     0,
       0,     0,     0,     0,     0,  1788,     0,  4684,     0,     0,
       0,  1789,  1790,  1827,     0,  1791,     0,     0,     0,     0,
       0,     0,     0,     0,  1792,     0,  1828,     0,  2429,     0,
       0,  4975,     0,     0,     0,     0,     0,  3822,     0,  1793,
       0,     0,     0,     0,  4593,     0,     0,     0,     0,     0,
    3823,     0,     0,  1794,     0,     0,     0,  1795,     0,     0,
    1829,     0,     0,  1830,     0,  1796,  1797,     0,     0,  3824,
       0,     0,  1798,     0,     0,     0,     0,     0,  3825,  3826,
    1799,  3827,     0,     0,     0,     0,  1800,     0,     0,     0,
       0,     0,  4593,     0,     0,     0,     0,  1801,     0,     0,
       0,  2413,  2413,  2413,  2413,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3828,  3829,  3830,
    1802,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3831,  3832,  3833,     0,
       0,     0,     0,  3834,     0,     0,  3835,     0,  1831,  1832,
    1833,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1803,     0,  1804,  3836,  3837,     0,     0,     0,     0,
    1805,     0,  1834,  1835,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1806,     0,     0,     0,     0,     0,     0,     0,  3838,  3839,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1807,     0,     0,     0,  2429,     0,     0,
       0,     0,     0,     0,  3472,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1808,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1809,     0,     0,
       0,  1810,     0,     0,     0,     0,  4862,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3840,     0,  4871,  4241,
    3841,     0,     0,     0,     0,     0,  5156,     0,     0,     0,
       0,     0,  3842,     0,     0,     0,     0,     0,     0,  1811,
       0,     0,     0,     0,     0,  1812,     0,     0,     0,     0,
       0,     0,  1813,     0,     0,     0,     0,     0,     0,     0,
       0,  1814,  5214,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3843,  1815,     0,  3844,     0,     0,  3845,  3846,
    3847,  3848,     0,     0,  3185,  3185,     0,     0,  1816,  1817,
    1818,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  5258,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4930,     0,     0,
    1819,  3849,  3850,     0,     0,     0,     0,     0,  2413,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3851,
       0,     0,     0,  5290,     0,     0,  4962,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1820,  1821,  1822,  1823,
       0,     0,     0,     0,  1824,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1825,     0,     0,  1826,  5338,     0,  5339,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5347,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1827,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1828,     0,  5011,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  5046,  1829,     0,     0,  1830,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  5415,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    5420,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  5079,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5442,     0,     0,     0,     0,
       0,     0,  1831,  1832,  1833,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1834,  1835,     0,     0,
       0,  5120,     0,     0,     0,     0,  5474,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  5489,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3185,  3185,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  5564,
       0,     0,     0,     0,     0,   243,   244,  2344,   760,   246,
     247,   248,   249,     0,     0,   250,     0,     0,     0,     0,
     251,  5243,     0,   761,     0,   253,   254,   255,   256,   762,
     258,     0,   259,     0,     0,   763,   260,   764,   765,   766,
     261,   767,     0,   262,   263,   264,     0,   265,     0,   266,
     267,     0,     0,   268,   768,   769,   269,   270,     0,   271,
     272,   770,   771,   274,     0,   275,   276,   277,   278,   772,
     280,     0,   773,   282,     0,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,   294,   295,     0,
     296,   297,   298,   299,   300,     0,   774,   775,   301,     0,
       0,     0,   776,   302,   777,     0,   303,   778,   779,   963,
     304,   305,   306,   780,   781,   782,     0,     0,     0,     0,
     783,   309,   784,     0,     0,   785,   310,   311,     0,   312,
       0,     0,     0,  5323,  5324,   313,   314,   315,   316,   317,
       0,     0,     0,   318,     0,     0,   319,   320,   321,     0,
       0,     0,   322,     0,   323,   324,     0,   325,   326,   327,
       0,     0,   328,   329,     0,   330,   331,   332,   333,   334,
     335,   786,     0,   336,   337,   338,   339,   340,   787,   788,
     341,   342,     0,   343,   344,   345,   346,   347,   789,     0,
     348,   349,     0,     0,     0,   790,   351,     0,   352,     0,
       0,     0,   353,     0,   354,   791,   356,   792,     0,   358,
       0,   359,     0,   793,     0,   360,   361,     0,   362,   794,
       0,   363,   364,     0,     0,     0,   795,   366,   367,   368,
     796,     0,   369,   370,   371,     0,     0,   372,     0,     0,
       0,   797,   373,   374,   375,   798,     0,     0,   376,     0,
       0,     0,   377,   378,     0,   379,   380,     0,     0,     0,
     381,     0,   382,     0,     0,   383,   384,     0,     0,   385,
       0,   799,   386,   387,     0,     0,     0,     0,     0,   800,
     389,     0,   390,     0,   391,     0,   392,   393,     0,     0,
     801,     0,     0,     0,     0,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,     0,   412,   413,   414,   802,   415,
     416,   417,   418,   803,   419,   420,     0,     0,     0,     0,
     421,   422,   423,   424,   804,   426,     0,     0,   805,   428,
     806,   429,     0,   430,   807,   808,   809,   810,   811,   435,
     436,   437,   438,   439,     0,   812,   440,   441,     0,     0,
     442,   443,   444,   445,   446,   813,   814,   815,   447,   448,
       0,   816,   817,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   456,   457,   458,   818,   459,     0,   460,
       0,   461,   462,   463,   464,   465,   466,   467,   819,   820,
     470,   821,   471,     0,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   822,   482,   483,     0,
       0,   484,     0,     0,     0,   485,   486,     0,   487,   488,
       0,     0,   489,   490,   491,   492,   493,     0,   494,   495,
       0,   496,   497,   498,   823,   824,   499,   500,   501,   502,
     503,   504,   505,   506,     0,   507,     0,   508,   509,     0,
     510,   511,   512,     0,   825,     0,   826,   514,   515,   516,
     517,     0,   518,   827,   828,   520,   521,   522,   523,     0,
     829,   525,    42,     0,     0,   526,   527,   528,   529,     0,
       0,     0,   530,     0,     0,     0,   531,     0,   532,   533,
     534,   535,     0,   536,   537,   538,   539,   540,     0,     0,
       0,     0,     0,   541,   542,   543,     0,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,   550,
     551,   552,   553,   830,   831,   554,   555,     0,     0,   556,
     557,   832,   559,   560,   561,   833,   834,   562,   563,   564,
     565,   835,   566,   567,     0,    49,   568,   569,   570,   571,
       0,   836,   572,   573,     0,   837,   838,   839,   840,     0,
       0,     0,     0,     0,   578,   579,     0,   841,   842,   843,
     581,   582,     0,   844,   583,   584,   845,   585,   586,     0,
     587,   588,     0,     0,   589,     0,     0,   590,     0,   591,
       0,   846,   593,     0,     0,   847,   848,   849,   594,  1355,
     595,     0,     0,   596,   851,     0,   852,   597,     0,   598,
     599,   853,   854,     0,     0,     0,    55,     0,     0,   602,
     603,   604,     0,   605,   606,   607,   608,     0,     0,   855,
       0,     0,   610,   611,   612,   613,   614,     0,   615,     0,
       0,     0,     0,     0,   856,   857,     0,   616,   617,   618,
     858,   619,   620,   621,     0,   622,   859,   860,   623,   861,
     624,     0,   862,   863,   864,   865,   866,   625,   626,     0,
     867,   627,   868,   628,   869,   629,   630,     0,     0,     0,
     631,   632,   633,   634,   635,   636,   637,   638,     0,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,     0,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,     0,   870,   674,   675,   676,   677,
     678,   679,     0,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   871,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,     0,     0,     0,     0,     0,   872,
     873,     0,     0,     0,     0,   875,     0,   876,     0,     0,
       0,   877,     0,     0,     0,   878,   879,   243,   244,     0,
     760,   246,   247,   248,   249,     0,     0,   250,     0,     0,
       0,     0,   251,     0,     0,   761,     0,   253,   254,   255,
     256,   762,   258,     0,   259,     0,     0,   763,   260,   764,
     765,   766,   261,   767,     0,   262,   263,   264,  2034,   265,
       0,   266,   267,     0,     0,   268,   768,   769,   269,   270,
       0,   271,   272,   770,   771,   274,     0,   275,   276,   277,
     278,   772,   280,     0,   773,   282,     0,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,   294,
     295,     0,   296,   297,   298,   299,   300,     0,   774,   775,
     301,     0,     0,     0,   776,   302,   777,     0,   303,   778,
     779,     0,   304,   305,   306,   780,   781,   782,     0,     0,
       0,     0,   783,   309,   784,     0,     0,   785,   310,   311,
       0,   312,     0,     0,     0,     0,     0,   313,   314,   315,
     316,   317,     0,     0,     0,   318,     0,     0,   319,   320,
     321,     0,     0,     0,   322,     0,   323,   324,     0,   325,
     326,   327,     0,     0,   328,   329,     0,   330,   331,   332,
     333,   334,   335,   786,     0,   336,   337,   338,   339,   340,
     787,   788,   341,   342,     0,   343,   344,   345,   346,   347,
     789,     0,   348,   349,     0,     0,     0,   790,   351,     0,
     352,     0,     0,     0,   353,     0,   354,   791,   356,   792,
       0,   358,     0,   359,     0,   793,     0,   360,   361,     0,
     362,   794,     0,   363,   364,     0,     0,     0,   795,   366,
     367,   368,   796,     0,   369,   370,   371,     0,     0,   372,
       0,     0,     0,   797,   373,   374,   375,   798,     0,     0,
     376,     0,     0,     0,   377,   378,     0,   379,   380,     0,
       0,     0,   381,     0,   382,     0,     0,   383,   384,     0,
    2035,   385,     0,   799,   386,   387,     0,     0,     0,     0,
       0,   800,   389,     0,   390,     0,   391,     0,   392,   393,
       0,     0,   801,     0,     0,     0,     0,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,     0,   412,   413,   414,
     802,   415,   416,   417,   418,   803,   419,   420,     0,     0,
       0,     0,   421,   422,   423,   424,   804,   426,     0,     0,
     805,   428,   806,   429,     0,   430,   807,   808,   809,   810,
     811,   435,   436,   437,   438,   439,     0,   812,   440,   441,
       0,     0,   442,   443,   444,   445,   446,   813,   814,   815,
     447,   448,     0,   816,   817,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   456,   457,   458,   818,   459,
       0,   460,     0,   461,   462,   463,   464,   465,   466,   467,
     819,   820,   470,   821,   471,     0,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   822,   482,
     483,     0,     0,   484,     0,     0,     0,   485,   486,     0,
     487,   488,     0,     0,   489,   490,   491,   492,   493,     0,
     494,   495,     0,   496,   497,   498,   823,   824,   499,   500,
     501,   502,   503,   504,   505,   506,     0,   507,     0,   508,
     509,     0,   510,   511,   512,     0,   825,     0,   826,   514,
     515,   516,   517,     0,   518,   827,   828,   520,   521,   522,
     523,     0,   829,   525,     0,     0,     0,   526,   527,   528,
     529,     0,     0,     0,   530,     0,     0,     0,   531,     0,
     532,   533,   534,   535,     0,   536,   537,   538,   539,   540,
       0,     0,     0,     0,     0,   541,   542,   543,     0,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,   550,   551,   552,   553,   830,   831,   554,   555,     0,
       0,   556,   557,   832,   559,   560,   561,   833,   834,   562,
     563,   564,   565,   835,   566,   567,     0,     0,   568,   569,
     570,   571,     0,   836,   572,   573,     0,   837,   838,   839,
     840,     0,     0,     0,     0,  2036,   578,   579,     0,   841,
     842,   843,   581,   582,     0,   844,   583,   584,   845,   585,
     586,     0,   587,   588,     0,     0,   589,     0,     0,   590,
       0,   591,     0,   846,   593,     0,     0,   847,   848,   849,
     594,   850,   595,     0,     0,   596,   851,     0,   852,   597,
       0,   598,   599,   853,   854,     0,     0,     0,     0,     0,
       0,   602,   603,   604,     0,   605,   606,   607,   608,     0,
       0,   855,     0,     0,   610,   611,   612,   613,   614,     0,
     615,     0,     0,     0,     0,     0,   856,   857,     0,   616,
     617,   618,   858,   619,   620,   621,     0,   622,   859,   860,
     623,   861,   624,     0,   862,   863,   864,   865,   866,   625,
     626,     0,   867,   627,   868,   628,   869,   629,   630,     0,
       0,     0,   631,   632,   633,   634,   635,   636,   637,   638,
       0,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,     0,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,     0,   870,   674,   675,
     676,   677,   678,   679,     0,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   871,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,     0,     0,     0,     0,
       0,   872,   873,     0,     0,     0,     0,   875,     0,   876,
       0,     0,     0,   877,     0,     0,     0,   878,   879,   243,
     244,     0,   760,   246,   247,   248,   249,  2288,     0,   250,
       0,     0,     0,     0,   251,     0,     0,   761,     0,   253,
     254,   255,   256,   762,   258,     0,   259,     0,     0,  2289,
     260,   764,   765,   766,   261,   767,     0,   262,   263,   264,
       0,   265,     0,   266,   267,     0,     0,   268,   768,   769,
     269,   270,     0,   271,   272,   770,   771,   274,     0,   275,
     276,   277,   278,   772,   280,     0,   773,   282,     0,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,   294,   295,     0,   296,   297,   298,   299,   300,     0,
     774,   775,   301,     0,     0,     0,   776,   302,   777,     0,
     303,   778,   779,     0,   304,   305,   306,   780,   781,   782,
       0,     0,     0,     0,   783,   309,   784,     0,     0,  2290,
     310,   311,     0,   312,     0,     0,     0,     0,     0,   313,
     314,   315,   316,   317,     0,     0,     0,   318,     0,     0,
     319,   320,   321,     0,     0,     0,   322,     0,   323,   324,
       0,   325,   326,   327,     0,     0,   328,   329,     0,   330,
     331,   332,   333,   334,   335,   786,     0,   336,   337,   338,
     339,   340,   787,   788,   341,   342,     0,   343,   344,   345,
     346,   347,   789,     0,   348,   349,     0,     0,     0,   790,
     351,     0,   352,     0,     0,     0,   353,     0,   354,   791,
     356,   792,     0,   358,     0,   359,     0,   793,     0,   360,
     361,     0,   362,   794,     0,   363,   364,     0,     0,     0,
     795,   366,   367,   368,   796,     0,   369,   370,   371,     0,
       0,   372,     0,     0,     0,   797,   373,   374,   375,   798,
       0,     0,   376,     0,     0,     0,   377,   378,     0,   379,
     380,     0,     0,     0,   381,     0,   382,     0,     0,   383,
     384,     0,     0,   385,     0,   799,   386,   387,     0,     0,
       0,     0,     0,   800,   389,     0,   390,     0,   391,     0,
     392,   393,     0,     0,   801,     0,     0,     0,     0,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,     0,   412,
     413,   414,   802,   415,   416,   417,   418,   803,   419,   420,
       0,     0,     0,     0,   421,   422,   423,   424,   804,   426,
       0,     0,   805,   428,   806,   429,     0,   430,   807,   808,
     809,   810,   811,   435,   436,   437,   438,   439,     0,   812,
     440,   441,     0,     0,   442,   443,   444,   445,   446,   813,
     814,   815,   447,   448,     0,   816,   817,   449,     0,   450,
     451,  2291,   452,   453,   454,     0,     0,   455,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   456,   457,   458,
     818,   459,     0,   460,     0,   461,   462,   463,   464,   465,
     466,   467,   819,   820,   470,   821,   471,     0,   472,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     822,   482,   483,     0,     0,   484,     0,     0,     0,   485,
     486,     0,   487,   488,     0,     0,   489,   490,   491,   492,
     493,     0,   494,   495,     0,   496,   497,   498,   823,   824,
     499,   500,   501,   502,   503,   504,   505,   506,     0,   507,
       0,   508,   509,     0,   510,   511,   512,     0,   825,     0,
     826,   514,   515,   516,   517,     0,   518,  2292,   828,   520,
     521,   522,   523,     0,   829,   525,     0,     0,     0,   526,
     527,   528,   529,     0,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,   534,   535,     0,   536,   537,   538,
     539,   540,     0,     0,     0,     0,     0,   541,   542,   543,
       0,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,   550,   551,   552,   553,   830,   831,   554,
     555,     0,     0,   556,   557,   832,   559,   560,   561,   833,
     834,   562,   563,   564,   565,   835,   566,   567,     0,     0,
     568,   569,   570,   571,     0,   836,   572,   573,     0,   837,
     838,   839,   840,     0,     0,     0,     0,     0,   578,   579,
       0,   841,   842,   843,   581,   582,     0,   844,   583,   584,
     845,   585,   586,     0,   587,   588,     0,     0,   589,     0,
       0,   590,     0,   591,     0,   846,   593,     0,     0,   847,
     848,   849,   594,   850,   595,     0,     0,   596,   851,     0,
     852,   597,     0,   598,   599,   853,   854,     0,     0,     0,
       0,     0,     0,   602,   603,   604,     0,   605,   606,   607,
     608,     0,     0,   855,     0,     0,   610,   611,   612,   613,
     614,     0,   615,     0,     0,     0,     0,     0,   856,   857,
       0,   616,   617,   618,   858,   619,   620,   621,     0,   622,
     859,   860,   623,   861,   624,     0,   862,   863,   864,   865,
     866,   625,   626,     0,   867,   627,   868,   628,   869,   629,
     630,     0,     0,     0,   631,   632,   633,   634,   635,   636,
     637,   638,  2293,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,     0,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,     0,   870,
     674,   675,   676,   677,   678,   679,     0,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   871,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,     0,     0,
       0,     0,     0,   872,   873,     0,     0,     0,     0,   875,
       0,   876,     0,     0,     0,   877,     0,     0,     0,   878,
     879,   243,   244,     0,   760,   246,   247,   248,   249,     0,
       0,   250,     0,     0,     0,     0,   251,     0,     0,   761,
       0,   253,   254,   255,   256,   762,   258,     0,   259,     0,
       0,   763,   260,   764,   765,   766,   261,   767,     0,   262,
     263,   264,     0,   265,     0,   266,   267,     0,     0,   268,
     768,   769,   269,   270,     0,   271,   272,   770,   771,   274,
       0,   275,   276,   277,   278,   772,   280,     0,   773,   282,
       0,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,     0,   294,   295,     0,   296,   297,   298,   299,
     300,     0,   774,   775,   301,     0,     0,     0,   776,   302,
     777,     0,   303,   778,   779,     0,   304,   305,   306,   780,
     781,   782,     0,     0,     0,     0,   783,   309,   784,     0,
       0,   785,   310,   311,     0,   312,     0,     0,     0,     0,
       0,   313,   314,   315,   316,   317,     0,     0,     0,   318,
       0,     0,   319,   320,   321,     0,     0,     0,   322,     0,
     323,   324,     0,   325,   326,   327,     0,     0,   328,   329,
       0,   330,   331,   332,   333,   334,   335,   786,     0,   336,
     337,   338,   339,   340,   787,   788,   341,   342,     0,   343,
     344,   345,   346,   347,   789,     0,   348,   349,     0,     0,
       0,   790,   351,     0,   352,     0,     0,     0,   353,     0,
     354,   791,   356,   792,     0,   358,     0,   359,     0,   793,
       0,   360,   361,     0,   362,   794,     0,   363,   364,     0,
       0,     0,   795,   366,   367,   368,   796,     0,   369,   370,
     371,     0,     0,   372,     0,     0,     0,   797,   373,   374,
     375,   798,     0,     0,   376,     0,     0,     0,   377,   378,
       0,   379,   380,     0,     0,     0,   381,     0,   382,     0,
       0,   383,   384,     0,     0,   385,     0,   799,   386,   387,
       0,     0,     0,     0,     0,   800,   389,     0,   390,     0,
     391,     0,   392,   393,     0,     0,   801,     0,     0,     0,
       0,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
       0,   412,   413,   414,   802,   415,   416,   417,   418,   803,
     419,   420,     0,     0,     0,     0,   421,   422,   423,   424,
     804,   426,     0,     0,   805,   428,   806,   429,     0,   430,
     807,   808,   809,   810,   811,   435,   436,   437,   438,   439,
       0,   812,   440,   441,     0,     0,   442,   443,   444,   445,
     446,   813,   814,   815,   447,   448,     0,   816,   817,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   456,
     457,   458,   818,   459,     0,   460,     0,   461,   462,   463,
     464,   465,   466,   467,   819,   820,   470,   821,   471,     0,
     472,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   822,   482,   483,     0,     0,   484,     0,     0,
       0,   485,   486,     0,   487,   488,     0,     0,   489,   490,
     491,   492,   493,     0,   494,   495,     0,   496,   497,   498,
     823,   824,   499,   500,   501,   502,   503,   504,   505,   506,
       0,   507,     0,   508,   509,     0,   510,   511,   512,     0,
     825,     0,   826,   514,   515,   516,   517,     0,   518,   827,
     828,   520,   521,   522,   523,     0,   829,   525,     0,     0,
       0,   526,   527,   528,   529,     0,     0,     0,   530,     0,
       0,     0,   531,     0,   532,   533,   534,   535,     0,   536,
     537,   538,   539,   540,     0,     0,     0,     0,     0,   541,
     542,   543,     0,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,   549,   550,   551,   552,   553,   830,
     831,   554,   555,     0,     0,   556,   557,   832,   559,   560,
     561,   833,   834,   562,   563,   564,   565,   835,   566,   567,
       0,     0,   568,   569,   570,   571,     0,   836,   572,   573,
       0,   837,   838,   839,   840,     0,     0,     0,     0,     0,
     578,   579,     0,   841,   842,   843,   581,   582,     0,   844,
     583,   584,   845,   585,   586,     0,   587,   588,     0,     0,
     589,     0,     0,   590,     0,   591,     0,   846,   593,     0,
       0,   847,   848,   849,   594,   850,   595,     0,     0,   596,
     851,     0,   852,   597,     0,   598,   599,   853,   854,     0,
       0,     0,     0,     0,     0,   602,   603,   604,     0,   605,
     606,   607,   608,     0,     0,   855,     0,     0,   610,   611,
     612,   613,   614,     0,   615,     0,     0,     0,     0,     0,
     856,   857,     0,   616,   617,   618,   858,   619,   620,   621,
       0,   622,   859,   860,   623,   861,   624,     0,   862,   863,
     864,   865,   866,   625,   626,     0,   867,   627,   868,   628,
     869,   629,   630,     0,     0,     0,   631,   632,   633,   634,
     635,   636,   637,   638,     0,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
       0,   870,   674,   675,   676,   677,   678,   679,     0,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   871,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
       0,     0,     0,     0,     0,   872,   873,   874,     0,     0,
       0,   875,     0,   876,     0,     0,     0,   877,     0,     0,
       0,   878,   879,   243,   244,     0,   760,   246,   247,   248,
     249,     0,     0,   250,     0,     0,     0,     0,   251,     0,
       0,   761,     0,   253,   254,   255,   256,   762,   258,     0,
     259,     0,     0,   763,   260,   764,   765,   766,   261,   767,
       0,   262,   263,   264,     0,   265,     0,   266,   267,     0,
       0,   268,   768,   769,   269,   270,     0,   271,   272,   770,
     771,   274,     0,   275,   276,   277,   278,   772,   280,     0,
     773,   282,     0,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,   294,   295,     0,   296,   297,
     298,   299,   300,     0,   774,   775,   301,     0,     0,     0,
     776,   302,   777,     0,   303,   778,   779,     0,   304,   305,
     306,   780,   781,   782,     0,     0,     0,     0,   783,   309,
     784,     0,     0,   785,   310,   311,     0,   312,     0,     0,
       0,     0,     0,   313,   314,   315,   316,   317,     0,     0,
       0,   318,     0,     0,   319,   320,   321,     0,     0,     0,
     322,     0,   323,   324,     0,   325,   326,   327,     0,     0,
     328,   329,     0,   330,   331,   332,   333,   334,   335,   786,
       0,   336,   337,   338,   339,   340,   787,   788,   341,   342,
       0,   343,   344,   345,   346,   347,   789,     0,   348,   349,
       0,     0,     0,   790,   351,     0,   352,     0,     0,     0,
     353,     0,   354,   791,   356,   792,     0,   358,     0,   359,
       0,   793,     0,   360,   361,     0,   362,   794,     0,   363,
     364,     0,     0,     0,   795,   366,   367,   368,   796,     0,
     369,   370,   371,     0,     0,   372,     0,     0,     0,   797,
     373,   374,   375,   798,     0,     0,   376,     0,     0,     0,
     377,   378,     0,   379,   380,     0,     0,     0,   381,     0,
     382,     0,     0,   383,   384,     0,     0,   385,     0,   799,
     386,   387,     0,     0,     0,     0,     0,   800,   389,     0,
     390,     0,   391,     0,   392,   393,     0,     0,   801,     0,
       0,     0,     0,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,     0,   412,   413,   414,   802,   415,   416,   417,
     418,   803,   419,   420,     0,     0,     0,     0,   421,   422,
     423,   424,   804,   426,     0,     0,   805,   428,   806,   429,
       0,   430,   807,   808,   809,   810,   811,   435,   436,   437,
     438,   439,     0,   812,   440,   441,     0,     0,   442,   443,
     444,   445,   446,   813,   814,   815,   447,   448,     0,   816,
     817,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   456,   457,   458,   818,   459,     0,   460,     0,   461,
     462,   463,   464,   465,   466,   467,   819,   820,   470,   821,
     471,     0,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   822,   482,   483,     0,     0,   484,
       0,     0,     0,   485,   486,     0,   487,   488,     0,     0,
     489,   490,   491,   492,   493,     0,   494,   495,     0,   496,
     497,   498,   823,   824,   499,   500,   501,   502,   503,   504,
     505,   506,     0,   507,     0,   508,   509,     0,   510,   511,
     512,     0,   825,     0,   826,   514,   515,   516,   517,     0,
     518,   827,   828,   520,   521,   522,   523,     0,   829,   525,
       0,     0,     0,   526,   527,   528,   529,     0,     0,     0,
     530,     0,     0,     0,   531,     0,   532,   533,   534,   535,
       0,   536,   537,   538,   539,   540,     0,     0,     0,     0,
       0,   541,   542,   543,     0,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,   550,   551,   552,
     553,   830,   831,   554,   555,     0,     0,   556,   557,   832,
     559,   560,   561,   833,   834,   562,   563,   564,   565,   835,
     566,   567,     0,     0,   568,   569,   570,   571,     0,   836,
     572,   573,     0,   837,   838,   839,   840,     0,     0,     0,
       0,     0,   578,   579,     0,   841,   842,   843,   581,   582,
       0,   844,   583,   584,   845,   585,   586,     0,   587,   588,
       0,     0,   589,     0,     0,   590,     0,   591,     0,   846,
     593,     0,     0,   847,   848,   849,   594,   850,   595,     0,
       0,   596,   851,     0,   852,   597,     0,   598,   599,   853,
     854,     0,     0,     0,     0,     0,     0,   602,   603,   604,
       0,   605,   606,   607,   608,     0,     0,   855,     0,     0,
     610,   611,   612,   613,   614,     0,   615,     0,     0,     0,
       0,     0,   856,   857,     0,   616,   617,   618,   858,   619,
     620,   621,     0,   622,   859,   860,   623,   861,   624,     0,
     862,   863,   864,   865,   866,   625,   626,     0,   867,   627,
     868,   628,   869,   629,   630,     0,     0,     0,   631,   632,
     633,   634,   635,   636,   637,   638,     0,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,     0,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,     0,   870,   674,   675,   676,   677,   678,   679,
       0,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   871,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,     0,     0,     0,     0,     0,   872,   873,  2753,
       0,     0,     0,   875,     0,   876,     0,     0,     0,   877,
       0,     0,     0,   878,   879,   243,   244,     0,   760,   246,
     247,   248,   249,     0,     0,   250,     0,     0,     0,     0,
     251,     0,     0,   761,     0,   253,   254,   255,   256,   762,
     258,     0,   259,     0,     0,   763,   260,   764,   765,   766,
     261,   767,     0,   262,   263,   264,     0,   265,     0,   266,
     267,     0,     0,   268,   768,   769,   269,   270,     0,   271,
     272,   770,   771,   274,     0,   275,   276,   277,   278,   772,
     280,     0,   773,   282,     0,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,   294,   295,     0,
     296,   297,   298,   299,   300,     0,   774,   775,   301,     0,
       0,     0,   776,   302,   777,     0,   303,   778,   779,     0,
     304,   305,   306,   780,   781,   782,     0,     0,     0,     0,
     783,   309,   784,     0,     0,   785,   310,   311,     0,   312,
       0,     0,     0,     0,     0,   313,   314,   315,   316,   317,
       0,     0,     0,   318,     0,     0,   319,   320,   321,     0,
       0,     0,   322,     0,   323,   324,     0,   325,   326,   327,
       0,     0,   328,   329,     0,   330,   331,   332,   333,   334,
     335,   786,     0,   336,   337,   338,   339,   340,   787,   788,
     341,   342,     0,   343,   344,   345,   346,   347,   789,     0,
     348,   349,     0,     0,     0,   790,   351,  2809,   352,     0,
       0,     0,   353,     0,   354,   791,   356,   792,     0,   358,
       0,   359,     0,   793,     0,   360,   361,     0,   362,   794,
       0,   363,   364,     0,     0,     0,   795,   366,   367,   368,
     796,     0,   369,   370,   371,     0,     0,   372,     0,     0,
       0,   797,   373,   374,   375,   798,     0,     0,   376,     0,
       0,     0,   377,   378,     0,   379,   380,     0,     0,     0,
     381,     0,   382,     0,     0,   383,   384,     0,     0,   385,
       0,   799,   386,   387,     0,     0,     0,     0,     0,   800,
     389,     0,   390,     0,   391,     0,   392,   393,     0,     0,
     801,     0,     0,     0,     0,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,     0,   412,   413,   414,   802,   415,
     416,   417,   418,   803,   419,   420,     0,     0,     0,     0,
     421,   422,   423,   424,   804,   426,     0,     0,   805,   428,
     806,   429,     0,   430,   807,   808,   809,   810,   811,   435,
     436,   437,   438,   439,     0,   812,   440,   441,     0,     0,
     442,   443,   444,   445,   446,   813,   814,   815,   447,   448,
       0,   816,   817,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   456,   457,   458,   818,   459,     0,   460,
       0,   461,   462,   463,   464,   465,   466,   467,   819,   820,
     470,   821,   471,     0,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   822,   482,   483,     0,
       0,   484,     0,     0,     0,   485,   486,     0,   487,   488,
       0,     0,   489,   490,   491,   492,   493,     0,   494,   495,
       0,   496,   497,   498,   823,   824,   499,   500,   501,   502,
     503,   504,   505,   506,     0,   507,     0,   508,   509,     0,
     510,   511,   512,     0,   825,     0,   826,   514,   515,   516,
     517,     0,   518,   827,   828,   520,   521,   522,   523,     0,
     829,   525,     0,     0,     0,   526,   527,   528,   529,     0,
       0,     0,   530,     0,     0,     0,   531,     0,   532,   533,
     534,   535,     0,   536,   537,   538,   539,   540,     0,     0,
       0,     0,     0,   541,   542,   543,     0,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,   550,
     551,   552,   553,   830,   831,   554,   555,     0,     0,   556,
     557,   832,   559,   560,   561,   833,   834,   562,   563,   564,
     565,   835,   566,   567,     0,     0,   568,   569,   570,   571,
       0,   836,   572,   573,     0,   837,   838,   839,   840,     0,
       0,     0,     0,     0,   578,   579,     0,   841,   842,   843,
     581,   582,     0,   844,   583,   584,   845,   585,   586,     0,
     587,   588,     0,     0,   589,     0,     0,   590,     0,   591,
       0,   846,   593,     0,     0,   847,   848,   849,   594,   850,
     595,     0,     0,   596,   851,     0,   852,   597,     0,   598,
     599,   853,   854,     0,     0,     0,     0,     0,     0,   602,
     603,   604,     0,   605,   606,   607,   608,     0,     0,   855,
       0,     0,   610,   611,   612,   613,   614,     0,   615,     0,
       0,     0,     0,     0,   856,   857,     0,   616,   617,   618,
     858,   619,   620,   621,     0,   622,   859,   860,   623,   861,
     624,     0,   862,   863,   864,   865,   866,   625,   626,     0,
     867,   627,   868,   628,   869,   629,   630,     0,     0,     0,
     631,   632,   633,   634,   635,   636,   637,   638,     0,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,     0,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,     0,   870,   674,   675,   676,   677,
     678,   679,     0,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   871,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,     0,     0,     0,     0,     0,   872,
     873,     0,     0,     0,     0,   875,     0,   876,     0,     0,
       0,   877,     0,     0,     0,   878,   879,   243,   244,     0,
     760,   246,   247,   248,   249,     0,     0,   250,     0,     0,
       0,     0,   251,     0,     0,   761,     0,   253,   254,   255,
     256,   762,   258,     0,   259,     0,     0,   763,   260,   764,
     765,   766,   261,   767,     0,   262,   263,   264,     0,   265,
       0,   266,   267,     0,     0,   268,   768,   769,   269,   270,
       0,   271,   272,   770,   771,   274,     0,   275,   276,   277,
     278,   772,   280,     0,   773,   282,     0,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,   294,
     295,     0,   296,   297,   298,   299,   300,     0,   774,   775,
     301,     0,     0,     0,   776,   302,   777,     0,   303,   778,
     779,     0,   304,   305,   306,   780,   781,   782,     0,     0,
       0,     0,   783,   309,   784,     0,     0,   785,   310,   311,
       0,   312,     0,     0,     0,     0,     0,   313,   314,   315,
     316,   317,     0,     0,     0,   318,     0,     0,   319,   320,
     321,     0,     0,     0,   322,     0,   323,   324,     0,   325,
     326,   327,     0,     0,   328,   329,     0,   330,   331,   332,
     333,   334,   335,   786,     0,   336,   337,   338,   339,   340,
     787,   788,   341,   342,     0,   343,   344,   345,   346,   347,
     789,     0,   348,   349,     0,     0,     0,   790,   351,  2811,
     352,     0,     0,     0,   353,     0,   354,   791,   356,   792,
       0,   358,     0,   359,     0,   793,     0,   360,   361,     0,
     362,   794,     0,   363,   364,     0,     0,     0,   795,   366,
     367,   368,   796,     0,   369,   370,   371,     0,     0,   372,
       0,     0,     0,   797,   373,   374,   375,   798,     0,     0,
     376,     0,     0,     0,   377,   378,     0,   379,   380,     0,
       0,     0,   381,     0,   382,     0,     0,   383,   384,     0,
       0,   385,     0,   799,   386,   387,     0,     0,     0,     0,
       0,   800,   389,     0,   390,     0,   391,     0,   392,   393,
       0,     0,   801,     0,     0,     0,     0,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,     0,   412,   413,   414,
     802,   415,   416,   417,   418,   803,   419,   420,     0,     0,
       0,     0,   421,   422,   423,   424,   804,   426,     0,     0,
     805,   428,   806,   429,     0,   430,   807,   808,   809,   810,
     811,   435,   436,   437,   438,   439,     0,   812,   440,   441,
       0,     0,   442,   443,   444,   445,   446,   813,   814,   815,
     447,   448,     0,   816,   817,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   456,   457,   458,   818,   459,
       0,   460,     0,   461,   462,   463,   464,   465,   466,   467,
     819,   820,   470,   821,   471,     0,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   822,   482,
     483,     0,     0,   484,     0,     0,     0,   485,   486,     0,
     487,   488,     0,     0,   489,   490,   491,   492,   493,     0,
     494,   495,     0,   496,   497,   498,   823,   824,   499,   500,
     501,   502,   503,   504,   505,   506,     0,   507,     0,   508,
     509,     0,   510,   511,   512,     0,   825,     0,   826,   514,
     515,   516,   517,     0,   518,   827,   828,   520,   521,   522,
     523,     0,   829,   525,     0,     0,     0,   526,   527,   528,
     529,     0,     0,     0,   530,     0,     0,     0,   531,     0,
     532,   533,   534,   535,     0,   536,   537,   538,   539,   540,
       0,     0,     0,     0,     0,   541,   542,   543,     0,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,   550,   551,   552,   553,   830,   831,   554,   555,     0,
       0,   556,   557,   832,   559,   560,   561,   833,   834,   562,
     563,   564,   565,   835,   566,   567,     0,     0,   568,   569,
     570,   571,     0,   836,   572,   573,     0,   837,   838,   839,
     840,     0,     0,     0,     0,     0,   578,   579,     0,   841,
     842,   843,   581,   582,     0,   844,   583,   584,   845,   585,
     586,     0,   587,   588,     0,     0,   589,     0,     0,   590,
       0,   591,     0,   846,   593,     0,     0,   847,   848,   849,
     594,   850,   595,     0,     0,   596,   851,     0,   852,   597,
       0,   598,   599,   853,   854,     0,     0,     0,     0,     0,
       0,   602,   603,   604,     0,   605,   606,   607,   608,     0,
       0,   855,     0,     0,   610,   611,   612,   613,   614,     0,
     615,     0,     0,     0,     0,     0,   856,   857,     0,   616,
     617,   618,   858,   619,   620,   621,     0,   622,   859,   860,
     623,   861,   624,     0,   862,   863,   864,   865,   866,   625,
     626,     0,   867,   627,   868,   628,   869,   629,   630,     0,
       0,     0,   631,   632,   633,   634,   635,   636,   637,   638,
       0,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,     0,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,     0,   870,   674,   675,
     676,   677,   678,   679,     0,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   871,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,     0,     0,     0,     0,
       0,   872,   873,     0,     0,     0,     0,   875,     0,   876,
       0,     0,     0,   877,     0,     0,     0,   878,   879,   243,
     244,     0,   760,   246,   247,   248,   249,     0,     0,   250,
       0,     0,     0,     0,   251,     0,     0,   761,     0,   253,
     254,   255,   256,   762,   258,     0,   259,     0,     0,   763,
     260,   764,   765,   766,   261,   767,     0,   262,   263,   264,
       0,   265,     0,   266,   267,     0,     0,   268,   768,   769,
     269,   270,     0,   271,   272,   770,   771,   274,     0,   275,
     276,   277,   278,   772,   280,     0,   773,   282,     0,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,   294,   295,     0,   296,   297,   298,   299,   300,     0,
     774,   775,   301,     0,     0,     0,   776,   302,   777,     0,
     303,   778,   779,     0,   304,   305,   306,   780,   781,   782,
       0,     0,     0,     0,   783,   309,   784,     0,     0,   785,
     310,   311,     0,   312,     0,     0,     0,     0,     0,   313,
     314,   315,   316,   317,     0,     0,     0,   318,     0,     0,
     319,   320,   321,     0,     0,     0,   322,     0,   323,   324,
       0,   325,   326,   327,     0,     0,   328,   329,     0,   330,
     331,   332,   333,   334,   335,   786,     0,   336,   337,   338,
     339,   340,   787,   788,   341,   342,     0,   343,   344,   345,
     346,   347,   789,     0,   348,   349,     0,     0,     0,   790,
     351,  2813,   352,     0,     0,     0,   353,     0,   354,   791,
     356,   792,     0,   358,     0,   359,     0,   793,     0,   360,
     361,     0,   362,   794,     0,   363,   364,     0,     0,     0,
     795,   366,   367,   368,   796,     0,   369,   370,   371,     0,
       0,   372,     0,     0,     0,   797,   373,   374,   375,   798,
       0,     0,   376,     0,     0,     0,   377,   378,     0,   379,
     380,     0,     0,     0,   381,     0,   382,     0,     0,   383,
     384,     0,     0,   385,     0,   799,   386,   387,     0,     0,
       0,     0,     0,   800,   389,     0,   390,     0,   391,     0,
     392,   393,     0,     0,   801,     0,     0,     0,     0,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,     0,   412,
     413,   414,   802,   415,   416,   417,   418,   803,   419,   420,
       0,     0,     0,     0,   421,   422,   423,   424,   804,   426,
       0,     0,   805,   428,   806,   429,     0,   430,   807,   808,
     809,   810,   811,   435,   436,   437,   438,   439,     0,   812,
     440,   441,     0,     0,   442,   443,   444,   445,   446,   813,
     814,   815,   447,   448,     0,   816,   817,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   456,   457,   458,
     818,   459,     0,   460,     0,   461,   462,   463,   464,   465,
     466,   467,   819,   820,   470,   821,   471,     0,   472,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     822,   482,   483,     0,     0,   484,     0,     0,     0,   485,
     486,     0,   487,   488,     0,     0,   489,   490,   491,   492,
     493,     0,   494,   495,     0,   496,   497,   498,   823,   824,
     499,   500,   501,   502,   503,   504,   505,   506,     0,   507,
       0,   508,   509,     0,   510,   511,   512,     0,   825,     0,
     826,   514,   515,   516,   517,     0,   518,   827,   828,   520,
     521,   522,   523,     0,   829,   525,     0,     0,     0,   526,
     527,   528,   529,     0,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,   534,   535,     0,   536,   537,   538,
     539,   540,     0,     0,     0,     0,     0,   541,   542,   543,
       0,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,   550,   551,   552,   553,   830,   831,   554,
     555,     0,     0,   556,   557,   832,   559,   560,   561,   833,
     834,   562,   563,   564,   565,   835,   566,   567,     0,     0,
     568,   569,   570,   571,     0,   836,   572,   573,     0,   837,
     838,   839,   840,     0,     0,     0,     0,     0,   578,   579,
       0,   841,   842,   843,   581,   582,     0,   844,   583,   584,
     845,   585,   586,     0,   587,   588,     0,     0,   589,     0,
       0,   590,     0,   591,     0,   846,   593,     0,     0,   847,
     848,   849,   594,   850,   595,     0,     0,   596,   851,     0,
     852,   597,     0,   598,   599,   853,   854,     0,     0,     0,
       0,     0,     0,   602,   603,   604,     0,   605,   606,   607,
     608,     0,     0,   855,     0,     0,   610,   611,   612,   613,
     614,     0,   615,     0,     0,     0,     0,     0,   856,   857,
       0,   616,   617,   618,   858,   619,   620,   621,     0,   622,
     859,   860,   623,   861,   624,     0,   862,   863,   864,   865,
     866,   625,   626,     0,   867,   627,   868,   628,   869,   629,
     630,     0,     0,     0,   631,   632,   633,   634,   635,   636,
     637,   638,     0,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,     0,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,     0,   870,
     674,   675,   676,   677,   678,   679,     0,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   871,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,     0,     0,
       0,     0,     0,   872,   873,     0,     0,     0,     0,   875,
       0,   876,     0,     0,     0,   877,     0,     0,     0,   878,
     879,   243,   244,     0,   760,   246,   247,   248,   249,     0,
       0,   250,     0,     0,     0,     0,   251,     0,     0,   761,
       0,   253,   254,   255,   256,   762,   258,     0,   259,     0,
       0,   763,   260,   764,   765,   766,   261,   767,     0,   262,
     263,   264,     0,   265,     0,   266,   267,     0,     0,   268,
     768,   769,   269,   270,     0,   271,   272,   770,   771,   274,
       0,   275,   276,   277,   278,   772,   280,     0,   773,   282,
       0,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,     0,   294,   295,     0,   296,   297,   298,   299,
     300,     0,   774,   775,   301,     0,     0,     0,   776,   302,
     777,     0,   303,   778,   779,     0,   304,   305,   306,   780,
     781,   782,     0,     0,     0,     0,   783,   309,   784,     0,
       0,   785,   310,   311,     0,   312,     0,     0,     0,     0,
       0,   313,   314,   315,   316,   317,     0,     0,     0,   318,
       0,     0,   319,   320,   321,     0,     0,     0,   322,     0,
     323,   324,     0,   325,   326,   327,     0,     0,   328,   329,
       0,   330,   331,   332,   333,   334,   335,   786,     0,   336,
     337,   338,   339,   340,   787,   788,   341,   342,     0,   343,
     344,   345,   346,   347,   789,     0,   348,   349,     0,     0,
       0,   790,   351,     0,   352,     0,     0,     0,   353,     0,
     354,   791,   356,   792,     0,   358,     0,   359,     0,   793,
       0,   360,   361,     0,   362,   794,     0,   363,   364,     0,
       0,     0,   795,   366,   367,   368,   796,     0,   369,   370,
     371,     0,     0,   372,     0,     0,     0,   797,   373,   374,
     375,   798,     0,     0,   376,     0,     0,     0,   377,   378,
       0,   379,   380,     0,     0,     0,   381,     0,   382,     0,
       0,   383,   384,     0,     0,   385,     0,   799,   386,   387,
       0,     0,     0,     0,     0,   800,   389,     0,   390,     0,
     391,     0,   392,   393,     0,     0,   801,     0,     0,     0,
       0,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
       0,   412,   413,   414,   802,   415,   416,   417,   418,   803,
     419,   420,     0,     0,     0,     0,   421,   422,   423,   424,
     804,   426,     0,     0,   805,   428,   806,   429,     0,   430,
     807,   808,   809,   810,   811,   435,   436,   437,   438,   439,
       0,   812,   440,   441,     0,     0,   442,   443,   444,   445,
     446,   813,   814,   815,   447,   448,     0,   816,   817,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   456,
     457,   458,   818,   459,     0,   460,     0,   461,   462,   463,
     464,   465,   466,   467,   819,   820,   470,   821,   471,     0,
     472,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   822,   482,   483,     0,     0,   484,     0,     0,
       0,   485,   486,     0,   487,   488,     0,     0,   489,   490,
     491,   492,   493,     0,   494,   495,     0,   496,   497,   498,
     823,   824,   499,   500,   501,   502,   503,   504,   505,   506,
       0,   507,     0,   508,   509,     0,   510,   511,   512,     0,
     825,     0,   826,   514,   515,   516,   517,     0,   518,   827,
     828,   520,   521,   522,   523,     0,   829,   525,     0,     0,
       0,   526,   527,   528,   529,     0,     0,     0,   530,     0,
       0,     0,   531,     0,   532,   533,   534,   535,     0,   536,
     537,   538,   539,   540,     0,     0,     0,     0,     0,   541,
     542,   543,     0,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,   549,   550,   551,   552,   553,   830,
     831,   554,   555,     0,     0,   556,   557,   832,   559,   560,
     561,   833,   834,   562,   563,   564,   565,   835,   566,   567,
       0,     0,   568,   569,   570,   571,     0,   836,   572,   573,
       0,   837,   838,   839,   840,     0,     0,     0,     0,     0,
     578,   579,     0,   841,   842,   843,   581,   582,     0,   844,
     583,   584,   845,   585,   586,     0,   587,   588,     0,     0,
     589,     0,     0,   590,     0,   591,     0,   846,   593,     0,
       0,   847,   848,   849,   594,   850,   595,     0,     0,   596,
     851,     0,   852,   597,     0,   598,   599,   853,   854,     0,
       0,     0,     0,     0,     0,   602,   603,   604,     0,   605,
     606,   607,   608,     0,     0,   855,     0,     0,   610,   611,
     612,   613,   614,     0,   615,     0,     0,     0,     0,     0,
     856,   857,     0,   616,   617,   618,   858,   619,   620,   621,
       0,   622,   859,   860,   623,   861,   624,     0,   862,   863,
     864,   865,   866,   625,   626,     0,   867,   627,   868,   628,
     869,   629,   630,     0,     0,     0,   631,   632,   633,   634,
     635,   636,   637,   638,     0,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
       0,   870,   674,   675,   676,   677,   678,   679,     0,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   871,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
       0,     0,     0,     0,     0,   872,   873,     0,     0,     0,
       0,   875,     0,   876,     0,     0,     0,   877,     0,     0,
       0,   878,   879,   243,   244,     0,   760,   246,   247,   248,
     249,     0,     0,   250,     0,     0,     0,     0,   251,     0,
       0,   761,     0,   253,   254,   255,   256,   762,   258,     0,
     259,     0,     0,   763,   260,   764,   765,   766,   261,   767,
       0,   262,   263,   264,     0,   265,     0,   266,   267,     0,
       0,   268,   768,   769,   269,   270,     0,   271,   272,   770,
     771,   274,     0,   275,   276,   277,   278,   772,   280,     0,
     773,   282,     0,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,   294,   295,     0,   296,   297,
     298,   299,   300,     0,   774,   775,   301,     0,     0,     0,
     776,   302,   777,     0,   303,   778,   779,     0,   304,   305,
     306,   780,   781,   782,     0,     0,     0,     0,   783,   309,
     784,     0,     0,   785,   310,   311,     0,   312,     0,     0,
       0,     0,     0,   313,   314,   315,   316,   317,     0,     0,
       0,   318,     0,     0,   319,   320,   321,     0,     0,     0,
     322,     0,   323,   324,     0,   325,   326,   327,     0,     0,
     328,   329,     0,   330,   331,   332,   333,   334,   335,   786,
       0,   336,   337,   338,   339,   340,   787,   788,   341,   342,
       0,   343,   344,   345,   346,   347,   789,     0,   348,   349,
       0,     0,     0,   790,   351,     0,   352,     0,     0,     0,
     353,     0,   354,   791,   356,   792,     0,   358,     0,   359,
       0,   793,     0,   360,   361,     0,   362,   794,     0,   363,
     364,     0,     0,     0,   795,   366,   367,   368,   796,     0,
     369,   370,   371,     0,     0,   372,     0,     0,     0,   797,
     373,   374,   375,   798,     0,     0,   376,     0,     0,     0,
     377,   378,     0,   379,   380,     0,     0,     0,   381,     0,
     382,     0,     0,   383,   384,     0,     0,   385,     0,   799,
     386,   387,     0,     0,     0,     0,     0,   800,   389,     0,
     390,     0,   391,     0,   392,   393,     0,     0,   801,     0,
       0,     0,     0,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,     0,   412,   413,   414,   802,   415,   416,   417,
     418,   803,   419,   420,     0,     0,     0,     0,   421,   422,
     423,   424,   804,   426,     0,     0,   805,   428,   806,   429,
       0,   430,   807,   808,   809,   810,   811,   435,   436,   437,
     438,   439,     0,   812,   440,   441,     0,     0,   442,   443,
     444,   445,   446,   813,   814,   815,   447,   448,     0,   816,
     817,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   456,   457,   458,   818,   459,     0,   460,     0,   461,
     462,   463,   464,   465,   466,   467,   819,   820,   470,   821,
     471,     0,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   822,   482,   483,     0,     0,   484,
       0,     0,     0,   485,   486,     0,   487,   488,     0,     0,
     489,   490,   491,   492,   493,     0,   494,   495,     0,   496,
     497,   498,   823,   824,   499,   500,   501,   502,   503,   504,
     505,   506,     0,   507,     0,   508,   509,     0,   510,   511,
     512,     0,   825,     0,   826,   514,   515,   516,   517,     0,
     518,   827,   828,   520,   521,   522,   523,     0,   829,   525,
       0,     0,     0,   526,   527,   528,   529,     0,     0,     0,
     530,     0,     0,     0,   531,     0,   532,   533,   534,   535,
       0,   536,   537,   538,   539,   540,     0,     0,     0,     0,
       0,   541,   542,   543,     0,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,   550,   551,   552,
     553,   830,   831,   554,   555,     0,     0,   556,   557,   832,
     559,   560,   561,   833,   834,   562,   563,   564,   565,   835,
     566,   567,     0,     0,   568,   569,   570,   571,     0,   836,
     572,   573,     0,   837,   838,   839,   840,     0,     0,     0,
       0,     0,   578,   579,     0,   841,   842,   843,   581,   582,
       0,   844,   583,   584,   845,   585,   586,     0,   587,   588,
       0,     0,   589,     0,     0,   590,     0,   591,     0,   846,
     593,     0,     0,   847,   848,   849,   594,   850,   595,     0,
       0,   596,   851,     0,   852,   597,     0,   598,   599,   853,
     854,     0,     0,     0,     0,     0,     0,   602,   603,   604,
       0,   605,   606,   607,   608,     0,     0,   855,     0,     0,
     610,   611,   612,   613,   614,     0,   615,     0,     0,     0,
       0,     0,   856,   857,     0,   616,   617,   618,   858,   619,
     620,   621,     0,   622,   859,   860,   623,   861,   624,     0,
     862,   863,   864,   865,   866,   625,   626,     0,   867,   627,
     868,   628,   869,   629,   630,     0,     0,     0,   631,   632,
     633,   634,   635,   636,   637,   638,     0,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,     0,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,     0,   870,   674,   675,   676,   677,   678,   679,
       0,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   871,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,     0,     0,     0,     0,     0,   872,   873,     0,
       0,     0,     0,   875,     0,  1278,     0,     0,     0,   877,
       0,     0,     0,   878,   879,   243,   244,     0,   760,   246,
     247,   248,   249,  2090,     0,   250,     0,     0,     0,     0,
    2091,     0,     0,   761,     0,   253,   254,   255,   256,   762,
     258,     0,   259,     0,     0,   763,   260,   764,   765,   766,
     261,   767,     0,   262,   263,   264,     0,   265,     0,   266,
     267,     0,     0,   268,   768,   769,   269,   270,     0,   271,
     272,   770,   771,   274,     0,   275,   276,   277,   278,   772,
     280,     0,   773,   282,     0,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,   294,   295,     0,
     296,   297,   298,   299,   300,     0,   774,   775,   301,     0,
       0,     0,   776,   302,   777,     0,   303,   778,   779,     0,
     304,   305,   306,   780,   781,   782,     0,     0,     0,     0,
     783,   309,   784,     0,     0,   785,   310,   311,     0,   312,
       0,     0,     0,     0,     0,   313,   314,   315,   316,   317,
       0,     0,     0,   318,     0,     0,   319,   320,   321,     0,
       0,     0,   322,     0,   323,   324,     0,   325,   326,   327,
       0,     0,   328,   329,     0,   330,   331,   332,   333,   334,
     335,   786,     0,   336,   337,   338,   339,   340,   787,   788,
     341,   342,     0,   343,   344,   345,   346,   347,   789,     0,
     348,   349,     0,     0,     0,   790,   351,     0,   352,     0,
       0,     0,   353,     0,   354,   791,   356,   792,     0,   358,
       0,   359,     0,   793,     0,   360,   361,     0,   362,   794,
       0,   363,   364,     0,     0,     0,   795,   366,   367,   368,
     796,     0,   369,   370,   371,     0,     0,   372,     0,     0,
       0,   797,   373,   374,   375,   798,     0,     0,   376,     0,
       0,     0,   377,   378,     0,   379,   380,     0,     0,     0,
     381,     0,   382,     0,     0,   383,   384,     0,     0,   385,
       0,   799,   386,   387,     0,     0,     0,     0,     0,   800,
     389,     0,   390,     0,   391,     0,   392,   393,     0,     0,
     801,     0,     0,     0,     0,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,     0,   412,   413,   414,   802,   415,
     416,   417,   418,   803,   419,   420,     0,     0,     0,     0,
     421,   422,   423,   424,   804,   426,     0,     0,   805,   428,
     806,   429,     0,   430,   807,   808,   809,   810,   811,   435,
     436,   437,   438,   439,     0,   812,   440,   441,     0,     0,
     442,   443,   444,   445,   446,   813,     0,   815,   447,   448,
       0,   816,   817,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   456,   457,   458,   818,   459,     0,   460,
       0,   461,   462,   463,   464,   465,   466,   467,   819,   820,
     470,   821,   471,     0,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   822,   482,   483,     0,
       0,   484,     0,     0,     0,   485,   486,     0,   487,   488,
       0,     0,   489,   490,   491,   492,   493,     0,   494,   495,
       0,   496,   497,   498,   823,   824,   499,   500,   501,   502,
     503,   504,   505,   506,     0,   507,     0,   508,   509,     0,
     510,   511,   512,     0,   825,     0,   826,   514,   515,   516,
     517,     0,   518,   827,   828,   520,   521,   522,   523,     0,
     829,   525,     0,     0,     0,   526,   527,   528,   529,     0,
       0,     0,   530,     0,     0,     0,   531,     0,   532,   533,
     534,   535,     0,   536,   537,   538,   539,   540,     0,     0,
       0,     0,     0,   541,   542,   543,     0,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,   550,
     551,   552,   553,   830,   831,   554,   555,     0,     0,   556,
     557,   832,   559,   560,   561,   833,   834,   562,   563,   564,
     565,   835,   566,   567,     0,     0,   568,   569,   570,   571,
       0,   836,   572,   573,     0,   837,   838,   839,   840,     0,
       0,     0,     0,     0,   578,   579,     0,   841,   842,   843,
     581,   582,     0,   844,   583,   584,   845,   585,   586,     0,
     587,   588,     0,     0,   589,     0,     0,   590,     0,   591,
       0,   846,   593,     0,     0,   847,   848,   849,   594,   850,
     595,     0,     0,   596,   851,     0,   852,   597,     0,   598,
     599,   853,   854,     0,     0,     0,     0,     0,     0,   602,
     603,   604,     0,   605,   606,   607,   608,     0,     0,   855,
       0,     0,   610,   611,   612,   613,   614,     0,   615,     0,
       0,     0,     0,     0,   856,   857,     0,   616,   617,   618,
     858,   619,   620,   621,     0,   622,   859,   860,   623,   861,
     624,     0,   862,   863,   864,   865,   866,   625,   626,     0,
     867,   627,   868,   628,   869,   629,   630,     0,     0,     0,
     631,   632,   633,   634,   635,   636,   637,   638,     0,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,     0,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,     0,   870,   674,   675,   676,   677,
     678,   679,     0,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   871,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,     0,     0,     0,     0,     0,   872,
     873,     0,     0,     0,     0,   875,     0,   876,     0,     0,
       0,   877,     0,     0,     0,   878,   879,   243,   244,     0,
     760,   246,   247,   248,   249,     0,     0,   250,     0,     0,
       0,     0,   251,     0,     0,   761,     0,   253,   254,   255,
     256,   762,   258,     0,   259,     0,     0,   763,   260,   764,
     765,   766,   261,   767,     0,   262,   263,   264,     0,   265,
       0,   266,   267,     0,     0,   268,   768,   769,   269,   270,
       0,   271,   272,   770,   771,   274,     0,   275,   276,   277,
     278,   772,   280,     0,   773,   282,     0,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,   294,
     295,     0,   296,   297,   298,   299,   300,     0,   774,   775,
     301,     0,     0,     0,   776,   302,   777,     0,   303,   778,
     779,     0,   304,   305,   306,   780,   781,   782,     0,     0,
       0,     0,   783,   309,   784,     0,     0,  2343,   310,   311,
       0,   312,     0,     0,     0,     0,     0,   313,   314,   315,
     316,   317,     0,     0,     0,   318,     0,     0,   319,   320,
     321,     0,     0,     0,   322,     0,   323,   324,     0,   325,
     326,   327,     0,     0,   328,   329,     0,   330,   331,   332,
     333,   334,   335,   786,     0,   336,   337,   338,   339,   340,
     787,   788,   341,   342,     0,   343,   344,   345,   346,   347,
     789,     0,   348,   349,     0,     0,     0,   790,   351,     0,
     352,     0,     0,     0,   353,     0,   354,   791,   356,   792,
       0,   358,     0,   359,     0,   793,     0,   360,   361,     0,
     362,   794,     0,   363,   364,     0,     0,     0,   795,   366,
     367,   368,   796,     0,   369,   370,   371,     0,     0,   372,
       0,     0,     0,   797,   373,   374,   375,   798,     0,     0,
     376,     0,     0,     0,   377,   378,     0,   379,   380,     0,
       0,     0,   381,     0,   382,     0,     0,   383,   384,     0,
       0,   385,     0,   799,   386,   387,     0,     0,     0,     0,
       0,   800,   389,     0,   390,     0,   391,     0,   392,   393,
       0,     0,   801,     0,     0,     0,     0,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,     0,   412,   413,   414,
     802,   415,   416,   417,   418,   803,   419,   420,     0,     0,
       0,     0,   421,   422,   423,   424,   804,   426,     0,     0,
     805,   428,   806,   429,     0,   430,   807,   808,   809,   810,
     811,   435,   436,   437,   438,   439,     0,   812,   440,   441,
       0,     0,   442,   443,   444,   445,   446,   813,   814,   815,
     447,   448,     0,   816,   817,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   456,   457,   458,   818,   459,
       0,   460,     0,   461,   462,   463,   464,   465,   466,   467,
     819,   820,   470,   821,   471,     0,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   822,   482,
     483,     0,     0,   484,     0,     0,     0,   485,   486,     0,
     487,   488,     0,     0,   489,   490,   491,   492,   493,     0,
     494,   495,     0,   496,   497,   498,   823,   824,   499,   500,
     501,   502,   503,   504,   505,   506,     0,   507,     0,   508,
     509,     0,   510,   511,   512,     0,   825,     0,   826,   514,
     515,   516,   517,     0,   518,   827,   828,   520,   521,   522,
     523,     0,   829,   525,     0,     0,     0,   526,   527,   528,
     529,     0,     0,     0,   530,     0,     0,     0,   531,     0,
     532,   533,   534,   535,     0,   536,   537,   538,   539,   540,
       0,     0,     0,     0,     0,   541,   542,   543,     0,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,   550,   551,   552,   553,   830,   831,   554,   555,     0,
       0,   556,   557,   832,   559,   560,   561,   833,   834,   562,
     563,   564,   565,   835,   566,   567,     0,     0,   568,   569,
     570,   571,     0,   836,   572,   573,     0,   837,   838,   839,
     840,     0,     0,     0,     0,     0,   578,   579,     0,   841,
     842,   843,   581,   582,     0,   844,   583,   584,   845,   585,
     586,     0,   587,   588,     0,     0,   589,     0,     0,   590,
       0,   591,     0,   846,   593,     0,     0,   847,   848,   849,
     594,   850,   595,     0,     0,   596,   851,     0,   852,   597,
       0,   598,   599,   853,   854,     0,     0,     0,     0,     0,
       0,   602,   603,   604,     0,   605,   606,   607,   608,     0,
       0,   855,     0,     0,   610,   611,   612,   613,   614,     0,
     615,     0,     0,     0,     0,     0,   856,   857,     0,   616,
     617,   618,   858,   619,   620,   621,     0,   622,   859,   860,
     623,   861,   624,     0,   862,   863,   864,   865,   866,   625,
     626,     0,   867,   627,   868,   628,   869,   629,   630,     0,
       0,     0,   631,   632,   633,   634,   635,   636,   637,   638,
       0,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,     0,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,     0,   870,   674,   675,
     676,   677,   678,   679,     0,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   871,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,     0,     0,     0,     0,
       0,   872,   873,     0,     0,     0,     0,   875,     0,   876,
       0,     0,     0,   877,     0,     0,     0,   878,   879,   243,
     244,     0,   760,   246,   247,   248,   249,     0,     0,   250,
       0,     0,     0,     0,   251,     0,     0,   761,     0,   253,
     254,   255,   256,   762,   258,     0,   259,     0,     0,   763,
     260,   764,   765,   766,   261,   767,     0,   262,   263,   264,
       0,   265,     0,   266,   267,     0,     0,   268,   768,   769,
     269,   270,     0,   271,   272,   770,   771,   274,     0,   275,
     276,   277,   278,   772,   280,     0,   773,   282,     0,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,   294,   295,     0,   296,   297,   298,   299,   300,     0,
     774,   775,   301,     0,     0,     0,   776,   302,   777,     0,
     303,   778,   779,     0,   304,   305,   306,   780,   781,   782,
       0,     0,     0,     0,   783,   309,   784,     0,     0,   785,
     310,   311,     0,   312,     0,     0,     0,     0,     0,   313,
     314,   315,   316,   317,     0,     0,     0,   318,     0,     0,
     319,   320,   321,     0,     0,     0,   322,     0,   323,   324,
       0,   325,   326,   327,     0,     0,   328,   329,     0,   330,
     331,   332,   333,   334,   335,   786,     0,   336,   337,   338,
     339,   340,   787,   788,   341,   342,     0,   343,   344,   345,
     346,   347,   789,     0,   348,   349,     0,     0,     0,   790,
     351,     0,   352,     0,     0,     0,   353,     0,   354,   791,
     356,   792,     0,   358,     0,   359,     0,   793,     0,   360,
     361,     0,   362,   794,     0,   363,   364,     0,     0,     0,
     795,   366,   367,   368,   796,     0,   369,   370,   371,     0,
       0,   372,     0,     0,     0,   797,   373,   374,   375,  3443,
       0,     0,   376,     0,     0,     0,   377,   378,     0,   379,
     380,     0,     0,     0,   381,     0,   382,     0,     0,   383,
     384,     0,     0,   385,     0,   799,   386,   387,     0,     0,
       0,     0,     0,   800,   389,     0,   390,     0,   391,     0,
     392,   393,     0,     0,   801,     0,     0,     0,     0,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,     0,   412,
     413,   414,   802,   415,   416,   417,   418,   803,   419,   420,
       0,     0,     0,     0,   421,   422,   423,   424,   804,   426,
       0,     0,   805,   428,   806,   429,     0,   430,   807,   808,
     809,   810,   811,   435,   436,   437,   438,   439,     0,   812,
     440,   441,     0,     0,   442,   443,   444,   445,   446,   813,
     814,   815,   447,   448,     0,   816,   817,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   456,   457,   458,
     818,   459,     0,   460,     0,   461,   462,   463,   464,   465,
     466,   467,   819,   820,   470,   821,   471,     0,   472,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     822,   482,   483,     0,     0,   484,     0,     0,     0,   485,
     486,     0,   487,   488,     0,     0,   489,   490,   491,   492,
     493,     0,   494,   495,     0,   496,   497,   498,   823,   824,
     499,   500,   501,   502,   503,   504,   505,   506,     0,   507,
       0,   508,   509,     0,   510,   511,   512,     0,   825,     0,
     826,   514,   515,   516,   517,     0,   518,   827,   828,   520,
     521,   522,   523,     0,   829,   525,     0,     0,     0,   526,
     527,   528,   529,     0,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,   534,   535,     0,   536,   537,   538,
     539,   540,     0,     0,     0,     0,     0,   541,   542,   543,
       0,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,   550,   551,   552,   553,   830,   831,   554,
     555,     0,     0,   556,   557,   832,   559,   560,   561,   833,
     834,   562,   563,   564,   565,   835,   566,   567,     0,     0,
     568,   569,   570,   571,     0,   836,   572,   573,     0,   837,
     838,   839,   840,     0,     0,     0,     0,     0,   578,   579,
       0,   841,   842,   843,   581,   582,     0,   844,   583,   584,
     845,   585,   586,     0,   587,   588,     0,     0,   589,     0,
       0,   590,     0,   591,     0,   846,   593,     0,     0,   847,
     848,   849,   594,   850,   595,     0,     0,   596,   851,     0,
     852,   597,     0,   598,   599,   853,   854,     0,     0,     0,
       0,     0,     0,   602,   603,   604,     0,   605,   606,   607,
     608,     0,     0,   855,     0,     0,   610,   611,   612,   613,
     614,     0,   615,     0,     0,     0,     0,     0,   856,   857,
       0,   616,   617,   618,   858,   619,   620,   621,     0,   622,
     859,   860,   623,   861,   624,     0,   862,   863,   864,   865,
     866,   625,   626,     0,   867,   627,   868,   628,   869,   629,
     630,     0,     0,     0,   631,   632,   633,   634,   635,   636,
     637,   638,     0,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,     0,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,     0,   870,
     674,   675,   676,   677,   678,   679,     0,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   871,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,     0,     0,
       0,     0,     0,   872,   873,     0,     0,     0,     0,   875,
       0,   876,     0,     0,     0,   877,     0,     0,     0,   878,
     879,   243,   244,     0,   760,   246,   247,   248,   249,     0,
       0,   250,     0,     0,     0,     0,   251,     0,     0,   761,
       0,   253,   254,   255,   256,   762,   258,     0,   259,     0,
       0,   763,   260,   764,   765,   766,   261,   767,     0,   262,
     263,   264,     0,   265,     0,   266,   267,     0,     0,   268,
     768,   769,   269,   270,     0,   271,   272,   770,   771,   274,
       0,   275,   276,   277,   278,   772,   280,     0,   773,   282,
       0,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,     0,   294,   295,     0,   296,   297,   298,   299,
     300,     0,   774,   775,   301,     0,     0,     0,   776,   302,
     777,     0,   303,   778,   779,     0,   304,   305,   306,   780,
     781,   782,     0,     0,     0,     0,   783,   309,   784,     0,
       0,   785,   310,   311,     0,   312,     0,     0,     0,     0,
       0,   313,   314,   315,   316,   317,     0,     0,     0,   318,
       0,     0,   319,   320,   321,     0,     0,     0,   322,     0,
     323,   324,     0,   325,   326,   327,     0,     0,   328,   329,
       0,   330,   331,   332,   333,   334,   335,   786,     0,   336,
     337,   338,   339,   340,   787,   788,   341,   342,     0,   343,
     344,   345,   346,   347,   789,     0,   348,   349,     0,     0,
       0,   790,   351,     0,   352,     0,     0,     0,   353,     0,
     354,   791,   356,   792,     0,   358,     0,   359,     0,   793,
       0,   360,   361,     0,   362,   794,     0,   363,   364,     0,
       0,     0,   795,   366,   367,   368,   796,     0,   369,   370,
     371,     0,     0,   372,     0,     0,     0,   797,   373,   374,
     375,  3514,     0,     0,   376,     0,     0,     0,   377,   378,
       0,   379,   380,     0,     0,     0,   381,     0,   382,     0,
       0,   383,   384,     0,     0,   385,     0,   799,   386,   387,
       0,     0,     0,     0,     0,   800,   389,     0,   390,     0,
     391,     0,   392,   393,     0,     0,   801,     0,     0,     0,
       0,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
       0,   412,   413,   414,   802,   415,   416,   417,   418,   803,
     419,   420,     0,     0,     0,     0,   421,   422,   423,   424,
     804,   426,     0,     0,   805,   428,   806,   429,     0,   430,
     807,   808,   809,   810,   811,   435,   436,   437,   438,   439,
       0,   812,   440,   441,     0,     0,   442,   443,   444,   445,
     446,   813,   814,   815,   447,   448,     0,   816,   817,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   456,
     457,   458,   818,   459,     0,   460,     0,   461,   462,   463,
     464,   465,   466,   467,   819,   820,   470,   821,   471,     0,
     472,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   822,   482,   483,     0,     0,   484,     0,     0,
       0,   485,   486,     0,   487,   488,     0,     0,   489,   490,
     491,   492,   493,     0,   494,   495,     0,   496,   497,   498,
     823,   824,   499,   500,   501,   502,   503,   504,   505,   506,
       0,   507,     0,   508,   509,     0,   510,   511,   512,     0,
     825,     0,   826,   514,   515,   516,   517,     0,   518,   827,
     828,   520,   521,   522,   523,     0,   829,   525,     0,     0,
       0,   526,   527,   528,   529,     0,     0,     0,   530,     0,
       0,     0,   531,     0,   532,   533,   534,   535,     0,   536,
     537,   538,   539,   540,     0,     0,     0,     0,     0,   541,
     542,   543,     0,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,   549,   550,   551,   552,   553,   830,
     831,   554,   555,     0,     0,   556,   557,   832,   559,   560,
     561,   833,   834,   562,   563,   564,   565,   835,   566,   567,
       0,     0,   568,   569,   570,   571,     0,   836,   572,   573,
       0,   837,   838,   839,   840,     0,     0,     0,     0,     0,
     578,   579,     0,   841,   842,   843,   581,   582,     0,   844,
     583,   584,   845,   585,   586,     0,   587,   588,     0,     0,
     589,     0,     0,   590,     0,   591,     0,   846,   593,     0,
       0,   847,   848,   849,   594,   850,   595,     0,     0,   596,
     851,     0,   852,   597,     0,   598,   599,   853,   854,     0,
       0,     0,     0,     0,     0,   602,   603,   604,     0,   605,
     606,   607,   608,     0,     0,   855,     0,     0,   610,   611,
     612,   613,   614,     0,   615,     0,     0,     0,     0,     0,
     856,   857,     0,   616,   617,   618,   858,   619,   620,   621,
       0,   622,   859,   860,   623,   861,   624,     0,   862,   863,
     864,   865,   866,   625,   626,     0,   867,   627,   868,   628,
     869,   629,   630,     0,     0,     0,   631,   632,   633,   634,
     635,   636,   637,   638,     0,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
       0,   870,   674,   675,   676,   677,   678,   679,     0,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   871,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
       0,     0,     0,     0,     0,   872,   873,     0,     0,     0,
       0,   875,     0,   876,     0,     0,     0,   877,     0,     0,
       0,   878,   879,   243,   244,     0,   760,   246,   247,   248,
     249,     0,     0,   250,     0,     0,     0,     0,   251,     0,
       0,   761,     0,   253,   254,   255,   256,   762,   258,     0,
     259,     0,     0,   763,   260,   764,   765,   766,   261,   767,
       0,   262,   263,   264,     0,   265,     0,   266,   267,     0,
       0,   268,   768,   769,   269,   270,     0,   271,   272,   770,
     771,   274,     0,   275,   276,   277,   278,   772,   280,     0,
     773,   282,     0,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,   294,   295,     0,   296,   297,
     298,   299,   300,     0,   774,   775,   301,     0,     0,     0,
     776,   302,   777,     0,   303,   778,   779,     0,   304,   305,
     306,   780,   781,   782,     0,     0,     0,     0,   783,   309,
     784,     0,     0,   785,   310,   311,     0,   312,     0,     0,
       0,     0,     0,   313,   314,   315,   316,   317,     0,     0,
       0,   318,     0,     0,   319,   320,   321,     0,     0,     0,
     322,     0,   323,   324,     0,   325,   326,   327,     0,     0,
     328,   329,     0,   330,   331,   332,   333,   334,   335,   786,
       0,   336,   337,   338,   339,   340,   787,   788,   341,   342,
       0,   343,   344,   345,   346,   347,   789,     0,   348,   349,
       0,     0,     0,   790,   351,     0,   352,     0,     0,     0,
     353,     0,   354,   791,   356,   792,     0,   358,     0,   359,
       0,   793,     0,   360,   361,     0,   362,   794,     0,   363,
     364,     0,     0,     0,   795,   366,   367,   368,   796,     0,
     369,   370,   371,     0,     0,   372,     0,     0,     0,   797,
     373,   374,   375,   798,     0,     0,   376,     0,     0,     0,
     377,   378,     0,   379,   380,     0,     0,     0,   381,     0,
     382,     0,     0,   383,   384,     0,     0,   385,     0,   799,
     386,   387,     0,     0,     0,     0,     0,   800,   389,     0,
     390,     0,   391,     0,   392,   393,     0,     0,   801,     0,
       0,     0,     0,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,     0,   412,   413,   414,   802,   415,   416,   417,
     418,   803,   419,   420,  5319,     0,     0,     0,   421,   422,
     423,   424,   804,   426,     0,     0,   805,   428,   806,   429,
       0,   430,   807,   808,   809,   810,   811,   435,   436,   437,
     438,   439,     0,   812,   440,   441,     0,     0,   442,   443,
     444,   445,   446,   813,     0,   815,   447,   448,     0,   816,
     817,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   456,   457,   458,   818,   459,     0,   460,     0,   461,
     462,   463,   464,   465,   466,   467,   819,   820,   470,   821,
     471,     0,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   822,   482,   483,     0,     0,   484,
       0,     0,     0,   485,   486,     0,   487,   488,     0,     0,
     489,   490,   491,   492,   493,     0,   494,   495,     0,   496,
     497,   498,   823,   824,   499,   500,   501,   502,   503,   504,
     505,   506,     0,   507,     0,   508,   509,     0,   510,   511,
     512,     0,   825,     0,   826,   514,   515,   516,   517,     0,
     518,   827,   828,   520,   521,   522,   523,     0,   829,   525,
       0,     0,     0,   526,   527,   528,   529,     0,     0,     0,
     530,     0,     0,     0,   531,     0,   532,   533,   534,   535,
       0,   536,   537,   538,   539,   540,     0,     0,     0,     0,
       0,   541,   542,   543,     0,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,   550,   551,   552,
     553,   830,   831,   554,   555,     0,     0,   556,   557,   832,
     559,   560,   561,   833,   834,   562,   563,   564,   565,   835,
     566,   567,     0,     0,   568,   569,   570,   571,     0,   836,
     572,   573,     0,   837,   838,   839,   840,     0,     0,     0,
       0,     0,   578,   579,     0,   841,   842,   843,   581,   582,
       0,   844,   583,   584,   845,   585,   586,     0,   587,   588,
       0,     0,   589,     0,     0,   590,     0,   591,     0,   846,
     593,     0,     0,   847,   848,   849,   594,   850,   595,     0,
       0,   596,   851,     0,   852,   597,     0,   598,   599,   853,
     854,     0,     0,     0,     0,     0,     0,   602,   603,   604,
       0,   605,   606,   607,   608,     0,     0,   855,     0,     0,
     610,   611,   612,   613,   614,     0,   615,     0,     0,     0,
       0,     0,   856,   857,     0,   616,   617,   618,   858,   619,
     620,   621,     0,   622,   859,   860,   623,   861,   624,     0,
     862,   863,   864,   865,   866,   625,   626,     0,   867,   627,
     868,   628,   869,   629,   630,     0,     0,     0,   631,   632,
     633,   634,   635,   636,   637,   638,     0,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,     0,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,     0,   870,   674,   675,   676,   677,   678,   679,
       0,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   871,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,     0,     0,     0,     0,     0,   872,   873,     0,
       0,     0,     0,   875,     0,   876,     0,     0,     0,   877,
       0,     0,     0,   878,   879,   243,   244,     0,   760,   246,
     247,   248,   249,     0,     0,   250,     0,     0,     0,     0,
     251,     0,     0,   761,     0,   253,   254,   255,   256,   762,
     258,     0,   259,     0,     0,   763,   260,   764,   765,   766,
     261,   767,     0,   262,   263,   264,     0,   265,     0,   266,
     267,     0,     0,   268,   768,   769,   269,   270,     0,   271,
     272,   770,   771,   274,     0,   275,   276,   277,   278,   772,
     280,     0,   773,   282,     0,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,   294,   295,     0,
     296,   297,   298,   299,   300,     0,   774,   775,   301,     0,
       0,     0,   776,   302,   777,     0,   303,   778,   779,     0,
     304,   305,   306,   780,   781,   782,     0,     0,     0,     0,
     783,   309,   784,     0,     0,   785,   310,   311,     0,   312,
       0,     0,     0,     0,     0,   313,   314,   315,   316,   317,
       0,     0,     0,   318,     0,     0,   319,   320,   321,     0,
       0,     0,   322,     0,   323,   324,     0,   325,   326,   327,
       0,     0,   328,   329,     0,   330,   331,   332,   333,   334,
     335,   786,     0,   336,   337,   338,   339,   340,   787,   788,
     341,   342,     0,   343,   344,   345,   346,   347,   789,     0,
     348,   349,     0,     0,     0,   790,   351,     0,   352,     0,
       0,     0,   353,     0,   354,   791,   356,   792,     0,   358,
       0,   359,     0,   793,     0,   360,   361,     0,   362,   794,
       0,   363,   364,     0,     0,     0,   795,   366,   367,   368,
     796,     0,   369,   370,   371,     0,     0,   372,     0,     0,
       0,   797,   373,   374,   375,   798,     0,     0,   376,     0,
       0,     0,   377,   378,     0,   379,   380,     0,     0,     0,
     381,     0,   382,     0,     0,   383,   384,     0,     0,   385,
       0,   799,   386,   387,     0,     0,     0,     0,     0,   800,
     389,     0,   390,     0,   391,     0,   392,   393,     0,     0,
     801,     0,     0,     0,     0,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,     0,   412,   413,   414,   802,   415,
     416,   417,   418,   803,   419,   420,     0,     0,     0,     0,
     421,   422,   423,   424,   804,   426,     0,     0,   805,   428,
     806,   429,     0,   430,   807,   808,   809,   810,   811,   435,
     436,   437,   438,   439,     0,   812,   440,   441,     0,     0,
     442,   443,   444,   445,   446,   813,     0,   815,   447,   448,
       0,   816,   817,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   456,   457,   458,   818,   459,     0,   460,
       0,   461,   462,   463,   464,   465,   466,   467,   819,   820,
     470,   821,   471,     0,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   822,   482,   483,     0,
       0,   484,     0,     0,     0,   485,   486,     0,   487,   488,
       0,     0,   489,   490,   491,   492,   493,     0,   494,   495,
       0,   496,   497,   498,   823,   824,   499,   500,   501,   502,
     503,   504,   505,   506,     0,   507,     0,   508,   509,     0,
     510,   511,   512,     0,   825,     0,   826,   514,   515,   516,
     517,     0,   518,   827,   828,   520,   521,   522,   523,     0,
     829,   525,     0,     0,     0,   526,   527,   528,   529,     0,
       0,     0,   530,     0,     0,     0,   531,     0,   532,   533,
     534,   535,     0,   536,   537,   538,   539,   540,     0,     0,
       0,     0,     0,   541,   542,   543,     0,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,   550,
     551,   552,   553,   830,   831,   554,   555,     0,     0,   556,
     557,   832,   559,   560,   561,   833,   834,   562,   563,   564,
     565,   835,   566,   567,     0,     0,   568,   569,   570,   571,
       0,   836,   572,   573,     0,   837,   838,   839,   840,     0,
       0,     0,     0,     0,   578,   579,     0,   841,   842,   843,
     581,   582,     0,   844,   583,   584,   845,   585,   586,     0,
     587,   588,     0,     0,   589,     0,     0,   590,     0,   591,
       0,   846,   593,     0,     0,   847,   848,   849,   594,   850,
     595,     0,     0,   596,   851,     0,   852,   597,     0,   598,
     599,   853,   854,     0,     0,     0,     0,     0,     0,   602,
     603,   604,     0,   605,   606,   607,   608,     0,     0,   855,
       0,     0,   610,   611,   612,   613,   614,     0,   615,     0,
       0,     0,     0,     0,   856,   857,     0,   616,   617,   618,
     858,   619,   620,   621,     0,   622,   859,   860,   623,   861,
     624,     0,   862,   863,   864,   865,   866,   625,   626,     0,
     867,   627,   868,   628,   869,   629,   630,     0,     0,     0,
     631,   632,   633,   634,   635,   636,   637,   638,     0,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,     0,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,     0,   870,   674,   675,   676,   677,
     678,   679,     0,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   871,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,     0,     0,     0,     0,     0,   872,
     873,     0,     0,     0,     0,   875,     0,   876,     0,     0,
       0,   877,     0,     0,     0,   878,   879,   243,   244,     0,
     760,   246,   247,   248,   249,     0,     0,   250,     0,     0,
       0,     0,   251,     0,     0,   761,     0,   253,   254,   255,
     256,   762,   258,     0,   259,     0,     0,   763,   260,   764,
     765,   766,   261,   767,     0,   262,   263,   264,     0,   265,
       0,   266,   267,     0,     0,   268,   768,   769,   269,   270,
       0,   271,   272,   770,   771,   274,     0,   275,   276,   277,
     278,   772,   280,     0,   773,   282,     0,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,   294,
     295,     0,   296,   297,   298,   299,   300,     0,   774,   775,
     301,     0,     0,     0,   776,   302,   777,     0,   303,   778,
     779,     0,   304,   305,   306,   780,   781,   782,     0,     0,
       0,     0,   783,   309,   784,     0,     0,   785,   310,   311,
       0,   312,     0,     0,     0,     0,     0,   313,   314,   315,
     316,   317,     0,     0,     0,   318,     0,     0,   319,   320,
     321,     0,     0,     0,   322,     0,   323,   324,     0,   325,
     326,   327,     0,     0,   328,   329,     0,   330,   331,   332,
     333,   334,   335,   786,     0,   336,   337,   338,   339,   340,
     787,   788,   341,   342,     0,   343,   344,   345,   346,   347,
     789,     0,   348,   349,     0,     0,     0,   790,   351,     0,
     352,     0,     0,     0,   353,     0,   354,   791,   356,   792,
       0,   358,     0,   359,     0,   793,     0,   360,   361,     0,
     362,   794,     0,   363,   364,     0,     0,     0,   795,   366,
     367,   368,   796,     0,   369,   370,   371,     0,     0,   372,
       0,     0,     0,   797,   373,   374,   375,  2108,     0,     0,
     376,     0,     0,     0,   377,   378,     0,   379,   380,     0,
       0,     0,   381,     0,   382,     0,     0,   383,   384,     0,
       0,   385,     0,   799,   386,   387,     0,     0,     0,     0,
       0,   800,   389,     0,   390,     0,   391,     0,   392,   393,
       0,     0,   801,     0,     0,     0,     0,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,     0,   412,   413,   414,
     802,   415,   416,   417,   418,   803,   419,   420,     0,     0,
       0,     0,   421,   422,   423,   424,   804,   426,     0,     0,
     805,   428,   806,   429,     0,   430,   807,   808,   809,   810,
     811,   435,   436,   437,   438,   439,     0,   812,   440,   441,
       0,     0,   442,   443,   444,   445,   446,   813,     0,   815,
     447,   448,     0,   816,   817,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   456,   457,   458,   818,   459,
       0,   460,     0,   461,   462,   463,   464,   465,   466,   467,
     819,   820,   470,   821,   471,     0,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   822,   482,
     483,     0,     0,   484,     0,     0,     0,   485,   486,     0,
     487,   488,     0,     0,   489,   490,   491,   492,   493,     0,
     494,   495,     0,   496,   497,   498,   823,   824,   499,   500,
     501,   502,   503,   504,   505,   506,     0,   507,     0,   508,
     509,     0,   510,   511,   512,     0,   825,     0,   826,   514,
     515,   516,   517,     0,   518,   827,   828,   520,   521,   522,
     523,     0,   829,   525,     0,     0,     0,   526,   527,   528,
     529,     0,     0,     0,   530,     0,     0,     0,   531,     0,
     532,   533,   534,   535,     0,   536,   537,   538,   539,   540,
       0,     0,     0,     0,     0,   541,   542,   543,     0,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,   550,   551,   552,   553,   830,   831,   554,   555,     0,
       0,   556,   557,   832,   559,   560,   561,   833,   834,   562,
     563,   564,   565,   835,   566,   567,     0,     0,   568,   569,
     570,   571,     0,   836,   572,   573,     0,   837,   838,   839,
     840,     0,     0,     0,     0,     0,   578,   579,     0,   841,
     842,   843,   581,   582,     0,   844,   583,   584,   845,   585,
     586,     0,   587,   588,     0,     0,   589,     0,     0,   590,
       0,   591,     0,   846,   593,     0,     0,   847,   848,   849,
     594,   850,   595,     0,     0,   596,   851,     0,   852,   597,
       0,   598,   599,   853,   854,     0,     0,     0,     0,     0,
       0,   602,   603,   604,     0,   605,   606,   607,   608,     0,
       0,   855,     0,     0,   610,   611,   612,   613,   614,     0,
     615,     0,     0,     0,     0,     0,   856,   857,     0,   616,
     617,   618,   858,   619,   620,   621,     0,   622,   859,   860,
     623,   861,   624,     0,   862,   863,   864,   865,   866,   625,
     626,     0,   867,   627,   868,   628,   869,   629,   630,     0,
       0,     0,   631,   632,   633,   634,   635,   636,   637,   638,
       0,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,     0,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,     0,   870,   674,   675,
     676,   677,   678,   679,     0,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   871,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,     0,     0,     0,     0,
       0,   872,   873,     0,     0,     0,     0,   875,     0,   876,
       0,     0,     0,   877,     0,     0,     0,   878,   879,   243,
     244,     0,   760,   246,   247,   248,   249,     0,     0,   250,
       0,     0,     0,     0,   251,     0,     0,   761,     0,   253,
     254,   255,   256,   762,   258,     0,   259,     0,     0,   763,
     260,   764,   765,   766,   261,   767,     0,   262,   263,   264,
       0,   265,     0,   266,   267,     0,     0,   268,   768,   769,
     269,   270,     0,   271,   272,   770,   771,   274,     0,   275,
     276,   277,   278,   772,   280,     0,   773,   282,     0,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,   294,   295,     0,   296,   297,   298,   299,   300,     0,
     774,   775,   301,     0,     0,     0,   776,   302,   777,     0,
     303,   778,   779,     0,   304,   305,   306,   780,   781,   782,
       0,     0,     0,     0,   783,   309,   784,     0,     0,   785,
     310,   311,     0,   312,     0,     0,     0,     0,     0,   313,
     314,   315,   316,   317,     0,     0,     0,   318,     0,     0,
     319,   320,   321,     0,     0,     0,   322,     0,   323,   324,
       0,   325,   326,   327,     0,     0,   328,   329,     0,   330,
     331,   332,   333,   334,   335,   786,     0,   336,   337,   338,
     339,   340,   787,   788,   341,   342,     0,   343,   344,   345,
     346,   347,   789,     0,   348,   349,     0,     0,     0,   790,
     351,     0,   352,     0,     0,     0,   353,     0,   354,   791,
     356,   792,     0,   358,     0,   359,     0,   793,     0,   360,
     361,     0,   362,   794,     0,   363,   364,     0,     0,     0,
     795,   366,   367,   368,   796,     0,   369,   370,   371,     0,
       0,   372,     0,     0,     0,   797,   373,   374,   375,  2110,
       0,     0,   376,     0,     0,     0,   377,   378,     0,   379,
     380,     0,     0,     0,   381,     0,   382,     0,     0,   383,
     384,     0,     0,   385,     0,   799,   386,   387,     0,     0,
       0,     0,     0,   800,   389,     0,   390,     0,   391,     0,
     392,   393,     0,     0,   801,     0,     0,     0,     0,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,     0,   412,
     413,   414,   802,   415,   416,   417,   418,   803,   419,   420,
       0,     0,     0,     0,   421,   422,   423,   424,   804,   426,
       0,     0,   805,   428,   806,   429,     0,   430,   807,   808,
     809,   810,   811,   435,   436,   437,   438,   439,     0,   812,
     440,   441,     0,     0,   442,   443,   444,   445,   446,   813,
       0,   815,   447,   448,     0,   816,   817,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   456,   457,   458,
     818,   459,     0,   460,     0,   461,   462,   463,   464,   465,
     466,   467,   819,   820,   470,   821,   471,     0,   472,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     822,   482,   483,     0,     0,   484,     0,     0,     0,   485,
     486,     0,   487,   488,     0,     0,   489,   490,   491,   492,
     493,     0,   494,   495,     0,   496,   497,   498,   823,   824,
     499,   500,   501,   502,   503,   504,   505,   506,     0,   507,
       0,   508,   509,     0,   510,   511,   512,     0,   825,     0,
     826,   514,   515,   516,   517,     0,   518,   827,   828,   520,
     521,   522,   523,     0,   829,   525,     0,     0,     0,   526,
     527,   528,   529,     0,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,   534,   535,     0,   536,   537,   538,
     539,   540,     0,     0,     0,     0,     0,   541,   542,   543,
       0,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,   550,   551,   552,   553,   830,   831,   554,
     555,     0,     0,   556,   557,   832,   559,   560,   561,   833,
     834,   562,   563,   564,   565,   835,   566,   567,     0,     0,
     568,   569,   570,   571,     0,   836,   572,   573,     0,   837,
     838,   839,   840,     0,     0,     0,     0,     0,   578,   579,
       0,   841,   842,   843,   581,   582,     0,   844,   583,   584,
     845,   585,   586,     0,   587,   588,     0,     0,   589,     0,
       0,   590,     0,   591,     0,   846,   593,     0,     0,   847,
     848,   849,   594,   850,   595,     0,     0,   596,   851,     0,
     852,   597,     0,   598,   599,   853,   854,     0,     0,     0,
       0,     0,     0,   602,   603,   604,     0,   605,   606,   607,
     608,     0,     0,   855,     0,     0,   610,   611,   612,   613,
     614,     0,   615,     0,     0,     0,     0,     0,   856,   857,
       0,   616,   617,   618,   858,   619,   620,   621,     0,   622,
     859,   860,   623,   861,   624,     0,   862,   863,   864,   865,
     866,   625,   626,     0,   867,   627,   868,   628,   869,   629,
     630,     0,     0,     0,   631,   632,   633,   634,   635,   636,
     637,   638,     0,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,     0,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,     0,   870,
     674,   675,   676,   677,   678,   679,     0,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   871,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,     0,     0,
       0,     0,     0,   872,   873,     0,     0,     0,     0,   875,
       0,   876,     0,     0,     0,   877,     0,     0,     0,   878,
     879,   243,   244,     0,   245,   246,   247,   248,   249,     0,
       0,   250,     0,     0,     0,     0,   251,     0,     0,   252,
       0,   253,   254,   255,   256,   257,   258,     0,   259,     0,
       0,     0,   260,     0,     0,     0,   261,     0,     0,   262,
     263,   264,     0,   265,     0,   266,   267,     0,     0,   268,
       0,     0,   269,   270,     0,   271,   272,   273,     0,   274,
       0,   275,   276,   277,   278,   279,   280,     0,   281,   282,
       0,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,     0,   294,   295,     0,   296,   297,   298,   299,
     300,     0,     0,     0,   301,     0,     0,     0,     0,   302,
       0,     0,   303,     0,     0,     0,   304,   305,   306,     0,
       0,   307,     0,     0,     0,     0,   308,   309,     0,     0,
       0,     0,   310,   311,     0,   312,     0,     0,     0,     0,
       0,   313,   314,   315,   316,   317,     0,     0,     0,   318,
       0,     0,   319,   320,   321,     0,     0,     0,   322,     0,
     323,   324,     0,   325,   326,   327,     0,     0,   328,   329,
       0,   330,   331,   332,   333,   334,   335,     0,     0,   336,
     337,   338,   339,   340,     0,     0,   341,   342,     0,   343,
     344,   345,   346,   347,     0,     0,   348,   349,     0,     0,
       0,   350,   351,     0,   352,     0,     0,     0,   353,     0,
     354,   355,   356,   357,     0,   358,     0,   359,     0,     0,
       0,   360,   361,     0,   362,     0,     0,   363,   364,     0,
       0,     0,   365,   366,   367,   368,     0,     0,   369,   370,
     371,     0,     0,   372,     0,     0,     0,     0,   373,   374,
     375,     0,     0,     0,   376,     0,     0,     0,   377,   378,
       0,   379,   380,     0,     0,     0,   381,     0,   382,     0,
       0,   383,   384,     0,     0,   385,     0,     0,   386,   387,
       0,     0,     0,     0,     0,   388,   389,     0,   390,     0,
     391,     0,   392,   393,     0,     0,     0,     0,     0,     0,
       0,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
       0,   412,   413,   414,     0,   415,   416,   417,   418,     0,
     419,   420,     0,     0,     0,     0,   421,   422,   423,   424,
     425,   426,     0,     0,   427,   428,     0,   429,     0,   430,
       0,   431,   432,   433,   434,   435,   436,   437,   438,   439,
       0,     0,   440,   441,     0,     0,   442,   443,   444,   445,
     446,     0,     0,     0,   447,   448,     0,     0,     0,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   456,
     457,   458,     0,   459,     0,   460,     0,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,     0,   471,     0,
     472,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   481,   482,   483,     0,     0,   484,     0,     0,
       0,   485,   486,     0,   487,   488,     0,     0,   489,   490,
     491,   492,   493,     0,   494,   495,     0,   496,   497,   498,
       0,     0,   499,   500,   501,   502,   503,   504,   505,   506,
       0,   507,     0,   508,   509,     0,   510,   511,   512,     0,
     513,     0,     0,   514,   515,   516,   517,     0,   518,     0,
     519,   520,   521,   522,   523,     0,   524,   525,    42,     0,
       0,   526,   527,   528,   529,     0,     0,     0,   530,     0,
       0,     0,   531,     0,   532,   533,   534,   535,     0,   536,
     537,   538,   539,   540,     0,     0,     0,     0,     0,   541,
     542,   543,     0,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,   549,   550,   551,   552,   553,     0,
       0,   554,   555,     0,     0,   556,   557,   558,   559,   560,
     561,     0,     0,   562,   563,   564,   565,     0,   566,   567,
       0,    49,   568,   569,   570,   571,     0,     0,   572,   573,
       0,   574,   575,   576,   577,     0,     0,     0,     0,     0,
     578,   579,     0,     0,     0,   580,   581,   582,     0,     0,
     583,   584,     0,   585,   586,     0,   587,   588,     0,     0,
     589,     0,     0,   590,     0,   591,     0,   592,   593,     0,
       0,     0,     0,     0,   594,    54,   595,     0,     0,   596,
       0,     0,     0,   597,     0,   598,   599,   600,   601,     0,
       0,     0,    55,     0,     0,   602,   603,   604,     0,   605,
     606,   607,   608,     0,     0,   609,     0,     0,   610,   611,
     612,   613,   614,     0,   615,     0,     0,     0,     0,     0,
       0,     0,     0,   616,   617,   618,     0,   619,   620,   621,
       0,   622,     0,     0,   623,     0,   624,     0,     0,     0,
       0,     0,     0,   625,   626,     0,     0,   627,     0,   628,
       0,   629,   630,     0,     0,  2982,   631,   632,   633,   634,
     635,   636,   637,   638,     0,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,  2983,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
       0,   673,   674,   675,   676,   677,   678,   679,     0,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
       0,     0,     0,     0,     0,   243,   244,     0,   245,   246,
     247,   248,   249,  2984,     0,   250,     0,     0,     0,     0,
     251,     0,  2985,   252,     0,   253,   254,   255,   256,   257,
     258,     0,   259,     0,     0,     0,   260,     0,     0,     0,
     261,     0,     0,   262,   263,   264,     0,   265,     0,   266,
     267,     0,     0,   268,     0,     0,   269,   270,     0,   271,
     272,   273,     0,   274,     0,   275,   276,   277,   278,   279,
     280,     0,   281,   282,     0,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,   294,   295,     0,
     296,   297,   298,   299,   300,     0,     0,     0,   301,     0,
       0,     0,     0,   302,     0,     0,   303,     0,     0,     0,
     304,   305,   306,     0,     0,   307,     0,     0,     0,     0,
     308,   309,     0,     0,     0,     0,   310,   311,     0,   312,
       0,     0,     0,     0,     0,   313,   314,   315,   316,   317,
       0,     0,     0,   318,     0,  2981,   319,   320,   321,     0,
       0,     0,   322,     0,   323,   324,     0,   325,   326,   327,
       0,     0,   328,   329,     0,   330,   331,   332,   333,   334,
     335,     0,     0,   336,   337,   338,   339,   340,     0,     0,
     341,   342,     0,   343,   344,   345,   346,   347,     0,     0,
     348,   349,     0,     0,     0,   350,   351,     0,   352,     0,
       0,     0,   353,     0,   354,   355,   356,   357,     0,   358,
       0,   359,     0,     0,     0,   360,   361,     0,   362,     0,
       0,   363,   364,     0,     0,     0,   365,   366,   367,   368,
       0,     0,   369,   370,   371,     0,     0,   372,     0,     0,
       0,     0,   373,   374,   375,     0,     0,     0,   376,     0,
       0,     0,   377,   378,     0,   379,   380,     0,     0,     0,
     381,     0,   382,     0,     0,   383,   384,     0,     0,   385,
       0,     0,   386,   387,     0,     0,     0,     0,     0,   388,
     389,     0,   390,     0,   391,     0,   392,   393,     0,     0,
       0,     0,     0,     0,     0,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,     0,   412,   413,   414,     0,   415,
     416,   417,   418,     0,   419,   420,     0,     0,     0,     0,
     421,   422,   423,   424,   425,   426,     0,     0,   427,   428,
       0,   429,     0,   430,     0,   431,   432,   433,   434,   435,
     436,   437,   438,   439,     0,     0,   440,   441,     0,     0,
     442,   443,   444,   445,   446,     0,     0,     0,   447,   448,
       0,     0,     0,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   456,   457,   458,     0,   459,     0,   460,
       0,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,     0,   471,     0,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   481,   482,   483,     0,
       0,   484,     0,     0,     0,   485,   486,     0,   487,   488,
       0,     0,   489,   490,   491,   492,   493,     0,   494,   495,
       0,   496,   497,   498,     0,     0,   499,   500,   501,   502,
     503,   504,   505,   506,     0,   507,     0,   508,   509,     0,
     510,   511,   512,     0,   513,     0,     0,   514,   515,   516,
     517,     0,   518,     0,   519,   520,   521,   522,   523,     0,
     524,   525,     0,     0,     0,   526,   527,   528,   529,     0,
       0,     0,   530,     0,     0,     0,   531,     0,   532,   533,
     534,   535,     0,   536,   537,   538,   539,   540,     0,     0,
       0,     0,     0,   541,   542,   543,     0,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,   550,
     551,   552,   553,     0,     0,   554,   555,     0,     0,   556,
     557,   558,   559,   560,   561,     0,     0,   562,   563,   564,
     565,     0,   566,   567,     0,     0,   568,   569,   570,   571,
       0,     0,   572,   573,     0,   574,   575,   576,   577,     0,
       0,     0,     0,     0,   578,   579,     0,     0,     0,   580,
     581,   582,     0,     0,   583,   584,     0,   585,   586,     0,
     587,   588,     0,     0,   589,     0,     0,   590,     0,   591,
       0,   592,   593,     0,     0,     0,     0,     0,   594,     0,
     595,     0,     0,   596,     0,     0,     0,   597,     0,   598,
     599,   600,   601,     0,     0,     0,     0,     0,     0,   602,
     603,   604,     0,   605,   606,   607,   608,     0,     0,   609,
       0,     0,   610,   611,   612,   613,   614,     0,   615,     0,
       0,     0,     0,     0,     0,     0,     0,   616,   617,   618,
       0,   619,   620,   621,     0,   622,     0,     0,   623,     0,
     624,     0,     0,     0,     0,     0,     0,   625,   626,     0,
       0,   627,     0,   628,     0,   629,   630,     0,     0,  2982,
     631,   632,   633,   634,   635,   636,   637,   638,     0,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,  2983,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,     0,   673,   674,   675,   676,   677,
     678,   679,     0,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,     0,     0,     0,     0,     0,   243,
     244,     0,   245,   246,   247,   248,   249,  2984,     0,   250,
       0,     0,     0,     0,   251,     0,  2985,   252,     0,   253,
     254,   255,   256,   257,   258,     0,   259,     0,     0,     0,
     260,     0,     0,     0,   261,     0,     0,   262,   263,   264,
       0,   265,     0,   266,   267,     0,     0,   268,     0,     0,
     269,   270,     0,   271,   272,   273,     0,   274,     0,   275,
     276,   277,   278,   279,   280,     0,   281,   282,     0,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,   294,   295,     0,   296,   297,   298,   299,   300,     0,
       0,     0,   301,     0,     0,     0,     0,   302,     0,     0,
     303,     0,     0,     0,   304,   305,   306,     0,     0,   307,
       0,     0,     0,     0,   308,   309,     0,     0,     0,     0,
     310,   311,     0,   312,     0,     0,     0,     0,     0,   313,
     314,   315,   316,   317,     0,     0,     0,   318,     0,     0,
     319,   320,   321,     0,     0,     0,   322,     0,   323,   324,
       0,   325,   326,   327,     0,     0,   328,   329,     0,   330,
     331,   332,   333,   334,   335,     0,     0,   336,   337,   338,
     339,   340,     0,     0,   341,   342,     0,   343,   344,   345,
     346,   347,     0,     0,   348,   349,     0,     0,     0,   350,
     351,     0,   352,     0,     0,     0,   353,     0,   354,   355,
     356,   357,     0,   358,     0,   359,     0,     0,     0,   360,
     361,     0,   362,     0,     0,   363,   364,     0,     0,     0,
     365,   366,   367,   368,     0,     0,   369,   370,   371,     0,
       0,   372,     0,     0,     0,     0,   373,   374,   375,     0,
       0,     0,   376,     0,     0,     0,   377,   378,     0,   379,
     380,     0,     0,     0,   381,     0,   382,     0,     0,   383,
     384,     0,     0,   385,     0,     0,   386,   387,     0,     0,
       0,     0,     0,   388,   389,     0,   390,     0,   391,     0,
     392,   393,     0,     0,     0,     0,     0,     0,     0,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,     0,   412,
     413,   414,     0,   415,   416,   417,   418,     0,   419,   420,
       0,     0,     0,     0,   421,   422,   423,   424,   425,   426,
       0,     0,   427,   428,     0,   429,     0,   430,     0,   431,
     432,   433,   434,   435,   436,   437,   438,   439,     0,     0,
     440,   441,     0,     0,   442,   443,   444,   445,   446,     0,
       0,     0,   447,   448,     0,     0,     0,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   456,   457,   458,
       0,   459,     0,   460,     0,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,     0,   471,     0,   472,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     481,   482,   483,     0,     0,   484,     0,     0,     0,   485,
     486,     0,   487,   488,     0,     0,   489,   490,   491,   492,
     493,     0,   494,   495,     0,   496,   497,   498,     0,     0,
     499,   500,   501,   502,   503,   504,   505,   506,     0,   507,
       0,   508,   509,     0,   510,   511,   512,     0,   513,     0,
       0,   514,   515,   516,   517,     0,   518,     0,   519,   520,
     521,   522,   523,     0,   524,   525,     0,     0,     0,   526,
     527,   528,   529,     0,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,   534,   535,     0,   536,   537,   538,
     539,   540,     0,     0,     0,     0,     0,   541,   542,   543,
       0,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,   550,   551,   552,   553,     0,     0,   554,
     555,     0,     0,   556,   557,   558,   559,   560,   561,     0,
       0,   562,   563,   564,   565,     0,   566,   567,     0,     0,
     568,   569,   570,   571,     0,     0,   572,   573,     0,   574,
     575,   576,   577,     0,     0,     0,     0,     0,   578,   579,
       0,     0,     0,   580,   581,   582,     0,     0,   583,   584,
       0,   585,   586,     0,   587,   588,     0,     0,   589,     0,
       0,   590,     0,   591,     0,   592,   593,     0,     0,     0,
       0,     0,   594,     0,   595,     0,     0,   596,     0,     0,
       0,   597,     0,   598,   599,   600,   601,     0,     0,     0,
       0,     0,     0,   602,   603,   604,     0,   605,   606,   607,
     608,     0,     0,   609,     0,     0,   610,   611,   612,   613,
     614,     0,   615,     0,     0,     0,     0,     0,     0,     0,
       0,   616,   617,   618,     0,   619,   620,   621,     0,   622,
       0,     0,   623,     0,   624,     0,     0,     0,     0,     0,
       0,   625,   626,     0,     0,   627,     0,   628,     0,   629,
     630,     0,     0,  2982,   631,   632,   633,   634,   635,   636,
     637,   638,     0,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,  2983,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,     0,   673,
     674,   675,   676,   677,   678,   679,     0,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,     0,     0,
       0,     0,   243,   244,     0,   245,   246,   247,   248,   249,
       0,  2984,   250,     0,     0,     0,     0,   251,     0,     0,
    2985,     0,   253,   254,   255,   256,   257,   258,     0,  -564,
       0,     0,     0,   260,     0,     0,     0,   261,     0,     0,
     262,   263,   264,     0,   265,     0,     0,     0,     0,     0,
     268,  5159,     0,   269,   270,     0,   271,   272,     0,     0,
       0,     0,   275,   276,   277,  5160,   279,   280,     0,   281,
     282,     0,   283,   284,     0,   286,     0,   288,   289,   290,
     291,   292,   293,     0,   294,   295,     0,   296,   297,   298,
       0,   300,     0,     0,     0,   301,     0,     0,     0,     0,
     302,     0,     0,   303,     0,     0,     0,   304,   305,   306,
       0,     0,   307,     0,     0,     0,     0,   308,     0,     0,
       0,     0,     0,   310,   311,     0,   312,     0,     0,     0,
       0,     0,   313,   314,   315,   316,   317,     0,     0,     0,
       0,     0,     0,   319,   320,   321,     0,     0,     0,   322,
       0,     0,   324,     0,   325,   326,   327,     0,     0,   328,
     329,     0,   330,   331,   332,   333,   334,     0,     0,     0,
     336,   337,   338,   339,   340,     0,     0,   341,   342,  5161,
     343,   344,   345,   346,   347,     0,     0,     0,     0,     0,
       0,     0,   350,   351,     0,   352,     0,     0,     0,   353,
       0,   354,   355,   356,   357,     0,   358,     0,   359,     0,
       0,     0,     0,   361,     0,     0,     0,     0,   363,   364,
       0,     0,     0,   365,   366,   367,   368,  5162,     0,   369,
       0,   371,     0,     0,   372,     0,     0,     0,     0,   373,
     374,     0,     0,     0,     0,   376,     0,     0,     0,   377,
     378,     0,   379,   380,  5163,     0,     0,   381,     0,   382,
       0,     0,     0,   384,     0,     0,   385,  5164,     0,   386,
     387,     0,     0,     0,     0,     0,   388,   389,     0,   390,
       0,   391,     0,   392,   393,     0,     0,     0,     0,  -519,
       0,     0,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,     0,   412,   413,   414,     0,   415,   416,   417,   418,
       0,   419,   420,     0,     0,     0,     0,   421,   422,   423,
     424,   425,   426,     0,     0,   427,   428,     0,   429,     0,
     430,     0,   431,   432,   433,   434,   435,   436,   437,   438,
     439,     0,     0,   440,   441,     0,     0,   442,   443,   444,
     445,   446,     0,     0,     0,     0,   448,     0,     0,     0,
     449,     0,   450,   451,     0,   452,   453,  5165,     0,     0,
     455,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     456,   457,   458,     0,   459,     0,   460,     0,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,     0,     0,
       0,     0,   473,   474,     0,   475,     0,   476,   477,   478,
     479,   480,     0,   481,   482,   483,     0,     0,   484,     0,
       0,     0,   485,   486,     0,   487,   488,     0,     0,   489,
     490,   491,   492,   493,     0,   494,   495,     0,   496,     0,
     498,  -519,     0,   499,   500,   501,   502,   503,   504,   505,
     506,     0,     0,     0,   508,   509,     0,   510,   511,   512,
    5166,   513,     0,     0,     0,   515,   516,   517,     0,   518,
       0,   519,   520,     0,   522,   523,     0,   524,   525,     0,
       0,     0,   526,   527,   528,   529,     0,     0,     0,   530,
       0,     0,     0,     0,     0,     0,   533,     0,   535,     0,
     536,   537,   538,   539,   540,     0,     0,     0,     0,     0,
     541,   542,   543,     0,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,     0,   550,   551,   552,   553,
       0,     0,     0,   555,     0,     0,   556,   557,   558,   559,
     560,   561,     0,     0,   562,   563,   564,   565,     0,   566,
     567,     0,     0,   568,   569,   570,   571,     0,     0,   572,
     573,     0,   574,   575,   576,   577,     0,     0,     0,     0,
       0,   578,   579,     0,     0,     0,     0,   581,   582,     0,
       0,   583,   584,     0,   585,   586,     0,     0,     0,     0,
       0,   589,     0,     0,   590,     0,   591,     0,   592,   593,
       0,     0,     0,     0,     0,   594,     0,   595,     0,     0,
     596,     0,     0,     0,   597,     0,   598,   599,   600,   601,
       0,     0,  -519,     0,     0,     0,   602,   603,   604,     0,
     605,     0,   607,   608,     0,     0,   609,     0,     0,   610,
     611,   612,   613,   614,     0,   615,     0,     0,     0,     0,
       0,     0,     0,     0,   616,   617,   618,     0,   619,   620,
     621,     0,     0,     0,     0,   623,     0,   624,     0,     0,
       0,     0,     0,     0,   625,   626,     0,     0,   627,     0,
     628,     0,   629,   630,     0,     0,     0,   631,   632,   633,
     634,   635,   636,   637,   638,     0,   639,   640,   641,     0,
     643,   644,   645,   646,   647,   648,     0,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,     0,   673,   674,   675,   676,   677,   678,   679,     0,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,     0,   243,   244,     0,   245,   246,   247,   248,   249,
       0,     0,   250,     0,     0,     0,     0,   251,     0,  5568,
     252,     0,   253,   254,   255,   256,   257,   258,     0,   259,
       0,     0,     0,   260,   764,     0,     0,   261,     0,     0,
     262,   263,   264,     0,   265,     0,   266,   267,     0,     0,
     268,     0,     0,   269,   270,     0,   271,   272,   273,     0,
     274,     0,   275,   276,   277,   278,   279,   280,     0,   281,
     282,     0,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,     0,   294,   295,     0,   296,   297,   298,
     299,   300,     0,     0,     0,   301,     0,     0,     0,     0,
     302,     0,     0,   303,     0,     0,     0,   304,   305,   306,
       0,     0,  2905,     0,     0,     0,     0,   308,   309,   784,
       0,     0,     0,   310,   311,     0,   312,     0,     0,     0,
       0,     0,   313,   314,   315,   316,   317,     0,     0,     0,
     318,     0,     0,   319,   320,   321,     0,     0,     0,   322,
       0,   323,   324,     0,   325,   326,   327,     0,     0,   328,
     329,     0,   330,   331,   332,   333,   334,   335,     0,     0,
     336,   337,   338,   339,   340,     0,   788,   341,   342,     0,
     343,   344,   345,   346,   347,   789,     0,   348,   349,     0,
       0,     0,   350,   351,     0,   352,     0,     0,     0,   353,
       0,   354,   355,   356,   357,     0,   358,     0,   359,     0,
       0,     0,   360,   361,     0,   362,   794,     0,   363,   364,
       0,     0,     0,   365,   366,   367,   368,     0,     0,   369,
     370,   371,     0,     0,   372,     0,     0,     0,     0,   373,
     374,   375,     0,     0,     0,   376,     0,     0,     0,   377,
     378,     0,   379,   380,     0,     0,     0,   381,     0,   382,
       0,     0,   383,   384,     0,     0,   385,     0,     0,   386,
     387,     0,     0,     0,     0,     0,   388,   389,     0,   390,
       0,   391,     0,   392,   393,     0,     0,   801,     0,     0,
       0,     0,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,     0,   412,   413,   414,     0,   415,   416,   417,   418,
       0,   419,   420,     0,     0,     0,     0,   421,   422,   423,
     424,   425,   426,     0,     0,   427,   428,     0,   429,     0,
     430,     0,   431,   432,   433,   434,   435,   436,   437,   438,
     439,     0,   812,   440,   441,     0,     0,   442,   443,   444,
     445,   446,     0,     0,     0,   447,   448,     0,   816,   817,
     449,     0,   450,   451,     0,   452,   453,   454,     0,     0,
     455,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     456,   457,   458,     0,   459,     0,   460,     0,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,     0,   471,
       0,   472,   473,   474,     0,   475,     0,   476,   477,   478,
     479,   480,     0,   481,   482,   483,     0,     0,   484,     0,
       0,     0,   485,   486,     0,   487,   488,     0,     0,   489,
     490,   491,   492,   493,     0,   494,   495,     0,   496,   497,
     498,     0,     0,   499,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,     0,   510,   511,   512,
       0,   513,     0,     0,   514,   515,   516,   517,     0,   518,
       0,   519,   520,   521,   522,   523,     0,   524,   525,     0,
       0,     0,   526,   527,   528,   529,     0,     0,     0,   530,
       0,     0,     0,   531,     0,   532,   533,   534,   535,     0,
     536,   537,   538,   539,   540,     0,     0,     0,     0,     0,
     541,   542,   543,     0,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,   550,   551,   552,   553,
       0,     0,   554,   555,     0,     0,   556,   557,   558,   559,
     560,   561,     0,     0,   562,   563,   564,   565,     0,   566,
     567,     0,     0,   568,   569,   570,   571,     0,   836,   572,
     573,     0,  2906,   575,   576,  2907,     0,     0,     0,     0,
       0,   578,   579,     0,     0,   842,   580,   581,   582,     0,
     844,   583,   584,   845,   585,   586,     0,   587,   588,     0,
       0,   589,     0,     0,   590,     0,   591,     0,   592,   593,
       0,     0,     0,     0,     0,   594,     0,   595,     0,     0,
     596,     0,     0,     0,   597,     0,   598,   599,   600,   601,
       0,     0,     0,     0,     0,     0,   602,   603,   604,     0,
     605,   606,   607,   608,     0,     0,   609,     0,     0,   610,
     611,   612,   613,   614,     0,   615,     0,     0,     0,     0,
       0,     0,     0,     0,   616,   617,   618,     0,   619,   620,
     621,     0,   622,     0,     0,   623,     0,   624,     0,     0,
       0,     0,     0,     0,   625,   626,     0,     0,   627,     0,
     628,     0,   629,   630,     0,     0,     0,   631,   632,   633,
     634,   635,   636,   637,   638,     0,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,     0,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,     0,   673,   674,   675,   676,   677,   678,   679,     0,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   243,   244,     0,   245,   246,   247,   248,   249,     0,
       0,   250,     0,     0,     0,     0,   251,     0,  2908,   252,
       0,   253,   254,   255,   256,   257,   258,     0,   259,     0,
       0,     0,   260,     0,     0,     0,   261,     0,     0,   262,
     263,   264,     0,   265,     0,   266,   267,     0,     0,   268,
       0,     0,   269,   270,     0,   271,   272,   273,     0,   274,
       0,   275,   276,   277,   278,   279,   280,     0,   281,   282,
       0,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,     0,   294,   295,     0,   296,   297,   298,   299,
     300,     0,     0,     0,   301,     0,     0,     0,     0,   302,
       0,     0,   303,     0,     0,     0,   304,   305,   306,     0,
       0,   307,     0,     0,     0,     0,   308,   309,     0,     0,
       0,     0,   310,   311,     0,   312,     0,     0,     0,     0,
       0,   313,   314,   315,   316,   317,     0,     0,     0,   318,
       0,     0,   319,   320,   321,     0,     0,     0,   322,     0,
     323,   324,     0,   325,   326,   327,     0,     0,   328,   329,
       0,   330,   331,   332,   333,   334,   335,     0,     0,   336,
     337,   338,   339,   340,     0,     0,   341,   342,     0,   343,
     344,   345,   346,   347,     0,     0,   348,   349,     0,     0,
       0,   350,   351,     0,   352,     0,     0,     0,   353,     0,
     354,   355,   356,   357,     0,   358,     0,   359,     0,     0,
       0,   360,   361,     0,   362,     0,     0,   363,   364,     0,
       0,     0,   365,   366,   367,   368,     0,     0,   369,   370,
     371,     0,     0,   372,     0,     0,     0,     0,   373,   374,
     375,     0,     0,     0,   376,     0,     0,     0,   377,   378,
       0,   379,   380,     0,     0,     0,   381,     0,   382,     0,
       0,   383,   384,     0,     0,   385,     0,     0,   386,   387,
       0,     0,     0,     0,     0,   388,   389,     0,   390,     0,
     391,     0,   392,   393,     0,     0,   801,     0,     0,     0,
       0,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
       0,   412,   413,   414,     0,   415,   416,   417,   418,     0,
     419,   420,     0,     0,     0,     0,   421,   422,   423,   424,
     425,   426,     0,     0,   427,   428,     0,   429,     0,   430,
       0,   431,   432,   433,   434,   435,   436,   437,   438,   439,
       0,     0,   440,   441,     0,     0,   442,   443,   444,   445,
     446,     0,     0,     0,   447,   448,     0,     0,   817,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   456,
     457,   458,   818,   459,     0,   460,     0,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,     0,   471,     0,
     472,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   481,   482,   483,     0,     0,   484,     0,     0,
       0,   485,   486,     0,   487,   488,     0,     0,   489,   490,
     491,   492,   493,     0,   494,   495,     0,   496,   497,   498,
       0,     0,   499,   500,   501,   502,   503,   504,   505,   506,
       0,   507,     0,   508,   509,     0,   510,   511,   512,     0,
     513,     0,     0,   514,   515,   516,   517,     0,   518,     0,
     519,   520,   521,   522,   523,     0,   524,   525,     0,     0,
       0,   526,   527,   528,   529,     0,     0,     0,   530,     0,
       0,     0,   531,     0,   532,   533,   534,   535,     0,   536,
     537,   538,   539,   540,     0,     0,     0,     0,     0,   541,
     542,   543,     0,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,   549,   550,   551,   552,   553,     0,
       0,   554,   555,     0,     0,   556,   557,   558,   559,   560,
     561,     0,     0,   562,   563,   564,   565,     0,   566,   567,
       0,     0,   568,   569,   570,   571,     0,     0,   572,   573,
       0,   574,   575,   576,   577,     0,     0,     0,     0,     0,
     578,   579,     0,     0,     0,   580,   581,   582,     0,   844,
     583,   584,     0,   585,   586,     0,   587,   588,     0,     0,
     589,     0,     0,   590,     0,   591,     0,   592,   593,     0,
       0,     0,     0,     0,   594,     0,   595,     0,     0,   596,
       0,     0,     0,   597,     0,   598,   599,   600,   601,     0,
       0,     0,     0,     0,     0,   602,   603,   604,     0,   605,
     606,   607,   608,     0,     0,   609,     0,     0,   610,   611,
     612,   613,   614,     0,   615,     0,     0,     0,     0,     0,
       0,     0,     0,   616,   617,   618,     0,   619,   620,   621,
       0,   622,     0,     0,   623,     0,   624,     0,     0,     0,
       0,     0,     0,   625,   626,     0,     0,   627,     0,   628,
       0,   629,   630,     0,     0,     0,   631,   632,   633,   634,
     635,   636,   637,   638,     0,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
       0,   673,   674,   675,   676,   677,   678,   679,     0,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     243,   244,     0,   245,   246,   247,   248,   249,     0,     0,
     250,     0,     0,     0,     0,   251,     0,  2058,   252,     0,
     253,   254,   255,   256,   257,   258,     0,   259,     0,     0,
       0,   260,     0,     0,     0,   261,     0,     0,   262,   263,
     264,     0,   265,     0,   266,   267,     0,     0,   268,     0,
       0,   269,   270,     0,   271,   272,   273,     0,   274,     0,
     275,   276,   277,   278,   279,   280,     0,   281,   282,     0,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,   294,   295,     0,   296,   297,   298,   299,   300,
       0,     0,     0,   301,     0,     0,     0,     0,   302,     0,
       0,   303,     0,     0,     0,   304,   305,   306,     0,     0,
     307,     0,     0,     0,     0,   308,   309,     0,     0,     0,
       0,   310,   311,     0,   312,     0,     0,     0,     0,     0,
     313,   314,   315,   316,   317,     0,     0,     0,   318,     0,
       0,  1696,   320,   321,     0,     0,     0,   322,     0,   323,
     324,     0,   325,   326,   327,     0,     0,   328,   329,     0,
     330,   331,   332,   333,   334,   335,     0,     0,   336,   337,
     338,   339,   340,     0,     0,   341,   342,     0,   343,   344,
     345,   346,   347,     0,     0,   348,   349,     0,     0,     0,
     350,   351,     0,   352,     0,     0,     0,   353,     0,   354,
     355,   356,   357,     0,   358,     0,   359,     0,     0,     0,
     360,   361,     0,   362,     0,     0,   363,   364,     0,     0,
       0,   365,   366,   367,   368,     0,     0,   369,   370,   371,
       0,     0,   372,     0,     0,     0,     0,   373,   374,   375,
       0,     0,     0,   376,     0,     0,     0,   377,   378,     0,
     379,   380,     0,     0,     0,   381,     0,   382,     0,     0,
     383,   384,     0,     0,   385,     0,     0,   386,   387,  1142,
       0,     0,     0,     0,   388,   389,     0,   390,     0,   391,
       0,   392,   393,     0,     0,     0,     0,     0,     0,     0,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,     0,
     412,   413,   414,     0,   415,   416,   417,   418,     0,   419,
     420,     0,     0,     0,     0,   421,   422,   423,   424,   425,
     426,     0,     0,   427,   428,     0,   429,     0,   430,     0,
     431,   432,   433,   434,   435,   436,   437,   438,   439,     0,
       0,   440,   441,     0,     0,   442,   443,   444,   445,   446,
       0,     0,     0,   447,   448,     0,     0,     0,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,     0,
       0,     0,     0,     0,     0,     0,  1697,     0,   456,   457,
     458,     0,   459,     0,   460,     0,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,     0,   471,     0,   472,
     473,   474,     0,   475,     0,   476,   477,   478,   479,   480,
       0,   481,   482,   483,     0,     0,   484,     0,     0,     0,
     485,   486,     0,   487,   488,     0,     0,   489,   490,   491,
     492,   493,     0,   494,   495,     0,   496,   497,   498,     0,
       0,   499,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,     0,   510,   511,   512,     0,   513,
       0,     0,   514,   515,   516,   517,     0,   518,     0,   519,
     520,   521,   522,   523,     0,   524,   525,     0,     0,     0,
     526,   527,   528,   529,     0,     0,     0,   530,     0,     0,
       0,   531,     0,   532,   533,   534,   535,     0,   536,   537,
     538,   539,   540,     0,     0,     0,     0,     0,   541,   542,
     543,     0,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,   550,   551,   552,   553,     0,     0,
     554,   555,     0,     0,   556,   557,   558,   559,   560,   561,
       0,     0,   562,   563,   564,   565,     0,   566,   567,     0,
       0,   568,   569,   570,   571,     0,   240,   572,   573,     0,
     574,   575,   576,   577,     0,     0,     0,     0,     0,   578,
     579,     0,     0,     0,   580,   581,   582,     0,     0,   583,
     584,     0,   585,   586,     0,   587,   588,     0,     0,   589,
       0,     0,   590,     0,   591,     0,   592,   593,     0,     0,
       0,     0,     0,   594,     0,   595,     0,     0,   596,     0,
       0,     0,   597,     0,   598,   599,   600,   601,     0,     0,
       0,     0,     0,     0,   602,   603,   604,     0,   605,   606,
     607,   608,     0,     0,   609,     0,     0,   610,   611,   612,
     613,   614,     0,   615,     0,     0,     0,     0,     0,     0,
       0,     0,   616,   617,   618,     0,   619,   620,   621,     0,
     622,     0,     0,   623,     0,   624,     0,     0,     0,     0,
       0,     0,   625,   626,     0,     0,   627,     0,   628,     0,
     629,   630,     0,     0,     0,   631,   632,   633,   634,   635,
     636,   637,   638,     0,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,     0,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,     0,
     673,   674,   675,   676,   677,   678,   679,     0,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
       0,     0,     0,     0,   251,     0,  1698,   252,     0,   253,
     254,   255,   256,   257,   258,     0,   259,     0,     0,     0,
     260,     0,     0,     0,   261,     0,     0,   262,   263,   264,
       0,   265,     0,   266,   267,     0,     0,   268,     0,     0,
     269,   270,     0,   271,   272,  1026,  1027,   274,     0,   275,
     276,   277,   278,   279,   280,     0,   281,   282,     0,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,   294,   295,     0,   296,   297,   298,   299,   300,     0,
       0,     0,   301,     0,     0,     0,     0,   302,     0,     0,
     303,     0,     0,     0,   304,   305,   306,     0,     0,   307,
       0,     0,     0,     0,   308,   309,     0,     0,     0,  1028,
     310,   311,     0,   312,     0,     0,     0,     0,     0,   313,
     314,   315,   316,   317,     0,     0,     0,   318,     0,     0,
     319,   320,   321,     0,     0,     0,   322,     0,   323,   324,
       0,   325,   326,   327,     0,     0,   328,   329,     0,   330,
     331,   332,   333,   334,   335,     0,     0,   336,   337,   338,
     339,   340,     0,     0,   341,   342,     0,   343,   344,   345,
     346,   347,     0,     0,   348,   349,     0,     0,     0,   350,
     351,     0,   352,     0,     0,     0,   353,     0,   354,   355,
     356,   357,     0,  1029,     0,   359,     0,     0,     0,   360,
     361,     0,   362,     0,     0,   363,   364,     0,     0,     0,
     365,   366,   367,   368,     0,     0,   369,   370,   371,     0,
       0,   372,     0,     0,     0,     0,   373,   374,   375,     0,
       0,     0,   376,     0,     0,     0,   377,   378,     0,   379,
     380,     0,     0,     0,   381,     0,   382,     0,     0,   383,
     384,     0,     0,   385,     0,     0,   386,   387,     0,     0,
       0,     0,     0,   388,   389,     0,  1030,     0,   391,     0,
     392,   393,     0,     0,     0,     0,     0,     0,     0,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,     0,   412,
     413,   414,     0,   415,   416,   417,   418,     0,   419,   420,
       0,     0,     0,     0,   421,   422,   423,   424,   425,   426,
       0,     0,   427,   428,     0,   429,     0,   430,     0,   431,
     432,   433,   434,   435,   436,  1031,   438,   439,     0,     0,
     440,   441,     0,     0,   442,   443,   444,   445,   446,     0,
       0,     0,   447,   448,     0,     0,     0,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   456,   457,   458,
       0,   459,     0,   460,     0,   461,   462,  1032,   464,   465,
     466,   467,   468,   469,   470,     0,   471,     0,   472,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     481,   482,   483,     0,     0,   484,     0,     0,     0,   485,
     486,     0,   487,   488,     0,     0,   489,   490,   491,   492,
     493,     0,   494,   495,     0,   496,   497,   498,     0,     0,
     499,   500,   501,   502,   503,   504,   505,   506,     0,   507,
       0,   508,   509,     0,   510,   511,   512,     0,   513,     0,
       0,   514,   515,   516,   517,     0,   518,     0,   519,   520,
     521,   522,   523,     0,   524,   525,     0,     0,     0,   526,
     527,  1033,   529,     0,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,   534,   535,     0,   536,   537,   538,
     539,   540,     0,     0,     0,     0,     0,   541,   542,   543,
       0,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,   550,   551,   552,   553,     0,     0,   554,
     555,     0,     0,   556,   557,   558,   559,   560,   561,     0,
       0,   562,   563,   564,   565,     0,   566,   567,     0,     0,
     568,   569,   570,   571,     0,     0,   572,   573,     0,   574,
     575,   576,   577,     0,     0,     0,     0,     0,  1034,   579,
       0,     0,     0,   580,   581,   582,     0,     0,   583,   584,
       0,   585,   586,     0,   587,   588,     0,     0,   589,     0,
       0,   590,     0,   591,     0,   592,   593,     0,     0,     0,
       0,     0,   594,     0,   595,     0,     0,   596,     0,     0,
       0,   597,     0,   598,   599,   600,   601,     0,     0,     0,
       0,     0,     0,   602,   603,   604,     0,   605,   606,   607,
     608,     0,     0,   609,     0,     0,  1035,  1036,   612,   613,
     614,     0,   615,     0,     0,     0,     0,     0,     0,     0,
       0,   616,   617,   618,     0,  1037,   620,   621,     0,   622,
       0,     0,   623,     0,   624,     0,     0,     0,     0,     0,
       0,   625,   626,     0,     0,   627,     0,   628,     0,   629,
     630,     0,     0,     0,   631,   632,   633,   634,   635,   636,
     637,  1038,     0,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,     0,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,     0,   673,
     674,   675,   676,   677,   678,   679,     0,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   243,   244,
       0,   245,   246,   247,   248,   249,     0,     0,   250,     0,
       0,     0,     0,   251,     0,  1039,   252,     0,   253,   254,
     255,   256,   257,   258,     0,   259,     0,     0,     0,   260,
       0,     0,     0,   261,     0,     0,   262,   263,   264,     0,
     265,     0,   266,   267,     0,     0,   268,     0,     0,   269,
     270,     0,   271,   272,   273,     0,   274,     0,   275,   276,
     277,   278,   279,   280,     0,   281,   282,     0,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
     294,   295,     0,   296,   297,   298,   299,   300,     0,     0,
       0,   301,     0,     0,     0,     0,   302,     0,     0,   303,
       0,     0,     0,   304,   305,   306,     0,     0,   307,     0,
       0,     0,     0,   308,   309,     0,     0,     0,     0,   310,
     311,     0,   312,     0,     0,     0,     0,     0,   313,   314,
     315,   316,   317,     0,     0,     0,   318,     0,     0,   319,
     320,   321,     0,     0,     0,   322,     0,   323,   324,     0,
     325,   326,   327,     0,     0,   328,   329,     0,   330,   331,
     332,   333,   334,   335,     0,     0,   336,   337,   338,   339,
     340,     0,     0,   341,   342,     0,   343,   344,   345,   346,
     347,     0,     0,   348,   349,     0,     0,     0,   350,   351,
       0,   352,     0,     0,     0,   353,     0,   354,   355,   356,
     357,     0,   358,     0,   359,     0,     0,     0,   360,   361,
       0,   362,     0,     0,   363,   364,     0,     0,     0,   365,
     366,   367,   368,     0,     0,   369,   370,   371,     0,     0,
     372,     0,     0,     0,     0,   373,   374,   375,     0,     0,
       0,   376,     0,     0,     0,   377,   378,     0,   379,   380,
       0,     0,     0,   381,     0,   382,     0,     0,   383,   384,
       0,     0,   385,     0,     0,   386,   387,  1142,     0,     0,
       0,     0,   388,   389,     0,   390,     0,   391,     0,   392,
     393,     0,     0,     0,     0,     0,     0,     0,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,     0,   412,   413,
     414,     0,   415,   416,   417,   418,     0,   419,   420,     0,
       0,     0,     0,   421,   422,   423,   424,   425,   426,     0,
       0,   427,   428,     0,   429,     0,   430,     0,   431,   432,
     433,   434,   435,   436,   437,   438,   439,     0,     0,   440,
     441,     0,     0,   442,   443,   444,   445,   446,     0,     0,
       0,   447,   448,     0,     0,     0,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   456,   457,   458,     0,
     459,     0,   460,     0,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,     0,   471,     0,   472,   473,   474,
       0,   475,     0,   476,   477,   478,   479,   480,     0,   481,
     482,   483,     0,     0,   484,     0,     0,     0,   485,   486,
       0,   487,   488,     0,     0,   489,   490,   491,   492,   493,
       0,   494,   495,     0,   496,   497,   498,     0,     0,   499,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,     0,   510,   511,   512,     0,   513,     0,     0,
     514,   515,   516,   517,     0,   518,     0,   519,   520,   521,
     522,   523,     0,   524,   525,     0,     0,     0,   526,   527,
     528,   529,     0,     0,     0,   530,     0,     0,     0,   531,
       0,   532,   533,   534,   535,     0,   536,   537,   538,   539,
     540,     0,     0,     0,     0,     0,   541,   542,   543,     0,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,   550,   551,   552,   553,     0,     0,   554,   555,
       0,     0,   556,   557,   558,   559,   560,   561,     0,     0,
     562,   563,   564,   565,     0,   566,   567,     0,     0,   568,
     569,   570,   571,     0,   240,   572,   573,     0,   574,   575,
     576,   577,     0,     0,     0,     0,     0,   578,   579,     0,
       0,     0,   580,   581,   582,     0,     0,   583,   584,     0,
     585,   586,     0,   587,   588,     0,     0,   589,     0,     0,
     590,     0,   591,     0,   592,   593,     0,     0,     0,     0,
       0,   594,     0,   595,     0,     0,   596,     0,     0,     0,
     597,     0,   598,   599,   600,   601,     0,     0,     0,     0,
       0,     0,   602,   603,   604,     0,   605,   606,   607,   608,
       0,     0,   609,     0,     0,   610,   611,   612,   613,   614,
       0,   615,     0,     0,     0,     0,     0,     0,     0,     0,
     616,   617,   618,     0,   619,   620,   621,     0,   622,     0,
       0,   623,     0,   624,     0,     0,     0,     0,     0,     0,
     625,   626,     0,     0,   627,     0,   628,     0,   629,   630,
       0,     0,     0,   631,   632,   633,   634,   635,   636,   637,
     638,     0,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,     0,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,     0,   673,   674,
     675,   676,   677,   678,   679,     0,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   243,   244,     0,
     245,   246,   247,   248,   249,     0,     0,   250,     0,     0,
       0,     0,   251,     0,  1359,   252,     0,   253,   254,   255,
     256,   257,   258,     0,   259,     0,     0,     0,   260,     0,
       0,     0,   261,     0,     0,   262,   263,   264,     0,   265,
       0,   266,   267,     0,     0,   268,     0,     0,   269,   270,
       0,   271,   272,   273,     0,   274,     0,   275,   276,   277,
     278,   279,   280,     0,   281,   282,     0,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,   294,
     295,     0,   296,   297,   298,   299,   300,     0,     0,     0,
     301,     0,     0,     0,     0,   302,     0,     0,   303,     0,
       0,     0,   304,   305,   306,     0,     0,   307,     0,     0,
       0,     0,   308,   309,     0,     0,     0,     0,   310,   311,
       0,   312,     0,     0,     0,     0,     0,   313,   314,   315,
     316,   317,     0,     0,     0,   318,     0,     0,   319,   320,
     321,     0,     0,     0,   322,     0,   323,   324,     0,   325,
     326,   327,     0,     0,   328,   329,     0,   330,   331,   332,
     333,   334,   335,     0,     0,   336,   337,   338,   339,   340,
       0,     0,   341,   342,     0,   343,   344,   345,   346,   347,
       0,     0,   348,   349,     0,     0,     0,   350,   351,     0,
     352,     0,     0,     0,   353,     0,   354,   355,   356,   357,
       0,   358,     0,   359,     0,     0,     0,   360,   361,     0,
     362,     0,     0,   363,   364,     0,     0,     0,   365,   366,
     367,   368,     0,     0,   369,   370,   371,     0,     0,   372,
       0,     0,     0,     0,   373,   374,   375,     0,     0,     0,
     376,     0,     0,     0,   377,   378,     0,   379,   380,     0,
       0,     0,   381,     0,   382,     0,     0,   383,   384,     0,
       0,   385,     0,     0,   386,   387,  1142,     0,     0,     0,
       0,   388,   389,     0,   390,     0,   391,     0,   392,   393,
       0,     0,     0,     0,     0,     0,     0,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,     0,   412,   413,   414,
       0,   415,   416,   417,   418,     0,   419,   420,     0,     0,
       0,     0,   421,   422,   423,   424,   425,   426,     0,     0,
     427,   428,     0,   429,     0,   430,     0,   431,   432,   433,
     434,   435,   436,   437,   438,   439,     0,     0,   440,   441,
       0,     0,   442,   443,   444,   445,   446,     0,     0,     0,
     447,   448,     0,     0,     0,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   456,   457,   458,     0,   459,
       0,   460,     0,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,     0,   471,     0,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   481,   482,
     483,     0,     0,   484,     0,     0,     0,   485,   486,     0,
     487,   488,     0,     0,   489,   490,   491,   492,   493,     0,
     494,   495,     0,   496,   497,   498,     0,     0,   499,   500,
     501,   502,   503,   504,   505,   506,     0,   507,     0,   508,
     509,     0,   510,   511,   512,     0,   513,     0,     0,   514,
     515,   516,   517,     0,   518,     0,   519,   520,   521,   522,
     523,     0,   524,   525,     0,     0,     0,   526,   527,   528,
     529,     0,     0,     0,   530,     0,     0,     0,   531,     0,
     532,   533,   534,   535,     0,   536,   537,   538,   539,   540,
       0,     0,     0,     0,     0,   541,   542,   543,     0,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,   550,   551,   552,   553,     0,     0,   554,   555,     0,
       0,   556,   557,   558,   559,   560,   561,     0,     0,   562,
     563,   564,   565,     0,   566,   567,     0,     0,   568,   569,
     570,   571,     0,   240,   572,   573,     0,   574,   575,   576,
     577,     0,     0,     0,     0,     0,   578,   579,     0,     0,
       0,   580,   581,   582,     0,     0,   583,   584,     0,   585,
     586,     0,   587,   588,     0,     0,   589,     0,     0,   590,
       0,   591,     0,   592,   593,     0,     0,     0,     0,     0,
     594,     0,   595,     0,     0,   596,     0,     0,     0,   597,
       0,   598,   599,   600,   601,     0,     0,     0,     0,     0,
       0,   602,   603,   604,     0,   605,   606,   607,   608,     0,
       0,   609,     0,     0,   610,   611,   612,   613,   614,     0,
     615,     0,     0,     0,     0,     0,     0,     0,     0,   616,
     617,   618,     0,   619,   620,   621,     0,   622,     0,     0,
     623,     0,   624,     0,     0,     0,     0,     0,     0,   625,
     626,     0,     0,   627,     0,   628,     0,   629,   630,     0,
       0,     0,   631,   632,   633,   634,   635,   636,   637,   638,
       0,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,     0,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,     0,   673,   674,   675,
     676,   677,   678,   679,     0,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   243,   244,     0,   245,
     246,   247,   248,   249,     0,     0,   250,     0,     0,     0,
       0,   251,     0,  1535,   252,     0,   253,   254,   255,   256,
     257,   258,     0,   259,     0,     0,     0,   260,     0,     0,
       0,   261,     0,     0,   262,   263,   264,     0,   265,     0,
     266,   267,     0,     0,   268,     0,     0,   269,   270,     0,
     271,   272,  1026,  1027,   274,     0,   275,   276,   277,   278,
     279,   280,     0,   281,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,   299,   300,     0,     0,     0,   301,
       0,     0,     0,     0,   302,     0,     0,   303,     0,     0,
       0,   304,   305,   306,     0,     0,   307,     0,     0,     0,
       0,   308,   309,     0,     0,     0,  1543,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,   318,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,   323,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,   332,   333,
     334,   335,     0,     0,   336,   337,   338,   339,   340,     0,
       0,   341,   342,     0,   343,   344,   345,   346,   347,     0,
       0,   348,   349,     0,     0,     0,   350,   351,     0,   352,
       0,     0,     0,   353,     0,   354,   355,   356,   357,     0,
    1029,     0,   359,     0,     0,     0,   360,   361,     0,   362,
       0,     0,   363,   364,     0,     0,     0,   365,   366,   367,
     368,     0,     0,   369,   370,   371,     0,     0,   372,     0,
       0,     0,     0,   373,   374,   375,     0,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,     0,     0,
       0,   381,     0,   382,     0,     0,   383,   384,     0,     0,
     385,     0,     0,   386,   387,     0,     0,     0,     0,     0,
     388,   389,     0,  1030,     0,   391,     0,   392,   393,     0,
       0,     0,     0,     0,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,     0,
     415,   416,   417,   418,     0,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,     0,   429,     0,   430,     0,   431,   432,   433,   434,
     435,   436,  1031,   438,   439,     0,     0,   440,   441,     0,
       0,   442,   443,   444,   445,   446,     0,     0,     0,   447,
     448,     0,     0,     0,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,     0,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     0,   471,     0,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   481,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,   497,   498,     0,     0,   499,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
       0,   510,   511,   512,     0,   513,     0,     0,   514,   515,
     516,   517,     0,   518,     0,   519,   520,   521,   522,   523,
       0,   524,   525,     0,     0,     0,   526,   527,  1033,   529,
       0,     0,     0,   530,     0,     0,     0,   531,     0,   532,
     533,   534,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
     550,   551,   552,   553,     0,     0,   554,   555,     0,     0,
     556,   557,   558,   559,   560,   561,     0,     0,   562,   563,
     564,   565,     0,   566,   567,     0,     0,   568,   569,   570,
     571,     0,     0,   572,   573,     0,   574,   575,   576,   577,
       0,     0,     0,     0,     0,   578,   579,     0,     0,     0,
     580,   581,   582,     0,     0,   583,   584,     0,   585,   586,
       0,   587,   588,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   592,   593,     0,     0,     0,     0,     0,   594,
       0,   595,     0,     0,   596,     0,     0,     0,   597,     0,
     598,   599,   600,   601,     0,     0,     0,     0,     0,     0,
     602,   603,   604,     0,   605,   606,   607,   608,     0,     0,
     609,     0,     0,  1035,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,     0,     0,     0,   616,   617,
     618,     0,  1037,   620,   621,     0,   622,     0,     0,   623,
       0,   624,     0,     0,     0,     0,     0,     0,   625,   626,
       0,     0,   627,     0,   628,     0,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,   638,     0,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   673,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   243,   244,     0,   245,   246,
     247,   248,   249,     0,     0,   250,     0,     0,     0,     0,
     251,     0,  1039,   252,     0,   253,   254,   255,   256,   257,
     258,     0,   259,     0,     0,     0,   260,     0,     0,     0,
     261,     0,     0,   262,   263,   264,     0,   265,     0,   266,
     267,     0,     0,   268,     0,     0,   269,   270,     0,   271,
     272,   273,     0,   274,     0,   275,   276,   277,   278,   279,
     280,     0,   281,   282,     0,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,   294,   295,     0,
     296,   297,   298,   299,   300,     0,     0,     0,   301,     0,
       0,     0,     0,   302,     0,     0,   303,     0,     0,     0,
     304,   305,   306,     0,     0,   307,     0,     0,     0,     0,
     308,   309,     0,     0,     0,     0,   310,   311,     0,   312,
       0,     0,     0,     0,     0,   313,   314,   315,   316,   317,
       0,     0,     0,   318,     0,     0,   319,   320,   321,     0,
       0,     0,   322,     0,   323,   324,     0,   325,   326,   327,
       0,     0,   328,   329,     0,   330,   331,   332,   333,   334,
     335,     0,     0,   336,   337,   338,   339,   340,     0,     0,
     341,   342,     0,   343,   344,   345,   346,   347,     0,     0,
     348,   349,     0,     0,     0,   350,   351,     0,   352,     0,
       0,     0,   353,     0,   354,   355,   356,   357,     0,   358,
       0,   359,     0,     0,     0,   360,   361,     0,   362,     0,
       0,   363,   364,     0,     0,     0,   365,   366,   367,   368,
       0,     0,   369,   370,   371,     0,     0,   372,     0,     0,
       0,     0,   373,   374,   375,     0,     0,     0,   376,     0,
       0,     0,   377,   378,     0,   379,   380,     0,     0,     0,
     381,     0,   382,     0,     0,   383,   384,     0,     0,   385,
       0,     0,   386,   387,  1142,     0,     0,     0,     0,   388,
     389,     0,   390,     0,   391,     0,   392,   393,     0,     0,
       0,     0,     0,     0,     0,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,     0,   412,   413,   414,     0,   415,
     416,   417,   418,     0,   419,   420,     0,     0,     0,     0,
     421,   422,   423,   424,   425,   426,     0,     0,   427,   428,
       0,   429,     0,   430,     0,   431,   432,   433,   434,   435,
     436,   437,   438,   439,     0,     0,   440,   441,     0,     0,
     442,   443,   444,   445,   446,     0,     0,     0,   447,   448,
       0,     0,     0,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   456,   457,   458,     0,   459,     0,   460,
       0,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,     0,   471,     0,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   481,   482,   483,     0,
       0,   484,     0,     0,     0,   485,   486,     0,   487,   488,
       0,     0,   489,   490,   491,   492,   493,     0,   494,   495,
       0,   496,   497,   498,     0,     0,   499,   500,   501,   502,
     503,   504,   505,   506,     0,   507,     0,   508,   509,     0,
     510,   511,   512,     0,   513,     0,     0,   514,   515,   516,
     517,     0,   518,     0,   519,   520,   521,   522,   523,     0,
     524,   525,     0,     0,     0,   526,   527,   528,   529,     0,
       0,     0,   530,     0,     0,     0,   531,     0,   532,   533,
     534,   535,     0,   536,   537,   538,   539,   540,     0,     0,
       0,     0,     0,   541,   542,   543,     0,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,   550,
     551,   552,   553,     0,     0,   554,   555,     0,     0,   556,
     557,   558,   559,   560,   561,     0,     0,   562,   563,   564,
     565,     0,   566,   567,     0,     0,   568,   569,   570,   571,
       0,   240,   572,   573,     0,   574,   575,   576,   577,     0,
       0,     0,     0,     0,   578,   579,     0,     0,     0,   580,
     581,   582,     0,     0,   583,   584,     0,   585,   586,     0,
     587,   588,     0,     0,   589,     0,     0,   590,     0,   591,
       0,   592,   593,     0,     0,     0,     0,     0,   594,     0,
     595,     0,     0,   596,     0,     0,     0,   597,     0,   598,
     599,   600,   601,     0,     0,     0,     0,     0,     0,   602,
     603,   604,     0,   605,   606,   607,   608,     0,     0,   609,
       0,     0,   610,   611,   612,   613,   614,     0,   615,     0,
       0,     0,     0,     0,     0,     0,     0,   616,   617,   618,
       0,   619,   620,   621,     0,   622,     0,     0,   623,     0,
     624,     0,     0,     0,     0,     0,     0,   625,   626,     0,
       0,   627,     0,   628,     0,   629,   630,     0,     0,     0,
     631,   632,   633,   634,   635,   636,   637,   638,     0,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,     0,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,     0,   673,   674,   675,   676,   677,
     678,   679,     0,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   243,   244,     0,   245,   246,   247,
     248,   249,     0,     0,   250,     0,     0,     0,     0,   251,
       0,  1698,   252,     0,   253,   254,   255,   256,   257,   258,
       0,   259,     0,     0,     0,   260,     0,     0,     0,   261,
       0,     0,   262,   263,   264,     0,   265,     0,   266,   267,
       0,     0,   268,     0,     0,   269,   270,     0,   271,   272,
     273,     0,   274,     0,   275,   276,   277,   278,   279,   280,
       0,   281,   282,     0,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,  2169,   294,   295,     0,   296,
     297,   298,   299,   300,     0,     0,     0,   301,     0,     0,
       0,     0,   302,     0,     0,   303,     0,     0,     0,   304,
     305,   306,     0,     0,   307,     0,     0,     0,     0,   308,
     309,     0,     0,     0,     0,   310,   311,     0,   312,     0,
       0,     0,     0,     0,   313,   314,   315,   316,   317,     0,
       0,     0,   318,     0,     0,   319,   320,   321,     0,     0,
       0,   322,     0,   323,   324,     0,   325,   326,   327,     0,
       0,   328,   329,     0,   330,   331,   332,   333,   334,   335,
       0,     0,   336,   337,   338,   339,   340,     0,     0,   341,
     342,     0,   343,   344,   345,   346,   347,     0,     0,   348,
     349,     0,     0,     0,   350,   351,     0,   352,     0,     0,
       0,   353,     0,   354,   355,   356,   357,     0,   358,     0,
     359,     0,     0,     0,   360,   361,     0,   362,     0,     0,
     363,   364,     0,     0,     0,   365,   366,   367,   368,     0,
       0,   369,   370,   371,     0,     0,   372,     0,     0,     0,
       0,   373,   374,   375,     0,     0,     0,   376,     0,     0,
       0,   377,   378,     0,   379,   380,     0,     0,     0,   381,
       0,   382,     0,     0,   383,   384,     0,     0,   385,     0,
       0,   386,   387,     0,     0,     0,     0,     0,   388,   389,
       0,   390,     0,   391,     0,   392,   393,     0,     0,     0,
       0,     0,     0,     0,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,   413,   414,     0,   415,   416,
     417,   418,     0,   419,   420,     0,     0,     0,     0,   421,
     422,   423,   424,   425,   426,     0,     0,   427,   428,     0,
     429,     0,   430,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,     0,     0,   440,   441,     0,     0,   442,
     443,   444,   445,   446,     0,     0,     0,   447,   448,     0,
       0,     0,   449,     0,   450,   451,     0,   452,   453,   454,
       0,     0,   455,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   456,   457,   458,     0,   459,     0,   460,     0,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
       0,   471,     0,   472,   473,   474,     0,   475,     0,   476,
     477,   478,   479,   480,     0,   481,   482,   483,     0,     0,
     484,     0,     0,     0,   485,   486,     0,   487,   488,     0,
       0,   489,   490,   491,   492,   493,     0,   494,   495,     0,
     496,   497,   498,     0,     0,   499,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,     0,   510,
     511,   512,     0,   513,     0,     0,   514,   515,   516,   517,
       0,   518,     0,   519,   520,   521,   522,   523,     0,   524,
     525,     0,     0,     0,   526,   527,   528,   529,     0,     0,
       0,   530,     0,     0,     0,   531,     0,   532,   533,   534,
     535,     0,   536,   537,   538,   539,   540,     0,     0,     0,
       0,     0,   541,   542,   543,     0,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,   550,   551,
     552,   553,     0,     0,   554,   555,     0,     0,   556,   557,
     558,   559,   560,   561,     0,     0,   562,   563,   564,   565,
       0,   566,   567,     0,     0,   568,   569,   570,   571,     0,
       0,   572,   573,     0,   574,   575,   576,   577,     0,     0,
       0,     0,     0,   578,   579,     0,     0,     0,   580,   581,
     582,     0,     0,   583,   584,     0,   585,   586,     0,   587,
     588,     0,     0,   589,     0,     0,   590,     0,   591,     0,
     592,   593,     0,     0,     0,     0,     0,   594,     0,   595,
       0,     0,   596,     0,     0,     0,   597,     0,   598,   599,
     600,   601,     0,     0,     0,     0,     0,     0,   602,   603,
     604,     0,   605,   606,   607,   608,     0,     0,   609,     0,
       0,   610,   611,   612,   613,   614,     0,   615,     0,     0,
       0,     0,     0,     0,     0,     0,   616,   617,   618,     0,
     619,   620,   621,     0,   622,     0,     0,   623,     0,   624,
       0,     0,     0,     0,     0,     0,   625,   626,     0,     0,
     627,     0,   628,     0,   629,   630,     0,     0,     0,   631,
     632,   633,   634,   635,   636,   637,   638,     0,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,     0,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,     0,   673,   674,   675,   676,   677,   678,
     679,     0,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   243,   244,     0,   245,   246,   247,   248,
     249,     0,     0,   250,     0,     0,     0,     0,   251,     0,
    2170,   252,     0,   253,   254,   255,   256,   257,   258,     0,
     259,     0,     0,     0,   260,     0,     0,     0,   261,     0,
       0,   262,   263,   264,     0,   265,     0,   266,   267,     0,
       0,   268,     0,     0,   269,   270,     0,   271,   272,   273,
       0,   274,     0,   275,   276,   277,   278,   279,   280,     0,
     281,   282,     0,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,   294,   295,     0,   296,   297,
     298,   299,   300,     0,     0,     0,   301,     0,     0,     0,
       0,   302,     0,     0,   303,     0,     0,     0,   304,   305,
     306,     0,     0,   307,     0,     0,     0,     0,   308,   309,
       0,     0,     0,     0,   310,   311,     0,   312,     0,     0,
       0,     0,     0,   313,   314,   315,   316,   317,     0,     0,
       0,   318,     0,     0,   319,   320,   321,     0,     0,     0,
     322,     0,   323,   324,     0,   325,   326,   327,     0,     0,
     328,   329,     0,   330,   331,   332,   333,   334,   335,     0,
       0,   336,   337,   338,   339,   340,     0,     0,   341,   342,
       0,   343,   344,   345,   346,   347,     0,     0,   348,   349,
       0,     0,     0,   350,   351,     0,   352,     0,     0,     0,
     353,     0,   354,   355,   356,   357,     0,   358,     0,   359,
       0,     0,     0,   360,   361,     0,   362,     0,     0,   363,
     364,     0,     0,     0,   365,   366,   367,   368,     0,     0,
     369,   370,   371,     0,     0,   372,     0,     0,     0,     0,
     373,   374,   375,     0,     0,     0,   376,     0,     0,     0,
     377,   378,     0,   379,   380,     0,     0,     0,   381,     0,
     382,     0,     0,   383,   384,     0,     0,   385,     0,     0,
     386,   387,     0,     0,     0,     0,     0,   388,   389,     0,
     390,     0,   391,     0,   392,   393,     0,     0,     0,     0,
       0,     0,     0,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,     0,   412,   413,   414,     0,   415,   416,   417,
     418,     0,   419,   420,     0,     0,     0,     0,   421,   422,
     423,   424,   425,   426,     0,     0,   427,   428,     0,   429,
       0,   430,     0,   431,   432,   433,   434,   435,   436,   437,
     438,   439,     0,     0,   440,   441,     0,     0,   442,   443,
     444,   445,   446,     0,     0,     0,   447,   448,     0,     0,
       0,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   456,   457,   458,     0,   459,     0,   460,     0,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,     0,
     471,     0,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   481,   482,   483,     0,     0,   484,
       0,     0,     0,   485,   486,     0,   487,   488,     0,     0,
     489,   490,   491,   492,   493,     0,   494,   495,     0,   496,
     497,   498,     0,     0,   499,   500,   501,   502,   503,   504,
     505,   506,     0,   507,     0,   508,   509,     0,   510,   511,
     512,     0,   513,     0,     0,   514,   515,   516,   517,     0,
     518,     0,   519,   520,   521,   522,   523,     0,   524,   525,
       0,     0,     0,   526,   527,   528,   529,     0,     0,     0,
     530,     0,     0,     0,   531,     0,   532,   533,   534,   535,
       0,   536,   537,   538,   539,   540,     0,     0,     0,     0,
       0,   541,   542,   543,     0,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,   550,   551,   552,
     553,     0,     0,   554,   555,     0,     0,   556,   557,   558,
     559,   560,   561,     0,     0,   562,   563,   564,   565,     0,
     566,   567,     0,     0,   568,   569,   570,   571,     0,     0,
     572,   573,     0,   574,   575,   576,   577,     0,     0,     0,
       0,     0,   578,   579,     0,     0,     0,   580,   581,   582,
       0,     0,   583,   584,     0,   585,   586,     0,   587,   588,
       0,     0,   589,     0,     0,   590,     0,   591,     0,   592,
     593,     0,     0,     0,     0,     0,   594,     0,   595,     0,
       0,   596,     0,     0,     0,   597,     0,   598,   599,   600,
     601,     0,     0,     0,     0,     0,     0,   602,   603,   604,
       0,   605,   606,   607,   608,     0,     0,   609,     0,     0,
     610,   611,   612,   613,   614,     0,   615,     0,     0,     0,
       0,     0,     0,     0,     0,   616,   617,   618,     0,   619,
     620,   621,     0,   622,     0,     0,   623,     0,   624,     0,
       0,     0,     0,     0,     0,   625,   626,     0,     0,   627,
       0,   628,     0,   629,   630,     0,     0,     0,   631,   632,
     633,   634,   635,   636,   637,   638,     0,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,     0,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,     0,   673,   674,   675,   676,   677,   678,   679,
       0,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   243,   244,     0,   245,   246,   247,   248,   249,
       0,     0,   250,     0,     0,     0,  5506,   251,     0,  5507,
     252,     0,   253,   254,   255,   256,   257,   258,     0,   259,
       0,     0,     0,   260,     0,     0,     0,   261,     0,     0,
     262,   263,   264,     0,   265,     0,   266,   267,     0,     0,
     268,     0,     0,   269,   270,     0,   271,   272,   273,     0,
     274,     0,   275,   276,   277,   278,   279,   280,     0,   281,
     282,     0,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,     0,   294,   295,     0,   296,   297,   298,
     299,   300,     0,     0,     0,   301,     0,     0,     0,     0,
     302,     0,     0,   303,     0,     0,     0,   304,   305,   306,
       0,     0,   307,     0,     0,     0,     0,   308,   309,     0,
       0,     0,     0,   310,   311,     0,   312,     0,     0,     0,
       0,     0,   313,   314,   315,   316,   317,     0,     0,     0,
     318,     0,     0,   319,   320,   321,     0,     0,     0,   322,
       0,   323,   324,     0,   325,   326,   327,     0,     0,   328,
     329,     0,   330,   331,   332,   333,   334,   335,     0,     0,
     336,   337,   338,   339,   340,     0,     0,   341,   342,     0,
     343,   344,   345,   346,   347,     0,     0,   348,   349,     0,
       0,     0,   350,   351,     0,   352,     0,     0,     0,   353,
       0,   354,   355,   356,   357,     0,   358,     0,   359,     0,
       0,     0,   360,   361,     0,   362,     0,     0,   363,   364,
       0,     0,     0,   365,   366,   367,   368,     0,     0,   369,
     370,   371,     0,     0,   372,     0,     0,     0,     0,   373,
     374,   375,     0,     0,     0,   376,     0,     0,     0,   377,
     378,     0,   379,   380,     0,     0,     0,   381,     0,   382,
       0,     0,   383,   384,     0,     0,   385,     0,     0,   386,
     387,     0,     0,     0,     0,     0,   388,   389,     0,   390,
       0,   391,     0,   392,   393,     0,     0,     0,     0,     0,
       0,     0,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,     0,   412,   413,   414,     0,   415,   416,   417,   418,
       0,   419,   420,     0,     0,     0,     0,   421,   422,   423,
     424,   425,   426,     0,     0,   427,   428,     0,   429,     0,
     430,     0,   431,   432,   433,   434,   435,   436,   437,   438,
     439,     0,     0,   440,   441,     0,     0,   442,   443,   444,
     445,   446,     0,     0,     0,   447,   448,     0,     0,     0,
     449,     0,   450,   451,     0,   452,   453,   454,     0,     0,
     455,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     456,   457,   458,     0,   459,     0,   460,     0,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,     0,   471,
       0,   472,   473,   474,     0,   475,     0,   476,   477,   478,
     479,   480,     0,   481,   482,   483,     0,     0,   484,     0,
       0,     0,   485,   486,     0,   487,   488,     0,     0,   489,
     490,   491,   492,   493,     0,   494,   495,     0,   496,   497,
     498,     0,     0,   499,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,     0,   510,   511,   512,
       0,   513,     0,     0,   514,   515,   516,   517,     0,   518,
       0,   519,   520,   521,   522,   523,     0,   524,   525,     0,
       0,     0,   526,   527,   528,   529,     0,     0,     0,   530,
       0,     0,     0,   531,     0,   532,   533,   534,   535,     0,
     536,   537,   538,   539,   540,     0,     0,     0,     0,     0,
     541,   542,   543,     0,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,   550,   551,   552,   553,
       0,     0,   554,   555,     0,     0,   556,   557,   558,   559,
     560,   561,     0,     0,   562,   563,   564,   565,     0,   566,
     567,     0,     0,   568,   569,   570,   571,     0,     0,   572,
     573,     0,   574,   575,   576,   577,     0,     0,     0,     0,
       0,   578,   579,     0,     0,     0,   580,   581,   582,     0,
       0,   583,   584,     0,   585,   586,     0,   587,   588,     0,
       0,   589,     0,     0,   590,     0,   591,     0,   592,   593,
       0,     0,     0,     0,     0,   594,     0,   595,     0,     0,
     596,     0,     0,     0,   597,     0,   598,   599,   600,   601,
       0,     0,     0,     0,     0,     0,   602,   603,   604,     0,
     605,   606,   607,   608,     0,     0,   609,     0,     0,   610,
     611,   612,   613,   614,     0,   615,     0,     0,     0,     0,
       0,     0,     0,     0,   616,   617,   618,     0,   619,   620,
     621,     0,   622,     0,     0,   623,     0,   624,     0,     0,
       0,     0,     0,     0,   625,   626,     0,     0,   627,     0,
     628,     0,   629,   630,     0,     0,     0,   631,   632,   633,
     634,   635,   636,   637,   638,     0,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,     0,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,     0,   673,   674,   675,   676,   677,   678,   679,     0,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   243,   244,     0,   245,   246,   247,   248,   249,     0,
       0,   250,     0,     0,     0,     0,   251,     0,  2170,   252,
       0,   253,   254,   255,   256,   257,   258,     0,   259,     0,
       0,     0,   260,     0,     0,     0,   261,     0,     0,   262,
     263,   264,     0,   265,     0,   266,   267,     0,     0,   268,
       0,     0,   269,   270,     0,   271,   272,   273,     0,   274,
       0,   275,   276,   277,   278,   279,   280,     0,   281,   282,
       0,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,     0,   294,   295,     0,   296,   297,   298,   299,
     300,     0,     0,     0,   301,     0,     0,     0,     0,   302,
       0,     0,   303,     0,     0,     0,   304,   305,   306,     0,
       0,   307,     0,     0,     0,     0,   308,   309,     0,     0,
       0,     0,   310,   311,     0,   312,     0,     0,     0,     0,
       0,   313,   314,   315,   316,   317,     0,     0,     0,   318,
       0,     0,   319,   320,   321,     0,     0,     0,   322,     0,
     323,   324,     0,   325,   326,   327,     0,     0,   328,   329,
       0,   330,   331,   332,   333,   334,   335,     0,     0,   336,
     337,   338,   339,   340,     0,     0,   341,   342,     0,   343,
     344,   345,   346,   347,     0,     0,   348,   349,     0,     0,
       0,   350,   351,     0,   352,     0,     0,     0,   353,     0,
     354,   355,   356,   357,     0,   358,     0,   359,     0,     0,
       0,   360,   361,     0,   362,     0,     0,   363,   364,     0,
       0,     0,   365,   366,   367,   368,     0,     0,   369,   370,
     371,     0,     0,   372,     0,     0,     0,     0,   373,   374,
     375,     0,     0,     0,   376,     0,     0,     0,   377,   378,
       0,   379,   380,     0,     0,     0,   381,     0,   382,     0,
       0,   383,   384,     0,     0,   385,     0,     0,   386,   387,
       0,     0,     0,     0,     0,   388,   389,     0,   390,     0,
     391,     0,   392,   393,     0,     0,     0,     0,     0,     0,
       0,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
       0,   412,   413,   414,     0,   415,   416,   417,   418,     0,
     419,   420,     0,     0,     0,     0,   421,   422,   423,   424,
     425,   426,     0,     0,   427,   428,     0,   429,     0,   430,
       0,   431,   432,   433,   434,   435,   436,   437,   438,   439,
       0,     0,   440,   441,     0,     0,   442,   443,   444,   445,
     446,     0,     0,     0,   447,   448,     0,     0,     0,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   456,
     457,   458,     0,   459,     0,   460,     0,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,     0,   471,     0,
     472,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   481,   482,   483,     0,     0,   484,     0,     0,
       0,   485,   486,     0,   487,   488,     0,     0,   489,   490,
     491,   492,   493,     0,   494,   495,     0,   496,   497,   498,
       0,     0,   499,   500,   501,   502,   503,   504,   505,   506,
       0,   507,     0,   508,   509,     0,   510,   511,   512,     0,
     513,     0,     0,   514,   515,   516,   517,     0,   518,     0,
     519,   520,   521,   522,   523,     0,   524,   525,     0,     0,
       0,   526,   527,   528,   529,     0,     0,     0,   530,     0,
       0,     0,   531,     0,   532,   533,   534,   535,     0,   536,
     537,   538,   539,   540,     0,     0,     0,     0,     0,   541,
     542,   543,     0,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,   549,   550,   551,   552,   553,     0,
       0,   554,   555,     0,     0,   556,   557,   558,   559,   560,
     561,     0,     0,   562,   563,   564,   565,     0,   566,   567,
       0,     0,   568,   569,   570,   571,     0,     0,   572,   573,
       0,   574,   575,   576,   577,     0,     0,     0,     0,     0,
     578,   579,     0,     0,     0,   580,   581,   582,     0,     0,
     583,   584,     0,   585,   586,     0,   587,   588,     0,     0,
     589,     0,     0,   590,     0,   591,     0,   592,   593,     0,
       0,     0,     0,     0,   594,     0,   595,     0,     0,   596,
       0,     0,     0,   597,     0,   598,   599,   600,   601,     0,
       0,     0,     0,     0,     0,   602,   603,   604,     0,   605,
     606,   607,   608,     0,     0,   609,     0,     0,   610,   611,
     612,   613,   614,     0,   615,     0,     0,     0,     0,     0,
       0,     0,     0,   616,   617,   618,     0,   619,   620,   621,
       0,   622,     0,     0,   623,     0,   624,     0,     0,     0,
       0,     0,     0,   625,   626,     0,     0,   627,     0,   628,
       0,   629,   630,     0,     0,     0,   631,   632,   633,   634,
     635,   636,   637,   638,     0,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
       0,   673,   674,   675,   676,   677,   678,   679,     0,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     243,   244,     0,   245,   246,   247,   248,   249,     0,     0,
     250,     0,     0,     0,     0,   251,     0,  5507,   252,     0,
     253,   254,   255,   256,   257,   258,     0,   259,     0,     0,
       0,   260,     0,     0,     0,   261,     0,     0,   262,   263,
     264,     0,   265,     0,   266,   267,     0,     0,   268,     0,
       0,   269,   270,     0,   271,   272,   273,     0,   274,     0,
     275,   276,   277,   278,   279,   280,     0,   281,   282,     0,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,   294,   295,     0,   296,   297,   298,   299,   300,
       0,     0,     0,   301,     0,     0,     0,     0,   302,     0,
       0,   303,     0,     0,     0,   304,   305,   306,     0,     0,
     307,     0,     0,     0,     0,   308,   309,     0,     0,     0,
       0,   310,   311,     0,   312,     0,     0,     0,     0,     0,
     313,   314,   315,   316,   317,     0,     0,     0,   318,     0,
       0,   319,   320,   321,     0,     0,     0,   322,     0,   323,
     324,     0,   325,   326,   327,     0,     0,   328,   329,     0,
     330,   331,   332,   333,   334,   335,     0,     0,   336,   337,
     338,   339,   340,     0,     0,   341,   342,     0,   343,   344,
     345,   346,   347,     0,     0,   348,   349,     0,     0,     0,
     350,   351,     0,   352,     0,     0,     0,   353,     0,   354,
     355,   356,   357,     0,   358,     0,   359,     0,     0,     0,
     360,   361,     0,   362,     0,     0,   363,   364,     0,     0,
       0,   365,   366,   367,   368,     0,     0,   369,   370,   371,
       0,     0,   372,     0,     0,     0,     0,   373,   374,   375,
       0,     0,     0,   376,     0,     0,     0,   377,   378,     0,
     379,   380,     0,     0,     0,   381,     0,   382,     0,     0,
     383,   384,     0,     0,   385,     0,     0,   386,   387,     0,
       0,     0,     0,     0,   388,   389,     0,   390,     0,   391,
       0,   392,   393,     0,     0,     0,     0,     0,     0,     0,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,     0,
     412,   413,   414,     0,   415,   416,   417,   418,     0,   419,
     420,     0,     0,     0,     0,   421,   422,   423,   424,   425,
     426,     0,     0,   427,   428,     0,   429,     0,   430,     0,
     431,   432,   433,   434,   435,   436,   437,   438,   439,     0,
       0,   440,   441,     0,     0,   442,   443,   444,   445,   446,
       0,     0,     0,   447,   448,     0,     0,     0,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   456,   457,
     458,     0,   459,     0,   460,     0,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,     0,   471,     0,   472,
     473,   474,     0,   475,     0,   476,   477,   478,   479,   480,
       0,   481,   482,   483,     0,     0,   484,     0,     0,     0,
     485,   486,     0,   487,   488,     0,     0,   489,   490,   491,
     492,   493,     0,   494,   495,     0,   496,   497,   498,     0,
       0,   499,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,     0,   510,   511,   512,     0,   513,
       0,     0,   514,   515,   516,   517,     0,   518,     0,   519,
     520,   521,   522,   523,     0,   524,   525,    42,     0,     0,
     526,   527,   528,   529,     0,     0,     0,   530,     0,     0,
       0,   531,     0,   532,   533,   534,   535,     0,   536,   537,
     538,   539,   540,     0,     0,     0,     0,     0,   541,   542,
     543,     0,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,   550,   551,   552,   553,     0,     0,
     554,   555,     0,     0,   556,   557,   558,   559,   560,   561,
       0,     0,   562,   563,   564,   565,     0,   566,   567,     0,
      49,   568,   569,   570,   571,     0,     0,   572,   573,     0,
     574,   575,   576,   577,     0,     0,     0,     0,     0,   578,
     579,     0,     0,     0,   580,   581,   582,     0,     0,   583,
     584,     0,   585,   586,     0,   587,   588,     0,     0,   589,
       0,     0,   590,     0,   591,     0,   592,   593,     0,     0,
       0,     0,     0,   594,    54,   595,     0,     0,   596,     0,
       0,     0,   597,     0,   598,   599,   600,   601,     0,     0,
       0,    55,     0,     0,   602,   603,   604,     0,   605,   606,
     607,   608,     0,     0,   609,     0,     0,   610,   611,   612,
     613,   614,     0,   615,     0,     0,     0,     0,     0,     0,
       0,     0,   616,   617,   618,     0,   619,   620,   621,     0,
     622,     0,     0,   623,     0,   624,     0,     0,     0,     0,
       0,     0,   625,   626,     0,     0,   627,     0,   628,     0,
     629,   630,     0,     0,     0,   631,   632,   633,   634,   635,
     636,   637,   638,     0,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,     0,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,     0,
     673,   674,   675,   676,   677,   678,   679,     0,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
       0,     0,  1127,  4166,   251,     0,     0,   252,     0,   253,
     254,   255,   256,   257,   258,     0,   259,     0,     0,     0,
     260,     0,     0,     0,   261,     0,     0,   262,   263,   264,
       0,   265,     0,   266,   267,     0,     0,   268,     0,     0,
     269,   270,     0,   271,   272,   273,     0,   274,     0,   275,
     276,   277,   278,   279,   280,     0,   281,   282,     0,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,   294,   295,     0,   296,   297,   298,   299,   300,     0,
       0,     0,   301,     0,     0,     0,     0,   302,     0,     0,
     303,     0,     0,     0,   304,   305,   306,     0,     0,   307,
       0,     0,     0,     0,   308,   309,     0,     0,     0,     0,
     310,   311,     0,   312,     0,     0,     0,     0,     0,   313,
     314,   315,   316,   317,     0,     0,     0,   318,     0,     0,
     319,   320,   321,     0,     0,     0,   322,     0,   323,   324,
       0,   325,   326,   327,     0,     0,   328,   329,     0,   330,
     331,   332,   333,   334,   335,     0,     0,   336,   337,   338,
     339,   340,     0,     0,   341,   342,     0,   343,   344,   345,
     346,   347,     0,     0,   348,   349,     0,     0,     0,   350,
     351,     0,   352,     0,     0,     0,   353,     0,   354,   355,
     356,   357,     0,   358,     0,   359,     0,     0,     0,   360,
     361,     0,   362,     0,     0,   363,   364,     0,     0,     0,
     365,   366,   367,   368,     0,     0,   369,   370,   371,     0,
       0,   372,     0,     0,     0,     0,   373,   374,   375,     0,
       0,     0,   376,     0,     0,     0,   377,   378,     0,   379,
     380,     0,     0,     0,   381,     0,   382,     0,     0,   383,
     384,     0,     0,   385,     0,     0,   386,   387,     0,     0,
       0,     0,     0,   388,   389,     0,   390,     0,   391,     0,
     392,   393,     0,     0,     0,     0,     0,     0,     0,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,     0,   412,
     413,   414,     0,   415,   416,   417,   418,     0,   419,   420,
       0,     0,     0,     0,   421,   422,   423,   424,   425,   426,
       0,     0,   427,   428,     0,   429,     0,   430,     0,   431,
     432,   433,   434,   435,   436,   437,   438,   439,     0,     0,
     440,   441,     0,     0,   442,   443,   444,   445,   446,     0,
       0,     0,   447,   448,     0,     0,     0,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   456,   457,   458,
       0,   459,     0,   460,     0,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,     0,   471,     0,   472,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     481,   482,   483,     0,     0,   484,     0,     0,     0,   485,
     486,     0,   487,   488,     0,     0,   489,   490,   491,   492,
     493,     0,   494,   495,     0,   496,   497,   498,     0,     0,
     499,   500,   501,   502,   503,   504,   505,   506,     0,   507,
       0,   508,   509,     0,   510,   511,   512,     0,   513,     0,
       0,   514,   515,   516,   517,     0,   518,     0,   519,   520,
     521,   522,   523,     0,   524,   525,     0,     0,     0,   526,
     527,   528,   529,     0,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,   534,   535,     0,   536,   537,   538,
     539,   540,     0,     0,     0,     0,     0,   541,   542,   543,
       0,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,   550,   551,   552,   553,     0,     0,   554,
     555,     0,     0,   556,   557,   558,   559,   560,   561,     0,
       0,   562,   563,   564,   565,     0,   566,   567,     0,     0,
     568,   569,   570,   571,     0,     0,   572,   573,     0,   574,
     575,   576,   577,     0,     0,     0,     0,     0,   578,   579,
       0,     0,     0,   580,   581,   582,     0,     0,   583,   584,
       0,   585,   586,     0,   587,   588,     0,     0,   589,     0,
       0,   590,     0,   591,     0,   592,   593,     0,     0,     0,
       0,     0,   594,     0,   595,     0,     0,   596,     0,     0,
       0,   597,     0,   598,   599,   600,   601,     0,     0,     0,
       0,     0,     0,   602,   603,   604,     0,   605,   606,   607,
     608,     0,     0,   609,     0,     0,   610,   611,   612,   613,
     614,     0,   615,     0,     0,     0,     0,     0,     0,     0,
       0,   616,   617,   618,     0,   619,   620,   621,     0,   622,
       0,     0,   623,     0,   624,     0,     0,     0,     0,     0,
       0,   625,   626,     0,     0,   627,     0,   628,     0,   629,
     630,     0,     0,     0,   631,   632,   633,   634,   635,   636,
     637,   638,     0,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,     0,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,     0,   673,
     674,   675,   676,   677,   678,   679,     0,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   243,   244,
       0,   245,   246,   247,   248,   249,     0,     0,   250,     0,
       0,     0,  4405,   251,     0,     0,   252,     0,   253,   254,
     255,   256,   257,   258,     0,   259,     0,     0,     0,   260,
       0,     0,     0,   261,     0,     0,   262,   263,   264,     0,
     265,     0,   266,   267,     0,     0,   268,     0,     0,   269,
     270,     0,   271,   272,   273,     0,   274,     0,   275,   276,
     277,   278,   279,   280,     0,   281,   282,     0,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
     294,   295,     0,   296,   297,   298,   299,   300,     0,     0,
       0,   301,     0,     0,     0,     0,   302,     0,     0,   303,
       0,     0,     0,   304,   305,   306,     0,     0,   307,     0,
       0,     0,     0,   308,   309,     0,     0,     0,     0,   310,
     311,     0,   312,     0,     0,     0,     0,     0,   313,   314,
     315,   316,   317,     0,     0,     0,   318,     0,     0,   319,
     320,   321,     0,     0,     0,   322,     0,   323,   324,     0,
     325,   326,   327,     0,     0,   328,   329,     0,   330,   331,
     332,   333,   334,   335,     0,     0,   336,   337,   338,   339,
     340,     0,     0,   341,   342,     0,   343,   344,   345,   346,
     347,     0,     0,   348,   349,     0,     0,     0,   350,   351,
       0,   352,     0,     0,     0,   353,     0,   354,   355,   356,
     357,     0,   358,     0,   359,     0,     0,     0,   360,   361,
       0,   362,     0,     0,   363,   364,     0,     0,     0,   365,
     366,   367,   368,     0,     0,   369,   370,   371,     0,     0,
     372,     0,     0,     0,     0,   373,   374,   375,     0,     0,
       0,   376,     0,     0,     0,   377,   378,     0,   379,   380,
       0,     0,     0,   381,     0,   382,     0,     0,   383,   384,
       0,     0,   385,     0,     0,   386,   387,     0,     0,     0,
       0,     0,   388,   389,     0,   390,     0,   391,     0,   392,
     393,     0,     0,     0,     0,     0,     0,     0,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,     0,   412,   413,
     414,     0,   415,   416,   417,   418,     0,   419,   420,     0,
       0,     0,     0,   421,   422,   423,   424,   425,   426,     0,
       0,   427,   428,     0,   429,     0,   430,     0,   431,   432,
     433,   434,   435,   436,   437,   438,   439,     0,     0,   440,
     441,     0,     0,   442,   443,   444,   445,   446,     0,     0,
       0,   447,   448,     0,     0,     0,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   456,   457,   458,     0,
     459,     0,   460,     0,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,     0,   471,     0,   472,   473,   474,
       0,   475,     0,   476,   477,   478,   479,   480,     0,   481,
     482,   483,     0,     0,   484,     0,     0,     0,   485,   486,
       0,   487,   488,     0,     0,   489,   490,   491,   492,   493,
       0,   494,   495,     0,   496,   497,   498,     0,     0,   499,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,     0,   510,   511,   512,     0,   513,     0,     0,
     514,   515,   516,   517,     0,   518,     0,   519,   520,   521,
     522,   523,     0,   524,   525,     0,     0,     0,   526,   527,
     528,   529,     0,     0,     0,   530,     0,     0,     0,   531,
       0,   532,   533,   534,   535,     0,   536,   537,   538,   539,
     540,     0,     0,     0,     0,     0,   541,   542,   543,     0,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,   550,   551,   552,   553,     0,     0,   554,   555,
       0,     0,   556,   557,   558,   559,   560,   561,     0,     0,
     562,   563,   564,   565,     0,   566,   567,     0,     0,   568,
     569,   570,   571,     0,     0,   572,   573,     0,   574,   575,
     576,   577,     0,     0,     0,     0,     0,   578,   579,     0,
       0,     0,   580,   581,   582,     0,     0,   583,   584,     0,
     585,   586,     0,   587,   588,     0,     0,   589,     0,     0,
     590,     0,   591,     0,   592,   593,     0,     0,     0,     0,
       0,   594,     0,   595,     0,     0,   596,     0,     0,     0,
     597,     0,   598,   599,   600,   601,     0,     0,     0,     0,
       0,     0,   602,   603,   604,     0,   605,   606,   607,   608,
       0,     0,   609,     0,     0,   610,   611,   612,   613,   614,
       0,   615,     0,     0,     0,     0,     0,     0,     0,     0,
     616,   617,   618,     0,   619,   620,   621,     0,   622,     0,
       0,   623,     0,   624,     0,     0,     0,     0,     0,     0,
     625,   626,     0,     0,   627,     0,   628,     0,   629,   630,
       0,     0,     0,   631,   632,   633,   634,   635,   636,   637,
     638,     0,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,     0,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,     0,   673,   674,
     675,   676,   677,   678,   679,     0,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   243,   244,     0,
     245,   246,   247,   248,   249,     0,     0,   250,     0,     0,
       0,  4409,   251,     0,     0,   252,     0,   253,   254,   255,
     256,   257,   258,     0,   259,     0,     0,     0,   260,     0,
       0,     0,   261,     0,     0,   262,   263,   264,     0,   265,
       0,   266,   267,     0,     0,   268,     0,     0,   269,   270,
       0,   271,   272,   273,     0,   274,     0,   275,   276,   277,
     278,   279,   280,     0,   281,   282,     0,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,   294,
     295,  2479,   296,   297,   298,   299,   300,     0,     0,     0,
     301,     0,     0,     0,     0,   302,     0,     0,   303,     0,
       0,     0,   304,   305,   306,     0,     0,   307,     0,     0,
       0,     0,   308,   309,     0,     0,     0,     0,   310,   311,
       0,   312,     0,     0,     0,     0,     0,   313,   314,   315,
     316,   317,     0,     0,     0,   318,     0,     0,   319,   320,
     321,     0,     0,     0,   322,     0,   323,   324,     0,   325,
     326,   327,     0,     0,   328,   329,     0,   330,   331,   332,
     333,   334,   335,     0,     0,   336,   337,   338,   339,   340,
       0,     0,   341,   342,     0,   343,   344,   345,   346,   347,
       0,     0,   348,   349,     0,     0,     0,   350,   351,     0,
     352,  2480,     0,     0,   353,     0,   354,   355,   356,   357,
       0,   358,     0,   359,     0,     0,     0,   360,   361,     0,
     362,     0,     0,   363,   364,     0,     0,     0,   365,   366,
     367,   368,     0,     0,   369,   370,   371,  1863,     0,   372,
       0,     0,     0,     0,   373,   374,   375,     0,     0,     0,
     376,     0,     0,     0,   377,   378,     0,   379,   380,     0,
       0,     0,   381,     0,   382,  1864,     0,   383,   384,     0,
       0,   385,     0,     0,   386,   387,     0,  4008,     0,     0,
       0,   388,   389,     0,   390,     0,   391,     0,   392,   393,
       0,     0,     0,     0,     0,     0,     0,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,     0,   412,   413,   414,
       0,   415,   416,   417,   418,     0,   419,   420,     0,     0,
       0,     0,   421,   422,   423,   424,   425,   426,     0,     0,
     427,   428,     0,   429,     0,   430,     0,   431,   432,   433,
     434,   435,   436,   437,   438,   439,     0,     0,   440,   441,
       0,     0,   442,   443,   444,   445,   446,     0,     0,     0,
     447,   448,     0,     0,     0,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   456,   457,   458,     0,   459,
       0,   460,     0,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,     0,   471,     0,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   481,   482,
     483,     0,     0,   484,     0,     0,     0,   485,   486,     0,
     487,   488,     0,     0,   489,   490,   491,   492,   493,     0,
     494,   495,     0,   496,   497,   498,     0,     0,   499,   500,
     501,   502,   503,   504,   505,   506,     0,   507,     0,   508,
     509,     0,   510,   511,   512,     0,   513,     0,     0,   514,
     515,   516,   517,     0,   518,     0,   519,   520,   521,   522,
     523,     0,   524,   525,    42,     0,     0,   526,   527,   528,
     529,     0,     0,     0,   530,     0,     0,     0,   531,     0,
     532,   533,   534,   535,     0,   536,   537,   538,   539,   540,
    2482,     0,     0,     0,     0,   541,   542,   543,     0,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,   550,   551,   552,   553,     0,     0,   554,   555,     0,
       0,   556,   557,   558,   559,   560,   561,     0,     0,   562,
     563,   564,   565,     0,   566,   567,     0,    49,   568,   569,
     570,   571,     0,     0,   572,   573,     0,   574,   575,   576,
     577,     0,     0,     0,     0,     0,   578,   579,     0,     0,
       0,   580,   581,   582,     0,     0,   583,   584,     0,   585,
     586,     0,   587,   588,     0,     0,   589,     0,     0,   590,
       0,   591,     0,   592,   593,     0,     0,     0,     0,     0,
     594,    54,   595,     0,     0,   596,     0,     0,     0,   597,
       0,   598,   599,   600,   601,     0,     0,     0,    55,     0,
       0,   602,   603,   604,     0,   605,   606,   607,   608,     0,
       0,   609,     0,     0,   610,   611,   612,   613,   614,     0,
     615,     0,     0,     0,     0,     0,     0,     0,     0,   616,
     617,   618,     0,   619,   620,   621,     0,   622,     0,     0,
     623,     0,   624,     0,     0,     0,     0,     0,     0,   625,
     626,     0,     0,   627,     0,   628,     0,   629,   630,     0,
       0,     0,   631,   632,   633,   634,   635,   636,   637,   638,
       0,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,     0,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,     0,   673,   674,   675,
     676,   677,   678,   679,     0,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   243,   244,     0,   245,
     246,   247,   248,   249,     0,     0,   250,     0,     0,  1127,
       0,   251,     0,     0,   252,     0,   253,   254,   255,   256,
     257,   258,     0,   259,     0,     0,     0,   260,     0,     0,
       0,   261,     0,     0,   262,   263,   264,     0,   265,     0,
     266,   267,     0,     0,   268,     0,     0,   269,   270,     0,
     271,   272,   273,     0,   274,     0,   275,   276,   277,   278,
     279,   280,     0,   281,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,   299,   300,     0,     0,     0,   301,
       0,     0,     0,     0,   302,     0,     0,   303,     0,     0,
       0,   304,   305,   306,     0,     0,   307,     0,     0,     0,
       0,   308,   309,     0,     0,     0,     0,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,   318,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,   323,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,   332,   333,
     334,   335,     0,     0,   336,   337,   338,   339,   340,     0,
       0,   341,   342,     0,   343,   344,   345,   346,   347,     0,
       0,   348,   349,     0,     0,     0,   350,   351,     0,   352,
       0,     0,     0,   353,     0,   354,   355,   356,   357,     0,
     358,     0,   359,     0,     0,     0,   360,   361,     0,   362,
       0,     0,   363,   364,     0,     0,     0,   365,   366,   367,
     368,     0,     0,   369,   370,   371,     0,     0,   372,     0,
       0,     0,     0,   373,   374,   375,     0,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,     0,     0,
       0,   381,     0,   382,     0,     0,   383,   384,     0,     0,
     385,     0,     0,   386,   387,     0,     0,     0,     0,     0,
     388,   389,     0,   390,     0,   391,     0,   392,   393,     0,
       0,     0,     0,     0,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,     0,
     415,   416,   417,   418,     0,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,     0,   429,     0,   430,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,     0,     0,   440,   441,     0,
       0,   442,   443,   444,   445,   446,     0,     0,     0,   447,
     448,     0,     0,     0,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,     0,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     0,   471,     0,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   481,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,   497,   498,     0,     0,   499,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
       0,   510,   511,   512,     0,   513,     0,     0,   514,   515,
     516,   517,     0,   518,     0,   519,   520,   521,   522,   523,
       0,   524,   525,     0,     0,     0,   526,   527,   528,   529,
       0,     0,     0,   530,     0,     0,     0,   531,     0,   532,
     533,   534,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
     550,   551,   552,   553,     0,     0,   554,   555,     0,     0,
     556,   557,   558,   559,   560,   561,     0,     0,   562,   563,
     564,   565,     0,   566,   567,     0,     0,   568,   569,   570,
     571,     0,     0,   572,   573,     0,   574,   575,   576,   577,
       0,     0,     0,     0,     0,   578,   579,     0,     0,     0,
     580,   581,   582,     0,     0,   583,   584,     0,   585,   586,
       0,   587,   588,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   592,   593,     0,     0,     0,     0,     0,   594,
       0,   595,     0,     0,   596,     0,     0,     0,   597,     0,
     598,   599,   600,   601,     0,     0,     0,     0,     0,     0,
     602,   603,   604,     0,   605,   606,   607,   608,     0,     0,
     609,     0,     0,   610,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,     0,     0,     0,   616,   617,
     618,     0,   619,   620,   621,     0,   622,     0,     0,   623,
       0,   624,     0,     0,     0,     0,     0,     0,   625,   626,
       0,     0,   627,     0,   628,     0,   629,   630,     0,     0,
    2982,   631,   632,   633,   634,   635,   636,   637,   638,     0,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
    2983,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   673,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   243,   244,     0,   245,   246,
     247,   248,   249,     0,     0,   250,     0,     0,  2984,     0,
     251,     0,     0,   252,     0,   253,   254,   255,   256,   257,
     258,     0,   259,     0,     0,     0,   260,     0,     0,     0,
     261,     0,     0,   262,   263,   264,     0,   265,     0,   266,
     267,     0,     0,   268,     0,     0,   269,   270,     0,   271,
     272,   273,     0,   274,     0,   275,   276,   277,   278,   279,
     280,     0,   281,   282,     0,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,   294,   295,     0,
     296,   297,   298,   299,   300,     0,     0,     0,   301,     0,
       0,     0,     0,   302,     0,     0,   303,     0,     0,     0,
     304,   305,   306,     0,     0,   307,     0,     0,     0,     0,
     308,   309,     0,     0,     0,     0,   310,   311,     0,   312,
       0,     0,     0,     0,     0,   313,   314,   315,   316,   317,
       0,     0,     0,   318,     0,     0,   319,   320,   321,     0,
       0,     0,   322,     0,   323,   324,     0,   325,   326,   327,
       0,     0,   328,   329,     0,   330,   331,   332,   333,   334,
     335,     0,     0,   336,   337,   338,   339,   340,     0,     0,
     341,   342,     0,   343,   344,   345,   346,   347,     0,     0,
     348,   349,     0,     0,     0,   350,   351,     0,   352,     0,
       0,     0,   353,     0,   354,   355,   356,   357,     0,   358,
       0,   359,     0,     0,     0,   360,   361,     0,   362,     0,
       0,   363,   364,     0,     0,     0,   365,   366,   367,   368,
       0,     0,   369,   370,   371,     0,     0,   372,     0,     0,
       0,     0,   373,   374,   375,     0,     0,     0,   376,     0,
       0,     0,   377,   378,     0,   379,   380,     0,     0,     0,
     381,     0,   382,     0,     0,   383,   384,     0,     0,   385,
       0,     0,   386,   387,     0,     0,     0,     0,     0,   388,
     389,     0,   390,     0,   391,     0,   392,   393,     0,     0,
       0,     0,     0,     0,     0,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,     0,   412,   413,   414,     0,   415,
     416,   417,   418,     0,   419,   420,     0,     0,     0,     0,
     421,   422,   423,   424,   425,   426,     0,     0,   427,   428,
       0,   429,     0,   430,     0,   431,   432,   433,   434,   435,
     436,   437,   438,   439,     0,     0,   440,   441,     0,     0,
     442,   443,   444,   445,   446,     0,     0,     0,   447,   448,
       0,     0,     0,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   456,   457,   458,     0,   459,     0,   460,
       0,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,     0,   471,     0,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   481,   482,   483,     0,
       0,   484,     0,     0,     0,   485,   486,     0,   487,   488,
       0,     0,   489,   490,   491,   492,   493,     0,   494,   495,
       0,   496,   497,   498,     0,     0,   499,   500,   501,   502,
     503,   504,   505,   506,     0,   507,     0,   508,   509,     0,
     510,   511,   512,     0,   513,     0,     0,   514,   515,   516,
     517,     0,   518,     0,   519,   520,   521,   522,   523,     0,
     524,   525,     0,     0,     0,   526,   527,   528,   529,     0,
       0,     0,   530,     0,     0,     0,   531,     0,   532,   533,
     534,   535,     0,   536,   537,   538,   539,   540,     0,     0,
       0,     0,     0,   541,   542,   543,     0,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,   550,
     551,   552,   553,     0,     0,   554,   555,     0,     0,   556,
     557,   558,   559,   560,   561,     0,     0,   562,   563,   564,
     565,     0,   566,   567,     0,     0,   568,   569,   570,   571,
       0,     0,   572,   573,     0,   574,   575,   576,   577,     0,
       0,     0,     0,     0,   578,   579,     0,     0,     0,   580,
     581,   582,     0,     0,   583,   584,     0,   585,   586,     0,
     587,   588,     0,     0,   589,     0,     0,   590,     0,   591,
       0,   592,   593,     0,     0,     0,     0,     0,   594,     0,
     595,     0,     0,   596,     0,     0,     0,   597,     0,   598,
     599,   600,   601,     0,     0,     0,     0,     0,     0,   602,
     603,   604,     0,   605,   606,   607,   608,     0,     0,   609,
       0,     0,   610,   611,   612,   613,   614,     0,   615,     0,
       0,     0,     0,     0,     0,     0,     0,   616,   617,   618,
       0,   619,   620,   621,     0,   622,     0,     0,   623,     0,
     624,     0,     0,     0,     0,     0,     0,   625,   626,     0,
       0,   627,     0,   628,     0,   629,   630,     0,     0,     0,
     631,   632,   633,   634,   635,   636,   637,   638,     0,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,     0,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,     0,   673,   674,   675,   676,   677,
     678,   679,     0,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   243,   244,     0,   245,   246,   247,
     248,   249,     0,     0,   250,     0,     0,  1282,     0,   251,
       0,     0,   252,     0,   253,   254,   255,   256,   257,   258,
       0,   259,     0,     0,     0,   260,     0,     0,     0,   261,
       0,     0,   262,   263,   264,     0,   265,     0,   266,   267,
       0,     0,   268,     0,     0,   269,   270,     0,   271,   272,
     273,     0,   274,     0,   275,   276,   277,   278,   279,   280,
       0,   281,   282,     0,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,     0,   294,   295,     0,   296,
     297,   298,   299,   300,     0,     0,     0,   301,     0,     0,
       0,     0,   302,     0,     0,   303,     0,     0,     0,   304,
     305,   306,     0,     0,   307,     0,     0,     0,     0,   308,
     309,     0,     0,     0,     0,   310,   311,     0,   312,     0,
       0,     0,     0,     0,   313,   314,   315,   316,   317,     0,
       0,     0,   318,     0,     0,   319,   320,   321,     0,     0,
       0,   322,     0,   323,   324,     0,   325,   326,   327,     0,
       0,   328,   329,     0,   330,   331,   332,   333,   334,   335,
       0,     0,   336,   337,   338,   339,   340,     0,     0,   341,
     342,     0,   343,   344,   345,   346,   347,     0,     0,   348,
     349,     0,     0,     0,   350,   351,     0,   352,     0,     0,
       0,   353,     0,   354,   355,   356,   357,     0,   358,     0,
     359,     0,     0,     0,   360,   361,     0,   362,     0,     0,
     363,   364,     0,     0,     0,   365,   366,   367,   368,     0,
       0,   369,   370,   371,     0,     0,   372,     0,     0,     0,
       0,   373,   374,   375,     0,     0,     0,   376,     0,     0,
       0,   377,   378,     0,   379,   380,     0,     0,     0,   381,
       0,   382,     0,     0,   383,   384,     0,     0,   385,     0,
       0,   386,   387,     0,     0,     0,     0,     0,   388,   389,
       0,   390,     0,   391,     0,   392,   393,     0,     0,     0,
       0,     0,     0,     0,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,   413,   414,     0,   415,   416,
     417,   418,     0,   419,   420,     0,     0,     0,     0,   421,
     422,   423,   424,   425,   426,     0,     0,   427,   428,     0,
     429,     0,   430,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,     0,     0,   440,   441,     0,     0,   442,
     443,   444,   445,   446,     0,     0,     0,   447,   448,     0,
       0,     0,   449,     0,   450,   451,     0,   452,   453,   454,
       0,     0,   455,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   456,   457,   458,     0,   459,     0,   460,     0,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
       0,   471,     0,   472,   473,   474,     0,   475,     0,   476,
     477,   478,   479,   480,     0,   481,   482,   483,     0,     0,
     484,     0,     0,     0,   485,   486,     0,   487,   488,     0,
       0,   489,   490,   491,   492,   493,     0,   494,   495,     0,
     496,   497,   498,     0,     0,   499,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,     0,   510,
     511,   512,     0,   513,     0,     0,   514,   515,   516,   517,
       0,   518,     0,   519,   520,   521,   522,   523,     0,   524,
     525,     0,     0,     0,   526,   527,   528,   529,     0,     0,
       0,   530,     0,     0,     0,   531,     0,   532,   533,   534,
     535,     0,   536,   537,   538,   539,   540,     0,     0,     0,
       0,     0,   541,   542,   543,     0,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,   550,   551,
     552,   553,     0,     0,   554,   555,     0,     0,   556,   557,
     558,   559,   560,   561,     0,     0,   562,   563,   564,   565,
       0,   566,   567,     0,     0,   568,   569,   570,   571,     0,
       0,   572,   573,     0,   574,   575,   576,   577,     0,     0,
       0,     0,     0,   578,   579,     0,     0,     0,   580,   581,
     582,     0,     0,   583,   584,     0,   585,   586,     0,   587,
     588,     0,     0,   589,     0,     0,   590,     0,   591,     0,
     592,   593,     0,     0,     0,     0,     0,   594,     0,   595,
       0,     0,   596,     0,     0,     0,   597,     0,   598,   599,
     600,   601,     0,     0,     0,     0,     0,     0,   602,   603,
     604,     0,   605,   606,   607,   608,     0,     0,   609,     0,
       0,   610,   611,   612,   613,   614,     0,   615,     0,     0,
       0,     0,     0,     0,     0,     0,   616,   617,   618,     0,
     619,   620,   621,     0,   622,     0,     0,   623,     0,   624,
       0,     0,     0,     0,     0,     0,   625,   626,     0,     0,
     627,     0,   628,     0,   629,   630,     0,     0,     0,   631,
     632,   633,   634,   635,   636,   637,   638,     0,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,     0,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,     0,   673,   674,   675,   676,   677,   678,
     679,     0,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   243,   244,     0,   245,   246,   247,   248,
     249,     0,     0,   250,     0,     0,  3204,     0,   251,     0,
       0,   252,     0,   253,   254,   255,   256,   257,   258,     0,
     259,     0,     0,     0,   260,     0,     0,     0,   261,     0,
       0,   262,   263,   264,     0,   265,     0,   266,   267,     0,
       0,   268,     0,     0,   269,   270,     0,   271,   272,   273,
       0,   274,     0,   275,   276,   277,   278,   279,   280,     0,
     281,   282,     0,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,   294,   295,     0,   296,   297,
     298,   299,   300,     0,     0,     0,   301,     0,     0,     0,
       0,   302,     0,     0,   303,     0,     0,     0,   304,   305,
     306,     0,     0,   307,     0,     0,     0,     0,   308,   309,
       0,     0,     0,     0,   310,   311,     0,   312,     0,     0,
       0,     0,     0,   313,   314,   315,   316,   317,     0,     0,
       0,   318,     0,     0,   319,   320,   321,     0,     0,     0,
     322,     0,   323,   324,     0,   325,   326,   327,     0,     0,
     328,   329,     0,   330,   331,   332,   333,   334,   335,     0,
       0,   336,   337,   338,   339,   340,     0,     0,   341,   342,
       0,   343,   344,   345,   346,   347,     0,     0,   348,   349,
       0,     0,     0,   350,   351,     0,   352,     0,     0,     0,
     353,     0,   354,   355,   356,   357,     0,   358,     0,   359,
       0,     0,     0,   360,   361,     0,   362,     0,     0,   363,
     364,     0,     0,     0,   365,   366,   367,   368,     0,     0,
     369,   370,   371,     0,     0,   372,     0,     0,     0,     0,
     373,   374,   375,     0,     0,     0,   376,     0,     0,     0,
     377,   378,     0,   379,   380,     0,     0,     0,   381,     0,
     382,     0,     0,   383,   384,     0,     0,   385,     0,     0,
     386,   387,     0,     0,     0,     0,     0,   388,   389,     0,
     390,     0,   391,     0,   392,   393,     0,     0,     0,     0,
       0,     0,     0,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,     0,   412,   413,   414,     0,   415,   416,   417,
     418,     0,   419,   420,     0,     0,     0,     0,   421,   422,
     423,   424,   425,   426,     0,     0,   427,   428,     0,   429,
       0,   430,     0,   431,   432,   433,   434,   435,   436,   437,
     438,   439,     0,     0,   440,   441,     0,     0,   442,   443,
     444,   445,   446,     0,     0,     0,   447,   448,     0,     0,
       0,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   456,   457,   458,     0,   459,     0,   460,     0,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,     0,
     471,     0,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   481,   482,   483,     0,     0,   484,
       0,     0,     0,   485,   486,     0,   487,   488,     0,     0,
     489,   490,   491,   492,   493,     0,   494,   495,     0,   496,
     497,   498,     0,     0,   499,   500,   501,   502,   503,   504,
     505,   506,     0,   507,     0,   508,   509,     0,   510,   511,
     512,     0,   513,     0,     0,   514,   515,   516,   517,     0,
     518,     0,   519,   520,   521,   522,   523,     0,   524,   525,
       0,     0,     0,   526,   527,   528,   529,     0,     0,     0,
     530,     0,     0,     0,   531,     0,   532,   533,   534,   535,
       0,   536,   537,   538,   539,   540,     0,     0,     0,     0,
       0,   541,   542,   543,     0,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,   550,   551,   552,
     553,     0,     0,   554,   555,     0,     0,   556,   557,   558,
     559,   560,   561,     0,     0,   562,   563,   564,   565,     0,
     566,   567,     0,     0,   568,   569,   570,   571,     0,     0,
     572,   573,     0,   574,   575,   576,   577,     0,     0,     0,
       0,     0,   578,   579,     0,     0,     0,   580,   581,   582,
       0,     0,   583,   584,     0,   585,   586,     0,   587,   588,
       0,     0,   589,     0,     0,   590,     0,   591,     0,   592,
     593,     0,     0,     0,     0,     0,   594,     0,   595,     0,
       0,   596,     0,     0,     0,   597,     0,   598,   599,   600,
     601,     0,     0,     0,     0,     0,     0,   602,   603,   604,
       0,   605,   606,   607,   608,     0,     0,   609,     0,     0,
     610,   611,   612,   613,   614,     0,   615,     0,     0,     0,
       0,     0,     0,     0,     0,   616,   617,   618,     0,   619,
     620,   621,     0,   622,     0,     0,   623,     0,   624,     0,
       0,     0,     0,     0,     0,   625,   626,     0,     0,   627,
       0,   628,     0,   629,   630,     0,     0,     0,   631,   632,
     633,   634,   635,   636,   637,   638,     0,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,     0,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,     0,   673,   674,   675,   676,   677,   678,   679,
       0,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   243,   244,     0,   245,   246,   247,   248,   249,
       0,     0,   250,     0,     0,  3539,     0,   251,     0,     0,
     252,     0,   253,   254,   255,   256,   257,   258,     0,   259,
       0,     0,     0,   260,     0,     0,     0,   261,     0,     0,
     262,   263,   264,     0,   265,     0,   266,   267,     0,     0,
     268,     0,     0,   269,   270,     0,   271,   272,   273,     0,
     274,     0,   275,   276,   277,   278,   279,   280,     0,   281,
     282,     0,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,     0,   294,   295,     0,   296,   297,   298,
     299,   300,     0,     0,     0,   301,     0,     0,     0,     0,
     302,     0,     0,   303,     0,     0,     0,   304,   305,   306,
       0,     0,   307,     0,     0,     0,     0,   308,   309,     0,
       0,     0,     0,   310,   311,     0,   312,     0,     0,     0,
       0,     0,   313,   314,   315,   316,   317,     0,     0,     0,
     318,     0,     0,   319,   320,   321,     0,     0,     0,   322,
       0,   323,   324,     0,   325,   326,   327,     0,     0,   328,
     329,     0,   330,   331,   332,   333,   334,   335,     0,     0,
     336,   337,   338,   339,   340,     0,     0,   341,   342,     0,
     343,   344,   345,   346,   347,     0,     0,   348,   349,     0,
       0,     0,   350,   351,     0,   352,     0,     0,     0,   353,
       0,   354,   355,   356,   357,     0,   358,     0,   359,     0,
       0,     0,   360,   361,     0,   362,     0,     0,   363,   364,
       0,     0,     0,   365,   366,   367,   368,     0,     0,   369,
     370,   371,     0,     0,   372,     0,     0,     0,     0,   373,
     374,   375,     0,     0,     0,   376,     0,     0,     0,   377,
     378,     0,   379,   380,     0,     0,     0,   381,     0,   382,
       0,     0,   383,   384,     0,     0,   385,     0,     0,   386,
     387,     0,     0,     0,     0,     0,   388,   389,     0,   390,
       0,   391,     0,   392,   393,     0,     0,     0,     0,     0,
       0,     0,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,     0,   412,   413,   414,     0,   415,   416,   417,   418,
       0,   419,   420,     0,     0,     0,     0,   421,   422,   423,
     424,   425,   426,     0,     0,   427,   428,     0,   429,     0,
     430,     0,   431,   432,   433,   434,   435,   436,   437,   438,
     439,     0,     0,   440,   441,     0,     0,   442,   443,   444,
     445,   446,     0,     0,     0,   447,   448,     0,     0,     0,
     449,     0,   450,   451,     0,   452,   453,   454,     0,     0,
     455,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     456,   457,   458,     0,   459,     0,   460,     0,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,     0,   471,
       0,   472,   473,   474,     0,   475,     0,   476,   477,   478,
     479,   480,     0,   481,   482,   483,     0,     0,   484,     0,
       0,     0,   485,   486,     0,   487,   488,     0,     0,   489,
     490,   491,   492,   493,     0,   494,   495,     0,   496,   497,
     498,     0,     0,   499,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,     0,   510,   511,   512,
       0,   513,     0,     0,   514,   515,   516,   517,     0,   518,
       0,   519,   520,   521,   522,   523,     0,   524,   525,     0,
       0,     0,   526,   527,   528,   529,     0,     0,     0,   530,
       0,     0,     0,   531,     0,   532,   533,   534,   535,     0,
     536,   537,   538,   539,   540,     0,     0,     0,     0,     0,
     541,   542,   543,     0,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,   550,   551,   552,   553,
       0,     0,   554,   555,     0,     0,   556,   557,   558,   559,
     560,   561,     0,     0,   562,   563,   564,   565,     0,   566,
     567,     0,     0,   568,   569,   570,   571,     0,     0,   572,
     573,     0,   574,   575,   576,   577,     0,     0,     0,     0,
       0,   578,   579,     0,     0,     0,   580,   581,   582,     0,
       0,   583,   584,     0,   585,   586,     0,   587,   588,     0,
       0,   589,     0,     0,   590,     0,   591,     0,   592,   593,
       0,     0,     0,     0,     0,   594,     0,   595,     0,     0,
     596,     0,     0,     0,   597,     0,   598,   599,   600,   601,
       0,     0,     0,     0,     0,     0,   602,   603,   604,     0,
     605,   606,   607,   608,     0,     0,   609,     0,     0,   610,
     611,   612,   613,   614,     0,   615,     0,     0,     0,     0,
       0,     0,     0,     0,   616,   617,   618,     0,   619,   620,
     621,     0,   622,     0,     0,   623,     0,   624,     0,     0,
       0,     0,     0,     0,   625,   626,     0,     0,   627,     0,
     628,     0,   629,   630,     0,     0,     0,   631,   632,   633,
     634,   635,   636,   637,   638,     0,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,     0,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,     0,   673,   674,   675,   676,   677,   678,   679,     0,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   243,   244,     0,   245,   246,   247,   248,   249,     0,
       0,   250,     0,     0,  4290,     0,   251,     0,     0,   252,
       0,   253,   254,   255,   256,   257,   258,     0,   259,     0,
       0,     0,   260,     0,     0,     0,   261,     0,     0,   262,
     263,   264,     0,   265,     0,   266,   267,     0,     0,   268,
       0,     0,   269,   270,     0,   271,   272,   273,     0,   274,
       0,   275,   276,   277,   278,   279,   280,     0,   281,   282,
       0,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,     0,   294,   295,     0,   296,   297,   298,   299,
     300,     0,     0,     0,   301,     0,     0,     0,     0,   302,
       0,     0,   303,     0,     0,     0,   304,   305,   306,     0,
       0,   307,     0,     0,     0,     0,   308,   309,     0,     0,
       0,     0,   310,   311,     0,   312,     0,     0,     0,     0,
       0,   313,   314,   315,   316,   317,     0,     0,     0,   318,
       0,     0,   319,   320,   321,     0,     0,     0,   322,     0,
     323,   324,     0,   325,   326,   327,     0,     0,   328,   329,
       0,   330,   331,   332,   333,   334,   335,     0,     0,   336,
     337,   338,   339,   340,     0,     0,   341,   342,     0,   343,
     344,   345,   346,   347,     0,     0,   348,   349,     0,     0,
       0,   350,   351,     0,   352,     0,     0,     0,   353,     0,
     354,   355,   356,   357,     0,   358,     0,   359,     0,     0,
       0,   360,   361,     0,   362,     0,     0,   363,   364,     0,
       0,     0,   365,   366,   367,   368,     0,     0,   369,   370,
     371,     0,     0,   372,     0,     0,     0,     0,   373,   374,
     375,     0,     0,     0,   376,     0,     0,     0,   377,   378,
       0,   379,   380,     0,     0,     0,   381,     0,   382,     0,
       0,   383,   384,     0,     0,   385,     0,     0,   386,   387,
       0,     0,     0,     0,     0,   388,   389,     0,   390,     0,
     391,     0,   392,   393,     0,     0,     0,     0,     0,     0,
       0,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
       0,   412,   413,   414,     0,   415,   416,   417,   418,     0,
     419,   420,     0,     0,     0,     0,   421,   422,   423,   424,
     425,   426,     0,     0,   427,   428,     0,   429,     0,   430,
       0,   431,   432,   433,   434,   435,   436,   437,   438,   439,
       0,     0,   440,   441,     0,     0,   442,   443,   444,   445,
     446,     0,     0,     0,   447,   448,     0,     0,     0,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   456,
     457,   458,     0,   459,     0,   460,     0,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,     0,   471,     0,
     472,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   481,   482,   483,     0,     0,   484,     0,     0,
       0,   485,   486,     0,   487,   488,     0,     0,   489,   490,
     491,   492,   493,     0,   494,   495,     0,   496,   497,   498,
       0,     0,   499,   500,   501,   502,   503,   504,   505,   506,
       0,   507,     0,   508,   509,     0,   510,   511,   512,     0,
     513,     0,     0,   514,   515,   516,   517,     0,   518,     0,
     519,   520,   521,   522,   523,     0,   524,   525,     0,     0,
       0,   526,   527,   528,   529,     0,     0,     0,   530,     0,
       0,     0,   531,     0,   532,   533,   534,   535,     0,   536,
     537,   538,   539,   540,     0,     0,     0,     0,     0,   541,
     542,   543,     0,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,   549,   550,   551,   552,   553,     0,
       0,   554,   555,     0,     0,   556,   557,   558,   559,   560,
     561,     0,     0,   562,   563,   564,   565,     0,   566,   567,
       0,     0,   568,   569,   570,   571,     0,     0,   572,   573,
       0,   574,   575,   576,   577,     0,     0,     0,     0,     0,
     578,   579,     0,     0,     0,   580,   581,   582,     0,     0,
     583,   584,     0,   585,   586,     0,   587,   588,     0,     0,
     589,     0,     0,   590,     0,   591,     0,   592,   593,     0,
       0,     0,     0,     0,   594,     0,   595,     0,     0,   596,
       0,     0,     0,   597,     0,   598,   599,   600,   601,     0,
       0,     0,     0,     0,     0,   602,   603,   604,     0,   605,
     606,   607,   608,     0,     0,   609,     0,     0,   610,   611,
     612,   613,   614,     0,   615,     0,     0,     0,     0,     0,
       0,     0,     0,   616,   617,   618,     0,   619,   620,   621,
       0,   622,     0,     0,   623,     0,   624,     0,     0,     0,
       0,     0,     0,   625,   626,     0,     0,   627,     0,   628,
       0,   629,   630,     0,     0,     0,   631,   632,   633,   634,
     635,   636,   637,   638,     0,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
       0,   673,   674,   675,   676,   677,   678,   679,     0,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
       0,     0,     0,     0,     0,   243,   244,  2128,   245,   246,
     247,   248,   249,     0,     0,   250,     0,     0,     0,     0,
     251,     0,     0,   252,     0,   253,   254,   255,   256,   257,
     258,     0,   259,     0,     0,     0,   260,     0,     0,     0,
     261,     0,     0,   262,   263,   264,     0,   265,     0,   266,
     267,     0,     0,   268,     0,     0,   269,   270,     0,   271,
     272,   273,     0,   274,     0,   275,   276,   277,   278,   279,
     280,     0,   281,   282,     0,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,   294,   295,     0,
     296,   297,   298,   299,   300,     0,     0,     0,   301,     0,
       0,     0,     0,   302,     0,     0,   303,     0,     0,     0,
     304,   305,   306,     0,     0,   307,     0,     0,     0,     0,
     308,   309,     0,     0,     0,     0,   310,   311,     0,   312,
       0,     0,     0,     0,     0,   313,   314,   315,   316,   317,
       0,     0,     0,   318,     0,     0,   319,   320,   321,     0,
       0,     0,   322,     0,   323,   324,     0,   325,   326,   327,
       0,     0,   328,   329,     0,   330,   331,   332,   333,   334,
     335,     0,     0,   336,   337,   338,   339,   340,     0,     0,
     341,   342,     0,   343,   344,   345,   346,   347,     0,     0,
     348,   349,     0,     0,     0,   350,   351,     0,   352,     0,
       0,     0,   353,     0,   354,   355,   356,   357,     0,   358,
       0,   359,     0,     0,     0,   360,   361,     0,   362,     0,
       0,   363,   364,     0,     0,     0,   365,   366,   367,   368,
       0,     0,   369,   370,   371,     0,     0,   372,     0,     0,
       0,     0,   373,   374,   375,     0,     0,     0,   376,     0,
       0,     0,   377,   378,     0,   379,   380,     0,     0,     0,
     381,     0,   382,     0,     0,   383,   384,     0,     0,   385,
       0,     0,   386,   387,     0,     0,     0,     0,     0,   388,
     389,     0,   390,     0,   391,     0,   392,   393,     0,     0,
       0,     0,     0,     0,     0,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,     0,   412,   413,   414,     0,   415,
     416,   417,   418,     0,   419,   420,     0,     0,     0,     0,
     421,   422,   423,   424,   425,   426,     0,     0,   427,   428,
       0,   429,     0,   430,     0,   431,   432,   433,   434,   435,
     436,   437,   438,   439,     0,     0,   440,   441,     0,     0,
     442,   443,   444,   445,   446,     0,     0,     0,   447,   448,
       0,     0,     0,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   456,   457,   458,     0,   459,     0,   460,
       0,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,     0,   471,     0,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   481,   482,   483,     0,
       0,   484,     0,     0,     0,   485,   486,     0,   487,   488,
       0,     0,   489,   490,   491,   492,   493,     0,   494,   495,
       0,   496,   497,   498,     0,     0,   499,   500,   501,   502,
     503,   504,   505,   506,     0,   507,     0,   508,   509,     0,
     510,   511,   512,     0,   513,     0,     0,   514,   515,   516,
     517,     0,   518,     0,   519,   520,   521,   522,   523,     0,
     524,   525,     0,     0,     0,   526,   527,   528,   529,     0,
       0,     0,   530,     0,     0,     0,   531,     0,   532,   533,
     534,   535,     0,   536,   537,   538,   539,   540,     0,     0,
       0,     0,     0,   541,   542,   543,     0,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,   550,
     551,   552,   553,     0,     0,   554,   555,     0,     0,   556,
     557,   558,   559,   560,   561,     0,     0,   562,   563,   564,
     565,     0,   566,   567,     0,     0,   568,   569,   570,   571,
       0,     0,   572,   573,     0,   574,   575,   576,   577,     0,
       0,     0,     0,     0,   578,   579,     0,     0,     0,   580,
     581,   582,     0,     0,   583,   584,     0,   585,   586,     0,
     587,   588,     0,     0,   589,     0,     0,   590,     0,   591,
       0,   592,   593,     0,     0,     0,     0,     0,   594,     0,
     595,     0,     0,   596,     0,     0,     0,   597,     0,   598,
     599,   600,   601,     0,     0,     0,     0,     0,     0,   602,
     603,   604,     0,   605,   606,   607,   608,     0,     0,   609,
       0,     0,   610,   611,   612,   613,   614,     0,   615,     0,
       0,     0,     0,     0,     0,     0,     0,   616,   617,   618,
       0,   619,   620,   621,     0,   622,     0,     0,   623,     0,
     624,     0,     0,     0,     0,     0,     0,   625,   626,     0,
       0,   627,     0,   628,     0,   629,   630,     0,     0,     0,
     631,   632,   633,   634,   635,   636,   637,   638,     0,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,     0,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,     0,   673,   674,   675,   676,   677,
     678,   679,     0,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,     0,     0,     0,     0,     0,   243,
     244,  2921,   245,   246,   247,   248,   249,     0,     0,   250,
       0,     0,     0,     0,   251,     0,     0,   252,     0,   253,
     254,   255,   256,   257,   258,     0,   259,     0,     0,     0,
     260,     0,     0,     0,   261,     0,     0,   262,   263,   264,
       0,   265,     0,   266,   267,     0,     0,   268,     0,     0,
     269,   270,     0,   271,   272,   273,     0,   274,     0,   275,
     276,   277,   278,   279,   280,     0,   281,   282,     0,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,   294,   295,     0,   296,   297,   298,   299,   300,     0,
       0,     0,   301,     0,     0,     0,     0,   302,     0,     0,
     303,     0,     0,     0,   304,   305,   306,     0,     0,   307,
       0,     0,     0,     0,   308,   309,     0,     0,     0,     0,
     310,   311,     0,   312,     0,     0,     0,     0,     0,   313,
     314,   315,   316,   317,     0,     0,     0,   318,     0,     0,
     319,   320,   321,     0,     0,     0,   322,     0,   323,   324,
       0,   325,   326,   327,     0,     0,   328,   329,     0,   330,
     331,   332,   333,   334,   335,     0,     0,   336,   337,   338,
     339,   340,     0,     0,   341,   342,     0,   343,   344,   345,
     346,   347,     0,     0,   348,   349,     0,     0,     0,   350,
     351,     0,   352,     0,     0,     0,   353,     0,   354,   355,
     356,   357,     0,   358,     0,   359,     0,     0,     0,   360,
     361,     0,   362,     0,     0,   363,   364,     0,     0,     0,
     365,   366,   367,   368,     0,     0,   369,   370,   371,     0,
       0,   372,     0,     0,     0,     0,   373,   374,   375,     0,
       0,     0,   376,     0,     0,     0,   377,   378,     0,   379,
     380,     0,     0,     0,   381,     0,   382,     0,     0,   383,
     384,     0,     0,   385,     0,     0,   386,   387,     0,     0,
       0,     0,     0,   388,   389,     0,   390,     0,   391,     0,
     392,   393,     0,     0,     0,     0,     0,     0,     0,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,     0,   412,
     413,   414,     0,   415,   416,   417,   418,     0,   419,   420,
       0,     0,     0,     0,   421,   422,   423,   424,   425,   426,
       0,     0,   427,   428,     0,   429,     0,   430,     0,   431,
     432,   433,   434,   435,   436,   437,   438,   439,     0,     0,
     440,   441,     0,     0,   442,   443,   444,   445,   446,     0,
       0,     0,   447,   448,     0,     0,     0,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   456,   457,   458,
       0,   459,     0,   460,     0,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,     0,   471,     0,   472,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     481,   482,   483,     0,     0,   484,     0,     0,     0,   485,
     486,     0,   487,   488,     0,     0,   489,   490,   491,   492,
     493,     0,   494,   495,     0,   496,   497,   498,     0,     0,
     499,   500,   501,   502,   503,   504,   505,   506,     0,   507,
       0,   508,   509,     0,   510,   511,   512,     0,   513,     0,
       0,   514,   515,   516,   517,     0,   518,     0,   519,   520,
     521,   522,   523,     0,   524,   525,     0,     0,     0,   526,
     527,   528,   529,     0,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,   534,   535,     0,   536,   537,   538,
     539,   540,     0,     0,     0,     0,     0,   541,   542,   543,
       0,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,   550,   551,   552,   553,     0,     0,   554,
     555,     0,     0,   556,   557,   558,   559,   560,   561,     0,
       0,   562,   563,   564,   565,     0,   566,   567,     0,     0,
     568,   569,   570,   571,     0,     0,   572,   573,     0,   574,
     575,   576,   577,     0,     0,     0,     0,     0,   578,   579,
       0,     0,     0,   580,   581,   582,     0,     0,   583,   584,
       0,   585,   586,     0,   587,   588,     0,     0,   589,     0,
       0,   590,     0,   591,     0,   592,   593,     0,     0,     0,
       0,     0,   594,     0,   595,     0,     0,   596,     0,     0,
       0,   597,     0,   598,   599,   600,   601,     0,     0,     0,
       0,     0,     0,   602,   603,   604,     0,   605,   606,   607,
     608,     0,     0,   609,     0,     0,   610,   611,   612,   613,
     614,     0,   615,     0,     0,     0,     0,     0,     0,     0,
       0,   616,   617,   618,     0,   619,   620,   621,     0,   622,
       0,     0,   623,     0,   624,     0,     0,     0,     0,     0,
       0,   625,   626,     0,     0,   627,     0,   628,     0,   629,
     630,     0,     0,     0,   631,   632,   633,   634,   635,   636,
     637,   638,     0,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,     0,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,     0,   673,
     674,   675,   676,   677,   678,   679,     0,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,     0,     0,
       0,     0,     0,   243,   244,  3571,   245,   246,   247,   248,
     249,     0,     0,   250,     0,     0,     0,     0,   251,     0,
       0,   252,     0,   253,   254,   255,   256,   257,   258,     0,
     259,     0,     0,     0,   260,     0,     0,     0,   261,     0,
       0,   262,   263,   264,     0,   265,     0,   266,   267,     0,
       0,   268,     0,     0,   269,   270,     0,   271,   272,   273,
       0,   274,     0,   275,   276,   277,   278,   279,   280,     0,
     281,   282,     0,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,   294,   295,     0,   296,   297,
     298,   299,   300,     0,     0,     0,   301,     0,     0,     0,
       0,   302,     0,     0,   303,     0,     0,     0,   304,   305,
     306,     0,     0,   307,     0,     0,     0,     0,   308,   309,
       0,     0,     0,     0,   310,   311,     0,   312,     0,     0,
       0,     0,     0,   313,   314,   315,   316,   317,     0,     0,
       0,   318,     0,     0,   319,   320,   321,     0,     0,     0,
     322,     0,   323,   324,     0,   325,   326,   327,     0,     0,
     328,   329,     0,   330,   331,   332,   333,   334,   335,     0,
       0,   336,   337,   338,   339,   340,     0,     0,   341,   342,
       0,   343,   344,   345,   346,   347,     0,     0,   348,   349,
       0,     0,     0,   350,   351,     0,   352,     0,     0,     0,
     353,     0,   354,   355,   356,   357,     0,   358,     0,   359,
       0,     0,     0,   360,   361,     0,   362,     0,     0,   363,
     364,     0,     0,     0,   365,   366,   367,   368,     0,     0,
     369,   370,   371,     0,     0,   372,     0,     0,     0,     0,
     373,   374,   375,     0,     0,     0,   376,     0,     0,     0,
     377,   378,     0,   379,   380,     0,     0,     0,   381,     0,
     382,     0,     0,   383,   384,     0,     0,   385,     0,     0,
     386,   387,     0,     0,     0,     0,     0,   388,   389,     0,
     390,     0,   391,     0,   392,   393,     0,     0,     0,     0,
       0,     0,     0,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,     0,   412,   413,   414,     0,   415,   416,   417,
     418,     0,   419,   420,     0,     0,     0,     0,   421,   422,
     423,   424,   425,   426,     0,     0,   427,   428,     0,   429,
       0,   430,     0,   431,   432,   433,   434,   435,   436,   437,
     438,   439,     0,     0,   440,   441,     0,     0,   442,   443,
     444,   445,   446,     0,     0,     0,   447,   448,     0,     0,
       0,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   456,   457,   458,     0,   459,     0,   460,     0,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,     0,
     471,     0,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   481,   482,   483,     0,     0,   484,
       0,     0,     0,   485,   486,     0,   487,   488,     0,     0,
     489,   490,   491,   492,   493,     0,   494,   495,     0,   496,
     497,   498,     0,     0,   499,   500,   501,   502,   503,   504,
     505,   506,     0,   507,     0,   508,   509,     0,   510,   511,
     512,     0,   513,     0,     0,   514,   515,   516,   517,     0,
     518,     0,   519,   520,   521,   522,   523,     0,   524,   525,
       0,     0,     0,   526,   527,   528,   529,     0,     0,     0,
     530,     0,     0,     0,   531,     0,   532,   533,   534,   535,
       0,   536,   537,   538,   539,   540,     0,     0,     0,     0,
       0,   541,   542,   543,     0,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,   550,   551,   552,
     553,     0,     0,   554,   555,     0,     0,   556,   557,   558,
     559,   560,   561,     0,     0,   562,   563,   564,   565,     0,
     566,   567,     0,     0,   568,   569,   570,   571,     0,     0,
     572,   573,     0,   574,   575,   576,   577,     0,     0,     0,
       0,     0,   578,   579,     0,     0,     0,   580,   581,   582,
       0,     0,   583,   584,     0,   585,   586,     0,   587,   588,
       0,     0,   589,     0,     0,   590,     0,   591,     0,   592,
     593,     0,     0,     0,     0,     0,   594,     0,   595,     0,
       0,   596,     0,     0,     0,   597,     0,   598,   599,   600,
     601,     0,     0,     0,     0,     0,     0,   602,   603,   604,
       0,   605,   606,   607,   608,     0,     0,   609,     0,     0,
     610,   611,   612,   613,   614,     0,   615,     0,     0,     0,
       0,     0,     0,     0,     0,   616,   617,   618,     0,   619,
     620,   621,     0,   622,     0,     0,   623,     0,   624,     0,
       0,     0,     0,     0,     0,   625,   626,     0,     0,   627,
       0,   628,     0,   629,   630,     0,     0,     0,   631,   632,
     633,   634,   635,   636,   637,   638,     0,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,     0,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,     0,   673,   674,   675,   676,   677,   678,   679,
       0,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,     0,     0,     0,     0,     0,   243,   244,  3755,
     245,   246,   247,   248,   249,     0,     0,   250,     0,     0,
       0,     0,   251,     0,     0,   252,     0,   253,   254,   255,
     256,   257,   258,     0,   259,     0,     0,     0,   260,     0,
       0,     0,   261,     0,     0,   262,   263,   264,     0,   265,
       0,   266,   267,     0,     0,   268,     0,     0,   269,   270,
       0,   271,   272,   273,     0,   274,     0,   275,   276,   277,
     278,   279,   280,     0,   281,   282,     0,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,   294,
     295,     0,   296,   297,   298,   299,   300,     0,     0,     0,
     301,     0,     0,     0,     0,   302,     0,     0,   303,     0,
       0,     0,   304,   305,   306,     0,     0,   307,     0,     0,
       0,     0,   308,   309,     0,     0,     0,     0,   310,   311,
       0,   312,     0,     0,     0,     0,     0,   313,   314,   315,
     316,   317,     0,     0,     0,   318,     0,     0,   319,   320,
     321,     0,     0,     0,   322,     0,   323,   324,     0,   325,
     326,   327,     0,     0,   328,   329,     0,   330,   331,   332,
     333,   334,   335,     0,     0,   336,   337,   338,   339,   340,
       0,     0,   341,   342,     0,   343,   344,   345,   346,   347,
       0,     0,   348,   349,     0,     0,     0,   350,   351,     0,
     352,     0,     0,     0,   353,     0,   354,   355,   356,   357,
       0,   358,     0,   359,     0,     0,     0,   360,   361,     0,
     362,     0,     0,   363,   364,     0,     0,     0,   365,   366,
     367,   368,     0,     0,   369,   370,   371,     0,     0,   372,
       0,     0,     0,     0,   373,   374,   375,     0,     0,     0,
     376,     0,     0,     0,   377,   378,     0,   379,   380,     0,
       0,     0,   381,     0,   382,     0,     0,   383,   384,     0,
       0,   385,     0,     0,   386,   387,     0,     0,     0,     0,
       0,   388,   389,     0,   390,     0,   391,     0,   392,   393,
       0,     0,     0,     0,     0,     0,     0,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,     0,   412,   413,   414,
       0,   415,   416,   417,   418,     0,   419,   420,     0,     0,
       0,     0,   421,   422,   423,   424,   425,   426,     0,     0,
     427,   428,     0,   429,     0,   430,     0,   431,   432,   433,
     434,   435,   436,   437,   438,   439,     0,     0,   440,   441,
       0,     0,   442,   443,   444,   445,   446,     0,     0,     0,
     447,   448,     0,     0,     0,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   456,   457,   458,     0,   459,
       0,   460,     0,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,     0,   471,     0,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   481,   482,
     483,     0,     0,   484,     0,     0,     0,   485,   486,     0,
     487,   488,     0,     0,   489,   490,   491,   492,   493,     0,
     494,   495,     0,   496,   497,   498,     0,     0,   499,   500,
     501,   502,   503,   504,   505,   506,     0,   507,     0,   508,
     509,     0,   510,   511,   512,     0,   513,     0,     0,   514,
     515,   516,   517,     0,   518,     0,   519,   520,   521,   522,
     523,     0,   524,   525,     0,     0,     0,   526,   527,   528,
     529,     0,     0,     0,   530,     0,     0,     0,   531,     0,
     532,   533,   534,   535,     0,   536,   537,   538,   539,   540,
       0,     0,     0,     0,     0,   541,   542,   543,     0,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,   550,   551,   552,   553,     0,     0,   554,   555,     0,
       0,   556,   557,   558,   559,   560,   561,     0,     0,   562,
     563,   564,   565,     0,   566,   567,     0,     0,   568,   569,
     570,   571,     0,     0,   572,   573,     0,   574,   575,   576,
     577,     0,     0,     0,     0,     0,   578,   579,     0,     0,
       0,   580,   581,   582,     0,     0,   583,   584,     0,   585,
     586,     0,   587,   588,     0,     0,   589,     0,     0,   590,
       0,   591,     0,   592,   593,     0,     0,     0,     0,     0,
     594,     0,   595,     0,     0,   596,     0,     0,     0,   597,
       0,   598,   599,   600,   601,     0,     0,     0,     0,     0,
       0,   602,   603,   604,     0,   605,   606,   607,   608,     0,
       0,   609,     0,     0,   610,   611,   612,   613,   614,     0,
     615,     0,     0,     0,     0,     0,     0,     0,     0,   616,
     617,   618,     0,   619,   620,   621,     0,   622,     0,     0,
     623,     0,   624,     0,     0,     0,     0,     0,     0,   625,
     626,     0,     0,   627,     0,   628,     0,   629,   630,     0,
       0,     0,   631,   632,   633,   634,   635,   636,   637,   638,
       0,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,     0,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,     0,   673,   674,   675,
     676,   677,   678,   679,     0,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,     0,     0,     0,     0,
       0,   243,   244,  4142,   245,   246,   247,   248,   249,   937,
     938,   250,     0,     0,     0,     0,   251,     0,     0,   252,
       0,   253,   254,   255,   256,   257,   258,     0,   259,     0,
       0,     0,   260,     0,     0,     0,   261,     0,     0,   262,
     263,   264,     0,   265,     0,   266,   267,     0,     0,   268,
       0,     0,   269,   270,     0,   271,   272,   273,     0,   274,
       0,   275,   276,   277,   278,   279,   280,     0,   281,   282,
       0,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,     0,   294,   295,     0,   296,   297,   298,   299,
     300,     0,     0,     0,   301,   939,     0,     0,     0,   302,
       0,     0,   303,     0,     0,     0,   304,   305,   306,     0,
       0,   307,     0,     0,     0,     0,   308,   309,     0,     0,
       0,     0,   310,   311,     0,   312,   940,     0,     0,     0,
       0,   313,   314,   315,   316,   317,     0,     0,     0,   318,
     941,     0,   319,   320,   321,     0,     0,     0,   322,     0,
     323,   324,     0,   325,   326,   327,     0,     0,   328,   329,
       0,   330,   331,   942,   333,   334,   943,     0,     0,   336,
     337,   338,   339,   340,     0,     0,   341,   342,     0,   944,
     344,   345,   346,   347,     0,     0,   348,   349,     0,     0,
       0,   350,   351,     0,   352,     0,     0,     0,   353,     0,
     354,   355,   356,   357,     0,   358,   945,   359,     0,     0,
       0,   360,   361,     0,   362,     0,     0,   363,   364,     0,
       0,     0,   365,   366,   367,   368,     0,     0,   369,   370,
     371,   946,     0,   372,     0,     0,     0,   947,   373,   374,
     375,     0,     0,     0,   376,     0,     0,     0,   377,   378,
       0,   379,   380,     0,     0,     0,   381,     0,   382,     0,
       0,   383,   384,     0,     0,   385,     0,     0,   386,   387,
     948,     0,     0,     0,     0,   388,   389,     0,   390,     0,
     391,   949,   392,   393,     0,     0,     0,     0,     0,     0,
       0,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
       0,   412,   413,   414,     0,   415,   416,   417,   418,     0,
     419,   420,     0,     0,     0,     0,   421,   422,   423,   424,
     425,   426,     0,     0,   427,   428,     0,   429,     0,   430,
       0,   431,   432,   433,   434,   435,   436,   437,   438,   439,
       0,     0,   440,   441,     0,     0,   442,   443,   444,   445,
       0,     0,     0,     0,   447,   448,     0,     0,     0,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   456,
     457,   458,     0,   459,     0,   460,     0,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,     0,   471,     0,
     472,   473,   474,     0,   475,     0,   950,   477,   478,   479,
     951,     0,   481,   482,   483,     0,     0,   484,     0,     0,
       0,   485,   486,     0,   487,   488,   952,     0,   489,   490,
     491,   492,   493,     0,   953,   495,     0,   496,   497,   498,
       0,     0,   954,   500,   501,   502,   503,   504,   505,   506,
       0,   507,     0,   508,   509,     0,   510,   511,   512,     0,
     513,     0,     0,   514,   515,   516,   517,     0,   518,     0,
     519,   520,   521,   522,   523,     0,   524,   525,   955,     0,
       0,   526,   527,   528,   529,     0,     0,     0,   530,     0,
       0,   956,   957,     0,   532,   533,   534,   535,     0,   536,
     537,   538,   539,   540,     0,     0,     0,     0,     0,   541,
     542,   543,     0,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,   549,   550,   551,   552,   553,     0,
       0,   554,   555,     0,     0,   556,   557,   558,   559,   560,
     561,     0,     0,   958,   563,   564,   565,     0,   566,   567,
       0,     0,   568,   569,   570,   571,     0,   240,   572,   573,
       0,   574,   575,   576,   577,     0,     0,     0,     0,     0,
     578,   579,   959,     0,     0,   580,   581,   582,     0,     0,
     583,   584,     0,   585,   586,     0,   587,   588,     0,     0,
     589,     0,     0,   590,   960,   591,   961,   592,   593,     0,
       0,     0,     0,     0,   594,     0,   595,     0,     0,   596,
       0,     0,     0,   597,     0,   598,   599,   600,   601,     0,
       0,     0,     0,     0,     0,   602,   603,   604,     0,   605,
     606,   607,   608,     0,     0,   609,     0,     0,   610,   611,
     612,   613,   614,     0,   615,     0,     0,     0,     0,     0,
       0,     0,     0,   616,   617,   618,     0,   619,   620,   621,
       0,   622,     0,     0,   623,     0,   624,     0,     0,     0,
       0,     0,     0,   625,   626,     0,     0,   627,     0,   628,
       0,   629,   630,     0,     0,     0,   631,   632,   633,   634,
     635,   636,   637,     0,     0,   639,   640,   641,     0,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
       0,   673,   674,   675,   676,   677,   678,   679,     0,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     243,   244,     0,   245,   246,   247,   248,   249,  1502,   938,
     250,     0,     0,     0,     0,   251,     0,     0,   252,     0,
     253,   254,   255,   256,   257,   258,     0,   259,     0,     0,
       0,   260,     0,     0,     0,   261,     0,     0,   262,   263,
     264,     0,   265,     0,   266,   267,     0,     0,   268,     0,
       0,   269,   270,     0,   271,   272,   273,     0,   274,     0,
     275,   276,   277,   278,   279,   280,     0,   281,   282,     0,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,   294,   295,     0,   296,   297,   298,   299,   300,
       0,     0,     0,   301,   939,     0,     0,     0,   302,     0,
       0,   303,     0,     0,     0,   304,   305,   306,     0,     0,
     307,     0,     0,     0,     0,   308,   309,     0,     0,     0,
       0,   310,   311,     0,   312,   940,     0,     0,     0,     0,
     313,   314,   315,   316,   317,     0,     0,     0,   318,   941,
       0,   319,   320,   321,     0,     0,     0,   322,     0,   323,
     324,     0,   325,   326,   327,     0,     0,   328,   329,     0,
     330,   331,   942,   333,   334,   943,     0,     0,   336,   337,
     338,   339,   340,     0,     0,   341,   342,     0,   944,   344,
     345,   346,   347,     0,     0,   348,   349,     0,     0,     0,
     350,   351,     0,   352,     0,     0,     0,   353,     0,   354,
     355,   356,   357,     0,   358,   945,   359,     0,     0,     0,
     360,   361,     0,   362,     0,     0,   363,   364,     0,     0,
       0,   365,   366,   367,   368,     0,     0,   369,   370,   371,
     946,     0,   372,     0,     0,     0,   947,   373,   374,   375,
       0,     0,     0,   376,     0,     0,     0,   377,   378,     0,
     379,   380,     0,     0,     0,   381,     0,   382,     0,     0,
     383,   384,     0,     0,   385,     0,     0,   386,   387,   948,
       0,     0,     0,     0,   388,   389,     0,   390,     0,   391,
     949,   392,   393,     0,     0,     0,     0,     0,     0,     0,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,     0,
     412,   413,   414,     0,   415,   416,   417,   418,     0,   419,
     420,     0,     0,     0,     0,   421,   422,   423,   424,   425,
     426,     0,     0,   427,   428,     0,   429,     0,   430,     0,
     431,   432,   433,   434,   435,   436,   437,   438,   439,     0,
       0,   440,   441,     0,     0,   442,   443,   444,   445,     0,
       0,     0,     0,   447,   448,     0,     0,     0,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   456,   457,
     458,     0,   459,     0,   460,     0,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,     0,   471,     0,   472,
     473,   474,     0,   475,     0,   950,   477,   478,   479,  1503,
       0,   481,   482,   483,     0,     0,   484,     0,     0,     0,
     485,   486,     0,   487,   488,   952,     0,   489,   490,   491,
     492,   493,     0,   953,   495,     0,   496,   497,   498,     0,
       0,   954,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,     0,   510,   511,   512,     0,   513,
       0,     0,   514,   515,   516,   517,     0,   518,     0,   519,
     520,   521,   522,   523,     0,   524,   525,   955,     0,     0,
     526,   527,   528,   529,     0,     0,     0,   530,     0,     0,
     956,   957,     0,   532,   533,   534,   535,     0,   536,   537,
     538,   539,   540,     0,     0,     0,     0,     0,   541,   542,
     543,     0,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,   550,   551,   552,   553,     0,     0,
     554,   555,     0,     0,   556,   557,   558,   559,   560,   561,
       0,     0,   958,   563,   564,   565,     0,   566,   567,     0,
       0,   568,   569,   570,   571,     0,   240,   572,   573,     0,
     574,   575,   576,   577,     0,     0,     0,     0,     0,   578,
     579,   959,     0,     0,   580,   581,   582,     0,     0,   583,
     584,     0,   585,   586,     0,   587,   588,     0,     0,   589,
       0,     0,   590,   960,   591,   961,   592,   593,     0,     0,
       0,     0,     0,   594,     0,   595,     0,     0,   596,     0,
       0,     0,   597,     0,   598,   599,   600,   601,     0,     0,
       0,     0,     0,     0,   602,   603,   604,     0,   605,   606,
     607,   608,     0,     0,   609,     0,     0,   610,   611,   612,
     613,   614,     0,   615,     0,     0,     0,     0,     0,     0,
       0,     0,   616,   617,   618,     0,   619,   620,   621,     0,
     622,     0,     0,   623,     0,   624,     0,     0,     0,     0,
       0,     0,   625,   626,     0,     0,   627,     0,   628,     0,
     629,   630,     0,     0,     0,   631,   632,   633,   634,   635,
     636,   637,     0,     0,   639,   640,   641,     0,   643,   644,
     645,   646,   647,   648,     0,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,     0,
     673,   674,   675,   676,   677,   678,   679,     0,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   243,
     244,     0,   245,   246,   247,   248,   249,     0,   938,   250,
       0,     0,     0,     0,   251,     0,     0,   252,     0,   253,
     254,   255,   256,   257,   258,     0,   259,     0,     0,     0,
     260,     0,     0,     0,   261,     0,     0,   262,   263,   264,
       0,   265,     0,   266,   267,     0,     0,   268,     0,     0,
     269,   270,     0,   271,   272,   273,     0,   274,     0,   275,
     276,   277,   278,   279,   280,     0,   281,   282,     0,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,   294,   295,     0,   296,   297,   298,   299,   300,     0,
       0,     0,   301,   939,     0,     0,     0,   302,     0,     0,
     303,     0,     0,     0,   304,   305,   306,     0,     0,   307,
       0,     0,     0,     0,   308,   309,     0,     0,     0,     0,
     310,   311,     0,   312,   940,     0,     0,     0,     0,   313,
     314,   315,   316,   317,     0,     0,     0,   318,   941,     0,
     319,   320,   321,     0,     0,     0,   322,     0,   323,   324,
       0,   325,   326,   327,     0,     0,   328,   329,     0,   330,
     331,   942,   333,   334,   943,     0,     0,   336,   337,   338,
     339,   340,     0,     0,   341,   342,     0,   944,   344,   345,
     346,   347,     0,     0,   348,   349,     0,     0,     0,   350,
     351,     0,   352,     0,     0,     0,   353,     0,   354,   355,
     356,   357,     0,   358,   945,   359,     0,     0,     0,   360,
     361,     0,   362,     0,     0,   363,   364,     0,     0,     0,
     365,   366,   367,   368,     0,     0,   369,   370,   371,   946,
       0,   372,     0,     0,     0,   947,   373,   374,   375,     0,
       0,     0,   376,     0,     0,     0,   377,   378,     0,   379,
     380,     0,     0,     0,   381,     0,   382,     0,     0,   383,
     384,     0,     0,   385,     0,     0,   386,   387,   948,     0,
       0,     0,     0,   388,   389,     0,   390,     0,   391,   949,
     392,   393,     0,     0,     0,     0,     0,     0,     0,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,     0,   412,
     413,   414,     0,   415,   416,   417,   418,     0,   419,   420,
       0,     0,     0,     0,   421,   422,   423,   424,   425,   426,
       0,     0,   427,   428,     0,   429,     0,   430,     0,   431,
     432,   433,   434,   435,   436,   437,   438,   439,     0,     0,
     440,   441,     0,     0,   442,   443,   444,   445,     0,     0,
       0,     0,   447,   448,     0,     0,     0,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   456,   457,   458,
       0,   459,     0,   460,     0,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,     0,   471,     0,   472,   473,
     474,     0,   475,     0,   950,   477,   478,   479,     0,     0,
     481,   482,   483,     0,     0,   484,     0,     0,     0,   485,
     486,     0,   487,   488,   952,     0,   489,   490,   491,   492,
     493,     0,   953,   495,     0,   496,   497,   498,     0,     0,
     954,   500,   501,   502,   503,   504,   505,   506,     0,   507,
       0,   508,   509,     0,   510,   511,   512,     0,   513,     0,
       0,   514,   515,   516,   517,     0,   518,     0,   519,   520,
     521,   522,   523,     0,   524,   525,   955,     0,     0,   526,
     527,   528,   529,     0,     0,     0,   530,     0,     0,   956,
     957,     0,   532,   533,   534,   535,     0,   536,   537,   538,
     539,   540,     0,     0,     0,     0,     0,   541,   542,   543,
       0,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,   550,   551,   552,   553,     0,     0,   554,
     555,     0,     0,   556,   557,   558,   559,   560,   561,     0,
       0,   958,   563,   564,   565,     0,   566,   567,     0,     0,
     568,   569,   570,   571,     0,   240,   572,   573,     0,   574,
     575,   576,   577,     0,     0,     0,     0,     0,   578,   579,
     959,     0,     0,   580,   581,   582,     0,     0,   583,   584,
       0,   585,   586,     0,   587,   588,     0,     0,   589,     0,
       0,   590,   960,   591,   961,   592,   593,     0,     0,     0,
       0,     0,   594,     0,   595,     0,     0,   596,     0,     0,
       0,   597,     0,   598,   599,   600,   601,     0,     0,     0,
       0,     0,     0,   602,   603,   604,     0,   605,   606,   607,
     608,     0,     0,   609,     0,     0,   610,   611,   612,   613,
     614,     0,   615,     0,     0,     0,     0,     0,     0,     0,
       0,   616,   617,   618,     0,   619,   620,   621,     0,   622,
       0,     0,   623,     0,   624,     0,     0,     0,     0,     0,
       0,   625,   626,     0,     0,   627,     0,   628,     0,   629,
     630,     0,     0,     0,   631,   632,   633,   634,   635,   636,
     637,     0,     0,   639,   640,   641,     0,   643,   644,   645,
     646,   647,   648,     0,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,     0,   673,
     674,   675,   676,   677,   678,   679,     0,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   243,   244,
       0,   245,   246,   247,   248,   249,     0,     0,   250,     0,
       0,     0,     0,   251,     0,     0,   252,     0,   253,   254,
     255,   256,   257,   258,     0,   259,     0,     0,     0,   260,
       0,     0,     0,   261,     0,     0,   262,   263,   264,     0,
     265,     0,   266,   267,     0,     0,   268,     0,     0,   269,
     270,     0,   271,   272,   273,     0,   274,     0,   275,   276,
     277,   278,   279,   280,     0,   281,   282,     0,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
     294,   295,     0,   296,   297,   298,   299,   300,     0,     0,
       0,   301,     0,     0,     0,     0,   302,     0,     0,   303,
       0,     0,     0,   304,   305,   306,     0,     0,   307,     0,
       0,     0,     0,   308,   309,  3222,     0,     0,     0,   310,
     311,     0,   312,     0,     0,     0,     0,     0,   313,   314,
     315,   316,   317,     0,     0,     0,   318,     0,     0,   319,
     320,   321,     0,     0,     0,   322,     0,   323,   324,     0,
     325,   326,   327,     0,     0,   328,   329,     0,   330,   331,
     332,   333,   334,   335,     0,     0,   336,   337,   338,   339,
     340,     0,     0,   341,   342,     0,   343,   344,   345,   346,
     347,  3223,     0,   348,   349,     0,     0,     0,   350,   351,
       0,   352,     0,     0,     0,   353,     0,   354,   355,   356,
     357,     0,   358,     0,   359,     0,     0,     0,   360,   361,
       0,   362,  3224,     0,   363,   364,     0,     0,     0,   365,
     366,   367,   368,     0,     0,   369,   370,   371,     0,     0,
     372,     0,     0,     0,     0,   373,   374,   375,     0,     0,
       0,   376,     0,     0,     0,   377,   378,     0,   379,   380,
       0,     0,     0,   381,     0,   382,     0,     0,   383,   384,
       0,     0,   385,     0,     0,   386,   387,     0,     0,     0,
       0,     0,   388,   389,     0,   390,     0,   391,     0,   392,
     393,     0,     0,  3225,     0,     0,     0,     0,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,     0,   412,   413,
     414,     0,   415,   416,   417,   418,     0,   419,   420,     0,
       0,     0,     0,   421,   422,   423,   424,   425,   426,     0,
       0,   427,   428,     0,   429,     0,   430,     0,   431,   432,
     433,   434,   435,   436,   437,   438,   439,     0,     0,   440,
     441,     0,     0,   442,   443,   444,   445,   446,  1389,  1390,
       0,   447,   448,     0,     0,  3226,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   456,   457,   458,     0,
     459,     0,   460,     0,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,     0,   471,     0,   472,   473,   474,
       0,   475,     0,   476,   477,   478,   479,   480,     0,   481,
     482,   483,     0,     0,   484,     0,     0,     0,   485,   486,
       0,   487,   488,     0,     0,   489,   490,   491,   492,   493,
       0,   494,   495,     0,   496,   497,   498,     0,     0,   499,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,     0,   510,   511,   512,     0,   513,     0,     0,
     514,   515,   516,   517,     0,   518,     0,   519,   520,   521,
     522,   523,     0,   524,   525,     0,     0,     0,   526,   527,
     528,   529,     0,     0,     0,   530,     0,     0,     0,   531,
       0,   532,   533,   534,   535,     0,   536,   537,   538,   539,
     540,     0,     0,  5556,  1004,  5557,   541,   542,   543,     0,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,   550,   551,   552,   553,     0,     0,   554,   555,
       0,     0,   556,   557,   558,   559,   560,   561,     0,     0,
     562,   563,   564,   565,     0,   566,   567,     0,     0,   568,
     569,   570,   571,     0,     0,   572,   573,     0,   574,   575,
     576,   577,     0,     0,     0,     0,     0,   578,   579,     0,
       0,     0,   580,   581,   582,     0,  3227,   583,   584,     0,
     585,   586,     0,   587,   588,     0,     0,   589,     0,     0,
     590,     0,   591,     0,   592,   593,     0,     0,     0,     0,
       0,   594,     0,   595,     0,     0,   596,     0,     0,     0,
     597,     0,   598,   599,   600,   601,     0,     0,     0,     0,
       0,     0,   602,   603,   604,     0,   605,   606,   607,   608,
       0,     0,   609,     0,     0,   610,   611,   612,   613,   614,
       0,   615,     0,     0,     0,     0,     0,     0,     0,     0,
     616,   617,   618,     0,   619,   620,   621,     0,   622,     0,
       0,   623,     0,   624,     0,     0,     0,     0,     0,     0,
     625,   626,     0,     0,   627,     0,   628,     0,   629,   630,
       0,     0,     0,   631,   632,   633,   634,   635,   636,   637,
     638,     0,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,     0,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,     0,   673,   674,
     675,   676,   677,   678,   679,     0,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   243,   244,     0,
     245,   246,   247,   248,   249,     0,     0,   250,     0,     0,
    1363,  1364,   251,  1365,     0,   252,     0,   253,   254,   255,
     256,   257,   258,     0,   259,     0,     0,     0,   260,     0,
       0,     0,   261,     0,     0,   262,   263,   264,     0,   265,
       0,   266,   267,     0,     0,   268,     0,     0,   269,   270,
       0,   271,   272,   273,     0,   274,     0,   275,   276,   277,
     278,   279,   280,     0,   281,   282,     0,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,   294,
     295,     0,   296,   297,   298,   299,   300,     0,     0,     0,
     301,     0,     0,     0,     0,   302,     0,     0,   303,     0,
       0,     0,   304,   305,   306,     0,     0,   307,     0,     0,
       0,     0,   308,   309,     0,     0,     0,     0,   310,   311,
       0,   312,     0,     0,     0,     0,     0,   313,   314,   315,
     316,   317,     0,     0,     0,   318,     0,     0,   319,   320,
     321,     0,     0,     0,   322,     0,   323,   324,     0,   325,
     326,   327,     0,     0,   328,   329,     0,   330,   331,   332,
     333,   334,   335,     0,     0,   336,   337,   338,   339,   340,
       0,     0,   341,   342,     0,   343,   344,   345,   346,   347,
       0,     0,   348,   349,     0,     0,     0,   350,   351,     0,
     352,     0,     0,     0,   353,     0,   354,   355,   356,   357,
       0,   358,     0,   359,     0,     0,     0,   360,   361,     0,
     362,     0,     0,   363,   364,     0,     0,     0,   365,   366,
     367,   368,     0,     0,   369,   370,   371,     0,     0,   372,
       0,     0,     0,     0,   373,   374,   375,     0,     0,     0,
     376,     0,     0,     0,   377,   378,     0,   379,   380,     0,
       0,     0,   381,     0,   382,     0,     0,   383,   384,     0,
       0,   385,     0,     0,   386,   387,     0,     0,     0,     0,
       0,   388,   389,     0,   390,     0,   391,     0,   392,   393,
       0,     0,     0,     0,     0,     0,     0,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,     0,   412,   413,   414,
       0,   415,   416,   417,   418,     0,   419,   420,     0,     0,
       0,     0,   421,   422,   423,   424,   425,   426,     0,     0,
     427,   428,     0,   429,     0,   430,     0,   431,   432,   433,
     434,   435,   436,   437,   438,   439,     0,     0,   440,   441,
       0,     0,   442,   443,   444,   445,   446,     0,     0,     0,
     447,   448,     0,     0,     0,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,     0,     0,  1366,     0,
       0,  1367,     0,     0,     0,   456,   457,   458,     0,   459,
       0,   460,     0,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,     0,   471,     0,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   481,   482,
     483,     0,     0,   484,     0,     0,     0,   485,   486,     0,
     487,   488,     0,     0,   489,   490,   491,   492,   493,     0,
     494,   495,     0,   496,   497,   498,     0,     0,   499,   500,
     501,   502,   503,   504,   505,   506,     0,   507,     0,   508,
     509,     0,   510,   511,   512,     0,   513,     0,     0,   514,
     515,   516,   517,     0,   518,     0,   519,   520,   521,   522,
     523,     0,   524,   525,     0,     0,     0,   526,   527,   528,
     529,     0,     0,     0,   530,     0,     0,     0,   531,     0,
     532,   533,   534,   535,     0,   536,   537,   538,   539,   540,
       0,     0,     0,     0,     0,   541,   542,   543,     0,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,   550,   551,   552,   553,     0,     0,   554,   555,     0,
       0,   556,   557,   558,   559,   560,   561,     0,     0,   562,
     563,   564,   565,     0,   566,   567,     0,     0,   568,   569,
     570,   571,     0,  1368,   572,   573,     0,   574,   575,   576,
     577,     0,     0,     0,     0,     0,   578,   579,     0,     0,
       0,   580,   581,   582,     0,     0,   583,   584,     0,   585,
     586,     0,   587,   588,     0,     0,   589,     0,     0,   590,
       0,   591,     0,   592,   593,     0,     0,     0,     0,     0,
     594,     0,   595,     0,     0,   596,     0,     0,     0,   597,
       0,   598,   599,   600,   601,     0,     0,     0,     0,     0,
       0,   602,   603,   604,     0,   605,   606,   607,   608,  1369,
       0,   609,     0,     0,   610,   611,   612,   613,   614,     0,
     615,     0,     0,     0,     0,     0,     0,     0,     0,   616,
     617,   618,     0,   619,   620,   621,     0,   622,     0,     0,
     623,     0,   624,     0,     0,     0,     0,     0,     0,   625,
     626,     0,     0,   627,     0,   628,     0,   629,   630,     0,
       0,     0,   631,   632,   633,   634,   635,   636,   637,   638,
       0,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,     0,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,     0,   673,   674,   675,
     676,   677,   678,   679,     0,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   243,   244,     0,   245,
     246,   247,   248,   249,     0,     0,   250,     0,     0,     0,
       0,   251,     0,     0,   252,     0,   253,   254,   255,   256,
     257,   258,     0,   259,     0,     0,  1512,   260,     0,     0,
       0,   261,     0,     0,   262,   263,   264,     0,   265,     0,
     266,   267,     0,     0,   268,     0,     0,   269,   270,     0,
     271,   272,   273,     0,   274,     0,   275,   276,   277,   278,
     279,   280,     0,   281,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,   299,   300,     0,     0,     0,   301,
       0,     0,     0,     0,   302,     0,     0,   303,     0,     0,
       0,   304,   305,   306,     0,     0,   307,     0,     0,     0,
       0,   308,   309,     0,     0,     0,  1513,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,   318,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,   323,   324,     0,   325,   326,
     327,  1514,     0,   328,   329,     0,   330,   331,   332,   333,
     334,   335,     0,     0,   336,   337,   338,   339,   340,     0,
       0,   341,   342,     0,   343,   344,   345,   346,   347,     0,
       0,   348,   349,     0,     0,     0,   350,   351,     0,   352,
       0,     0,     0,   353,     0,   354,   355,   356,   357,     0,
     358,     0,   359,     0,     0,     0,   360,   361,     0,   362,
       0,     0,   363,   364,     0,     0,     0,   365,   366,   367,
     368,     0,     0,   369,   370,   371,     0,     0,   372,     0,
       0,     0,     0,   373,   374,   375,     0,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,     0,     0,
       0,   381,     0,   382,     0,     0,   383,   384,     0,     0,
     385,     0,     0,   386,   387,  1142,     0,     0,     0,     0,
     388,   389,     0,   390,     0,   391,     0,   392,   393,     0,
       0,     0,     0,     0,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,     0,
     415,   416,   417,   418,     0,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,     0,   429,     0,   430,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,     0,     0,   440,   441,     0,
       0,   442,   443,   444,   445,   446,     0,     0,     0,   447,
     448,     0,     0,     0,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,     0,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     0,   471,     0,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   481,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,   497,   498,     0,     0,   499,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
       0,   510,   511,   512,     0,   513,     0,     0,   514,   515,
     516,   517,     0,   518,     0,   519,   520,   521,   522,   523,
       0,   524,   525,     0,     0,     0,   526,   527,   528,   529,
       0,     0,  1515,   530,     0,     0,     0,   531,     0,   532,
     533,   534,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
     550,   551,   552,   553,     0,     0,   554,   555,     0,     0,
     556,   557,   558,   559,   560,   561,     0,     0,   562,   563,
     564,   565,     0,   566,   567,     0,     0,   568,   569,   570,
     571,     0,   240,   572,   573,     0,   574,   575,   576,   577,
       0,     0,     0,     0,     0,   578,   579,     0,     0,     0,
     580,   581,   582,     0,     0,   583,   584,     0,   585,   586,
       0,   587,   588,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   592,   593,     0,     0,     0,     0,     0,   594,
       0,   595,     0,     0,   596,     0,     0,     0,   597,     0,
     598,   599,   600,   601,     0,     0,     0,     0,     0,     0,
     602,   603,   604,     0,   605,   606,   607,   608,     0,     0,
     609,     0,     0,   610,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,     0,     0,     0,   616,   617,
     618,     0,   619,   620,   621,     0,   622,     0,     0,   623,
       0,   624,     0,     0,     0,     0,     0,     0,   625,   626,
       0,     0,   627,     0,   628,     0,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,   638,     0,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   673,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   243,   244,     0,   245,   246,
     247,   248,   249,     0,     0,   250,     0,     0,     0,     0,
     251,     0,     0,   252,     0,   253,   254,   255,   256,   257,
     258,     0,   259,     0,     0,     0,   260,     0,     0,     0,
     261,     0,     0,   262,   263,   264,     0,   265,     0,   266,
     267,     0,     0,   268,     0,     0,   269,   270,     0,   271,
     272,   273,     0,   274,     0,   275,   276,   277,   278,   279,
     280,     0,   281,   282,     0,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,   294,   295,  2479,
     296,   297,   298,   299,   300,     0,     0,     0,   301,     0,
       0,     0,     0,   302,     0,     0,   303,     0,     0,     0,
     304,   305,   306,     0,     0,   307,     0,     0,     0,     0,
     308,   309,     0,     0,     0,     0,   310,   311,     0,   312,
       0,     0,     0,     0,     0,   313,   314,   315,   316,   317,
       0,     0,     0,   318,     0,     0,   319,   320,   321,     0,
       0,     0,   322,     0,   323,   324,     0,   325,   326,   327,
       0,     0,   328,   329,     0,   330,   331,   332,   333,   334,
     335,     0,     0,   336,   337,   338,   339,   340,     0,     0,
     341,   342,     0,   343,   344,   345,   346,   347,     0,     0,
     348,   349,     0,     0,     0,   350,   351,     0,   352,  2480,
       0,     0,   353,     0,   354,   355,   356,   357,     0,   358,
       0,   359,     0,     0,     0,   360,   361,     0,   362,     0,
       0,   363,   364,     0,     0,     0,   365,   366,   367,   368,
       0,     0,   369,   370,   371,  1863,     0,   372,     0,     0,
       0,     0,   373,   374,   375,     0,     0,     0,   376,     0,
       0,     0,   377,   378,     0,   379,   380,     0,     0,     0,
     381,     0,   382,  1864,     0,   383,   384,     0,     0,   385,
       0,     0,   386,   387,     0,     0,     0,     0,     0,   388,
     389,     0,   390,     0,   391,     0,   392,   393,     0,     0,
       0,     0,     0,     0,     0,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,     0,   412,   413,   414,     0,   415,
     416,   417,   418,     0,   419,   420,     0,     0,     0,     0,
     421,   422,   423,   424,   425,   426,     0,     0,   427,   428,
       0,   429,     0,   430,     0,   431,   432,   433,   434,   435,
     436,   437,   438,   439,     0,     0,   440,   441,     0,     0,
     442,   443,   444,   445,   446,     0,     0,     0,   447,   448,
       0,     0,     0,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   456,   457,   458,     0,   459,     0,   460,
       0,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,     0,   471,     0,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   481,   482,   483,     0,
       0,   484,     0,     0,     0,   485,   486,     0,   487,   488,
       0,     0,   489,   490,   491,   492,   493,     0,   494,   495,
       0,   496,   497,   498,     0,     0,   499,   500,   501,   502,
     503,   504,   505,   506,     0,   507,     0,   508,   509,     0,
     510,   511,   512,     0,   513,     0,     0,   514,   515,   516,
     517,     0,   518,     0,   519,   520,   521,   522,   523,     0,
     524,   525,     0,     0,     0,   526,   527,   528,   529,     0,
       0,     0,   530,     0,     0,     0,   531,     0,   532,   533,
     534,   535,     0,   536,   537,   538,   539,   540,  2482,     0,
       0,     0,     0,   541,   542,   543,     0,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,   550,
     551,   552,   553,     0,     0,   554,   555,     0,     0,   556,
     557,   558,   559,   560,   561,     0,     0,   562,   563,   564,
     565,     0,   566,   567,     0,     0,   568,   569,   570,   571,
       0,     0,   572,   573,     0,   574,   575,   576,   577,     0,
       0,     0,     0,     0,   578,   579,     0,     0,     0,   580,
     581,   582,     0,     0,   583,   584,     0,   585,   586,     0,
     587,   588,     0,     0,   589,     0,     0,   590,     0,   591,
       0,   592,   593,     0,     0,     0,     0,     0,   594,     0,
     595,     0,     0,   596,     0,     0,     0,   597,     0,   598,
     599,   600,   601,     0,     0,     0,     0,     0,     0,   602,
     603,   604,     0,   605,   606,   607,   608,     0,     0,   609,
       0,     0,   610,   611,   612,   613,   614,     0,   615,     0,
       0,     0,     0,     0,     0,     0,     0,   616,   617,   618,
       0,   619,   620,   621,     0,   622,     0,     0,   623,     0,
     624,     0,     0,     0,     0,     0,     0,   625,   626,     0,
       0,   627,     0,   628,     0,   629,   630,     0,     0,     0,
     631,   632,   633,   634,   635,   636,   637,   638,     0,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,     0,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,     0,   673,   674,   675,   676,   677,
     678,   679,     0,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   243,   244,     0,   245,   246,   247,
     248,   249,     0,     0,   250,     0,     0,     0,     0,   251,
       0,     0,   252,     0,   253,   254,   255,   256,   257,   258,
       0,   259,     0,     0,  1537,   260,     0,     0,     0,   261,
       0,     0,   262,   263,   264,     0,   265,     0,   266,   267,
       0,     0,   268,     0,     0,   269,   270,     0,   271,   272,
     273,     0,   274,     0,   275,   276,   277,   278,   279,   280,
       0,   281,   282,     0,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,     0,   294,   295,     0,   296,
     297,   298,   299,   300,     0,     0,     0,   301,     0,     0,
       0,     0,   302,     0,     0,   303,     0,     0,     0,   304,
     305,   306,     0,     0,   307,     0,     0,     0,     0,   308,
     309,     0,     0,     0,  1538,   310,   311,     0,   312,     0,
       0,     0,     0,     0,   313,   314,   315,   316,   317,     0,
       0,     0,   318,     0,     0,   319,   320,   321,     0,     0,
       0,   322,     0,   323,   324,     0,   325,   326,   327,     0,
       0,   328,   329,     0,   330,   331,   332,   333,   334,   335,
       0,     0,   336,   337,   338,   339,   340,     0,     0,   341,
     342,     0,   343,   344,   345,   346,   347,     0,     0,   348,
     349,     0,     0,     0,   350,   351,     0,   352,     0,     0,
       0,   353,     0,   354,   355,   356,   357,     0,   358,     0,
     359,     0,     0,     0,   360,   361,     0,   362,     0,     0,
     363,   364,     0,     0,     0,   365,   366,   367,   368,     0,
       0,   369,   370,   371,     0,     0,   372,     0,     0,     0,
       0,   373,   374,   375,     0,     0,     0,   376,     0,     0,
       0,   377,   378,     0,   379,   380,     0,     0,     0,   381,
       0,   382,     0,     0,   383,   384,     0,     0,   385,     0,
       0,   386,   387,  1142,     0,     0,     0,     0,   388,   389,
       0,   390,     0,   391,     0,   392,   393,     0,     0,     0,
       0,     0,     0,     0,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,   413,   414,     0,   415,   416,
     417,   418,     0,   419,   420,     0,     0,     0,     0,   421,
     422,   423,   424,   425,   426,     0,     0,   427,   428,     0,
     429,     0,   430,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,     0,     0,   440,   441,     0,     0,   442,
     443,   444,   445,   446,     0,     0,     0,   447,   448,     0,
       0,     0,   449,     0,   450,   451,     0,   452,   453,   454,
       0,     0,   455,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   456,   457,   458,     0,   459,     0,   460,     0,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
       0,   471,     0,   472,   473,   474,     0,   475,     0,   476,
     477,   478,   479,   480,     0,   481,   482,   483,     0,     0,
     484,     0,     0,     0,   485,   486,     0,   487,   488,     0,
       0,   489,   490,   491,   492,   493,     0,   494,   495,     0,
     496,   497,   498,     0,     0,   499,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,     0,   510,
     511,   512,     0,   513,     0,     0,   514,   515,   516,   517,
       0,   518,     0,   519,   520,   521,   522,   523,     0,   524,
     525,     0,     0,     0,   526,   527,   528,   529,     0,     0,
       0,   530,     0,     0,     0,   531,     0,   532,   533,   534,
     535,     0,   536,   537,   538,   539,   540,     0,     0,     0,
       0,     0,   541,   542,   543,     0,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,   550,   551,
     552,   553,     0,     0,   554,   555,     0,     0,   556,   557,
     558,   559,   560,   561,     0,     0,   562,   563,   564,   565,
       0,   566,   567,     0,     0,   568,   569,   570,   571,     0,
     240,   572,   573,     0,   574,   575,   576,   577,     0,     0,
       0,     0,     0,   578,   579,     0,     0,     0,   580,   581,
     582,     0,     0,   583,   584,     0,   585,   586,     0,   587,
     588,     0,     0,   589,     0,     0,   590,     0,   591,     0,
     592,   593,     0,     0,     0,     0,     0,   594,     0,   595,
       0,     0,   596,     0,     0,     0,   597,     0,   598,   599,
     600,   601,     0,     0,     0,     0,     0,     0,   602,   603,
     604,     0,   605,   606,   607,   608,     0,     0,   609,     0,
       0,   610,   611,   612,   613,   614,     0,   615,     0,     0,
       0,     0,     0,     0,     0,     0,   616,   617,   618,     0,
     619,   620,   621,     0,   622,     0,     0,   623,     0,   624,
       0,     0,     0,     0,     0,     0,   625,   626,     0,     0,
     627,     0,   628,     0,   629,   630,     0,     0,     0,   631,
     632,   633,   634,   635,   636,   637,   638,     0,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,     0,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,     0,   673,   674,   675,   676,   677,   678,
     679,     0,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   243,   244,     0,   245,   246,   247,   248,
     249,     0,     0,   250,     0,     0,     0,     0,   251,     0,
       0,   252,     0,   253,   254,   255,   256,   257,   258,     0,
     259,     0,     0,     0,   260,     0,     0,     0,   261,     0,
       0,   262,   263,   264,     0,   265,     0,   266,   267,     0,
       0,   268,     0,     0,   269,   270,     0,   271,   272,   273,
       0,   274,     0,   275,   276,   277,   278,   279,   280,     0,
     281,   282,     0,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,   294,   295,     0,   296,   297,
     298,   299,   300,     0,     0,     0,   301,     0,     0,     0,
       0,   302,     0,     0,   303,     0,     0,     0,   304,   305,
     306,     0,     0,   307,     0,     0,     0,     0,   308,   309,
       0,     0,     0,     0,   310,   311,     0,   312,     0,     0,
       0,     0,     0,   313,   314,   315,   316,   317,     0,     0,
       0,   318,     0,     0,   319,   320,   321,     0,     0,     0,
     322,     0,   323,   324,     0,   325,   326,   327,     0,     0,
     328,   329,     0,   330,   331,   332,   333,   334,   335,     0,
       0,   336,   337,   338,   339,   340,     0,     0,   341,   342,
       0,   343,   344,   345,   346,   347,     0,     0,   348,   349,
       0,     0,     0,   350,   351,     0,   352,     0,     0,     0,
     353,     0,   354,   355,   356,   357,     0,   358,     0,   359,
       0,     0,     0,   360,   361,     0,   362,     0,     0,   363,
     364,     0,     0,     0,   365,   366,   367,   368,     0,     0,
     369,   370,   371,     0,     0,   372,     0,     0,     0,     0,
     373,   374,   375,     0,     0,     0,   376,     0,     0,     0,
     377,   378,     0,   379,   380,     0,     0,     0,   381,     0,
     382,     0,     0,   383,   384,     0,     0,   385,     0,     0,
     386,   387,     0,     0,     0,     0,     0,   388,   389,     0,
     390,     0,   391,     0,   392,   393,     0,     0,  1712,     0,
       0,     0,     0,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,     0,   412,   413,   414,     0,   415,   416,   417,
     418,     0,   419,   420,     0,     0,     0,     0,   421,   422,
     423,   424,   425,   426,     0,     0,   427,   428,     0,   429,
       0,   430,     0,   431,   432,   433,   434,   435,   436,   437,
     438,   439,     0,     0,   440,   441,     0,     0,   442,   443,
     444,   445,   446,     0,     0,     0,   447,   448,     0,     0,
    1713,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   456,   457,   458,   818,   459,     0,   460,     0,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,     0,
     471,     0,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   481,   482,   483,     0,     0,   484,
       0,     0,     0,   485,   486,     0,   487,   488,     0,     0,
     489,   490,   491,   492,   493,     0,   494,   495,     0,   496,
     497,   498,     0,     0,   499,   500,   501,   502,   503,   504,
     505,   506,     0,   507,     0,   508,   509,     0,   510,   511,
     512,     0,   513,     0,     0,   514,   515,   516,   517,     0,
     518,     0,   519,   520,   521,   522,   523,     0,   524,   525,
       0,     0,     0,   526,   527,   528,   529,     0,     0,     0,
     530,     0,     0,     0,   531,     0,   532,   533,   534,   535,
       0,   536,   537,   538,   539,   540,     0,     0,     0,     0,
       0,   541,   542,   543,     0,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,   550,   551,   552,
     553,     0,     0,   554,   555,     0,     0,   556,   557,   558,
     559,   560,   561,     0,     0,   562,   563,   564,   565,     0,
     566,   567,     0,     0,   568,   569,   570,   571,     0,     0,
     572,   573,     0,   574,   575,   576,   577,     0,     0,     0,
       0,     0,   578,   579,     0,     0,     0,   580,   581,   582,
       0,  1714,   583,   584,     0,   585,   586,     0,   587,   588,
       0,     0,   589,     0,     0,   590,     0,   591,     0,   592,
     593,     0,     0,     0,     0,     0,   594,     0,   595,     0,
       0,   596,     0,     0,     0,   597,     0,   598,   599,   600,
     601,     0,     0,     0,     0,     0,     0,   602,   603,   604,
       0,   605,   606,   607,   608,     0,     0,   609,     0,     0,
     610,   611,   612,   613,   614,     0,   615,     0,     0,     0,
       0,     0,     0,     0,     0,   616,   617,   618,     0,   619,
     620,   621,     0,   622,     0,     0,   623,     0,   624,     0,
       0,     0,     0,     0,     0,   625,   626,     0,     0,   627,
       0,   628,     0,   629,   630,     0,     0,     0,   631,   632,
     633,   634,   635,   636,   637,   638,     0,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,     0,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,     0,   673,   674,   675,   676,   677,   678,   679,
       0,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   243,   244,     0,   245,   246,   247,   248,   249,
       0,     0,   250,     0,     0,     0,     0,   251,     0,     0,
     252,     0,   253,   254,   255,   256,   257,   258,     0,   259,
       0,     0,  1512,   260,     0,     0,     0,   261,     0,     0,
     262,   263,   264,     0,   265,     0,   266,   267,     0,     0,
     268,     0,     0,   269,   270,     0,   271,   272,   273,     0,
     274,     0,   275,   276,   277,   278,   279,   280,     0,   281,
     282,     0,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,     0,   294,   295,     0,   296,   297,   298,
     299,   300,     0,     0,     0,   301,     0,     0,     0,     0,
     302,     0,     0,   303,     0,     0,     0,   304,   305,   306,
       0,     0,   307,     0,     0,     0,     0,   308,   309,     0,
       0,     0,  3873,   310,   311,     0,   312,     0,     0,     0,
       0,     0,   313,   314,   315,   316,   317,     0,     0,     0,
     318,     0,     0,   319,   320,   321,     0,     0,     0,   322,
       0,   323,   324,     0,   325,   326,   327,     0,     0,   328,
     329,     0,   330,   331,   332,   333,   334,   335,     0,     0,
     336,   337,   338,   339,   340,     0,     0,   341,   342,     0,
     343,   344,   345,   346,   347,     0,     0,   348,   349,     0,
       0,     0,   350,   351,     0,   352,     0,     0,     0,   353,
       0,   354,   355,   356,   357,     0,   358,     0,   359,     0,
       0,     0,   360,   361,     0,   362,     0,     0,   363,   364,
       0,     0,     0,   365,   366,   367,   368,     0,     0,   369,
     370,   371,     0,     0,   372,     0,     0,     0,     0,   373,
     374,   375,     0,     0,     0,   376,     0,     0,     0,   377,
     378,     0,   379,   380,     0,     0,     0,   381,     0,   382,
       0,     0,   383,   384,     0,     0,   385,     0,     0,   386,
     387,  1142,     0,     0,     0,     0,   388,   389,     0,   390,
       0,   391,     0,   392,   393,     0,     0,     0,     0,     0,
       0,     0,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,     0,   412,   413,   414,     0,   415,   416,   417,   418,
       0,   419,   420,     0,     0,     0,     0,   421,   422,   423,
     424,   425,   426,     0,     0,   427,   428,     0,   429,     0,
     430,     0,   431,   432,   433,   434,   435,   436,   437,   438,
     439,     0,     0,   440,   441,     0,     0,   442,   443,   444,
     445,   446,     0,     0,     0,   447,   448,     0,     0,     0,
     449,     0,   450,   451,     0,   452,   453,   454,     0,     0,
     455,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     456,   457,   458,     0,   459,     0,   460,     0,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,     0,   471,
       0,   472,   473,   474,     0,   475,     0,   476,   477,   478,
     479,   480,     0,   481,   482,   483,     0,     0,   484,     0,
       0,     0,   485,   486,     0,   487,   488,     0,     0,   489,
     490,   491,   492,   493,     0,   494,   495,     0,   496,   497,
     498,     0,     0,   499,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,     0,   510,   511,   512,
       0,   513,     0,     0,   514,   515,   516,   517,     0,   518,
       0,   519,   520,   521,   522,   523,     0,   524,   525,     0,
       0,     0,   526,   527,   528,   529,     0,     0,     0,   530,
       0,     0,     0,   531,     0,   532,   533,   534,   535,     0,
     536,   537,   538,   539,   540,     0,     0,     0,     0,     0,
     541,   542,   543,     0,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,   550,   551,   552,   553,
       0,     0,   554,   555,     0,     0,   556,   557,   558,   559,
     560,   561,     0,     0,   562,   563,   564,   565,     0,   566,
     567,     0,     0,   568,   569,   570,   571,     0,   240,   572,
     573,     0,   574,   575,   576,   577,     0,     0,     0,     0,
       0,   578,   579,     0,     0,     0,   580,   581,   582,     0,
       0,   583,   584,     0,   585,   586,     0,   587,   588,     0,
       0,   589,     0,     0,   590,     0,   591,     0,   592,   593,
       0,     0,     0,     0,     0,   594,     0,   595,     0,     0,
     596,     0,     0,     0,   597,     0,   598,   599,   600,   601,
       0,     0,     0,     0,     0,     0,   602,   603,   604,     0,
     605,   606,   607,   608,     0,     0,   609,     0,     0,   610,
     611,   612,   613,   614,     0,   615,     0,     0,     0,     0,
       0,     0,     0,     0,   616,   617,   618,     0,   619,   620,
     621,     0,   622,     0,     0,   623,     0,   624,     0,     0,
       0,     0,     0,     0,   625,   626,     0,     0,   627,     0,
     628,     0,   629,   630,     0,     0,     0,   631,   632,   633,
     634,   635,   636,   637,   638,     0,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,     0,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,     0,   673,   674,   675,   676,   677,   678,   679,     0,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   243,   244,     0,   245,   246,   247,   248,   249,     0,
       0,   250,     0,     0,     0,     0,   251,     0,     0,   252,
       0,   253,   254,   255,   256,   257,   258,     0,   259,     0,
       0,     0,   260,     0,     0,     0,   261,     0,     0,   262,
     263,   264,     0,   265,     0,   266,   267,     0,     0,   268,
       0,     0,   269,   270,     0,   271,   272,   273,     0,   274,
       0,   275,   276,   277,   278,   279,   280,     0,   281,   282,
       0,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,     0,   294,   295,     0,   296,   297,   298,   299,
     300,     0,     0,     0,   301,     0,     0,     0,     0,   302,
    1141,     0,   303,     0,     0,     0,   304,   305,   306,     0,
       0,   307,     0,     0,     0,     0,   308,   309,     0,     0,
       0,     0,   310,   311,     0,   312,     0,     0,     0,     0,
       0,   313,   314,   315,   316,   317,     0,     0,     0,   318,
       0,     0,   319,   320,   321,     0,     0,     0,   322,     0,
     323,   324,     0,   325,   326,   327,     0,     0,   328,   329,
       0,   330,   331,   332,   333,   334,   335,     0,     0,   336,
     337,   338,   339,   340,     0,     0,   341,   342,     0,   343,
     344,   345,   346,   347,     0,     0,   348,   349,     0,     0,
       0,   350,   351,     0,   352,     0,     0,     0,   353,     0,
     354,   355,   356,   357,     0,   358,     0,   359,     0,     0,
       0,   360,   361,     0,   362,     0,     0,   363,   364,     0,
       0,     0,   365,   366,   367,   368,     0,     0,   369,   370,
     371,     0,     0,   372,     0,     0,     0,     0,   373,   374,
     375,     0,     0,     0,   376,     0,     0,     0,   377,   378,
       0,   379,   380,     0,     0,     0,   381,     0,   382,     0,
       0,   383,   384,     0,     0,   385,     0,     0,   386,   387,
    1142,     0,     0,     0,     0,   388,   389,     0,   390,     0,
     391,     0,   392,   393,     0,     0,     0,     0,     0,     0,
       0,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
       0,   412,   413,   414,     0,   415,   416,   417,   418,     0,
     419,   420,     0,     0,     0,     0,   421,   422,   423,   424,
     425,   426,     0,     0,   427,   428,     0,   429,     0,   430,
       0,   431,   432,   433,   434,   435,   436,   437,   438,   439,
       0,     0,   440,   441,     0,     0,   442,   443,   444,   445,
     446,     0,     0,     0,   447,   448,     0,     0,     0,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   456,
     457,   458,     0,   459,     0,   460,     0,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,     0,   471,     0,
     472,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   481,   482,   483,     0,     0,   484,     0,     0,
       0,   485,   486,     0,   487,   488,     0,     0,   489,   490,
     491,   492,   493,     0,   494,   495,     0,   496,   497,   498,
       0,     0,   499,   500,   501,   502,   503,   504,   505,   506,
       0,   507,     0,   508,   509,     0,   510,   511,   512,     0,
     513,     0,     0,   514,   515,   516,   517,     0,   518,     0,
     519,   520,   521,   522,   523,     0,   524,   525,     0,     0,
       0,   526,   527,   528,   529,     0,     0,     0,   530,     0,
       0,     0,   531,     0,   532,   533,   534,   535,     0,   536,
     537,   538,   539,   540,     0,     0,     0,     0,     0,   541,
     542,   543,     0,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,   549,   550,   551,   552,   553,     0,
       0,   554,   555,     0,     0,   556,   557,   558,   559,   560,
     561,     0,     0,   562,   563,   564,   565,     0,   566,   567,
       0,     0,   568,   569,   570,   571,     0,   240,   572,   573,
       0,   574,   575,   576,   577,     0,     0,     0,     0,     0,
     578,   579,     0,     0,     0,   580,   581,   582,     0,     0,
     583,   584,     0,   585,   586,     0,   587,   588,     0,     0,
     589,     0,     0,   590,     0,   591,     0,  1143,   593,     0,
       0,     0,     0,     0,   594,     0,   595,     0,     0,   596,
       0,     0,     0,   597,     0,   598,   599,   600,   601,     0,
       0,     0,     0,     0,     0,   602,   603,   604,     0,   605,
     606,   607,   608,     0,     0,   609,     0,     0,   610,   611,
     612,   613,   614,     0,   615,     0,     0,     0,     0,     0,
       0,     0,     0,   616,   617,   618,     0,   619,   620,   621,
       0,   622,     0,     0,   623,     0,   624,     0,     0,     0,
       0,     0,     0,   625,   626,     0,     0,   627,     0,   628,
       0,   629,   630,     0,     0,     0,   631,   632,   633,   634,
     635,   636,   637,   638,     0,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
       0,   673,   674,   675,   676,   677,   678,   679,     0,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     243,   244,     0,   245,   246,   247,   248,   249,     0,     0,
     250,     0,     0,     0,     0,   251,     0,     0,   252,     0,
     253,   254,   255,   256,   257,   258,     0,   259,     0,     0,
       0,   260,     0,     0,     0,   261,     0,     0,   262,   263,
     264,     0,   265,     0,   266,   267,     0,     0,   268,     0,
       0,   269,   270,     0,   271,   272,   273,     0,   274,     0,
     275,   276,   277,   278,   279,   280,     0,   281,   282,     0,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,   294,   295,     0,   296,   297,   298,   299,   300,
       0,     0,     0,   301,     0,     0,     0,     0,   302,  1141,
       0,   303,     0,     0,     0,   304,   305,   306,     0,     0,
     307,     0,     0,     0,     0,   308,   309,     0,     0,     0,
       0,   310,   311,     0,   312,     0,     0,     0,     0,     0,
     313,   314,   315,   316,   317,     0,     0,     0,   318,     0,
       0,   319,   320,   321,     0,     0,     0,   322,     0,   323,
     324,     0,   325,   326,   327,     0,     0,   328,   329,     0,
     330,   331,   332,   333,   334,   335,     0,     0,   336,   337,
     338,   339,   340,     0,     0,   341,   342,     0,   343,   344,
     345,   346,   347,     0,     0,   348,   349,     0,     0,     0,
     350,   351,     0,   352,     0,     0,     0,   353,     0,   354,
     355,   356,   357,     0,   358,     0,   359,     0,     0,     0,
     360,   361,     0,   362,     0,     0,   363,   364,     0,     0,
       0,   365,   366,   367,   368,     0,     0,   369,   370,   371,
       0,     0,   372,     0,     0,     0,     0,   373,   374,   375,
       0,     0,     0,   376,     0,     0,     0,   377,   378,     0,
     379,   380,     0,     0,     0,   381,     0,   382,     0,     0,
     383,   384,     0,     0,   385,     0,     0,   386,   387,  1142,
       0,     0,     0,     0,   388,   389,     0,   390,     0,   391,
       0,   392,   393,     0,     0,     0,     0,     0,     0,     0,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,     0,
     412,   413,   414,     0,   415,   416,   417,   418,     0,   419,
     420,     0,     0,     0,     0,   421,   422,   423,   424,   425,
     426,     0,     0,   427,   428,     0,   429,     0,   430,     0,
     431,   432,   433,   434,   435,   436,   437,   438,   439,     0,
       0,   440,   441,     0,     0,   442,   443,   444,   445,   446,
       0,     0,     0,   447,   448,     0,     0,     0,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   456,   457,
     458,     0,   459,     0,   460,     0,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,     0,   471,     0,   472,
     473,   474,     0,   475,     0,   476,   477,   478,   479,   480,
       0,   481,   482,   483,     0,     0,   484,     0,     0,     0,
     485,   486,     0,   487,   488,     0,     0,   489,   490,   491,
     492,   493,     0,   494,   495,     0,   496,   497,   498,     0,
       0,   499,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,     0,   510,   511,   512,     0,   513,
       0,     0,   514,   515,   516,   517,     0,   518,     0,   519,
     520,   521,   522,   523,     0,   524,   525,     0,     0,     0,
     526,   527,   528,   529,     0,     0,     0,   530,     0,     0,
       0,   531,     0,   532,   533,   534,   535,     0,   536,   537,
     538,   539,   540,     0,     0,     0,     0,     0,   541,   542,
     543,     0,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,   550,   551,   552,   553,     0,     0,
     554,   555,     0,     0,   556,   557,   558,   559,   560,   561,
       0,     0,   562,   563,   564,   565,     0,   566,   567,     0,
       0,   568,   569,   570,   571,     0,   240,   572,   573,     0,
     574,   575,   576,   577,     0,     0,     0,     0,     0,   578,
     579,     0,     0,     0,   580,   581,   582,     0,     0,   583,
     584,     0,   585,   586,     0,   587,   588,     0,     0,   589,
       0,     0,   590,     0,   591,     0,   592,   593,     0,     0,
       0,     0,     0,   594,     0,   595,     0,     0,   596,     0,
       0,     0,   597,     0,   598,   599,   600,   601,     0,     0,
       0,     0,     0,     0,   602,   603,   604,     0,   605,   606,
     607,   608,     0,     0,   609,     0,     0,   610,   611,   612,
     613,   614,     0,   615,     0,     0,     0,     0,     0,     0,
       0,     0,   616,   617,   618,     0,   619,   620,   621,     0,
     622,     0,     0,   623,     0,   624,     0,     0,     0,     0,
       0,     0,   625,   626,     0,     0,   627,     0,   628,     0,
     629,   630,     0,     0,     0,   631,   632,   633,   634,   635,
     636,   637,   638,     0,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,     0,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,     0,
     673,   674,   675,   676,   677,   678,   679,     0,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   243,
     244,     0,   245,   246,   247,   248,   249,  1566,     0,   250,
       0,     0,     0,     0,   251,     0,     0,   252,     0,   253,
     254,   255,   256,   257,   258,     0,   259,     0,     0,     0,
     260,     0,     0,     0,   261,     0,     0,   262,   263,   264,
       0,   265,     0,   266,   267,     0,     0,   268,     0,     0,
     269,   270,     0,   271,   272,   273,     0,   274,     0,   275,
     276,   277,   278,   279,   280,     0,   281,   282,     0,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,   294,   295,     0,   296,   297,   298,   299,   300,     0,
       0,     0,   301,     0,     0,     0,     0,   302,     0,     0,
     303,     0,     0,     0,   304,   305,   306,     0,     0,   307,
       0,     0,     0,     0,   308,   309,     0,     0,     0,     0,
     310,   311,     0,   312,     0,     0,     0,     0,     0,   313,
     314,   315,   316,   317,     0,     0,     0,   318,     0,     0,
     319,   320,   321,     0,     0,     0,   322,     0,   323,   324,
       0,   325,   326,   327,     0,     0,   328,   329,     0,   330,
     331,   332,   333,   334,   335,     0,     0,   336,   337,   338,
     339,   340,     0,     0,   341,   342,     0,   343,   344,   345,
     346,   347,     0,     0,   348,   349,     0,     0,     0,   350,
     351,     0,   352,     0,     0,     0,   353,     0,   354,   355,
     356,   357,     0,   358,     0,   359,     0,     0,     0,   360,
     361,     0,   362,     0,     0,   363,   364,     0,     0,     0,
     365,   366,   367,   368,     0,     0,   369,   370,   371,     0,
       0,   372,     0,     0,     0,     0,   373,   374,   375,     0,
       0,     0,   376,     0,     0,     0,   377,   378,     0,   379,
     380,     0,     0,     0,   381,     0,   382,     0,     0,   383,
     384,     0,     0,   385,     0,     0,   386,   387,  1142,     0,
       0,     0,     0,   388,   389,     0,   390,     0,   391,     0,
     392,   393,     0,     0,     0,     0,     0,     0,     0,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,     0,   412,
     413,   414,     0,   415,   416,   417,   418,     0,   419,   420,
       0,     0,     0,     0,   421,   422,   423,   424,   425,   426,
       0,     0,   427,   428,     0,   429,     0,   430,     0,   431,
     432,   433,   434,   435,   436,   437,   438,   439,     0,     0,
     440,   441,     0,     0,   442,   443,   444,   445,   446,     0,
       0,     0,   447,   448,     0,     0,     0,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   456,   457,   458,
       0,   459,     0,   460,     0,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,     0,   471,     0,   472,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     481,   482,   483,     0,     0,   484,     0,     0,     0,   485,
     486,     0,   487,   488,     0,     0,   489,   490,   491,   492,
     493,     0,   494,   495,     0,   496,   497,   498,     0,     0,
     499,   500,   501,   502,   503,   504,   505,   506,     0,   507,
       0,   508,   509,     0,   510,   511,   512,     0,   513,     0,
       0,   514,   515,   516,   517,     0,   518,     0,   519,   520,
     521,   522,   523,     0,   524,   525,     0,     0,     0,   526,
     527,   528,   529,     0,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,   534,   535,     0,   536,   537,   538,
     539,   540,     0,     0,     0,     0,     0,   541,   542,   543,
       0,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,   550,   551,   552,   553,     0,     0,   554,
     555,     0,     0,   556,   557,   558,   559,   560,   561,     0,
       0,   562,   563,   564,   565,     0,   566,   567,     0,     0,
     568,   569,   570,   571,     0,   240,   572,   573,     0,   574,
     575,   576,   577,     0,     0,     0,     0,     0,   578,   579,
       0,     0,     0,   580,   581,   582,     0,     0,   583,   584,
       0,   585,   586,     0,   587,   588,     0,     0,   589,     0,
       0,   590,     0,   591,     0,   592,   593,     0,     0,     0,
       0,     0,   594,     0,   595,     0,     0,   596,     0,     0,
       0,   597,     0,   598,   599,   600,   601,     0,     0,     0,
       0,     0,     0,   602,   603,   604,     0,   605,   606,   607,
     608,     0,     0,   609,     0,     0,   610,   611,   612,   613,
     614,     0,   615,     0,     0,     0,     0,     0,     0,     0,
       0,   616,   617,   618,     0,   619,   620,   621,     0,   622,
       0,     0,   623,     0,   624,     0,     0,     0,     0,     0,
       0,   625,   626,     0,     0,   627,     0,   628,     0,   629,
     630,     0,     0,     0,   631,   632,   633,   634,   635,   636,
     637,   638,     0,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,     0,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,     0,   673,
     674,   675,   676,   677,   678,   679,     0,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   243,   244,
       0,   245,   246,   247,   248,   249,     0,     0,   250,     0,
       0,     0,     0,   251,     0,     0,   252,     0,   253,   254,
     255,   256,   257,   258,     0,   259,     0,     0,     0,   260,
    1635,     0,     0,   261,     0,     0,   262,   263,   264,     0,
     265,     0,   266,   267,     0,     0,   268,     0,     0,   269,
     270,     0,   271,   272,   273,     0,   274,     0,   275,   276,
     277,   278,   279,   280,     0,   281,   282,     0,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
     294,   295,     0,   296,   297,   298,   299,   300,     0,     0,
       0,   301,     0,     0,     0,     0,   302,     0,     0,   303,
       0,     0,     0,   304,   305,   306,     0,     0,   307,     0,
       0,     0,     0,   308,   309,     0,     0,     0,     0,   310,
     311,     0,   312,     0,     0,     0,     0,     0,   313,   314,
     315,   316,   317,     0,     0,     0,   318,     0,     0,   319,
     320,   321,     0,     0,     0,   322,     0,   323,   324,     0,
     325,   326,   327,     0,     0,   328,   329,     0,   330,   331,
     332,   333,   334,   335,     0,     0,   336,   337,   338,   339,
     340,     0,     0,   341,   342,     0,   343,   344,   345,   346,
     347,     0,     0,   348,   349,     0,     0,     0,   350,   351,
       0,   352,     0,     0,     0,   353,     0,   354,   355,   356,
     357,     0,   358,     0,   359,     0,     0,     0,   360,   361,
       0,   362,  1636,     0,   363,   364,     0,     0,     0,   365,
     366,   367,   368,     0,     0,   369,   370,   371,     0,     0,
     372,     0,     0,     0,     0,   373,   374,   375,     0,     0,
       0,   376,     0,     0,     0,   377,   378,     0,   379,   380,
       0,     0,     0,   381,     0,   382,     0,     0,   383,   384,
       0,     0,   385,     0,     0,   386,   387,     0,     0,     0,
       0,     0,   388,   389,     0,   390,     0,   391,     0,   392,
     393,     0,     0,     0,     0,     0,     0,     0,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,     0,   412,   413,
     414,     0,   415,   416,   417,   418,     0,   419,   420,     0,
       0,     0,     0,   421,   422,   423,   424,   425,   426,     0,
       0,   427,   428,     0,   429,     0,   430,     0,   431,   432,
     433,   434,   435,   436,   437,   438,   439,     0,     0,   440,
     441,     0,     0,   442,   443,   444,   445,   446,     0,     0,
       0,   447,   448,     0,     0,     0,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   456,   457,   458,     0,
     459,     0,   460,     0,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,     0,   471,     0,   472,   473,   474,
       0,   475,     0,   476,   477,   478,   479,   480,     0,   481,
     482,   483,     0,     0,   484,     0,     0,     0,   485,   486,
       0,   487,   488,     0,     0,   489,   490,   491,   492,   493,
       0,   494,   495,     0,   496,   497,   498,     0,     0,   499,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,     0,   510,   511,   512,     0,   513,     0,     0,
     514,   515,   516,   517,     0,   518,     0,   519,   520,   521,
     522,   523,     0,   524,   525,     0,     0,     0,   526,   527,
     528,   529,     0,     0,     0,   530,     0,     0,     0,   531,
       0,   532,   533,   534,   535,     0,   536,   537,   538,   539,
     540,     0,     0,     0,     0,     0,   541,   542,   543,     0,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,   550,   551,   552,   553,     0,     0,   554,   555,
       0,     0,   556,   557,   558,   559,   560,   561,     0,     0,
     562,   563,   564,   565,     0,   566,   567,     0,     0,   568,
     569,   570,   571,     0,  1408,   572,   573,     0,   574,   575,
     576,   577,     0,     0,     0,     0,     0,   578,   579,     0,
       0,     0,   580,   581,   582,     0,     0,   583,   584,     0,
     585,   586,     0,   587,   588,     0,     0,   589,     0,     0,
     590,     0,   591,     0,   592,   593,     0,     0,     0,     0,
       0,   594,     0,   595,     0,     0,   596,     0,     0,     0,
     597,     0,   598,   599,   600,   601,     0,     0,     0,     0,
       0,     0,   602,   603,   604,     0,   605,   606,   607,   608,
       0,     0,   609,     0,     0,   610,   611,   612,   613,   614,
       0,   615,     0,     0,     0,     0,     0,     0,     0,     0,
     616,   617,   618,     0,   619,   620,   621,     0,   622,     0,
       0,   623,     0,   624,     0,     0,     0,     0,     0,     0,
     625,   626,     0,     0,   627,     0,   628,     0,   629,   630,
       0,     0,     0,   631,   632,   633,   634,   635,   636,   637,
     638,     0,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,     0,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,     0,   673,   674,
     675,   676,   677,   678,   679,     0,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   243,   244,     0,
     245,   246,   247,   248,   249,     0,     0,   250,     0,     0,
       0,     0,   251,     0,     0,   252,     0,   253,   254,   255,
     256,   257,   258,     0,   259,     0,     0,  3004,   260,     0,
       0,     0,   261,     0,     0,   262,   263,   264,     0,   265,
       0,   266,   267,     0,     0,   268,     0,     0,   269,   270,
       0,   271,   272,   273,     0,   274,     0,   275,   276,   277,
     278,   279,   280,     0,   281,   282,     0,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,   294,
     295,     0,   296,   297,   298,   299,   300,     0,     0,     0,
     301,     0,     0,     0,     0,   302,     0,     0,   303,     0,
       0,     0,   304,   305,   306,     0,     0,   307,     0,     0,
       0,     0,   308,   309,     0,     0,     0,     0,   310,   311,
       0,   312,     0,     0,     0,     0,     0,   313,   314,   315,
     316,   317,     0,     0,     0,   318,     0,     0,   319,   320,
     321,     0,     0,     0,   322,     0,   323,   324,     0,   325,
     326,   327,     0,     0,   328,   329,     0,   330,   331,   332,
     333,   334,   335,     0,     0,   336,   337,   338,   339,   340,
       0,     0,   341,   342,     0,   343,   344,   345,   346,   347,
       0,     0,   348,   349,     0,     0,     0,   350,   351,     0,
     352,     0,     0,     0,   353,     0,   354,   355,   356,   357,
       0,   358,     0,   359,     0,     0,     0,   360,   361,     0,
     362,     0,     0,   363,   364,     0,     0,     0,   365,   366,
     367,   368,     0,     0,   369,   370,   371,     0,     0,   372,
       0,     0,     0,     0,   373,   374,   375,     0,     0,     0,
     376,     0,     0,     0,   377,   378,     0,   379,   380,     0,
       0,     0,   381,     0,   382,     0,     0,   383,   384,     0,
       0,   385,     0,     0,   386,   387,  1142,     0,     0,     0,
       0,   388,   389,     0,   390,     0,   391,     0,   392,   393,
       0,     0,     0,     0,     0,     0,     0,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,     0,   412,   413,   414,
       0,   415,   416,   417,   418,     0,   419,   420,     0,     0,
       0,     0,   421,   422,   423,   424,   425,   426,     0,     0,
     427,   428,     0,   429,     0,   430,     0,   431,   432,   433,
     434,   435,   436,   437,   438,   439,     0,     0,   440,   441,
       0,     0,   442,   443,   444,   445,   446,     0,     0,     0,
     447,   448,     0,     0,     0,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   456,   457,   458,     0,   459,
       0,   460,     0,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,     0,   471,     0,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   481,   482,
     483,     0,     0,   484,     0,     0,     0,   485,   486,     0,
     487,   488,     0,     0,   489,   490,   491,   492,   493,     0,
     494,   495,     0,   496,   497,   498,     0,     0,   499,   500,
     501,   502,   503,   504,   505,   506,     0,   507,     0,   508,
     509,     0,   510,   511,   512,     0,   513,     0,     0,   514,
     515,   516,   517,     0,   518,     0,   519,   520,   521,   522,
     523,     0,   524,   525,     0,     0,     0,   526,   527,   528,
     529,     0,     0,     0,   530,     0,     0,     0,   531,     0,
     532,   533,   534,   535,     0,   536,   537,   538,   539,   540,
       0,     0,     0,     0,     0,   541,   542,   543,     0,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,   550,   551,   552,   553,     0,     0,   554,   555,     0,
       0,   556,   557,   558,   559,   560,   561,     0,     0,   562,
     563,   564,   565,     0,   566,   567,     0,     0,   568,   569,
     570,   571,     0,   240,   572,   573,     0,   574,   575,   576,
     577,     0,     0,     0,     0,     0,   578,   579,     0,     0,
       0,   580,   581,   582,     0,     0,   583,   584,     0,   585,
     586,     0,   587,   588,     0,     0,   589,     0,     0,   590,
       0,   591,     0,   592,   593,     0,     0,     0,     0,     0,
     594,     0,   595,     0,     0,   596,     0,     0,     0,   597,
       0,   598,   599,   600,   601,     0,     0,     0,     0,     0,
       0,   602,   603,   604,     0,   605,   606,   607,   608,     0,
       0,   609,     0,     0,   610,   611,   612,   613,   614,     0,
     615,     0,     0,     0,     0,     0,     0,     0,     0,   616,
     617,   618,     0,   619,   620,   621,     0,   622,     0,     0,
     623,     0,   624,     0,     0,     0,     0,     0,     0,   625,
     626,     0,     0,   627,     0,   628,     0,   629,   630,     0,
       0,     0,   631,   632,   633,   634,   635,   636,   637,   638,
       0,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,     0,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,     0,   673,   674,   675,
     676,   677,   678,   679,     0,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   243,   244,     0,   245,
     246,   247,   248,   249,     0,     0,   250,     0,     0,     0,
       0,   251,     0,     0,   252,     0,   253,   254,   255,   256,
     257,   258,     0,   259,     0,     0,     0,   260,     0,     0,
       0,   261,     0,     0,   262,   263,   264,     0,   265,     0,
     266,   267,     0,     0,   268,     0,     0,   269,   270,     0,
     271,   272,   273,     0,   274,     0,   275,   276,   277,   278,
     279,   280,     0,   281,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,   299,   300,     0,     0,     0,   301,
       0,     0,     0,     0,   302,     0,     0,   303,     0,     0,
       0,   304,   305,   306,     0,     0,   307,     0,     0,     0,
       0,   308,   309,     0,     0,     0,     0,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,   318,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,   323,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,   332,   333,
     334,   335,     0,     0,   336,   337,   338,   339,   340,     0,
       0,   341,   342,     0,   343,   344,   345,   346,   347,     0,
       0,   348,   349,     0,     0,     0,   350,   351,     0,   352,
       0,     0,     0,   353,     0,   354,   355,   356,   357,     0,
     358,     0,   359,     0,     0,     0,   360,   361,     0,   362,
       0,     0,   363,   364,     0,     0,     0,   365,   366,   367,
     368,     0,     0,   369,   370,   371,     0,     0,   372,     0,
       0,     0,     0,   373,   374,   375,     0,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,     0,     0,
       0,   381,     0,   382,     0,     0,   383,   384,     0,     0,
     385,     0,     0,   386,   387,  1142,     0,     0,     0,     0,
     388,   389,     0,   390,     0,   391,     0,   392,   393,     0,
       0,     0,     0,     0,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,     0,
     415,   416,   417,   418,     0,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,     0,   429,     0,   430,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,     0,     0,   440,   441,     0,
       0,   442,   443,   444,   445,   446,     0,     0,     0,   447,
     448,     0,  3293,     0,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,     0,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     0,   471,     0,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   481,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,   497,   498,     0,     0,   499,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
       0,   510,   511,   512,     0,   513,     0,     0,   514,   515,
     516,   517,     0,   518,     0,   519,   520,   521,   522,   523,
       0,   524,   525,     0,     0,     0,   526,   527,   528,   529,
       0,     0,     0,   530,     0,     0,     0,   531,     0,   532,
     533,   534,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
     550,   551,   552,   553,     0,     0,   554,   555,     0,     0,
     556,   557,   558,   559,   560,   561,     0,     0,   562,   563,
     564,   565,     0,   566,   567,     0,     0,   568,   569,   570,
     571,     0,   240,   572,   573,     0,   574,   575,   576,   577,
       0,     0,     0,     0,     0,   578,   579,     0,     0,     0,
     580,   581,   582,     0,     0,   583,   584,     0,   585,   586,
       0,   587,   588,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   592,   593,     0,     0,     0,     0,     0,   594,
       0,   595,     0,     0,   596,     0,     0,     0,   597,     0,
     598,   599,   600,   601,     0,     0,     0,     0,     0,     0,
     602,   603,   604,     0,   605,   606,   607,   608,     0,     0,
     609,     0,     0,   610,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,     0,     0,     0,   616,   617,
     618,     0,   619,   620,   621,     0,   622,     0,     0,   623,
       0,   624,     0,     0,     0,     0,     0,     0,   625,   626,
       0,     0,   627,     0,   628,     0,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,   638,     0,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   673,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   243,   244,     0,   245,   246,
     247,   248,   249,     0,     0,   250,     0,     0,     0,     0,
     251,     0,     0,   252,     0,   253,   254,   255,   256,   257,
     258,     0,   259,     0,     0,  1512,   260,     0,     0,     0,
     261,     0,     0,   262,   263,   264,     0,   265,     0,   266,
     267,     0,     0,   268,     0,     0,   269,   270,     0,   271,
     272,   273,     0,   274,     0,   275,   276,   277,   278,   279,
     280,     0,   281,   282,     0,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,   294,   295,     0,
     296,   297,   298,   299,   300,     0,     0,     0,   301,     0,
       0,     0,     0,   302,     0,     0,   303,     0,     0,     0,
     304,   305,   306,     0,     0,   307,     0,     0,     0,     0,
     308,   309,     0,     0,     0,     0,   310,   311,     0,   312,
       0,     0,     0,     0,     0,   313,   314,   315,   316,   317,
       0,     0,     0,   318,     0,     0,   319,   320,   321,     0,
       0,     0,   322,     0,   323,   324,     0,   325,   326,   327,
       0,     0,   328,   329,     0,   330,   331,   332,   333,   334,
     335,     0,     0,   336,   337,   338,   339,   340,     0,     0,
     341,   342,     0,   343,   344,   345,   346,   347,     0,     0,
     348,   349,     0,     0,     0,   350,   351,     0,   352,     0,
       0,     0,   353,     0,   354,   355,   356,   357,     0,   358,
       0,   359,     0,     0,     0,   360,   361,     0,   362,     0,
       0,   363,   364,     0,     0,     0,   365,   366,   367,   368,
       0,     0,   369,   370,   371,     0,     0,   372,     0,     0,
       0,     0,   373,   374,   375,     0,     0,     0,   376,     0,
       0,     0,   377,   378,     0,   379,   380,     0,     0,     0,
     381,     0,   382,     0,     0,   383,   384,     0,     0,   385,
       0,     0,   386,   387,  1142,     0,     0,     0,     0,   388,
     389,     0,   390,     0,   391,     0,   392,   393,     0,     0,
       0,     0,     0,     0,     0,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,     0,   412,   413,   414,     0,   415,
     416,   417,   418,     0,   419,   420,     0,     0,     0,     0,
     421,   422,   423,   424,   425,   426,     0,     0,   427,   428,
       0,   429,     0,   430,     0,   431,   432,   433,   434,   435,
     436,   437,   438,   439,     0,     0,   440,   441,     0,     0,
     442,   443,   444,   445,   446,     0,     0,     0,   447,   448,
       0,     0,     0,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   456,   457,   458,     0,   459,     0,   460,
       0,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,     0,   471,     0,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   481,   482,   483,     0,
       0,   484,     0,     0,     0,   485,   486,     0,   487,   488,
       0,     0,   489,   490,   491,   492,   493,     0,   494,   495,
       0,   496,   497,   498,     0,     0,   499,   500,   501,   502,
     503,   504,   505,   506,     0,   507,     0,   508,   509,     0,
     510,   511,   512,     0,   513,     0,     0,   514,   515,   516,
     517,     0,   518,     0,   519,   520,   521,   522,   523,     0,
     524,   525,     0,     0,     0,   526,   527,   528,   529,     0,
       0,     0,   530,     0,     0,     0,   531,     0,   532,   533,
     534,   535,     0,   536,   537,   538,   539,   540,     0,     0,
       0,     0,     0,   541,   542,   543,     0,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,   550,
     551,   552,   553,     0,     0,   554,   555,     0,     0,   556,
     557,   558,   559,   560,   561,     0,     0,   562,   563,   564,
     565,     0,   566,   567,     0,     0,   568,   569,   570,   571,
       0,   240,   572,   573,     0,   574,   575,   576,   577,     0,
       0,     0,     0,     0,   578,   579,     0,     0,     0,   580,
     581,   582,     0,     0,   583,   584,     0,   585,   586,     0,
     587,   588,     0,     0,   589,     0,     0,   590,     0,   591,
       0,   592,   593,     0,     0,     0,     0,     0,   594,     0,
     595,     0,     0,   596,     0,     0,     0,   597,     0,   598,
     599,   600,   601,     0,     0,     0,     0,     0,     0,   602,
     603,   604,     0,   605,   606,   607,   608,     0,     0,   609,
       0,     0,   610,   611,   612,   613,   614,     0,   615,     0,
       0,     0,     0,     0,     0,     0,     0,   616,   617,   618,
       0,   619,   620,   621,     0,   622,     0,     0,   623,     0,
     624,     0,     0,     0,     0,     0,     0,   625,   626,     0,
       0,   627,     0,   628,     0,   629,   630,     0,     0,     0,
     631,   632,   633,   634,   635,   636,   637,   638,     0,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,     0,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,     0,   673,   674,   675,   676,   677,
     678,   679,     0,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   243,   244,     0,   245,   246,   247,
     248,   249,     0,     0,   250,     0,     0,     0,     0,   251,
       0,     0,   252,     0,   253,   254,   255,   256,   257,   258,
       0,   259,     0,     0,     0,   260,     0,     0,     0,   261,
       0,     0,   262,   263,   264,     0,   265,     0,   266,   267,
       0,     0,   268,     0,     0,   269,   270,     0,   271,   272,
     273,     0,   274,     0,   275,   276,   277,   278,   279,   280,
       0,   281,   282,     0,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,     0,   294,   295,     0,   296,
     297,   298,   299,   300,     0,     0,     0,   301,     0,     0,
       0,     0,   302,     0,     0,   303,     0,     0,     0,   304,
     305,   306,     0,     0,   307,     0,     0,     0,     0,   308,
     309,     0,     0,     0,     0,   310,   311,     0,   312,     0,
       0,     0,     0,     0,   313,   314,   315,   316,   317,     0,
       0,     0,   318,     0,     0,   319,   320,   321,     0,     0,
       0,   322,     0,   323,   324,     0,   325,   326,   327,     0,
       0,   328,   329,     0,   330,   331,   332,   333,   334,   335,
       0,     0,   336,   337,   338,   339,   340,     0,     0,   341,
     342,     0,   343,   344,   345,   346,   347,     0,     0,   348,
     349,     0,     0,     0,   350,   351,     0,   352,     0,     0,
       0,   353,     0,   354,   355,   356,   357,     0,   358,     0,
     359,     0,     0,     0,   360,   361,     0,   362,     0,     0,
     363,   364,     0,     0,     0,   365,   366,   367,   368,     0,
       0,   369,   370,   371,     0,     0,   372,     0,     0,     0,
       0,   373,   374,   375,     0,     0,     0,   376,     0,     0,
       0,   377,   378,     0,   379,   380,     0,     0,     0,   381,
       0,   382,     0,     0,   383,   384,     0,     0,   385,     0,
       0,   386,   387,  1142,     0,     0,     0,     0,   388,   389,
       0,   390,     0,   391,     0,   392,   393,     0,     0,     0,
       0,     0,     0,     0,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,   413,   414,     0,   415,   416,
     417,   418,     0,   419,   420,     0,     0,     0,     0,   421,
     422,   423,   424,   425,   426,     0,     0,   427,   428,     0,
     429,     0,   430,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,     0,     0,   440,   441,     0,     0,   442,
     443,   444,   445,   446,     0,     0,     0,   447,   448,     0,
    3929,     0,   449,     0,   450,   451,     0,   452,   453,   454,
       0,     0,   455,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   456,   457,   458,     0,   459,     0,   460,     0,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
       0,   471,     0,   472,   473,   474,     0,   475,     0,   476,
     477,   478,   479,   480,     0,   481,   482,   483,     0,     0,
     484,     0,     0,     0,   485,   486,     0,   487,   488,     0,
       0,   489,   490,   491,   492,   493,     0,   494,   495,     0,
     496,   497,   498,     0,     0,   499,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,     0,   510,
     511,   512,     0,   513,     0,     0,   514,   515,   516,   517,
       0,   518,     0,   519,   520,   521,   522,   523,     0,   524,
     525,     0,     0,     0,   526,   527,   528,   529,     0,     0,
       0,   530,     0,     0,     0,   531,     0,   532,   533,   534,
     535,     0,   536,   537,   538,   539,   540,     0,     0,     0,
       0,     0,   541,   542,   543,     0,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,   550,   551,
     552,   553,     0,     0,   554,   555,     0,     0,   556,   557,
     558,   559,   560,   561,     0,     0,   562,   563,   564,   565,
       0,   566,   567,     0,     0,   568,   569,   570,   571,     0,
     240,   572,   573,     0,   574,   575,   576,   577,     0,     0,
       0,     0,     0,   578,   579,     0,     0,     0,   580,   581,
     582,     0,     0,   583,   584,     0,   585,   586,     0,   587,
     588,     0,     0,   589,     0,     0,   590,     0,   591,     0,
     592,   593,     0,     0,     0,     0,     0,   594,     0,   595,
       0,     0,   596,     0,     0,     0,   597,     0,   598,   599,
     600,   601,     0,     0,     0,     0,     0,     0,   602,   603,
     604,     0,   605,   606,   607,   608,     0,     0,   609,     0,
       0,   610,   611,   612,   613,   614,     0,   615,     0,     0,
       0,     0,     0,     0,     0,     0,   616,   617,   618,     0,
     619,   620,   621,     0,   622,     0,     0,   623,     0,   624,
       0,     0,     0,     0,     0,     0,   625,   626,     0,     0,
     627,     0,   628,     0,   629,   630,     0,     0,     0,   631,
     632,   633,   634,   635,   636,   637,   638,     0,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,     0,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,     0,   673,   674,   675,   676,   677,   678,
     679,     0,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   243,   244,     0,   245,   246,   247,   248,
     249,     0,     0,   250,     0,     0,     0,     0,   251,     0,
       0,   252,     0,   253,   254,   255,   256,   257,   258,     0,
     259,     0,     0,     0,   260,     0,     0,     0,   261,     0,
       0,   262,   263,   264,     0,   265,     0,   266,   267,     0,
       0,   268,     0,     0,   269,   270,     0,   271,   272,   273,
       0,   274,     0,   275,   276,   277,   278,   279,   280,     0,
     281,   282,     0,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,   294,   295,     0,   296,   297,
     298,   299,   300,     0,     0,     0,   301,     0,     0,     0,
       0,   302,     0,     0,   303,     0,     0,     0,   304,   305,
     306,     0,     0,   307,     0,     0,     0,     0,   308,   309,
       0,     0,     0,     0,   310,   311,     0,   312,     0,     0,
       0,     0,     0,   313,   314,   315,   316,   317,     0,     0,
       0,   318,     0,     0,   319,   320,   321,     0,     0,     0,
     322,     0,   323,   324,     0,   325,   326,   327,     0,     0,
     328,   329,     0,   330,   331,   332,   333,   334,   335,     0,
       0,   336,   337,   338,   339,   340,     0,     0,   341,   342,
       0,   343,   344,   345,   346,   347,     0,     0,   348,   349,
       0,     0,     0,   350,   351,     0,   352,     0,     0,     0,
     353,     0,   354,   355,   356,   357,     0,   358,     0,   359,
       0,     0,     0,   360,   361,     0,   362,     0,     0,   363,
     364,     0,     0,     0,   365,   366,   367,   368,     0,     0,
     369,   370,   371,     0,     0,   372,     0,     0,     0,     0,
     373,   374,   375,     0,     0,     0,   376,     0,     0,     0,
     377,   378,     0,   379,   380,     0,     0,     0,   381,     0,
     382,     0,     0,   383,   384,     0,     0,   385,     0,     0,
     386,   387,  1142,     0,     0,     0,     0,   388,   389,     0,
     390,     0,   391,     0,   392,   393,     0,     0,     0,     0,
       0,     0,     0,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,     0,   412,   413,   414,     0,   415,   416,   417,
     418,     0,   419,   420,     0,     0,     0,     0,   421,   422,
     423,   424,   425,   426,     0,     0,   427,   428,     0,   429,
       0,   430,     0,   431,   432,   433,   434,   435,   436,   437,
     438,   439,     0,     0,   440,   441,     0,     0,   442,   443,
     444,   445,   446,     0,     0,     0,   447,   448,     0,     0,
       0,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   456,   457,   458,     0,   459,     0,   460,     0,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,     0,
     471,     0,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   481,   482,   483,     0,     0,   484,
       0,     0,     0,   485,   486,     0,   487,   488,     0,     0,
     489,   490,   491,   492,   493,     0,   494,   495,     0,   496,
     497,   498,     0,     0,   499,   500,   501,   502,   503,   504,
     505,   506,     0,   507,     0,   508,   509,     0,   510,   511,
     512,     0,   513,     0,     0,   514,   515,   516,   517,     0,
     518,     0,   519,   520,   521,   522,   523,     0,   524,   525,
       0,     0,     0,   526,   527,   528,   529,     0,     0,     0,
     530,     0,     0,     0,   531,     0,   532,   533,   534,   535,
       0,   536,   537,   538,   539,   540,     0,     0,     0,     0,
       0,   541,   542,   543,     0,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,   550,   551,   552,
     553,     0,     0,   554,   555,     0,     0,   556,   557,   558,
     559,   560,   561,     0,     0,   562,   563,   564,   565,     0,
     566,   567,     0,     0,   568,   569,   570,   571,     0,   240,
     572,   573,     0,   574,   575,   576,   577,     0,     0,     0,
       0,     0,   578,   579,     0,     0,     0,   580,   581,   582,
       0,     0,   583,   584,     0,   585,   586,     0,   587,   588,
       0,     0,   589,     0,     0,   590,     0,   591,     0,   592,
     593,     0,     0,     0,     0,     0,   594,     0,   595,     0,
       0,   596,     0,     0,     0,   597,     0,   598,   599,   600,
     601,     0,     0,     0,     0,     0,     0,   602,   603,   604,
       0,   605,   606,   607,   608,     0,     0,   609,     0,     0,
     610,   611,   612,   613,   614,     0,   615,     0,     0,     0,
       0,     0,     0,     0,     0,   616,   617,   618,     0,   619,
     620,   621,     0,   622,     0,     0,   623,     0,   624,     0,
       0,     0,     0,     0,     0,   625,   626,     0,     0,   627,
       0,   628,     0,   629,   630,     0,     0,     0,   631,   632,
     633,   634,   635,   636,   637,   638,     0,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,     0,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,     0,   673,   674,   675,   676,   677,   678,   679,
       0,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   243,   244,     0,   245,   246,   247,   248,   249,
       0,     0,   250,     0,     0,     0,     0,   251,     0,     0,
     252,     0,   253,   254,   255,   256,   257,   258,     0,   259,
       0,     0,     0,   260,     0,     0,     0,   261,     0,     0,
     262,   263,   264,     0,   265,     0,   266,   267,     0,     0,
     268,     0,     0,   269,   270,     0,   271,   272,   273,     0,
     274,     0,   275,   276,   277,   278,   279,   280,     0,   281,
     282,     0,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,     0,   294,   295,     0,   296,   297,   298,
     299,   300,  5476,     0,     0,   301,     0,     0,     0,     0,
     302,     0,     0,   303,     0,     0,     0,   304,   305,   306,
       0,     0,   307,     0,     0,     0,     0,   308,   309,     0,
       0,     0,     0,   310,   311,     0,   312,     0,     0,     0,
       0,     0,   313,   314,   315,   316,   317,     0,     0,     0,
     318,     0,     0,   319,   320,   321,     0,     0,     0,   322,
       0,   323,   324,     0,   325,   326,   327,     0,     0,   328,
     329,     0,   330,   331,   332,   333,   334,   335,     0,  5477,
     336,   337,   338,   339,   340,     0,     0,   341,   342,     0,
     343,   344,   345,   346,   347,     0,     0,   348,   349,     0,
       0,     0,   350,   351,     0,   352,     0,     0,     0,   353,
       0,   354,   355,   356,   357,     0,   358,     0,   359,     0,
       0,     0,   360,   361,     0,   362,     0,     0,   363,   364,
       0,     0,     0,   365,   366,   367,   368,     0,     0,   369,
     370,   371,     0,     0,   372,     0,     0,     0,     0,   373,
     374,   375,     0,     0,     0,   376,     0,     0,     0,   377,
     378,     0,   379,   380,     0,     0,     0,   381,     0,   382,
       0,     0,   383,   384,     0,     0,   385,     0,     0,   386,
     387,     0,     0,     0,     0,     0,   388,   389,     0,   390,
       0,   391,     0,   392,   393,     0,     0,     0,     0,     0,
       0,     0,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,     0,   412,   413,   414,     0,   415,   416,   417,   418,
       0,   419,   420,     0,     0,     0,     0,   421,   422,   423,
     424,   425,   426,     0,     0,   427,   428,     0,   429,     0,
     430,     0,   431,   432,   433,   434,   435,   436,   437,   438,
     439,     0,     0,   440,   441,     0,     0,   442,   443,   444,
     445,   446,     0,     0,     0,   447,   448,     0,     0,     0,
     449,     0,   450,   451,     0,   452,   453,   454,     0,     0,
     455,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     456,   457,   458,     0,   459,     0,   460,     0,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,     0,   471,
       0,   472,   473,   474,     0,   475,     0,   476,   477,   478,
     479,   480,     0,   481,   482,   483,     0,     0,   484,     0,
       0,     0,   485,   486,     0,   487,   488,     0,     0,   489,
     490,   491,   492,   493,     0,   494,   495,     0,   496,   497,
     498,     0,     0,   499,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,     0,   510,   511,   512,
       0,   513,     0,     0,   514,   515,   516,   517,     0,   518,
       0,   519,   520,   521,   522,   523,     0,   524,   525,     0,
       0,     0,   526,   527,   528,   529,     0,     0,     0,   530,
       0,     0,     0,   531,     0,   532,   533,   534,   535,     0,
     536,   537,   538,   539,   540,     0,     0,     0,     0,     0,
     541,   542,   543,     0,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,   550,   551,   552,   553,
       0,     0,   554,   555,     0,     0,   556,   557,   558,   559,
     560,   561,     0,     0,   562,   563,   564,   565,     0,   566,
     567,     0,     0,   568,   569,   570,   571,     0,     0,   572,
     573,     0,   574,   575,   576,   577,     0,     0,     0,     0,
       0,   578,   579,     0,     0,     0,   580,   581,   582,     0,
       0,   583,   584,     0,   585,   586,     0,   587,   588,     0,
       0,   589,     0,     0,   590,     0,   591,     0,   592,   593,
       0,     0,     0,     0,     0,   594,     0,   595,     0,     0,
     596,     0,     0,     0,   597,     0,   598,   599,   600,   601,
       0,     0,     0,     0,     0,     0,   602,   603,   604,     0,
     605,   606,   607,   608,     0,     0,   609,     0,     0,   610,
     611,   612,   613,   614,     0,   615,     0,     0,     0,     0,
       0,     0,     0,     0,   616,   617,   618,     0,   619,   620,
     621,     0,   622,     0,     0,   623,     0,   624,     0,     0,
       0,     0,     0,     0,   625,   626,     0,     0,   627,     0,
     628,     0,   629,   630,     0,     0,     0,   631,   632,   633,
     634,   635,   636,   637,   638,     0,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,     0,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,     0,   673,   674,   675,   676,   677,   678,   679,     0,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   243,   244,     0,   245,   246,   247,   248,   249,     0,
       0,   250,     0,     0,     0,     0,   251,     0,     0,   252,
       0,   253,   254,   255,   256,   257,   258,     0,   259,     0,
       0,     0,   260,     0,     0,     0,   261,     0,     0,   262,
     263,   264,     0,   265,     0,   266,   267,     0,     0,   268,
       0,     0,   269,   270,     0,   271,   272,   273,     0,   274,
       0,   275,   276,   277,   278,   279,   280,     0,   281,   282,
       0,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,     0,   294,   295,     0,   296,   297,   298,   299,
     300,     0,     0,     0,   301,     0,     0,     0,     0,   302,
       0,     0,   303,     0,     0,     0,   304,   305,   306,     0,
       0,   307,     0,     0,     0,     0,   308,   309,     0,     0,
       0,     0,   310,   311,     0,   312,     0,     0,     0,     0,
       0,   313,   314,   315,   316,   317,     0,     0,     0,   318,
       0,     0,   319,   320,   321,     0,     0,     0,   322,     0,
     323,   324,     0,   325,   326,   327,     0,     0,   328,   329,
       0,   330,   331,   332,   333,   334,   335,     0,     0,   336,
     337,   338,   339,   340,     0,     0,   341,   342,     0,   343,
     344,   345,   346,   347,     0,     0,   348,   349,     0,     0,
       0,   350,   351,     0,   352,     0,     0,     0,   353,     0,
     354,   355,   356,   357,     0,   358,     0,   359,     0,     0,
       0,   360,   361,     0,   362,     0,     0,   363,   364,     0,
       0,     0,   365,   366,   367,   368,     0,     0,   369,   370,
     371,     0,     0,   372,     0,     0,     0,     0,   373,   374,
     375,     0,     0,     0,   376,     0,     0,     0,   377,   378,
       0,   379,   380,     0,     0,     0,   381,     0,   382,     0,
       0,   383,   384,     0,     0,   385,     0,     0,   386,   387,
       0,     0,     0,     0,     0,   388,   389,     0,   390,     0,
     391,     0,   392,   393,     0,     0,     0,     0,     0,     0,
       0,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
       0,   412,   413,   414,     0,   415,   416,   417,   418,     0,
     419,   420,     0,     0,     0,     0,   421,   422,   423,   424,
     425,   426,     0,     0,   427,   428,     0,   429,     0,   430,
       0,   431,   432,   433,   434,   435,   436,   437,   438,   439,
       0,     0,   440,   441,     0,     0,   442,   443,   444,   445,
     446,     0,     0,     0,   447,   448,     0,     0,     0,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   456,
     457,   458,     0,   459,     0,   460,     0,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,     0,   471,     0,
     472,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   481,   482,   483,     0,     0,   484,     0,     0,
       0,   485,   486,     0,   487,   488,     0,     0,   489,   490,
     491,   492,   493,     0,   494,   495,     0,   496,   497,   498,
       0,     0,   499,   500,   501,   502,   503,   504,   505,   506,
       0,   507,     0,   508,   509,     0,   510,   511,   512,     0,
     513,     0,     0,   514,   515,   516,   517,     0,   518,     0,
     519,   520,   521,   522,   523,     0,   524,   525,     0,     0,
       0,   526,   527,   528,   529,     0,     0,     0,   530,     0,
       0,     0,   531,     0,   532,   533,   534,   535,     0,   536,
     537,   538,   539,   540,     0,     0,     0,  1004,     0,   541,
     542,   543,     0,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,   549,   550,   551,   552,   553,     0,
       0,   554,   555,     0,     0,   556,   557,   558,   559,   560,
     561,     0,     0,   562,   563,   564,   565,     0,   566,   567,
       0,     0,   568,   569,   570,   571,     0,     0,   572,   573,
       0,   574,   575,   576,   577,     0,     0,     0,     0,     0,
     578,   579,     0,     0,     0,   580,   581,   582,     0,     0,
     583,   584,     0,   585,   586,     0,   587,   588,     0,     0,
     589,     0,     0,   590,     0,   591,     0,   592,   593,     0,
       0,     0,     0,     0,   594,     0,   595,     0,     0,   596,
       0,     0,     0,   597,     0,   598,   599,   600,   601,     0,
       0,     0,     0,     0,     0,   602,   603,   604,     0,   605,
     606,   607,   608,     0,     0,   609,     0,     0,   610,   611,
     612,   613,   614,     0,   615,     0,     0,     0,     0,     0,
       0,     0,     0,   616,   617,   618,     0,   619,   620,   621,
       0,   622,     0,     0,   623,     0,   624,     0,     0,     0,
       0,     0,     0,   625,   626,     0,     0,   627,     0,   628,
       0,   629,   630,     0,     0,     0,   631,   632,   633,   634,
     635,   636,   637,   638,     0,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
       0,   673,   674,   675,   676,   677,   678,   679,     0,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     243,   244,     0,   245,   246,   247,   248,   249,     0,     0,
     250,     0,     0,     0,     0,   251,     0,     0,   252,     0,
     253,   254,   255,   256,   257,   258,     0,   259,     0,     0,
       0,   260,     0,     0,     0,   261,     0,     0,   262,   263,
     264,     0,   265,     0,   266,   267,     0,     0,   268,     0,
       0,   269,   270,     0,   271,   272,   273,     0,   274,     0,
     275,   276,   277,   278,   279,   280,     0,   281,   282,     0,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,   294,   295,     0,   296,   297,   298,   299,   300,
       0,     0,     0,   301,     0,     0,     0,     0,   302,     0,
       0,   303,     0,     0,     0,   304,   305,   306,     0,     0,
     307,     0,     0,     0,     0,   308,   309,     0,     0,     0,
       0,   310,   311,     0,   312,     0,     0,     0,     0,     0,
     313,   314,   315,   316,   317,     0,     0,     0,   318,     0,
       0,   319,   320,   321,     0,     0,     0,   322,     0,   323,
     324,     0,   325,   326,   327,     0,     0,   328,   329,     0,
     330,   331,   332,   333,   334,   335,     0,     0,   336,   337,
     338,   339,   340,     0,     0,   341,   342,     0,   343,   344,
     345,   346,   347,     0,     0,   348,   349,     0,     0,     0,
     350,   351,     0,   352,     0,     0,     0,   353,     0,   354,
     355,   356,   357,     0,   358,     0,   359,     0,     0,     0,
     360,   361,     0,   362,     0,     0,   363,   364,     0,     0,
       0,   365,   366,   367,   368,     0,     0,   369,   370,   371,
       0,     0,   372,     0,     0,     0,     0,   373,   374,   375,
       0,     0,     0,   376,     0,     0,     0,   377,   378,     0,
     379,   380,     0,     0,     0,   381,     0,   382,     0,     0,
     383,   384,     0,     0,   385,     0,     0,   386,   387,     0,
       0,     0,     0,     0,   388,   389,     0,   390,     0,   391,
       0,   392,   393,     0,     0,     0,     0,     0,     0,     0,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,     0,
     412,   413,   414,     0,   415,   416,   417,   418,     0,   419,
     420,     0,     0,     0,     0,   421,   422,   423,   424,   425,
     426,     0,     0,   427,   428,     0,   429,     0,   430,     0,
     431,   432,   433,   434,   435,   436,   437,   438,   439,     0,
       0,   440,   441,     0,     0,   442,   443,   444,   445,   446,
       0,     0,     0,   447,   448,     0,     0,     0,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   456,   457,
     458,     0,   459,     0,   460,     0,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,     0,   471,     0,   472,
     473,   474,     0,   475,     0,   476,   477,   478,   479,   480,
       0,   481,   482,   483,     0,     0,   484,     0,     0,     0,
     485,   486,     0,   487,   488,     0,     0,   489,   490,   491,
     492,   493,     0,   494,   495,     0,   496,   497,   498,     0,
       0,   499,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,     0,   510,   511,   512,     0,   513,
       0,     0,   514,   515,   516,   517,     0,   518,     0,   519,
     520,   521,   522,   523,     0,   524,   525,     0,     0,     0,
     526,   527,   528,   529,     0,     0,     0,   530,     0,     0,
       0,   531,     0,   532,   533,   534,   535,     0,   536,   537,
     538,   539,   540,     0,     0,     0,     0,     0,   541,   542,
     543,     0,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,   550,   551,   552,   553,     0,     0,
     554,   555,     0,     0,   556,   557,   558,   559,   560,   561,
       0,     0,   562,   563,   564,   565,     0,   566,   567,     0,
       0,   568,   569,   570,   571,     0,     0,   572,   573,     0,
     574,   575,   576,   577,     0,     0,     0,     0,     0,   578,
     579,     0,     0,     0,   580,   581,   582,     0,     0,   583,
     584,     0,   585,   586,     0,   587,   588,     0,     0,   589,
       0,     0,   590,     0,   591,     0,   592,   593,     0,     0,
       0,     0,     0,   594,     0,   595,     0,     0,   596,     0,
       0,     0,   597,     0,   598,   599,   600,   601,     0,     0,
       0,     0,     0,     0,   602,   603,   604,     0,   605,   606,
     607,   608,     0,     0,   609,     0,     0,   610,   611,   612,
     613,   614,     0,   615,  1110,     0,     0,     0,     0,     0,
       0,     0,   616,   617,   618,     0,   619,   620,   621,     0,
     622,     0,     0,   623,     0,   624,     0,     0,     0,     0,
       0,     0,   625,   626,     0,     0,   627,     0,   628,     0,
     629,   630,     0,     0,     0,   631,   632,   633,   634,   635,
     636,   637,   638,     0,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,     0,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,     0,
     673,   674,   675,   676,   677,   678,   679,     0,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
       0,  1180,     0,     0,   251,     0,     0,   252,     0,   253,
     254,   255,   256,   257,   258,     0,   259,     0,     0,     0,
     260,     0,     0,     0,   261,     0,     0,   262,   263,   264,
       0,   265,     0,   266,   267,     0,     0,   268,     0,     0,
     269,   270,     0,   271,   272,   273,     0,   274,     0,   275,
     276,   277,   278,   279,   280,     0,   281,   282,     0,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,   294,   295,     0,   296,   297,   298,   299,   300,     0,
       0,     0,   301,     0,     0,     0,     0,   302,     0,     0,
     303,     0,     0,     0,   304,   305,   306,     0,     0,   307,
       0,     0,     0,     0,   308,   309,     0,     0,     0,     0,
     310,   311,     0,   312,     0,     0,     0,     0,     0,   313,
     314,   315,   316,   317,     0,     0,     0,   318,     0,     0,
     319,   320,   321,     0,     0,     0,   322,     0,   323,   324,
       0,   325,   326,   327,     0,     0,   328,   329,     0,   330,
     331,   332,   333,   334,   335,     0,     0,   336,   337,   338,
     339,   340,     0,     0,   341,   342,     0,   343,   344,   345,
     346,   347,     0,     0,   348,   349,     0,     0,     0,  1181,
     351,     0,   352,     0,     0,     0,   353,     0,   354,   355,
     356,   357,     0,   358,     0,   359,     0,     0,     0,   360,
     361,     0,   362,     0,     0,   363,   364,     0,     0,     0,
     365,   366,   367,   368,     0,     0,   369,   370,   371,     0,
       0,   372,     0,     0,     0,     0,   373,   374,   375,     0,
       0,     0,   376,     0,     0,     0,   377,   378,     0,   379,
     380,     0,     0,     0,   381,     0,   382,     0,     0,   383,
     384,     0,     0,   385,     0,     0,   386,   387,     0,     0,
       0,     0,     0,   388,   389,     0,   390,     0,   391,     0,
     392,   393,     0,     0,     0,     0,     0,     0,     0,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,     0,   412,
     413,   414,     0,   415,   416,   417,   418,     0,   419,   420,
       0,     0,     0,     0,   421,   422,   423,   424,   425,   426,
       0,     0,   427,   428,     0,   429,     0,   430,     0,   431,
     432,   433,   434,   435,   436,   437,   438,   439,     0,     0,
     440,   441,     0,     0,   442,   443,   444,   445,   446,     0,
       0,     0,   447,   448,     0,     0,     0,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   456,   457,   458,
       0,   459,     0,   460,     0,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,     0,   471,     0,   472,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     481,   482,   483,     0,     0,   484,     0,     0,     0,   485,
     486,     0,   487,   488,     0,     0,   489,   490,   491,   492,
     493,     0,   494,   495,     0,   496,   497,   498,     0,     0,
     499,   500,   501,   502,   503,   504,   505,   506,     0,   507,
       0,   508,   509,     0,   510,   511,   512,     0,   513,     0,
       0,   514,   515,   516,   517,     0,   518,     0,   519,   520,
     521,   522,   523,     0,   524,   525,     0,     0,     0,   526,
     527,   528,   529,     0,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,   534,   535,     0,   536,   537,   538,
     539,   540,     0,     0,     0,     0,     0,   541,   542,   543,
       0,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,   550,   551,   552,   553,     0,     0,   554,
     555,     0,     0,   556,   557,   558,   559,   560,   561,     0,
       0,   562,   563,   564,   565,     0,   566,   567,     0,     0,
     568,   569,   570,   571,     0,     0,   572,   573,     0,   574,
     575,   576,   577,     0,     0,     0,     0,     0,   578,   579,
       0,     0,     0,   580,   581,   582,     0,     0,   583,   584,
       0,   585,   586,     0,   587,   588,     0,     0,   589,     0,
       0,   590,     0,   591,     0,   592,   593,     0,     0,     0,
       0,     0,   594,     0,   595,     0,     0,   596,     0,     0,
       0,   597,     0,   598,   599,   600,   601,     0,     0,     0,
       0,     0,     0,   602,   603,   604,     0,   605,   606,   607,
     608,     0,     0,   609,     0,     0,   610,   611,   612,   613,
     614,     0,   615,     0,     0,     0,     0,     0,     0,     0,
       0,   616,   617,   618,     0,   619,   620,   621,     0,   622,
       0,     0,   623,     0,   624,     0,     0,     0,     0,     0,
       0,   625,   626,     0,     0,   627,     0,   628,     0,   629,
     630,     0,     0,     0,   631,   632,   633,   634,   635,   636,
     637,   638,     0,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,     0,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,     0,   673,
     674,   675,   676,   677,   678,   679,     0,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   243,   244,
       0,   245,   246,   247,   248,   249,     0,     0,   250,     0,
       0,     0,     0,   251,     0,     0,   252,     0,   253,   254,
     255,   256,   257,   258,     0,   259,     0,     0,     0,   260,
       0,     0,     0,   261,     0,     0,   262,   263,   264,     0,
     265,     0,   266,   267,     0,     0,   268,     0,     0,   269,
     270,     0,   271,   272,   273,     0,   274,     0,   275,   276,
     277,   278,   279,   280,     0,   281,   282,     0,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
     294,   295,     0,   296,   297,   298,   299,   300,     0,     0,
       0,   301,     0,     0,     0,     0,   302,     0,     0,   303,
       0,     0,     0,   304,   305,   306,     0,     0,   307,     0,
       0,     0,     0,   308,   309,     0,     0,     0,     0,   310,
     311,     0,   312,     0,     0,     0,     0,     0,   313,   314,
     315,   316,   317,     0,     0,     0,   318,     0,     0,   319,
     320,   321,     0,     0,     0,   322,     0,   323,   324,     0,
     325,   326,   327,     0,     0,   328,   329,     0,   330,   331,
     332,   333,   334,   335,     0,     0,   336,   337,   338,   339,
     340,     0,     0,   341,   342,     0,   343,   344,   345,   346,
     347,     0,     0,   348,   349,     0,     0,     0,   350,   351,
       0,   352,     0,     0,     0,   353,     0,   354,   355,   356,
     357,     0,   358,     0,   359,     0,     0,     0,   360,   361,
       0,   362,     0,     0,   363,   364,     0,     0,     0,   365,
     366,   367,   368,     0,     0,   369,   370,   371,     0,     0,
     372,     0,     0,     0,     0,   373,   374,   375,     0,     0,
       0,   376,     0,     0,     0,   377,   378,     0,   379,   380,
       0,     0,     0,   381,     0,   382,     0,     0,   383,   384,
       0,     0,   385,     0,     0,   386,   387,     0,     0,     0,
       0,     0,   388,   389,     0,   390,     0,   391,     0,   392,
     393,     0,     0,     0,     0,     0,     0,     0,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,     0,   412,   413,
     414,     0,   415,   416,   417,   418,     0,   419,   420,     0,
       0,     0,     0,   421,   422,   423,   424,   425,   426,     0,
       0,   427,   428,     0,   429,     0,   430,     0,   431,   432,
     433,   434,   435,   436,   437,   438,   439,     0,     0,   440,
     441,     0,     0,   442,   443,   444,   445,   446,     0,     0,
       0,   447,   448,     0,     0,     0,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   456,   457,   458,     0,
     459,     0,   460,     0,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,     0,   471,     0,   472,   473,   474,
       0,   475,     0,   476,   477,   478,   479,   480,     0,   481,
     482,   483,     0,     0,   484,     0,     0,     0,   485,   486,
       0,   487,   488,     0,     0,   489,   490,   491,   492,   493,
       0,   494,   495,     0,   496,   497,   498,     0,     0,   499,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,     0,   510,   511,   512,     0,   513,     0,     0,
     514,   515,   516,   517,     0,   518,     0,   519,   520,   521,
     522,   523,     0,   524,   525,     0,     0,     0,   526,   527,
     528,   529,     0,     0,     0,   530,     0,     0,     0,   531,
       0,   532,   533,   534,   535,     0,   536,   537,   538,   539,
     540,     0,     0,     0,     0,     0,   541,   542,   543,     0,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,   550,   551,   552,   553,     0,     0,   554,   555,
       0,     0,   556,   557,   558,   559,   560,   561,     0,     0,
     562,   563,   564,   565,     0,   566,   567,     0,     0,   568,
     569,   570,   571,     0,  1368,   572,   573,     0,   574,   575,
     576,   577,     0,     0,     0,     0,     0,   578,   579,     0,
       0,     0,   580,   581,   582,     0,     0,   583,   584,     0,
     585,   586,     0,   587,   588,     0,     0,   589,     0,     0,
     590,     0,   591,     0,   592,   593,     0,     0,     0,     0,
       0,   594,     0,   595,     0,     0,   596,     0,     0,     0,
     597,     0,   598,   599,   600,   601,     0,     0,     0,     0,
       0,     0,   602,   603,   604,     0,   605,   606,   607,   608,
       0,     0,   609,     0,     0,   610,   611,   612,   613,   614,
       0,   615,     0,     0,     0,     0,     0,     0,     0,     0,
     616,   617,   618,     0,   619,   620,   621,     0,   622,     0,
       0,   623,     0,   624,     0,     0,     0,     0,     0,     0,
     625,   626,     0,     0,   627,     0,   628,     0,   629,   630,
       0,     0,     0,   631,   632,   633,   634,   635,   636,   637,
     638,     0,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,     0,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,     0,   673,   674,
     675,   676,   677,   678,   679,     0,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   243,   244,     0,
     245,   246,   247,   248,   249,     0,     0,   250,     0,     0,
       0,     0,   251,     0,     0,   252,     0,   253,   254,   255,
     256,   257,   258,     0,   259,     0,     0,     0,   260,     0,
       0,     0,   261,     0,     0,   262,   263,   264,     0,   265,
       0,   266,   267,     0,     0,   268,     0,     0,   269,   270,
       0,   271,   272,   273,     0,   274,     0,   275,   276,   277,
     278,   279,   280,     0,   281,   282,     0,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,   294,
     295,     0,   296,   297,   298,   299,   300,     0,     0,     0,
     301,     0,     0,     0,     0,   302,     0,     0,   303,     0,
       0,     0,   304,   305,   306,     0,     0,   307,     0,     0,
       0,     0,   308,   309,     0,     0,     0,     0,   310,   311,
       0,   312,     0,     0,     0,     0,     0,   313,   314,   315,
     316,   317,     0,     0,     0,   318,     0,     0,   319,   320,
     321,     0,     0,     0,   322,     0,   323,   324,     0,   325,
     326,   327,     0,     0,   328,   329,     0,   330,   331,   332,
     333,   334,   335,     0,     0,   336,   337,   338,   339,   340,
       0,     0,   341,   342,     0,   343,   344,   345,   346,   347,
       0,     0,   348,   349,     0,     0,     0,   350,   351,  2440,
     352,     0,     0,     0,   353,     0,   354,   355,   356,   357,
       0,   358,     0,   359,     0,     0,     0,   360,   361,     0,
     362,     0,     0,   363,   364,     0,     0,     0,   365,   366,
     367,   368,     0,     0,   369,   370,   371,     0,     0,   372,
       0,     0,     0,     0,   373,   374,   375,     0,     0,     0,
     376,     0,     0,     0,   377,   378,     0,   379,   380,     0,
       0,     0,   381,     0,   382,     0,     0,   383,   384,     0,
       0,   385,     0,     0,   386,   387,     0,     0,     0,     0,
       0,   388,   389,     0,   390,     0,   391,     0,   392,   393,
       0,     0,     0,     0,     0,     0,     0,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,     0,   412,   413,   414,
       0,   415,   416,   417,   418,     0,   419,   420,     0,     0,
       0,     0,   421,   422,   423,   424,   425,   426,     0,     0,
     427,   428,     0,   429,     0,   430,     0,   431,   432,   433,
     434,   435,   436,   437,   438,   439,     0,     0,   440,   441,
       0,     0,   442,   443,   444,   445,   446,     0,     0,     0,
     447,   448,     0,     0,     0,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   456,   457,   458,     0,   459,
       0,   460,     0,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,     0,   471,     0,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   481,   482,
     483,     0,     0,   484,     0,     0,     0,   485,   486,     0,
     487,   488,     0,     0,   489,   490,   491,   492,   493,     0,
     494,   495,     0,   496,   497,   498,     0,     0,   499,   500,
     501,   502,   503,   504,   505,   506,     0,   507,     0,   508,
     509,     0,   510,   511,   512,     0,   513,     0,     0,   514,
     515,   516,   517,     0,   518,     0,   519,   520,   521,   522,
     523,     0,   524,   525,     0,     0,     0,   526,   527,   528,
     529,     0,     0,     0,   530,     0,     0,     0,   531,     0,
     532,   533,   534,   535,     0,   536,   537,   538,   539,   540,
       0,     0,     0,     0,     0,   541,   542,   543,     0,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,   550,   551,   552,   553,     0,     0,   554,   555,     0,
       0,   556,   557,   558,   559,   560,   561,     0,     0,   562,
     563,   564,   565,     0,   566,   567,     0,     0,   568,   569,
     570,   571,     0,     0,   572,   573,     0,   574,   575,   576,
     577,     0,     0,     0,     0,     0,   578,   579,     0,     0,
       0,   580,   581,   582,     0,     0,   583,   584,     0,   585,
     586,     0,   587,   588,     0,     0,   589,     0,     0,   590,
       0,   591,     0,   592,   593,     0,     0,     0,     0,     0,
     594,     0,   595,     0,     0,   596,     0,     0,     0,   597,
       0,   598,   599,   600,   601,     0,     0,     0,     0,     0,
       0,   602,   603,   604,     0,   605,   606,   607,   608,     0,
       0,   609,     0,     0,   610,   611,   612,   613,   614,     0,
     615,     0,     0,     0,     0,     0,     0,     0,     0,   616,
     617,   618,     0,   619,   620,   621,     0,   622,     0,     0,
     623,     0,   624,     0,     0,     0,     0,     0,     0,   625,
     626,     0,     0,   627,     0,   628,     0,   629,   630,     0,
       0,     0,   631,   632,   633,   634,   635,   636,   637,   638,
       0,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,     0,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,     0,   673,   674,   675,
     676,   677,   678,   679,     0,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   243,   244,     0,   245,
     246,   247,   248,   249,     0,     0,   250,     0,     0,     0,
       0,   251,     0,     0,   252,     0,   253,   254,   255,   256,
     257,   258,     0,   259,     0,     0,     0,   260,     0,     0,
       0,   261,     0,     0,   262,   263,   264,     0,   265,     0,
     266,   267,     0,     0,   268,     0,     0,   269,   270,     0,
     271,   272,   273,     0,   274,     0,   275,   276,   277,   278,
     279,   280,     0,   281,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,   299,   300,     0,     0,     0,   301,
       0,     0,     0,     0,   302,     0,     0,   303,     0,     0,
       0,   304,   305,   306,     0,     0,   307,     0,     0,     0,
       0,   308,   309,     0,     0,     0,  2575,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,   318,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,   323,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,   332,   333,
     334,   335,     0,     0,   336,   337,   338,   339,   340,     0,
       0,   341,   342,     0,   343,   344,   345,   346,   347,     0,
       0,   348,   349,     0,     0,     0,   350,   351,     0,   352,
       0,     0,     0,   353,     0,   354,   355,   356,   357,     0,
     358,     0,   359,     0,     0,     0,   360,   361,     0,   362,
       0,     0,   363,   364,     0,     0,     0,   365,   366,   367,
     368,     0,     0,   369,   370,   371,     0,     0,   372,     0,
       0,     0,     0,   373,   374,   375,     0,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,     0,     0,
       0,   381,     0,   382,     0,     0,   383,   384,     0,     0,
     385,     0,     0,   386,   387,     0,     0,     0,     0,     0,
     388,   389,     0,   390,     0,   391,     0,   392,   393,     0,
       0,     0,     0,     0,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,     0,
     415,   416,   417,   418,     0,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,     0,   429,     0,   430,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,     0,     0,   440,   441,     0,
       0,   442,   443,   444,   445,   446,     0,     0,     0,   447,
     448,     0,     0,     0,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,     0,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     0,   471,     0,   472,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   481,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,   497,   498,     0,     0,   499,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
       0,   510,   511,   512,     0,   513,     0,     0,   514,   515,
     516,   517,     0,   518,     0,   519,   520,   521,   522,   523,
       0,   524,   525,     0,     0,     0,   526,   527,   528,   529,
       0,     0,     0,   530,     0,     0,     0,   531,     0,   532,
     533,   534,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
     550,   551,   552,   553,     0,     0,   554,   555,     0,     0,
     556,   557,   558,   559,   560,   561,     0,     0,   562,   563,
     564,   565,     0,   566,   567,     0,     0,   568,   569,   570,
     571,     0,     0,   572,   573,     0,   574,   575,   576,   577,
       0,     0,     0,     0,     0,   578,   579,     0,     0,     0,
     580,   581,   582,     0,     0,   583,   584,     0,   585,   586,
       0,   587,   588,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   592,   593,     0,     0,     0,     0,     0,   594,
       0,   595,     0,     0,   596,     0,     0,     0,   597,     0,
     598,   599,   600,   601,     0,     0,     0,     0,     0,     0,
     602,   603,   604,     0,   605,   606,   607,   608,     0,     0,
     609,     0,     0,   610,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,     0,     0,     0,   616,   617,
     618,     0,   619,   620,   621,     0,   622,     0,     0,   623,
       0,   624,     0,     0,     0,     0,     0,     0,   625,   626,
       0,     0,   627,     0,   628,     0,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,   638,     0,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   673,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   243,   244,     0,   245,   246,
     247,   248,   249,     0,     0,   250,     0,     0,     0,     0,
     251,     0,     0,   252,     0,   253,   254,   255,   256,   257,
     258,     0,   259,     0,     0,     0,   260,     0,     0,     0,
     261,     0,     0,   262,   263,   264,     0,   265,     0,   266,
     267,     0,     0,   268,     0,     0,   269,   270,     0,   271,
     272,   273,     0,   274,     0,   275,   276,   277,   278,   279,
     280,     0,   281,   282,     0,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,   294,   295,     0,
     296,   297,   298,   299,   300,     0,     0,     0,   301,     0,
       0,     0,     0,   302,     0,     0,   303,     0,     0,     0,
     304,   305,   306,     0,     0,   307,     0,     0,     0,     0,
     308,   309,     0,     0,     0,  3206,   310,   311,     0,   312,
       0,     0,     0,     0,     0,   313,   314,   315,   316,   317,
       0,     0,     0,   318,     0,     0,   319,   320,   321,     0,
       0,     0,   322,     0,   323,   324,     0,   325,   326,   327,
       0,     0,   328,   329,     0,   330,   331,   332,   333,   334,
     335,     0,     0,   336,   337,   338,   339,   340,     0,     0,
     341,   342,     0,   343,   344,   345,   346,   347,     0,     0,
     348,   349,     0,     0,     0,   350,   351,     0,   352,     0,
       0,     0,   353,     0,   354,   355,   356,   357,     0,   358,
       0,   359,     0,     0,     0,   360,   361,     0,   362,     0,
       0,   363,   364,     0,     0,     0,   365,   366,   367,   368,
       0,     0,   369,   370,   371,     0,     0,   372,     0,     0,
       0,     0,   373,   374,   375,     0,     0,     0,   376,     0,
       0,     0,   377,   378,     0,   379,   380,     0,     0,     0,
     381,     0,   382,     0,     0,   383,   384,     0,     0,   385,
       0,     0,   386,   387,     0,     0,     0,     0,     0,   388,
     389,     0,   390,     0,   391,     0,   392,   393,     0,     0,
       0,     0,     0,     0,     0,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,     0,   412,   413,   414,     0,   415,
     416,   417,   418,     0,   419,   420,     0,     0,     0,     0,
     421,   422,   423,   424,   425,   426,     0,     0,   427,   428,
       0,   429,     0,   430,     0,   431,   432,   433,   434,   435,
     436,   437,   438,   439,     0,     0,   440,   441,     0,     0,
     442,   443,   444,   445,   446,     0,     0,     0,   447,   448,
       0,     0,     0,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   456,   457,   458,     0,   459,     0,   460,
       0,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,     0,   471,     0,   472,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   481,   482,   483,     0,
       0,   484,     0,     0,     0,   485,   486,     0,   487,   488,
       0,     0,   489,   490,   491,   492,   493,     0,   494,   495,
       0,   496,   497,   498,     0,     0,   499,   500,   501,   502,
     503,   504,   505,   506,     0,   507,     0,   508,   509,     0,
     510,   511,   512,     0,   513,     0,     0,   514,   515,   516,
     517,     0,   518,     0,   519,   520,   521,   522,   523,     0,
     524,   525,     0,     0,     0,   526,   527,   528,   529,     0,
       0,     0,   530,     0,     0,     0,   531,     0,   532,   533,
     534,   535,     0,   536,   537,   538,   539,   540,     0,     0,
       0,     0,     0,   541,   542,   543,     0,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,   550,
     551,   552,   553,     0,     0,   554,   555,     0,     0,   556,
     557,   558,   559,   560,   561,     0,     0,   562,   563,   564,
     565,     0,   566,   567,     0,     0,   568,   569,   570,   571,
       0,     0,   572,   573,     0,   574,   575,   576,   577,     0,
       0,     0,     0,     0,   578,   579,     0,     0,     0,   580,
     581,   582,     0,     0,   583,   584,     0,   585,   586,     0,
     587,   588,     0,     0,   589,     0,     0,   590,     0,   591,
       0,   592,   593,     0,     0,     0,     0,     0,   594,     0,
     595,     0,     0,   596,     0,     0,     0,   597,     0,   598,
     599,   600,   601,     0,     0,     0,     0,     0,     0,   602,
     603,   604,     0,   605,   606,   607,   608,     0,     0,   609,
       0,     0,   610,   611,   612,   613,   614,     0,   615,     0,
       0,     0,     0,     0,     0,     0,     0,   616,   617,   618,
       0,   619,   620,   621,     0,   622,     0,     0,   623,     0,
     624,     0,     0,     0,     0,     0,     0,   625,   626,     0,
       0,   627,     0,   628,     0,   629,   630,     0,     0,     0,
     631,   632,   633,   634,   635,   636,   637,   638,     0,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,     0,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,     0,   673,   674,   675,   676,   677,
     678,   679,     0,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   243,   244,     0,   245,   246,   247,
     248,   249,  3229,     0,   250,     0,     0,     0,     0,   251,
       0,     0,   252,     0,   253,   254,   255,   256,   257,   258,
       0,   259,     0,     0,     0,   260,     0,     0,     0,   261,
       0,     0,   262,   263,   264,     0,   265,     0,   266,   267,
       0,     0,   268,     0,     0,   269,   270,     0,   271,   272,
     273,     0,   274,     0,   275,   276,   277,   278,   279,   280,
       0,   281,   282,     0,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,     0,   294,   295,     0,   296,
     297,   298,   299,   300,     0,     0,     0,   301,     0,     0,
       0,     0,   302,     0,     0,   303,     0,     0,     0,   304,
     305,   306,     0,     0,   307,     0,     0,     0,     0,   308,
     309,     0,     0,     0,     0,   310,   311,     0,   312,     0,
       0,     0,     0,     0,   313,   314,   315,   316,   317,     0,
       0,     0,   318,     0,     0,   319,   320,   321,     0,     0,
       0,   322,     0,   323,   324,     0,   325,   326,   327,     0,
       0,   328,   329,     0,   330,   331,   332,   333,   334,   335,
       0,     0,   336,   337,   338,   339,   340,     0,     0,   341,
     342,     0,   343,   344,   345,   346,   347,     0,     0,   348,
     349,     0,     0,     0,   350,   351,     0,   352,     0,     0,
       0,   353,     0,   354,   355,   356,   357,     0,   358,     0,
     359,     0,     0,     0,   360,   361,     0,   362,     0,     0,
     363,   364,     0,     0,     0,   365,   366,   367,   368,     0,
       0,   369,   370,   371,     0,     0,   372,     0,     0,     0,
       0,   373,   374,   375,     0,     0,     0,   376,     0,     0,
       0,   377,   378,     0,   379,   380,     0,     0,     0,   381,
       0,   382,     0,     0,   383,   384,     0,     0,   385,     0,
       0,   386,   387,     0,     0,     0,     0,     0,   388,   389,
       0,   390,     0,   391,     0,   392,   393,     0,     0,     0,
       0,     0,     0,     0,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,   413,   414,     0,   415,   416,
     417,   418,     0,   419,   420,     0,     0,     0,     0,   421,
     422,   423,   424,   425,   426,     0,     0,   427,   428,     0,
     429,     0,   430,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,     0,     0,   440,   441,     0,     0,   442,
     443,   444,   445,   446,     0,     0,     0,   447,   448,     0,
       0,     0,   449,     0,   450,   451,     0,   452,   453,   454,
       0,     0,   455,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   456,   457,   458,     0,   459,     0,   460,     0,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
       0,   471,     0,   472,   473,   474,     0,   475,     0,   476,
     477,   478,   479,   480,     0,   481,   482,   483,     0,     0,
     484,     0,     0,     0,   485,   486,     0,   487,   488,     0,
       0,   489,   490,   491,   492,   493,     0,   494,   495,     0,
     496,   497,   498,     0,     0,   499,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,     0,   510,
     511,   512,     0,   513,     0,     0,   514,   515,   516,   517,
       0,   518,     0,   519,   520,   521,   522,   523,     0,   524,
     525,     0,     0,     0,   526,   527,   528,   529,     0,     0,
       0,   530,     0,     0,     0,   531,     0,   532,   533,   534,
     535,     0,   536,   537,   538,   539,   540,     0,     0,     0,
       0,     0,   541,   542,   543,     0,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,   550,   551,
     552,   553,     0,     0,   554,   555,     0,     0,   556,   557,
     558,   559,   560,   561,     0,     0,   562,   563,   564,   565,
       0,   566,   567,     0,     0,   568,   569,   570,   571,     0,
       0,   572,   573,     0,   574,   575,   576,   577,     0,     0,
       0,     0,     0,   578,   579,     0,     0,     0,   580,   581,
     582,     0,     0,   583,   584,     0,   585,   586,     0,   587,
     588,     0,     0,   589,     0,     0,   590,     0,   591,     0,
     592,   593,     0,     0,     0,     0,     0,   594,     0,   595,
       0,     0,   596,     0,     0,     0,   597,     0,   598,   599,
     600,   601,     0,     0,     0,     0,     0,     0,   602,   603,
     604,     0,   605,   606,   607,   608,     0,     0,   609,     0,
       0,   610,   611,   612,   613,   614,     0,   615,     0,     0,
       0,     0,     0,     0,     0,     0,   616,   617,   618,     0,
     619,   620,   621,     0,   622,     0,     0,   623,     0,   624,
       0,     0,     0,     0,     0,     0,   625,   626,     0,     0,
     627,     0,   628,     0,   629,   630,     0,     0,     0,   631,
     632,   633,   634,   635,   636,   637,   638,     0,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,     0,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,     0,   673,   674,   675,   676,   677,   678,
     679,     0,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   243,   244,     0,   245,   246,   247,   248,
     249,     0,     0,   250,     0,     0,     0,     0,   251,     0,
       0,   252,     0,   253,   254,   255,   256,   257,   258,     0,
     259,     0,     0,     0,   260,     0,     0,     0,   261,     0,
       0,   262,   263,   264,     0,   265,     0,   266,   267,     0,
       0,   268,     0,     0,   269,   270,     0,   271,   272,   273,
       0,   274,     0,   275,   276,   277,   278,   279,   280,     0,
     281,   282,     0,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,   294,   295,     0,   296,   297,
     298,   299,   300,     0,     0,     0,   301,     0,     0,     0,
       0,   302,     0,     0,   303,     0,     0,     0,   304,   305,
     306,     0,     0,   307,     0,     0,     0,     0,   308,   309,
       0,     0,     0,  3258,   310,   311,     0,   312,     0,     0,
       0,     0,     0,   313,   314,   315,   316,   317,     0,     0,
       0,   318,     0,     0,   319,   320,   321,     0,     0,     0,
     322,     0,   323,   324,     0,   325,   326,   327,     0,     0,
     328,   329,     0,   330,   331,   332,   333,   334,   335,     0,
       0,   336,   337,   338,   339,   340,     0,     0,   341,   342,
       0,   343,   344,   345,   346,   347,     0,     0,   348,   349,
       0,     0,     0,   350,   351,     0,   352,     0,     0,     0,
     353,     0,   354,   355,   356,   357,     0,   358,     0,   359,
       0,     0,     0,   360,   361,     0,   362,     0,     0,   363,
     364,     0,     0,     0,   365,   366,   367,   368,     0,     0,
     369,   370,   371,     0,     0,   372,     0,     0,     0,     0,
     373,   374,   375,     0,     0,     0,   376,     0,     0,     0,
     377,   378,     0,   379,   380,     0,     0,     0,   381,     0,
     382,     0,     0,   383,   384,     0,     0,   385,     0,     0,
     386,   387,     0,     0,     0,     0,     0,   388,   389,     0,
     390,     0,   391,     0,   392,   393,     0,     0,     0,     0,
       0,     0,     0,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,     0,   412,   413,   414,     0,   415,   416,   417,
     418,     0,   419,   420,     0,     0,     0,     0,   421,   422,
     423,   424,   425,   426,     0,     0,   427,   428,     0,   429,
       0,   430,     0,   431,   432,   433,   434,   435,   436,   437,
     438,   439,     0,     0,   440,   441,     0,     0,   442,   443,
     444,   445,   446,     0,     0,     0,   447,   448,     0,     0,
       0,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   456,   457,   458,     0,   459,     0,   460,     0,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,     0,
     471,     0,   472,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   481,   482,   483,     0,     0,   484,
       0,     0,     0,   485,   486,     0,   487,   488,     0,     0,
     489,   490,   491,   492,   493,     0,   494,   495,     0,   496,
     497,   498,     0,     0,   499,   500,   501,   502,   503,   504,
     505,   506,     0,   507,     0,   508,   509,     0,   510,   511,
     512,     0,   513,     0,     0,   514,   515,   516,   517,     0,
     518,     0,   519,   520,   521,   522,   523,     0,   524,   525,
       0,     0,     0,   526,   527,   528,   529,     0,     0,     0,
     530,     0,     0,     0,   531,     0,   532,   533,   534,   535,
       0,   536,   537,   538,   539,   540,     0,     0,     0,     0,
       0,   541,   542,   543,     0,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,   550,   551,   552,
     553,     0,     0,   554,   555,     0,     0,   556,   557,   558,
     559,   560,   561,     0,     0,   562,   563,   564,   565,     0,
     566,   567,     0,     0,   568,   569,   570,   571,     0,     0,
     572,   573,     0,   574,   575,   576,   577,     0,     0,     0,
       0,     0,   578,   579,     0,     0,     0,   580,   581,   582,
       0,     0,   583,   584,     0,   585,   586,     0,   587,   588,
       0,     0,   589,     0,     0,   590,     0,   591,     0,   592,
     593,     0,     0,     0,     0,     0,   594,     0,   595,     0,
       0,   596,     0,     0,     0,   597,     0,   598,   599,   600,
     601,     0,     0,     0,     0,     0,     0,   602,   603,   604,
       0,   605,   606,   607,   608,     0,     0,   609,     0,     0,
     610,   611,   612,   613,   614,     0,   615,     0,     0,     0,
       0,     0,     0,     0,     0,   616,   617,   618,     0,   619,
     620,   621,     0,   622,     0,     0,   623,     0,   624,     0,
       0,     0,     0,     0,     0,   625,   626,     0,     0,   627,
       0,   628,     0,   629,   630,     0,     0,     0,   631,   632,
     633,   634,   635,   636,   637,   638,     0,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,     0,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,     0,   673,   674,   675,   676,   677,   678,   679,
       0,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   243,   244,     0,   245,   246,   247,   248,   249,
       0,     0,   250,     0,     0,     0,     0,   251,     0,     0,
     252,     0,   253,   254,   255,   256,   257,   258,     0,   259,
       0,     0,     0,   260,     0,     0,     0,   261,     0,     0,
     262,   263,   264,     0,   265,     0,   266,   267,     0,     0,
     268,     0,     0,   269,   270,     0,   271,   272,   273,     0,
     274,     0,   275,   276,   277,   278,   279,   280,     0,   281,
     282,     0,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,     0,   294,   295,     0,   296,   297,   298,
     299,   300,     0,     0,     0,   301,     0,     0,     0,     0,
     302,     0,     0,   303,     0,     0,     0,   304,   305,   306,
       0,     0,   307,     0,     0,     0,     0,   308,   309,     0,
       0,     0,     0,   310,   311,     0,   312,     0,     0,     0,
       0,     0,   313,   314,   315,   316,   317,     0,     0,     0,
     318,     0,     0,   319,   320,   321,     0,     0,     0,   322,
       0,   323,   324,     0,   325,   326,   327,     0,     0,   328,
     329,     0,   330,   331,   332,   333,   334,   335,     0,     0,
     336,   337,   338,   339,   340,     0,     0,   341,   342,     0,
     343,   344,   345,   346,   347,     0,     0,   348,   349,     0,
       0,     0,   350,   351,     0,   352,     0,     0,     0,   353,
       0,   354,   355,   356,   357,     0,   358,     0,   359,     0,
       0,     0,   360,   361,     0,   362,     0,     0,   363,   364,
       0,     0,     0,   365,   366,   367,   368,     0,     0,   369,
     370,   371,     0,     0,   372,     0,     0,     0,     0,   373,
     374,   375,     0,     0,     0,   376,     0,     0,     0,   377,
     378,     0,   379,   380,     0,     0,     0,   381,     0,   382,
       0,     0,   383,   384,     0,     0,   385,     0,     0,   386,
     387,     0,     0,     0,     0,     0,   388,   389,     0,   390,
       0,   391,     0,   392,   393,     0,     0,     0,     0,     0,
       0,     0,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,     0,   412,   413,   414,     0,   415,   416,   417,   418,
       0,   419,   420,     0,     0,     0,     0,   421,   422,   423,
     424,   425,   426,     0,     0,   427,   428,     0,   429,     0,
     430,     0,   431,   432,   433,   434,   435,   436,   437,   438,
     439,     0,     0,   440,   441,     0,     0,   442,   443,   444,
     445,   446,     0,     0,     0,   447,   448,     0,     0,     0,
     449,     0,   450,   451,     0,   452,   453,   454,     0,     0,
     455,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     456,   457,   458,     0,   459,     0,   460,     0,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,     0,   471,
       0,   472,   473,   474,  3323,   475,     0,   476,   477,   478,
     479,   480,     0,   481,   482,   483,     0,     0,   484,     0,
       0,     0,   485,   486,     0,   487,   488,     0,     0,   489,
     490,   491,   492,   493,     0,   494,   495,     0,   496,   497,
     498,     0,     0,   499,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,     0,   510,   511,   512,
       0,   513,     0,     0,   514,   515,   516,   517,     0,   518,
       0,   519,   520,   521,   522,   523,     0,   524,   525,     0,
       0,     0,   526,   527,   528,   529,     0,     0,     0,   530,
       0,     0,     0,   531,     0,   532,   533,   534,   535,     0,
     536,   537,   538,   539,   540,     0,     0,     0,     0,     0,
     541,   542,   543,     0,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,   550,   551,   552,   553,
       0,     0,   554,   555,     0,     0,   556,   557,   558,   559,
     560,   561,     0,     0,   562,   563,   564,   565,     0,   566,
     567,     0,     0,   568,   569,   570,   571,     0,     0,   572,
     573,     0,   574,   575,   576,   577,     0,     0,     0,     0,
       0,   578,   579,     0,     0,     0,   580,   581,   582,     0,
       0,   583,   584,     0,   585,   586,     0,   587,   588,     0,
       0,   589,     0,     0,   590,     0,   591,     0,   592,   593,
       0,     0,     0,     0,     0,   594,     0,   595,     0,     0,
     596,     0,     0,     0,   597,     0,   598,   599,   600,   601,
       0,     0,     0,     0,     0,     0,   602,   603,   604,     0,
     605,   606,   607,   608,     0,     0,   609,     0,     0,   610,
     611,   612,   613,   614,     0,   615,     0,     0,     0,     0,
       0,     0,     0,     0,   616,   617,   618,     0,   619,   620,
     621,     0,   622,     0,     0,   623,     0,   624,     0,     0,
       0,     0,     0,     0,   625,   626,     0,     0,   627,     0,
     628,     0,   629,   630,     0,     0,     0,   631,   632,   633,
     634,   635,   636,   637,   638,     0,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,     0,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,     0,   673,   674,   675,   676,   677,   678,   679,     0,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   243,   244,     0,   245,   246,   247,   248,   249,     0,
       0,   250,     0,     0,     0,     0,   251,     0,     0,   252,
       0,   253,   254,   255,   256,   257,   258,     0,   259,     0,
       0,     0,   260,     0,     0,     0,   261,     0,     0,   262,
     263,   264,     0,   265,     0,   266,   267,     0,     0,   268,
       0,     0,   269,   270,     0,   271,   272,   273,     0,   274,
       0,   275,   276,   277,   278,   279,   280,     0,   281,   282,
       0,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,     0,   294,   295,     0,   296,   297,   298,   299,
     300,     0,     0,     0,   301,     0,     0,     0,     0,   302,
       0,     0,   303,     0,     0,     0,   304,   305,   306,     0,
       0,   307,     0,     0,     0,     0,   308,   309,     0,     0,
       0,     0,   310,   311,     0,   312,     0,     0,     0,     0,
       0,   313,   314,   315,   316,   317,     0,     0,     0,   318,
       0,     0,   319,   320,   321,     0,     0,     0,   322,     0,
     323,   324,     0,   325,   326,   327,     0,     0,   328,   329,
       0,   330,   331,   332,   333,   334,   335,     0,     0,   336,
     337,   338,   339,   340,     0,     0,   341,   342,     0,   343,
     344,   345,   346,   347,     0,     0,   348,   349,     0,     0,
       0,   350,   351,     0,   352,     0,     0,     0,   353,     0,
     354,   355,   356,   357,     0,   358,     0,   359,     0,     0,
       0,   360,   361,     0,   362,     0,     0,   363,   364,     0,
       0,     0,   365,   366,   367,   368,     0,     0,   369,   370,
     371,     0,     0,   372,     0,     0,     0,     0,   373,   374,
     375,     0,     0,     0,   376,     0,     0,     0,   377,   378,
       0,   379,   380,     0,     0,     0,   381,     0,   382,     0,
       0,   383,   384,     0,     0,   385,     0,     0,   386,   387,
       0,     0,     0,     0,     0,   388,   389,     0,   390,     0,
     391,     0,   392,   393,     0,     0,     0,     0,     0,     0,
       0,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
       0,   412,   413,   414,     0,   415,   416,   417,   418,     0,
     419,   420,     0,     0,     0,     0,   421,   422,   423,   424,
     425,   426,     0,     0,   427,   428,     0,   429,     0,   430,
       0,   431,   432,   433,   434,   435,   436,   437,   438,   439,
       0,     0,   440,   441,     0,     0,   442,   443,   444,   445,
     446,     0,     0,     0,   447,   448,     0,     0,     0,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   456,
     457,   458,     0,   459,     0,   460,     0,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,     0,   471,     0,
     472,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   481,   482,   483,     0,     0,   484,     0,     0,
       0,   485,   486,     0,   487,   488,     0,     0,   489,   490,
     491,   492,   493,     0,   494,   495,     0,   496,   497,   498,
       0,     0,   499,   500,   501,   502,   503,   504,   505,   506,
       0,   507,     0,   508,   509,     0,   510,   511,   512,     0,
     513,     0,     0,   514,   515,   516,   517,     0,   518,     0,
     519,   520,   521,   522,   523,     0,   524,   525,     0,     0,
       0,   526,   527,   528,   529,     0,     0,     0,   530,     0,
       0,     0,   531,     0,   532,   533,   534,   535,     0,   536,
     537,   538,   539,   540,     0,     0,     0,     0,     0,   541,
     542,   543,     0,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,   549,   550,   551,   552,   553,     0,
       0,   554,   555,     0,     0,   556,   557,   558,   559,   560,
     561,     0,     0,   562,   563,   564,   565,     0,   566,   567,
       0,     0,   568,   569,   570,   571,     0,     0,   572,   573,
       0,   574,   575,   576,   577,     0,     0,     0,     0,     0,
     578,   579,     0,     0,     0,   580,   581,   582,     0,     0,
     583,   584,     0,   585,   586,     0,   587,   588,     0,     0,
     589,     0,     0,   590,     0,   591,     0,   592,   593,     0,
       0,     0,     0,     0,   594,     0,   595,     0,     0,   596,
       0,     0,     0,   597,     0,   598,   599,   600,   601,     0,
       0,     0,     0,     0,     0,   602,   603,   604,     0,   605,
     606,   607,   608,     0,     0,   609,     0,     0,   610,   611,
     612,   613,   614,     0,   615,     0,     0,     0,     0,     0,
       0,     0,     0,   616,   617,   618,     0,   619,   620,   621,
       0,   622,     0,     0,   623,     0,   624,     0,     0,     0,
       0,     0,     0,   625,   626,     0,     0,   627,     0,   628,
       0,   629,   630,     0,     0,     0,   631,   632,   633,   634,
     635,   636,   637,   638,     0,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
       0,   673,   674,   675,   676,   677,   678,   679,     0,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     243,   244,     0,   245,   246,   247,   248,   249,     0,     0,
     250,     0,     0,     0,     0,   251,     0,     0,   252,     0,
     253,   254,   255,   256,   257,   258,     0,   259,     0,     0,
       0,   260,     0,     0,     0,   261,     0,     0,   262,   263,
     264,     0,   265,     0,   266,   267,     0,     0,   268,     0,
       0,   269,   270,     0,   271,   272,   273,     0,   274,     0,
     275,   276,   277,   278,   279,   280,     0,   281,   282,     0,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,   294,   295,     0,   296,   297,   298,   299,   300,
       0,     0,     0,   301,     0,     0,     0,     0,   302,     0,
       0,   303,     0,     0,     0,   304,   305,   306,     0,     0,
     307,     0,     0,     0,     0,   308,   309,     0,     0,     0,
       0,   310,   311,     0,   312,     0,     0,     0,     0,     0,
     313,   314,   315,   316,   317,     0,     0,     0,   318,     0,
       0,   319,   320,   321,     0,     0,     0,   322,     0,   323,
     324,     0,   325,   326,   327,     0,     0,   328,   329,     0,
     330,   331,   332,   333,   334,   335,     0,     0,   336,   337,
     338,   339,   340,     0,     0,   341,   342,     0,   343,   344,
     345,  2191,   347,     0,     0,   348,   349,     0,     0,     0,
     350,   351,     0,   352,     0,     0,     0,   353,     0,   354,
     355,   356,   357,     0,   358,     0,   359,     0,     0,     0,
     360,   361,     0,   362,     0,     0,   363,   364,     0,     0,
       0,   365,   366,   367,   368,     0,     0,   369,   370,   371,
       0,     0,   372,     0,     0,     0,     0,   373,   374,   375,
       0,     0,     0,   376,     0,     0,     0,   377,   378,     0,
     379,   380,     0,     0,     0,   381,     0,   382,     0,     0,
     383,   384,     0,     0,   385,     0,     0,   386,   387,     0,
       0,     0,     0,     0,   388,   389,     0,   390,     0,   391,
       0,   392,   393,     0,     0,     0,     0,     0,     0,     0,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,     0,
     412,   413,   414,     0,   415,   416,   417,   418,     0,   419,
     420,     0,     0,     0,     0,   421,   422,   423,   424,   425,
     426,     0,     0,   427,   428,     0,   429,     0,   430,     0,
     431,   432,   433,   434,   435,   436,   437,   438,   439,     0,
       0,   440,   441,     0,     0,   442,   443,  2192,   445,   446,
       0,     0,     0,   447,   448,     0,     0,     0,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   456,   457,
     458,     0,   459,     0,   460,     0,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,     0,   471,     0,   472,
     473,   474,     0,   475,     0,   476,   477,   478,   479,   480,
       0,   481,   482,   483,     0,     0,   484,     0,     0,     0,
     485,   486,     0,   487,   488,     0,     0,   489,   490,   491,
     492,   493,     0,   494,   495,     0,   496,   497,   498,     0,
       0,   499,   500,   501,   502,   503,   504,   505,   506,     0,
     507,     0,   508,   509,     0,   510,   511,   512,     0,   513,
       0,     0,   514,   515,   516,   517,     0,   518,     0,   519,
     520,   521,   522,   523,     0,   524,   525,     0,     0,     0,
     526,   527,   528,   529,     0,     0,     0,   530,     0,     0,
       0,   531,     0,   532,   533,   534,   535,     0,   536,   537,
     538,   539,   540,     0,     0,     0,     0,     0,   541,   542,
     543,     0,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,   550,   551,   552,   553,     0,     0,
     554,   555,     0,     0,   556,   557,   558,   559,   560,   561,
       0,     0,   562,   563,   564,   565,     0,   566,   567,     0,
       0,   568,   569,   570,   571,     0,     0,   572,   573,     0,
     574,   575,   576,   577,     0,     0,     0,     0,     0,   578,
     579,     0,     0,     0,   580,   581,   582,     0,     0,   583,
     584,     0,   585,   586,     0,   587,   588,     0,     0,   589,
       0,     0,   590,     0,   591,     0,   592,   593,     0,     0,
       0,     0,     0,   594,     0,   595,     0,     0,   596,     0,
       0,     0,   597,     0,   598,   599,   600,   601,     0,     0,
       0,     0,     0,     0,   602,   603,   604,     0,   605,   606,
     607,   608,     0,     0,   609,     0,     0,   610,   611,   612,
     613,   614,     0,   615,     0,     0,     0,     0,     0,     0,
       0,     0,   616,   617,   618,     0,   619,   620,   621,     0,
     622,     0,     0,   623,     0,   624,     0,     0,     0,     0,
       0,     0,   625,   626,     0,     0,   627,     0,   628,     0,
     629,   630,     0,     0,     0,   631,   632,   633,   634,   635,
     636,   637,   638,     0,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,     0,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,     0,
     673,   674,   675,   676,   677,   678,   679,     0,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
       0,     0,     0,     0,   251,     0,     0,   252,     0,   253,
     254,   255,   256,   257,   258,     0,   259,     0,     0,     0,
     260,     0,     0,     0,   261,     0,     0,   262,   263,   264,
       0,   265,     0,   266,   267,     0,     0,   268,     0,     0,
     269,   270,     0,   271,   272,   273,     0,   274,     0,   275,
     276,   277,   278,   279,   280,     0,   281,   282,     0,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,   294,   295,     0,   296,   297,   298,   299,   300,     0,
       0,     0,   301,     0,     0,     0,     0,   302,     0,     0,
     303,     0,     0,     0,   304,   305,   306,     0,     0,   307,
       0,     0,     0,     0,   308,   309,     0,     0,     0,     0,
     310,   311,     0,   312,     0,     0,     0,     0,     0,   313,
     314,   315,   316,   317,     0,     0,     0,   318,     0,     0,
     319,   320,   321,     0,     0,     0,   322,     0,   323,   324,
       0,   325,   326,   327,     0,     0,   328,   329,     0,   330,
     331,   332,   333,   334,   335,     0,     0,   336,   337,   338,
     339,   340,     0,     0,   341,   342,     0,   343,   344,   345,
     346,   347,     0,     0,   348,   349,     0,     0,     0,   350,
     351,     0,   352,     0,     0,     0,   353,     0,   354,   355,
     356,   357,     0,   358,     0,   359,     0,     0,     0,   360,
     361,     0,   362,     0,     0,   363,   364,     0,     0,     0,
     365,   366,   367,   368,     0,     0,   369,   370,   371,     0,
       0,   372,     0,     0,     0,     0,   373,   374,   375,     0,
       0,     0,   376,     0,     0,     0,   377,   378,     0,   379,
     380,     0,     0,     0,   381,     0,   382,     0,     0,   383,
     384,     0,     0,   385,     0,     0,   386,   387,     0,     0,
       0,     0,     0,   388,   389,     0,   390,     0,   391,     0,
     392,   393,     0,     0,     0,     0,     0,     0,     0,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,     0,   412,
     413,   414,     0,   415,   416,   417,   418,     0,   419,   420,
       0,     0,     0,     0,   421,   422,   423,   424,   425,   426,
       0,     0,   427,   428,     0,   429,     0,   430,     0,   431,
     432,   433,   434,   435,   436,   437,   438,   439,     0,     0,
     440,   441,     0,     0,   442,   443,   444,   445,   446,     0,
       0,     0,   447,   448,     0,     0,     0,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   456,   457,   458,
       0,   459,     0,   460,     0,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,     0,   471,     0,   472,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     481,   482,   483,     0,     0,   484,     0,     0,     0,   485,
     486,     0,   487,   488,     0,     0,   489,   490,   491,   492,
     493,     0,   494,   495,     0,   496,   497,   498,     0,     0,
     499,   500,   501,   502,   503,   504,   505,   506,     0,   507,
       0,   508,   509,     0,   510,   511,   512,     0,   513,     0,
       0,   514,   515,   516,   517,     0,   518,     0,   519,   520,
     521,   522,   523,     0,   524,   525,     0,     0,     0,   526,
     527,   528,   529,     0,     0,     0,   530,     0,     0,     0,
     531,     0,   532,   533,   534,   535,     0,   536,   537,   538,
     539,   540,     0,     0,     0,     0,     0,   541,   542,   543,
       0,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,   550,   551,   552,   553,     0,     0,   554,
     555,     0,     0,   556,   557,   558,   559,   560,   561,     0,
       0,   562,   563,   564,   565,     0,   566,   567,     0,     0,
     568,   569,   570,   571,     0,     0,   572,   573,     0,   574,
     575,   576,   577,     0,     0,     0,     0,     0,   578,   579,
       0,     0,     0,   580,   581,   582,     0,     0,   583,   584,
       0,   585,   586,     0,   587,   588,     0,     0,   589,     0,
       0,   590,     0,   591,     0,   592,   593,     0,     0,     0,
       0,     0,   594,     0,   595,     0,     0,   596,     0,     0,
       0,   597,     0,   598,   599,   600,   601,     0,     0,     0,
       0,     0,     0,   602,   603,   604,     0,   605,   606,   607,
     608,     0,     0,   609,     0,     0,   610,   611,   612,   613,
     614,     0,   615,     0,     0,     0,     0,     0,     0,     0,
       0,   616,   617,   618,     0,   619,   620,   621,     0,   622,
       0,     0,   623,     0,   624,     0,     0,     0,     0,     0,
       0,   625,   626,     0,     0,   627,     0,   628,     0,   629,
     630,     0,     0,     0,  5223,   632,   633,   634,   635,   636,
     637,   638,     0,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,     0,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,     0,   673,
     674,   675,   676,   677,   678,   679,     0,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   243,   244,
       0,   245,   246,   247,   248,   249,     0,     0,   250,     0,
       0,     0,     0,   251,     0,     0,   252,     0,   253,   254,
     255,   256,   257,   258,     0,   259,     0,     0,     0,   260,
       0,     0,     0,   261,     0,     0,   262,   263,   264,     0,
     265,     0,   266,   267,     0,     0,   268,     0,     0,   269,
     270,     0,   271,   272,   273,     0,   274,     0,   275,   276,
     277,   278,   279,   280,     0,   281,   282,     0,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
     294,   295,     0,   296,   297,   298,   299,   300,     0,     0,
       0,   301,     0,     0,     0,     0,   302,     0,     0,   303,
       0,     0,     0,   304,   305,   306,     0,     0,   307,     0,
       0,     0,     0,   308,   309,     0,     0,     0,  1543,   310,
     311,     0,   312,     0,     0,     0,     0,     0,   313,   314,
     315,   316,   317,     0,     0,     0,   318,     0,     0,   319,
     320,   321,     0,     0,     0,   322,     0,   323,   324,     0,
     325,   326,   327,     0,     0,   328,   329,     0,   330,   331,
     332,   333,   334,   335,     0,     0,   336,   337,   338,   339,
     340,     0,     0,   341,   342,     0,   343,   344,   345,   346,
     347,     0,     0,   348,   349,     0,     0,     0,   350,   351,
       0,   352,     0,     0,     0,   353,     0,   354,   355,   356,
     357,     0,     0,     0,   359,     0,     0,     0,   360,   361,
       0,   362,     0,     0,   363,   364,     0,     0,     0,   365,
     366,   367,   368,     0,     0,   369,   370,   371,     0,     0,
     372,     0,     0,     0,     0,   373,   374,   375,     0,     0,
       0,   376,     0,     0,     0,   377,   378,     0,   379,   380,
       0,     0,     0,   381,     0,   382,     0,     0,   383,   384,
       0,     0,   385,     0,     0,   386,   387,     0,     0,     0,
       0,     0,   388,   389,     0,     0,     0,   391,     0,   392,
     393,     0,     0,     0,     0,     0,     0,     0,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,     0,   412,   413,
     414,     0,   415,   416,   417,   418,     0,   419,   420,     0,
       0,     0,     0,   421,   422,   423,   424,   425,   426,     0,
       0,   427,   428,     0,   429,     0,   430,     0,   431,   432,
     433,   434,   435,   436,   437,   438,   439,     0,     0,   440,
     441,     0,     0,   442,   443,   444,   445,   446,     0,     0,
       0,   447,   448,     0,     0,     0,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   456,   457,   458,     0,
     459,     0,   460,     0,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,     0,   471,     0,   472,   473,   474,
       0,   475,     0,   476,   477,   478,   479,   480,     0,   481,
     482,   483,     0,     0,   484,     0,     0,     0,   485,   486,
       0,   487,   488,     0,     0,   489,   490,   491,   492,   493,
       0,   494,   495,     0,   496,   497,   498,     0,     0,   499,
     500,   501,   502,   503,   504,   505,   506,     0,   507,     0,
     508,   509,     0,   510,   511,   512,     0,   513,     0,     0,
     514,   515,   516,   517,     0,   518,     0,   519,   520,   521,
     522,   523,     0,   524,   525,     0,     0,     0,   526,   527,
       0,   529,     0,     0,     0,   530,     0,     0,     0,   531,
       0,   532,   533,   534,   535,     0,   536,   537,   538,   539,
     540,     0,     0,     0,     0,     0,   541,   542,   543,     0,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,   550,   551,   552,   553,     0,     0,   554,   555,
       0,     0,   556,   557,   558,   559,   560,   561,     0,     0,
     562,   563,   564,   565,     0,   566,   567,     0,     0,   568,
     569,   570,   571,     0,     0,   572,   573,     0,   574,   575,
     576,   577,     0,     0,     0,     0,     0,  1544,   579,     0,
       0,     0,   580,   581,   582,     0,     0,   583,   584,     0,
     585,   586,     0,   587,   588,     0,     0,   589,     0,     0,
     590,     0,   591,     0,   592,   593,     0,     0,     0,     0,
       0,   594,     0,   595,     0,     0,   596,     0,     0,     0,
     597,     0,   598,   599,   600,   601,     0,     0,     0,     0,
       0,     0,   602,   603,   604,     0,   605,   606,   607,   608,
       0,     0,   609,     0,     0,     0,   611,   612,   613,   614,
       0,   615,     0,     0,     0,     0,     0,     0,     0,     0,
     616,   617,   618,     0,     0,   620,   621,     0,   622,     0,
       0,   623,     0,   624,     0,     0,     0,     0,     0,     0,
     625,   626,     0,     0,   627,     0,   628,     0,   629,   630,
       0,     0,     0,   631,   632,   633,   634,   635,   636,   637,
     638,     0,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,     0,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,     0,   673,   674,
     675,   676,   677,   678,   679,     0,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   243,   244,     0,
     245,   246,   247,   248,   249,     0,     0,   250,     0,     0,
       0,     0,   251,     0,     0,   252,     0,   253,   254,   255,
     256,   257,   258,     0,   259,     0,     0,     0,   260,     0,
       0,     0,   261,     0,     0,   262,   263,   264,     0,   265,
       0,   266,   267,     0,     0,   268,     0,     0,   269,   270,
       0,   271,   272,   273,     0,   274,     0,   275,   276,   277,
     278,   279,   280,     0,   281,   282,     0,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,   294,
     295,     0,   296,   297,   298,   299,   300,     0,     0,     0,
     301,     0,     0,     0,     0,   302,     0,     0,   303,     0,
       0,     0,   304,   305,   306,     0,     0,   307,     0,     0,
       0,     0,   308,   309,     0,     0,     0,  1543,   310,   311,
       0,   312,     0,     0,     0,     0,     0,   313,   314,   315,
     316,   317,     0,     0,     0,   318,     0,     0,   319,   320,
     321,     0,     0,     0,   322,     0,   323,   324,     0,   325,
     326,   327,     0,     0,   328,   329,     0,   330,   331,   332,
     333,   334,   335,     0,     0,   336,   337,   338,   339,   340,
       0,     0,   341,   342,     0,   343,   344,   345,   346,   347,
       0,     0,   348,   349,     0,     0,     0,   350,   351,     0,
     352,     0,     0,     0,   353,     0,   354,   355,   356,   357,
       0,     0,     0,   359,     0,     0,     0,   360,   361,     0,
     362,     0,     0,   363,   364,     0,     0,     0,   365,   366,
     367,   368,     0,     0,   369,   370,   371,     0,     0,   372,
       0,     0,     0,     0,   373,   374,   375,     0,     0,     0,
     376,     0,     0,     0,   377,   378,     0,   379,   380,     0,
       0,     0,   381,     0,   382,     0,     0,   383,   384,     0,
       0,   385,     0,     0,   386,   387,     0,     0,     0,     0,
       0,   388,   389,     0,     0,     0,   391,     0,   392,   393,
       0,     0,     0,     0,     0,     0,     0,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,     0,   412,   413,   414,
       0,   415,   416,   417,   418,     0,   419,   420,     0,     0,
       0,     0,   421,   422,   423,   424,   425,   426,     0,     0,
     427,   428,     0,   429,     0,   430,     0,   431,   432,   433,
     434,   435,   436,   437,   438,   439,     0,     0,   440,   441,
       0,     0,   442,   443,   444,   445,   446,     0,     0,     0,
     447,   448,     0,     0,     0,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   456,   457,   458,     0,   459,
       0,   460,     0,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,     0,   471,     0,   472,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   481,   482,
     483,     0,     0,   484,     0,     0,     0,   485,   486,     0,
     487,   488,     0,     0,   489,   490,   491,   492,   493,     0,
     494,   495,     0,   496,   497,   498,     0,     0,   499,   500,
     501,   502,   503,   504,   505,   506,     0,   507,     0,   508,
     509,     0,   510,   511,   512,     0,   513,     0,     0,   514,
     515,   516,   517,     0,   518,     0,   519,   520,   521,   522,
     523,     0,   524,   525,     0,     0,     0,   526,   527,     0,
     529,     0,     0,     0,   530,     0,     0,     0,   531,     0,
     532,   533,   534,   535,     0,   536,   537,   538,   539,   540,
       0,     0,     0,     0,     0,   541,   542,   543,     0,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,   550,   551,   552,   553,     0,     0,   554,   555,     0,
       0,   556,   557,   558,   559,   560,   561,     0,     0,   562,
     563,   564,   565,     0,   566,   567,     0,     0,   568,   569,
     570,   571,     0,     0,   572,   573,     0,   574,   575,   576,
     577,     0,     0,     0,     0,     0,   578,   579,     0,     0,
       0,   580,   581,   582,     0,     0,   583,   584,     0,   585,
     586,     0,   587,   588,     0,     0,   589,     0,     0,   590,
       0,   591,     0,   592,   593,     0,     0,     0,     0,     0,
     594,     0,   595,     0,     0,   596,     0,     0,     0,   597,
       0,   598,   599,   600,   601,     0,     0,     0,     0,     0,
       0,   602,   603,   604,     0,   605,   606,   607,   608,     0,
       0,   609,     0,     0,     0,   611,   612,   613,   614,     0,
     615,     0,     0,     0,     0,     0,     0,     0,     0,   616,
     617,   618,     0,     0,   620,   621,     0,   622,     0,     0,
     623,     0,   624,     0,     0,     0,     0,     0,     0,   625,
     626,     0,     0,   627,     0,   628,     0,   629,   630,     0,
       0,     0,   631,   632,   633,   634,   635,   636,   637,   638,
       0,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,     0,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,     0,   673,   674,   675,
     676,   677,   678,   679,     0,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   243,   244,     0,   245,
     246,   247,   248,   249,  1528,     0,   250,     0,     0,     0,
       0,   251,     0,     0,   252,     0,   253,   254,   255,   256,
     257,   258,     0,   259,     0,     0,     0,   260,     0,     0,
       0,   261,     0,     0,   262,   263,   264,     0,   265,     0,
     266,   267,     0,     0,   268,     0,     0,   269,   270,     0,
     271,   272,   273,     0,   274,     0,   275,   276,   277,   278,
     279,   280,     0,   281,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,   299,   300,     0,     0,     0,   301,
       0,     0,     0,     0,   302,     0,     0,   303,     0,     0,
       0,   304,   305,   306,     0,     0,   307,     0,     0,     0,
       0,   308,   309,     0,     0,     0,  1529,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,   318,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,   323,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,     0,   333,
     334,     0,     0,     0,   336,   337,   338,   339,   340,     0,
       0,   341,   342,     0,     0,   344,   345,   346,   347,     0,
       0,   348,   349,     0,     0,     0,   350,   351,     0,   352,
       0,     0,     0,   353,     0,   354,   355,   356,   357,     0,
     358,     0,   359,     0,     0,     0,   360,   361,     0,   362,
       0,     0,   363,   364,     0,     0,     0,   365,   366,   367,
     368,     0,     0,   369,   370,   371,     0,     0,   372,     0,
       0,     0,     0,   373,   374,   375,     0,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,     0,     0,
       0,   381,     0,   382,     0,     0,   383,   384,     0,     0,
     385,     0,     0,   386,   387,   948,     0,     0,     0,     0,
     388,   389,     0,   390,     0,   391,     0,   392,   393,     0,
       0,     0,     0,     0,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,     0,
     415,   416,   417,   418,     0,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,     0,   429,     0,   430,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,     0,     0,   440,   441,     0,
       0,   442,   443,   444,   445,  1530,     0,     0,     0,   447,
     448,     0,     0,     0,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,     0,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     0,   471,     0,   472,   473,   474,     0,   475,
       0,     0,   477,   478,   479,     0,     0,   481,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,     0,
     495,     0,   496,   497,   498,     0,     0,     0,   500,   501,
     502,   503,   504,   505,   506,     0,   507,     0,   508,   509,
       0,   510,   511,   512,     0,   513,     0,     0,   514,   515,
     516,   517,     0,   518,     0,   519,   520,   521,   522,   523,
       0,   524,   525,     0,     0,     0,   526,   527,   528,   529,
       0,     0,     0,   530,     0,     0,     0,     0,     0,   532,
     533,   534,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
     550,   551,   552,   553,     0,     0,   554,   555,     0,     0,
     556,   557,   558,   559,   560,   561,     0,     0,     0,   563,
     564,   565,     0,   566,   567,     0,     0,   568,   569,   570,
     571,     0,   240,   572,   573,     0,   574,   575,   576,   577,
       0,     0,     0,     0,     0,   578,   579,     0,     0,     0,
     580,   581,   582,     0,     0,   583,   584,     0,   585,   586,
       0,   587,   588,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   592,   593,     0,     0,     0,     0,     0,   594,
       0,   595,     0,     0,   596,     0,     0,     0,   597,     0,
     598,   599,   600,   601,     0,     0,     0,     0,     0,     0,
     602,   603,   604,     0,   605,   606,   607,   608,     0,     0,
     609,     0,     0,   610,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,     0,     0,     0,   616,   617,
     618,     0,   619,   620,   621,     0,   622,     0,     0,   623,
       0,   624,     0,     0,     0,     0,     0,     0,   625,   626,
       0,     0,   627,     0,   628,     0,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,     0,     0,
     639,   640,   641,     0,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   673,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   243,   244,     0,   245,   246,
     247,   248,   249,  5300,     0,   250,     0,     0,     0,     0,
     251,     0,     0,   252,     0,   253,   254,   255,   256,   257,
     258,     0,   259,     0,     0,     0,   260,     0,     0,     0,
     261,     0,     0,   262,   263,   264,     0,   265,     0,   266,
     267,     0,     0,   268,     0,     0,   269,   270,     0,   271,
     272,   273,     0,   274,     0,   275,   276,   277,   278,   279,
     280,     0,   281,   282,     0,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,   294,   295,     0,
     296,   297,   298,   299,   300,     0,     0,     0,   301,     0,
       0,     0,     0,   302,     0,     0,   303,     0,     0,     0,
     304,   305,   306,     0,     0,   307,     0,     0,     0,     0,
     308,   309,     0,     0,     0,  5301,   310,   311,     0,   312,
       0,     0,     0,     0,     0,   313,   314,   315,   316,   317,
       0,     0,     0,   318,     0,     0,   319,   320,   321,     0,
       0,     0,   322,     0,   323,   324,     0,   325,   326,   327,
       0,     0,   328,   329,     0,   330,   331,     0,   333,   334,
       0,     0,     0,   336,   337,   338,   339,   340,     0,     0,
     341,   342,     0,     0,   344,   345,   346,   347,     0,     0,
     348,   349,     0,     0,     0,   350,   351,     0,   352,     0,
       0,     0,   353,     0,   354,   355,   356,   357,     0,   358,
       0,   359,     0,     0,     0,   360,   361,     0,   362,     0,
       0,   363,   364,     0,     0,     0,   365,   366,   367,   368,
       0,     0,   369,   370,   371,     0,     0,   372,     0,     0,
       0,     0,   373,   374,   375,     0,     0,     0,   376,     0,
       0,     0,   377,   378,     0,   379,   380,     0,     0,     0,
     381,     0,   382,     0,     0,   383,   384,     0,     0,   385,
       0,     0,   386,   387,   948,     0,     0,     0,     0,   388,
     389,     0,   390,     0,   391,     0,   392,   393,     0,     0,
       0,     0,     0,     0,     0,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,     0,   412,   413,   414,     0,   415,
     416,   417,   418,     0,   419,   420,     0,     0,     0,     0,
     421,   422,   423,   424,   425,   426,     0,     0,   427,   428,
       0,   429,     0,   430,     0,   431,   432,   433,   434,   435,
     436,   437,   438,   439,     0,     0,   440,   441,     0,     0,
     442,   443,   444,   445,  5302,     0,     0,     0,   447,   448,
       0,     0,     0,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   456,   457,   458,     0,   459,     0,   460,
       0,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,     0,   471,     0,   472,   473,   474,     0,   475,     0,
       0,   477,   478,   479,     0,     0,   481,   482,   483,     0,
       0,   484,     0,     0,     0,   485,   486,     0,   487,   488,
       0,     0,   489,   490,   491,   492,   493,     0,     0,   495,
       0,   496,   497,   498,     0,     0,     0,   500,   501,   502,
     503,   504,   505,   506,     0,   507,     0,   508,   509,     0,
     510,   511,   512,     0,   513,     0,     0,   514,   515,   516,
     517,     0,   518,     0,   519,   520,   521,   522,   523,     0,
     524,   525,     0,     0,     0,   526,   527,   528,   529,     0,
       0,     0,   530,     0,     0,     0,     0,     0,   532,   533,
     534,   535,     0,   536,   537,   538,   539,   540,     0,     0,
       0,     0,     0,   541,   542,   543,     0,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,   550,
     551,   552,   553,     0,     0,   554,   555,     0,     0,   556,
     557,   558,   559,   560,   561,     0,     0,     0,   563,   564,
     565,     0,   566,   567,     0,     0,   568,   569,   570,   571,
       0,   240,   572,   573,     0,   574,   575,   576,   577,     0,
       0,     0,     0,     0,   578,   579,     0,     0,     0,   580,
     581,   582,     0,     0,   583,   584,     0,   585,   586,     0,
     587,   588,     0,     0,   589,     0,     0,   590,     0,   591,
       0,   592,   593,     0,     0,     0,     0,     0,   594,     0,
     595,     0,     0,   596,     0,     0,     0,   597,     0,   598,
     599,   600,   601,     0,     0,     0,     0,     0,     0,   602,
     603,   604,     0,   605,   606,   607,   608,     0,     0,   609,
       0,     0,   610,   611,   612,   613,   614,     0,   615,     0,
       0,     0,     0,     0,     0,     0,     0,   616,   617,   618,
       0,   619,   620,   621,     0,   622,     0,     0,   623,     0,
     624,     0,     0,     0,     0,     0,     0,   625,   626,     0,
       0,   627,     0,   628,     0,   629,   630,     0,     0,     0,
     631,   632,   633,   634,   635,   636,   637,     0,     0,   639,
     640,   641,     0,   643,   644,   645,   646,   647,   648,     0,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,     0,   673,   674,   675,   676,   677,
     678,   679,     0,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   243,   244,     0,   245,   246,   247,
     248,   249,  2250,     0,   250,     0,     0,     0,     0,   251,
       0,     0,   252,     0,   253,   254,   255,   256,   257,   258,
       0,   259,     0,     0,     0,   260,     0,     0,     0,   261,
       0,     0,   262,   263,   264,     0,   265,     0,   266,   267,
       0,     0,   268,     0,     0,   269,   270,     0,   271,   272,
     273,     0,   274,     0,   275,   276,   277,   278,   279,   280,
       0,   281,   282,     0,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,     0,   294,   295,     0,   296,
     297,   298,   299,   300,     0,     0,     0,   301,     0,     0,
       0,     0,   302,     0,     0,   303,     0,     0,     0,   304,
     305,   306,     0,     0,   307,     0,     0,     0,     0,   308,
     309,     0,     0,     0,     0,   310,   311,     0,   312,     0,
       0,     0,     0,     0,   313,   314,   315,   316,   317,     0,
       0,     0,   318,     0,     0,   319,   320,   321,     0,     0,
       0,   322,     0,   323,   324,     0,   325,   326,   327,     0,
       0,   328,   329,     0,   330,   331,     0,   333,   334,     0,
       0,     0,   336,   337,   338,   339,   340,     0,     0,   341,
     342,     0,     0,   344,   345,   346,   347,     0,     0,   348,
     349,     0,     0,     0,   350,   351,     0,   352,     0,     0,
       0,   353,     0,   354,   355,   356,   357,     0,   358,     0,
     359,     0,     0,     0,   360,   361,     0,   362,     0,     0,
     363,   364,     0,     0,     0,   365,   366,   367,   368,     0,
       0,   369,   370,   371,     0,     0,   372,     0,     0,     0,
       0,   373,   374,   375,     0,     0,     0,   376,     0,     0,
       0,   377,   378,     0,   379,   380,     0,     0,     0,   381,
       0,   382,     0,     0,   383,   384,     0,     0,   385,     0,
       0,   386,   387,   948,     0,     0,     0,     0,   388,   389,
       0,   390,     0,   391,     0,   392,   393,     0,     0,     0,
       0,     0,     0,     0,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,   413,   414,     0,   415,   416,
     417,   418,     0,   419,   420,     0,     0,     0,     0,   421,
     422,   423,   424,   425,   426,     0,     0,   427,   428,     0,
     429,     0,   430,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,     0,     0,   440,   441,     0,     0,   442,
     443,   444,   445,  2251,     0,     0,     0,   447,   448,     0,
       0,     0,   449,     0,   450,   451,     0,   452,   453,   454,
       0,     0,   455,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   456,   457,   458,     0,   459,     0,   460,     0,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
       0,   471,     0,   472,   473,   474,     0,   475,     0,     0,
     477,   478,   479,     0,     0,   481,   482,   483,     0,     0,
     484,     0,     0,     0,   485,   486,     0,   487,   488,     0,
       0,   489,   490,   491,   492,   493,     0,     0,   495,     0,
     496,   497,   498,     0,     0,     0,   500,   501,   502,   503,
     504,   505,   506,     0,   507,     0,   508,   509,     0,   510,
     511,   512,     0,   513,     0,     0,   514,   515,   516,   517,
       0,   518,     0,   519,   520,   521,   522,   523,     0,   524,
     525,     0,     0,     0,   526,   527,   528,   529,     0,     0,
       0,   530,     0,     0,     0,     0,     0,   532,   533,   534,
     535,     0,   536,   537,   538,   539,   540,     0,     0,     0,
       0,     0,   541,   542,   543,     0,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,   550,   551,
     552,   553,     0,     0,   554,   555,     0,     0,   556,   557,
     558,   559,   560,   561,     0,     0,     0,   563,   564,   565,
       0,   566,   567,     0,     0,   568,   569,   570,   571,     0,
     240,   572,   573,     0,   574,   575,   576,   577,     0,     0,
       0,     0,     0,   578,   579,     0,     0,     0,   580,   581,
     582,     0,     0,   583,   584,     0,   585,   586,     0,   587,
     588,     0,     0,   589,     0,     0,   590,     0,   591,     0,
     592,   593,     0,     0,     0,     0,     0,   594,     0,   595,
       0,     0,   596,     0,     0,     0,   597,     0,   598,   599,
     600,   601,     0,     0,     0,     0,     0,     0,   602,   603,
     604,     0,   605,   606,   607,   608,     0,     0,   609,     0,
       0,   610,   611,   612,   613,   614,     0,   615,     0,     0,
       0,     0,     0,     0,     0,     0,   616,   617,   618,     0,
     619,   620,   621,     0,   622,     0,     0,   623,     0,   624,
       0,     0,     0,     0,     0,     0,   625,   626,     0,     0,
     627,     0,   628,     0,   629,   630,     0,     0,     0,   631,
     632,   633,   634,   635,   636,   637,     0,     0,   639,   640,
     641,     0,   643,   644,   645,   646,   647,   648,     0,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,     0,   673,   674,   675,   676,   677,   678,
     679,     0,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   243,   244,     0,   245,   246,   247,   248,
     249,  3083,     0,   250,     0,     0,     0,     0,   251,     0,
       0,   252,     0,   253,   254,   255,   256,   257,   258,     0,
     259,     0,     0,     0,   260,     0,     0,     0,   261,     0,
       0,   262,   263,   264,     0,   265,     0,   266,   267,     0,
       0,   268,     0,     0,   269,   270,     0,   271,   272,   273,
       0,   274,     0,   275,   276,   277,   278,   279,   280,     0,
     281,   282,     0,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,   294,   295,     0,   296,   297,
     298,   299,   300,     0,     0,     0,   301,     0,     0,     0,
       0,   302,     0,     0,   303,     0,     0,     0,   304,   305,
     306,     0,     0,   307,     0,     0,     0,     0,   308,   309,
       0,     0,     0,     0,   310,   311,     0,   312,     0,     0,
       0,     0,     0,   313,   314,   315,   316,   317,     0,     0,
       0,   318,     0,     0,   319,   320,   321,     0,     0,     0,
     322,     0,   323,   324,     0,   325,   326,   327,     0,     0,
     328,   329,     0,   330,   331,     0,   333,   334,     0,     0,
       0,   336,   337,   338,   339,   340,     0,     0,   341,   342,
       0,     0,   344,   345,   346,   347,     0,     0,   348,   349,
       0,     0,     0,   350,   351,     0,   352,     0,     0,     0,
     353,     0,   354,   355,   356,   357,     0,   358,     0,   359,
       0,     0,     0,   360,   361,     0,   362,     0,     0,   363,
     364,     0,     0,     0,   365,   366,   367,   368,     0,     0,
     369,   370,   371,     0,     0,   372,     0,     0,     0,     0,
     373,   374,   375,     0,     0,     0,   376,     0,     0,     0,
     377,   378,     0,   379,   380,     0,     0,     0,   381,     0,
     382,     0,     0,   383,   384,     0,     0,   385,     0,     0,
     386,   387,   948,     0,     0,     0,     0,   388,   389,     0,
     390,     0,   391,     0,   392,   393,     0,     0,     0,     0,
       0,     0,     0,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,     0,   412,   413,   414,     0,   415,   416,   417,
     418,     0,   419,   420,     0,     0,     0,     0,   421,   422,
     423,   424,   425,   426,     0,     0,   427,   428,     0,   429,
       0,   430,     0,   431,   432,   433,   434,   435,   436,   437,
     438,   439,     0,     0,   440,   441,     0,     0,   442,   443,
     444,   445,  3084,     0,     0,     0,   447,   448,     0,     0,
       0,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   456,   457,   458,     0,   459,     0,   460,     0,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,     0,
     471,     0,   472,   473,   474,     0,   475,     0,     0,   477,
     478,   479,     0,     0,   481,   482,   483,     0,     0,   484,
       0,     0,     0,   485,   486,     0,   487,   488,     0,     0,
     489,   490,   491,   492,   493,     0,     0,   495,     0,   496,
     497,   498,     0,     0,     0,   500,   501,   502,   503,   504,
     505,   506,     0,   507,     0,   508,   509,     0,   510,   511,
     512,     0,   513,     0,     0,   514,   515,   516,   517,     0,
     518,     0,   519,   520,   521,   522,   523,     0,   524,   525,
       0,     0,     0,   526,   527,   528,   529,     0,     0,     0,
     530,     0,     0,     0,     0,     0,   532,   533,   534,   535,
       0,   536,   537,   538,   539,   540,     0,     0,     0,     0,
       0,   541,   542,   543,     0,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,   550,   551,   552,
     553,     0,     0,   554,   555,     0,     0,   556,   557,   558,
     559,   560,   561,     0,     0,     0,   563,   564,   565,     0,
     566,   567,     0,     0,   568,   569,   570,   571,     0,   240,
     572,   573,     0,   574,   575,   576,   577,     0,     0,     0,
       0,     0,   578,   579,     0,     0,     0,   580,   581,   582,
       0,     0,   583,   584,     0,   585,   586,     0,   587,   588,
       0,     0,   589,     0,     0,   590,     0,   591,     0,   592,
     593,     0,     0,     0,     0,     0,   594,     0,   595,     0,
       0,   596,     0,     0,     0,   597,     0,   598,   599,   600,
     601,     0,     0,     0,     0,     0,     0,   602,   603,   604,
       0,   605,   606,   607,   608,     0,     0,   609,     0,     0,
     610,   611,   612,   613,   614,     0,   615,     0,     0,     0,
       0,     0,     0,     0,     0,   616,   617,   618,     0,   619,
     620,   621,     0,   622,     0,     0,   623,     0,   624,     0,
       0,     0,     0,     0,     0,   625,   626,     0,     0,   627,
       0,   628,     0,   629,   630,     0,     0,     0,   631,   632,
     633,   634,   635,   636,   637,     0,     0,   639,   640,   641,
       0,   643,   644,   645,   646,   647,   648,     0,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,     0,   673,   674,   675,   676,   677,   678,   679,
       0,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   243,   244,     0,   245,   246,   247,   248,   249,
       0,     0,   250,     0,     0,     0,     0,   251,     0,     0,
     252,     0,   253,   254,   255,   256,   257,   258,     0,   259,
       0,     0,     0,   260,     0,     0,     0,   261,     0,     0,
     262,   263,   264,     0,   265,     0,   266,   267,     0,     0,
     268,     0,     0,   269,   270,     0,   271,   272,   273,     0,
     274,     0,   275,   276,   277,   278,   279,   280,     0,   281,
     282,     0,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,     0,   294,   295,     0,   296,   297,   298,
     299,   300,     0,     0,     0,   301,     0,     0,     0,     0,
     302,     0,     0,   303,     0,     0,     0,   304,   305,   306,
       0,     0,   307,     0,     0,     0,     0,   308,   309,     0,
       0,     0,     0,   310,   311,     0,   312,     0,     0,     0,
       0,     0,   313,   314,   315,   316,   317,     0,     0,     0,
     318,     0,     0,   319,   320,   321,     0,     0,     0,   322,
       0,   323,   324,     0,   325,   326,   327,     0,     0,   328,
     329,     0,   330,   331,     0,   333,   334,     0,     0,     0,
     336,   337,   338,   339,   340,     0,     0,   341,   342,     0,
       0,   344,   345,   346,   347,     0,     0,   348,   349,     0,
       0,     0,   350,   351,     0,   352,     0,     0,     0,   353,
       0,   354,   355,   356,   357,     0,   358,     0,   359,     0,
       0,     0,   360,   361,     0,   362,     0,     0,   363,   364,
       0,     0,     0,   365,   366,   367,   368,     0,     0,   369,
     370,   371,     0,     0,   372,     0,     0,     0,     0,   373,
     374,   375,     0,     0,     0,   376,     0,     0,     0,   377,
     378,     0,   379,   380,     0,     0,     0,   381,     0,   382,
       0,     0,   383,   384,     0,     0,   385,     0,     0,   386,
     387,   948,     0,     0,     0,     0,   388,   389,     0,   390,
       0,   391,     0,   392,   393,     0,     0,     0,     0,     0,
       0,     0,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,     0,   412,   413,   414,     0,   415,   416,   417,   418,
       0,   419,   420,     0,     0,     0,     0,   421,   422,   423,
     424,   425,   426,     0,     0,   427,   428,     0,   429,     0,
     430,     0,   431,   432,   433,   434,   435,   436,   437,   438,
     439,     0,     0,   440,   441,     0,     0,   442,   443,   444,
     445,     0,     0,     0,     0,   447,   448,     0,     0,     0,
     449,     0,   450,   451,     0,   452,   453,   454,     0,     0,
     455,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     456,   457,   458,     0,   459,     0,   460,     0,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,     0,   471,
       0,   472,   473,   474,     0,   475,     0,     0,   477,   478,
     479,     0,     0,   481,   482,   483,     0,     0,   484,     0,
       0,     0,   485,   486,     0,   487,   488,     0,     0,   489,
     490,   491,   492,   493,     0,     0,   495,     0,   496,   497,
     498,     0,     0,     0,   500,   501,   502,   503,   504,   505,
     506,     0,   507,     0,   508,   509,     0,   510,   511,   512,
       0,   513,     0,     0,   514,   515,   516,   517,     0,   518,
       0,   519,   520,   521,   522,   523,     0,   524,   525,     0,
       0,     0,   526,   527,   528,   529,     0,     0,     0,   530,
       0,     0,     0,     0,     0,   532,   533,   534,   535,     0,
     536,   537,   538,   539,   540,     0,     0,     0,     0,     0,
     541,   542,   543,     0,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,   550,   551,   552,   553,
       0,     0,   554,   555,     0,     0,   556,   557,   558,   559,
     560,   561,     0,     0,     0,   563,   564,   565,     0,   566,
     567,     0,     0,   568,   569,   570,   571,     0,   240,   572,
     573,     0,   574,   575,   576,   577,     0,     0,     0,     0,
       0,   578,   579,     0,     0,     0,   580,   581,   582,     0,
       0,   583,   584,     0,   585,   586,     0,   587,   588,     0,
       0,   589,     0,     0,   590,     0,   591,     0,   592,   593,
       0,     0,     0,     0,     0,   594,     0,   595,     0,     0,
     596,     0,     0,     0,   597,     0,   598,   599,   600,   601,
       0,     0,     0,     0,     0,     0,   602,   603,   604,     0,
     605,   606,   607,   608,     0,     0,   609,     0,     0,   610,
     611,   612,   613,   614,     0,   615,     0,     0,     0,     0,
       0,     0,     0,     0,   616,   617,   618,     0,   619,   620,
     621,     0,   622,     0,     0,   623,     0,   624,     0,     0,
       0,     0,     0,     0,   625,   626,     0,     0,   627,     0,
     628,     0,   629,   630,     0,     0,     0,   631,   632,   633,
     634,   635,   636,   637,     0,     0,   639,   640,   641,     0,
     643,   644,   645,   646,   647,   648,     0,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,     0,   673,   674,   675,   676,   677,   678,   679,     0,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   243,   244,     0,   245,   246,   247,   248,   249,     0,
       0,   250,     0,     0,     0,     0,   251,     0,     0,     0,
       0,   253,   254,   255,   256,   257,   258,     0,  -564,     0,
       0,     0,   260,     0,     0,     0,   261,     0,     0,   262,
     263,   264,     0,   265,     0,     0,     0,     0,     0,   268,
    5159,     0,   269,   270,     0,   271,   272,     0,     0,     0,
       0,   275,   276,   277,  5160,   279,   280,     0,   281,   282,
       0,   283,   284,     0,   286,     0,   288,   289,   290,   291,
     292,   293,     0,   294,   295,     0,   296,   297,   298,     0,
     300,     0,     0,     0,   301,     0,     0,     0,     0,   302,
       0,     0,   303,     0,     0,     0,   304,   305,   306,     0,
       0,   307,     0,     0,     0,     0,   308,     0,     0,     0,
       0,     0,   310,   311,     0,   312,     0,     0,     0,     0,
       0,   313,   314,   315,   316,   317,     0,     0,     0,     0,
       0,     0,   319,   320,   321,     0,  -534,  -534,   322,     0,
    -534,   324,     0,   325,   326,   327,     0,     0,   328,   329,
       0,   330,   331,   332,   333,   334,     0,     0,     0,   336,
     337,   338,   339,   340,     0,     0,   341,   342,  5161,   343,
     344,   345,   346,   347,     0,     0,     0,     0,     0,     0,
       0,   350,   351,     0,   352,     0,     0,     0,   353,     0,
     354,   355,   356,   357,     0,   358,     0,   359,     0,     0,
       0,     0,   361,     0,     0,     0,     0,   363,   364,     0,
       0,     0,   365,   366,   367,   368,  5162,     0,   369,     0,
     371,     0,     0,   372,     0,     0,     0,     0,   373,   374,
       0,     0,     0,     0,   376,     0,     0,     0,   377,   378,
       0,   379,   380,  5163,     0,     0,   381,     0,   382,     0,
       0,     0,   384,     0,     0,   385,  5164,     0,   386,   387,
       0,     0,     0,     0,     0,   388,   389,     0,   390,     0,
     391,     0,   392,   393,     0,     0,     0,     0,  -519,     0,
       0,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
       0,   412,   413,   414,     0,   415,   416,   417,   418,     0,
     419,   420,     0,     0,     0,     0,   421,   422,   423,   424,
     425,   426,     0,     0,   427,   428,     0,   429,     0,   430,
       0,   431,   432,   433,   434,   435,   436,   437,   438,   439,
       0,     0,   440,   441,     0,     0,   442,   443,   444,   445,
     446,     0,     0,     0,     0,   448,     0,     0,     0,   449,
       0,   450,   451,     0,   452,   453,  5165,     0,     0,   455,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   456,
     457,   458,     0,   459,     0,   460,     0,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,     0,     0,     0,
       0,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   481,   482,   483,     0,     0,   484,     0,     0,
       0,   485,   486,     0,   487,   488,     0,     0,   489,   490,
     491,   492,   493,     0,   494,   495,     0,   496,     0,   498,
    -519,     0,   499,   500,   501,   502,   503,   504,   505,   506,
       0,     0,     0,   508,   509,     0,   510,   511,   512,  5166,
     513,     0,     0,     0,   515,   516,   517,     0,   518,     0,
     519,   520,     0,   522,   523,     0,   524,   525,     0,     0,
       0,   526,   527,   528,   529,     0,     0,     0,   530,     0,
       0,     0,     0,     0,     0,   533,     0,   535,     0,   536,
     537,   538,   539,   540,     0,     0,     0,     0,     0,   541,
     542,   543,     0,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,     0,   550,   551,   552,   553,     0,
       0,     0,   555,     0,     0,   556,   557,   558,   559,   560,
     561,     0,     0,   562,   563,   564,   565,     0,   566,   567,
       0,     0,   568,   569,   570,   571,     0,     0,   572,   573,
       0,   574,   575,   576,   577,     0,     0,     0,     0,     0,
     578,   579,     0,     0,     0,     0,   581,   582,     0,     0,
     583,   584,     0,   585,   586,     0,     0,     0,     0,     0,
     589,     0,     0,   590,     0,   591,     0,   592,   593,     0,
       0,     0,     0,     0,   594,     0,   595,     0,     0,   596,
       0,     0,     0,   597,     0,   598,   599,   600,   601,     0,
       0,  -519,     0,     0,     0,   602,   603,   604,     0,   605,
       0,   607,   608,     0,     0,   609,     0,     0,   610,   611,
     612,   613,   614,     0,   615,     0,     0,     0,     0,     0,
       0,     0,     0,   616,   617,   618,     0,   619,   620,   621,
       0,     0,     0,     0,   623,     0,   624,     0,     0,     0,
       0,     0,     0,   625,   626,     0,     0,   627,     0,   628,
       0,   629,   630,     0,     0,     0,   631,   632,   633,   634,
     635,   636,   637,   638,     0,   639,   640,   641,     0,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
       0,   673,   674,   675,   676,   677,   678,   679,     0,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     243,   244,     0,   245,   246,   247,   248,   249,     0,     0,
     250,     0,     0,     0,     0,   251,     0,     0,     0,     0,
     253,   254,   255,   256,   257,   258,     0,  -564,     0,     0,
       0,   260,     0,     0,     0,   261,     0,     0,   262,   263,
     264,     0,   265,     0,     0,     0,     0,     0,   268,  5159,
       0,   269,   270,     0,   271,   272,     0,     0,     0,     0,
     275,   276,   277,  5160,   279,   280,     0,   281,   282,     0,
     283,   284,     0,   286,     0,   288,   289,   290,   291,   292,
     293,     0,   294,   295,     0,   296,   297,   298,     0,   300,
       0,     0,     0,   301,     0,     0,     0,     0,   302,     0,
       0,   303,     0,     0,     0,   304,   305,   306,     0,     0,
     307,     0,     0,     0,     0,   308,     0,     0,     0,     0,
       0,   310,   311,     0,   312,     0,     0,     0,     0,     0,
     313,   314,   315,   316,   317,     0,     0,     0,     0,     0,
       0,   319,   320,   321,     0,  -555,     0,   322,     0,  -555,
     324,     0,   325,   326,   327,     0,     0,   328,   329,     0,
     330,   331,   332,   333,   334,     0,     0,     0,   336,   337,
     338,   339,   340,     0,     0,   341,   342,  5161,   343,   344,
     345,   346,   347,     0,     0,     0,     0,     0,     0,     0,
     350,   351,     0,   352,     0,     0,     0,   353,     0,   354,
     355,   356,   357,     0,   358,     0,   359,     0,     0,     0,
       0,   361,     0,     0,     0,     0,   363,   364,     0,     0,
       0,   365,   366,   367,   368,  5162,     0,   369,     0,   371,
       0,     0,   372,     0,     0,     0,     0,   373,   374,     0,
       0,     0,     0,   376,     0,     0,     0,   377,   378,     0,
     379,   380,  5163,     0,     0,   381,     0,   382,     0,     0,
       0,   384,     0,     0,   385,  5164,     0,   386,   387,     0,
       0,     0,     0,     0,   388,   389,     0,   390,     0,   391,
       0,   392,   393,     0,     0,     0,     0,  -519,     0,     0,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,     0,
     412,   413,   414,     0,   415,   416,   417,   418,     0,   419,
     420,     0,     0,     0,     0,   421,   422,   423,   424,   425,
     426,     0,     0,   427,   428,     0,   429,     0,   430,     0,
     431,   432,   433,   434,   435,   436,   437,   438,   439,     0,
       0,   440,   441,     0,     0,   442,   443,   444,   445,   446,
       0,     0,     0,     0,   448,     0,     0,     0,   449,     0,
     450,   451,     0,   452,   453,  5165,     0,     0,   455,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   456,   457,
     458,     0,   459,     0,   460,     0,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,     0,     0,     0,     0,
     473,   474,     0,   475,     0,   476,   477,   478,   479,   480,
       0,   481,   482,   483,     0,     0,   484,     0,     0,     0,
     485,   486,     0,   487,   488,     0,     0,   489,   490,   491,
     492,   493,     0,   494,   495,     0,   496,     0,   498,  -519,
       0,   499,   500,   501,   502,   503,   504,   505,   506,     0,
       0,     0,   508,   509,     0,   510,   511,   512,  5166,   513,
       0,     0,     0,   515,   516,   517,     0,   518,     0,   519,
     520,     0,   522,   523,     0,   524,   525,     0,     0,     0,
     526,   527,   528,   529,     0,     0,     0,   530,     0,     0,
       0,     0,     0,     0,   533,     0,   535,     0,   536,   537,
     538,   539,   540,     0,     0,     0,     0,     0,   541,   542,
     543,     0,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,     0,   550,   551,   552,   553,     0,     0,
       0,   555,     0,     0,   556,   557,   558,   559,   560,   561,
       0,     0,   562,   563,   564,   565,     0,   566,   567,     0,
       0,   568,   569,   570,   571,     0,     0,   572,   573,     0,
     574,   575,   576,   577,     0,     0,     0,     0,     0,   578,
     579,     0,     0,     0,     0,   581,   582,     0,     0,   583,
     584,     0,   585,   586,     0,     0,     0,     0,     0,   589,
       0,     0,   590,     0,   591,     0,   592,   593,     0,     0,
       0,     0,     0,   594,     0,   595,     0,     0,   596,     0,
       0,     0,   597,     0,   598,   599,   600,   601,  -555,     0,
    -519,     0,     0,     0,   602,   603,   604,     0,   605,     0,
     607,   608,     0,     0,   609,     0,     0,   610,   611,   612,
     613,   614,     0,   615,     0,     0,     0,     0,     0,     0,
       0,     0,   616,   617,   618,     0,   619,   620,   621,     0,
       0,     0,     0,   623,     0,   624,     0,     0,     0,     0,
       0,     0,   625,   626,     0,     0,   627,     0,   628,     0,
     629,   630,     0,     0,     0,   631,   632,   633,   634,   635,
     636,   637,   638,     0,   639,   640,   641,     0,   643,   644,
     645,   646,   647,   648,     0,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,     0,
     673,   674,   675,   676,   677,   678,   679,     0,   680,   681,
     682,   683,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   243,
     244,     0,   245,   246,   247,   248,   249,     0,     0,   250,
       0,     0,     0,     0,   251,     0,     0,     0,     0,   253,
     254,   255,   256,   257,   258,     0,  -564,     0,     0,     0,
     260,     0,     0,     0,   261,     0,     0,   262,   263,   264,
       0,   265,     0,     0,     0,     0,     0,   268,  5159,     0,
     269,   270,     0,   271,   272,     0,     0,     0,     0,   275,
     276,   277,  5160,   279,   280,     0,   281,   282,     0,   283,
     284,     0,   286,     0,   288,   289,   290,   291,   292,   293,
       0,   294,   295,     0,   296,   297,   298,     0,   300,     0,
       0,     0,   301,     0,     0,     0,     0,   302,     0,     0,
     303,     0,     0,     0,   304,   305,   306,     0,     0,   307,
       0,     0,     0,     0,   308,     0,     0,     0,     0,     0,
     310,   311,     0,   312,     0,     0,     0,     0,     0,   313,
     314,   315,   316,   317,     0,     0,     0,     0,     0,     0,
     319,   320,   321,     0,  -552,     0,   322,     0,  -552,   324,
       0,   325,   326,   327,     0,     0,   328,   329,     0,   330,
     331,   332,   333,   334,     0,     0,     0,   336,   337,   338,
     339,   340,     0,     0,   341,   342,  5161,   343,   344,   345,
     346,   347,     0,     0,     0,     0,     0,     0,     0,   350,
     351,     0,   352,     0,     0,     0,   353,     0,   354,   355,
     356,   357,     0,   358,     0,   359,     0,     0,     0,     0,
     361,     0,     0,     0,     0,   363,   364,     0,     0,     0,
     365,   366,   367,   368,  5162,     0,   369,     0,   371,     0,
       0,   372,     0,     0,     0,     0,   373,   374,     0,     0,
       0,     0,   376,     0,     0,     0,   377,   378,     0,   379,
     380,  5163,     0,     0,   381,     0,   382,     0,     0,     0,
     384,     0,     0,   385,  5164,     0,   386,   387,     0,     0,
       0,     0,     0,   388,   389,     0,   390,     0,   391,     0,
     392,   393,     0,     0,     0,     0,  -519,     0,     0,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,     0,   412,
     413,   414,     0,   415,   416,   417,   418,     0,   419,   420,
       0,     0,     0,     0,   421,   422,   423,   424,   425,   426,
       0,     0,   427,   428,     0,   429,     0,   430,     0,   431,
     432,   433,   434,   435,   436,   437,   438,   439,     0,     0,
     440,   441,     0,     0,   442,   443,   444,   445,   446,     0,
       0,     0,     0,   448,     0,     0,     0,   449,     0,   450,
     451,     0,   452,   453,  5165,     0,     0,   455,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   456,   457,   458,
       0,   459,     0,   460,     0,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,     0,     0,     0,     0,   473,
     474,     0,   475,     0,   476,   477,   478,   479,   480,     0,
     481,   482,   483,     0,     0,   484,     0,     0,     0,   485,
     486,     0,   487,   488,     0,     0,   489,   490,   491,   492,
     493,     0,   494,   495,     0,   496,     0,   498,  -519,     0,
     499,   500,   501,   502,   503,   504,   505,   506,     0,     0,
       0,   508,   509,     0,   510,   511,   512,  5166,   513,     0,
       0,     0,   515,   516,   517,     0,   518,     0,   519,   520,
       0,   522,   523,     0,   524,   525,     0,     0,     0,   526,
     527,   528,   529,     0,     0,     0,   530,     0,     0,     0,
       0,     0,     0,   533,     0,   535,     0,   536,   537,   538,
     539,   540,     0,     0,     0,     0,     0,   541,   542,   543,
       0,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,     0,   550,   551,   552,   553,     0,     0,     0,
     555,     0,     0,   556,   557,   558,   559,   560,   561,     0,
       0,   562,   563,   564,   565,     0,   566,   567,     0,     0,
     568,   569,   570,   571,     0,     0,   572,   573,     0,   574,
     575,   576,   577,     0,     0,     0,     0,     0,   578,   579,
       0,     0,     0,     0,   581,   582,     0,     0,   583,   584,
       0,   585,   586,     0,     0,     0,     0,     0,   589,     0,
       0,   590,     0,   591,     0,   592,   593,     0,     0,     0,
       0,     0,   594,     0,   595,     0,     0,   596,     0,     0,
       0,   597,     0,   598,   599,   600,   601,  -552,     0,  -519,
       0,     0,     0,   602,   603,   604,     0,   605,     0,   607,
     608,     0,     0,   609,     0,     0,   610,   611,   612,   613,
     614,     0,   615,     0,     0,     0,     0,     0,     0,     0,
       0,   616,   617,   618,     0,   619,   620,   621,     0,     0,
       0,     0,   623,     0,   624,     0,     0,     0,     0,     0,
       0,   625,   626,     0,     0,   627,     0,   628,     0,   629,
     630,     0,     0,     0,   631,   632,   633,   634,   635,   636,
     637,   638,     0,   639,   640,   641,     0,   643,   644,   645,
     646,   647,   648,     0,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,     0,   673,
     674,   675,   676,   677,   678,   679,     0,   680,   681,   682,
     683,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   243,   244,
       0,   245,   246,   247,   248,   249,     0,     0,   250,     0,
       0,     0,     0,   251,     0,     0,     0,     0,   253,   254,
     255,   256,   257,   258,     0,  -564,     0,     0,     0,   260,
       0,     0,     0,   261,     0,     0,   262,   263,   264,     0,
     265,     0,     0,     0,     0,     0,   268,  5159,     0,   269,
     270,     0,   271,   272,     0,     0,     0,     0,   275,   276,
     277,  5160,   279,   280,     0,   281,   282,     0,   283,   284,
       0,   286,     0,   288,   289,   290,   291,   292,   293,     0,
     294,   295,     0,   296,   297,   298,     0,   300,     0,     0,
       0,   301,     0,     0,     0,     0,   302,     0,     0,   303,
       0,     0,     0,   304,   305,   306,     0,     0,   307,     0,
       0,     0,     0,   308,     0,     0,     0,     0,     0,   310,
     311,     0,   312,     0,     0,     0,     0,     0,   313,   314,
     315,   316,   317,     0,     0,     0,     0,     0,     0,   319,
     320,   321,     0,     0,     0,   322,     0,  5416,   324,     0,
     325,   326,   327,     0,     0,   328,   329,     0,   330,   331,
     332,   333,   334,     0,     0,     0,   336,   337,   338,   339,
     340,     0,     0,   341,   342,  5161,   343,   344,   345,   346,
     347,     0,     0,     0,     0,     0,     0,     0,   350,   351,
       0,   352,     0,     0,     0,   353,     0,   354,   355,   356,
     357,     0,   358,     0,   359,     0,     0,     0,     0,   361,
       0,     0,     0,     0,   363,   364,     0,     0,     0,   365,
     366,   367,   368,  5162,     0,   369,     0,   371,     0,     0,
     372,     0,     0,     0,     0,   373,   374,     0,     0,     0,
       0,   376,     0,     0,     0,   377,   378,     0,   379,   380,
    5163,     0,     0,   381,     0,   382,     0,     0,     0,   384,
       0,     0,   385,  5164,     0,   386,   387,     0,     0,     0,
       0,     0,   388,   389,     0,   390,     0,   391,     0,   392,
     393,     0,     0,     0,     0,  -519,     0,     0,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,     0,   412,   413,
     414,     0,   415,   416,   417,   418,     0,   419,   420,     0,
       0,     0,     0,   421,   422,   423,   424,   425,   426,     0,
       0,   427,   428,     0,   429,     0,   430,     0,   431,   432,
     433,   434,   435,   436,   437,   438,   439,     0,     0,   440,
     441,     0,     0,   442,   443,   444,   445,   446,     0,     0,
       0,     0,   448,     0,     0,     0,   449,     0,   450,   451,
       0,   452,   453,  5165,     0,     0,   455,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   456,   457,   458,     0,
     459,     0,   460,     0,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,     0,     0,     0,     0,   473,   474,
       0,   475,     0,   476,   477,   478,   479,   480,     0,   481,
     482,   483,     0,     0,   484,     0,     0,     0,   485,   486,
       0,   487,   488,     0,     0,   489,   490,   491,   492,   493,
       0,   494,   495,     0,   496,     0,   498,  -519,     0,   499,
     500,   501,   502,   503,   504,   505,   506,     0,     0,     0,
     508,   509,     0,   510,   511,   512,  5166,   513,     0,     0,
       0,   515,   516,   517,     0,   518,     0,   519,   520,     0,
     522,   523,     0,   524,   525,     0,     0,     0,   526,   527,
     528,   529,     0,     0,     0,   530,     0,     0,     0,     0,
       0,     0,   533,     0,   535,     0,   536,   537,   538,   539,
     540,     0,     0,     0,     0,     0,   541,   542,   543,     0,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,     0,   550,   551,   552,   553,     0,     0,     0,   555,
       0,     0,   556,   557,   558,   559,   560,   561,     0,     0,
     562,   563,   564,   565,     0,   566,   567,     0,     0,   568,
     569,   570,   571,     0,     0,   572,   573,     0,   574,   575,
     576,   577,     0,     0,     0,     0,     0,   578,   579,     0,
       0,     0,     0,   581,   582,     0,     0,   583,   584,     0,
     585,   586,     0,     0,     0,     0,     0,   589,     0,     0,
     590,     0,   591,     0,   592,   593,     0,     0,     0,     0,
       0,   594,     0,   595,     0,     0,   596,     0,     0,     0,
     597,     0,   598,   599,   600,   601,     0,     0,  -519,     0,
       0,     0,   602,   603,   604,     0,   605,     0,   607,   608,
       0,     0,   609,     0,     0,   610,   611,   612,   613,   614,
       0,   615,     0,     0,     0,     0,     0,     0,     0,     0,
     616,   617,   618,     0,   619,   620,   621,     0,     0,     0,
       0,   623,     0,   624,     0,     0,     0,     0,     0,     0,
     625,   626,     0,     0,   627,     0,   628,     0,   629,   630,
       0,     0,     0,   631,   632,   633,   634,   635,   636,   637,
     638,     0,   639,   640,   641,     0,   643,   644,   645,   646,
     647,   648,     0,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,     0,   673,   674,
     675,   676,   677,   678,   679,     0,   680,   681,   682,   683,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   243,   244,     0,
     245,   246,   247,   248,   249,     0,     0,   250,     0,     0,
       0,     0,   251,     0,     0,     0,     0,   253,   254,   255,
     256,   257,   258,     0,  -564,     0,     0,     0,   260,     0,
       0,     0,   261,     0,     0,   262,   263,   264,     0,   265,
       0,     0,     0,     0,     0,   268,  5159,     0,   269,   270,
       0,   271,   272,     0,     0,     0,     0,   275,   276,   277,
    5160,   279,   280,     0,   281,   282,     0,   283,   284,     0,
     286,     0,   288,   289,   290,   291,   292,   293,     0,   294,
     295,     0,   296,   297,   298,     0,   300,     0,     0,     0,
     301,     0,     0,     0,     0,   302,     0,     0,   303,     0,
       0,     0,   304,   305,   306,     0,     0,   307,     0,     0,
       0,     0,   308,     0,     0,     0,     0,     0,   310,   311,
       0,   312,     0,     0,     0,     0,     0,   313,   314,   315,
     316,   317,     0,     0,     0,     0,     0,     0,   319,   320,
     321,     0,     0,     0,   322,     0,  -557,   324,     0,   325,
     326,   327,     0,     0,   328,   329,     0,   330,   331,   332,
     333,   334,     0,     0,     0,   336,   337,   338,   339,   340,
       0,     0,   341,   342,  5161,   343,   344,   345,   346,   347,
       0,     0,     0,     0,     0,     0,     0,   350,   351,     0,
     352,     0,     0,     0,   353,     0,   354,   355,   356,   357,
       0,   358,     0,   359,     0,     0,     0,     0,   361,     0,
       0,     0,     0,   363,   364,     0,     0,     0,   365,   366,
     367,   368,  5162,     0,   369,     0,   371,     0,     0,   372,
       0,     0,     0,     0,   373,   374,     0,     0,     0,     0,
     376,     0,     0,     0,   377,   378,     0,   379,   380,  5163,
       0,     0,   381,     0,   382,     0,     0,     0,   384,     0,
       0,   385,  5164,     0,   386,   387,     0,     0,     0,     0,
       0,   388,   389,     0,   390,     0,   391,     0,   392,   393,
       0,     0,     0,     0,  -519,     0,     0,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,     0,   412,   413,   414,
       0,   415,   416,   417,   418,     0,   419,   420,     0,     0,
       0,     0,   421,   422,   423,   424,   425,   426,     0,     0,
     427,   428,     0,   429,     0,   430,     0,   431,   432,   433,
     434,   435,   436,   437,   438,   439,     0,     0,   440,   441,
       0,     0,   442,   443,   444,   445,   446,     0,     0,     0,
       0,   448,     0,     0,     0,   449,     0,   450,   451,     0,
     452,   453,  5165,     0,     0,   455,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   456,   457,   458,     0,   459,
       0,   460,     0,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,     0,     0,     0,     0,   473,   474,     0,
     475,     0,   476,   477,   478,   479,   480,     0,   481,   482,
     483,     0,     0,   484,     0,     0,     0,   485,   486,     0,
     487,   488,     0,     0,   489,   490,   491,   492,   493,     0,
     494,   495,     0,   496,     0,   498,  -519,     0,   499,   500,
     501,   502,   503,   504,   505,   506,     0,     0,     0,   508,
     509,     0,   510,   511,   512,  5166,   513,     0,     0,     0,
     515,   516,   517,     0,   518,     0,   519,   520,     0,   522,
     523,     0,   524,   525,     0,     0,     0,   526,   527,   528,
     529,     0,     0,     0,   530,     0,     0,     0,     0,     0,
       0,   533,     0,   535,     0,   536,   537,   538,   539,   540,
       0,     0,     0,     0,     0,   541,   542,   543,     0,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
       0,   550,   551,   552,   553,     0,     0,     0,   555,     0,
       0,   556,   557,   558,   559,   560,   561,     0,     0,   562,
     563,   564,   565,     0,   566,   567,     0,     0,   568,   569,
     570,   571,     0,     0,   572,   573,     0,   574,   575,   576,
     577,     0,     0,     0,     0,     0,   578,   579,     0,     0,
       0,     0,   581,   582,     0,     0,   583,   584,     0,   585,
     586,     0,     0,     0,     0,     0,   589,     0,     0,   590,
       0,   591,     0,   592,   593,     0,     0,     0,     0,     0,
     594,     0,   595,     0,     0,   596,     0,     0,     0,   597,
       0,   598,   599,   600,   601,     0,     0,  -519,     0,     0,
       0,   602,   603,   604,     0,   605,     0,   607,   608,     0,
       0,   609,     0,     0,   610,   611,   612,   613,   614,     0,
     615,     0,     0,     0,     0,     0,     0,     0,     0,   616,
     617,   618,     0,   619,   620,   621,     0,     0,     0,     0,
     623,     0,   624,     0,     0,     0,     0,     0,     0,   625,
     626,     0,     0,   627,     0,   628,     0,   629,   630,     0,
       0,     0,   631,   632,   633,   634,   635,   636,   637,   638,
       0,   639,   640,   641,     0,   643,   644,   645,   646,   647,
     648,     0,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,     0,   673,   674,   675,
     676,   677,   678,   679,     0,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   243,   244,     0,   245,
     246,   247,   248,   249,     0,     0,   250,     0,     0,     0,
       0,   251,     0,     0,     0,     0,   253,   254,   255,   256,
     257,   258,     0,  -564,     0,     0,     0,   260,     0,     0,
       0,   261,     0,     0,   262,   263,   264,     0,   265,     0,
       0,     0,     0,     0,   268,  5159,     0,   269,   270,     0,
     271,   272,     0,     0,     0,     0,   275,   276,   277,  5160,
     279,   280,     0,   281,   282,     0,   283,   284,     0,   286,
       0,   288,   289,   290,   291,   292,   293,     0,   294,   295,
       0,   296,   297,   298,     0,   300,     0,     0,     0,   301,
       0,     0,     0,     0,   302,     0,     0,   303,     0,     0,
       0,   304,   305,   306,     0,     0,   307,     0,     0,     0,
       0,   308,     0,     0,     0,     0,     0,   310,   311,     0,
     312,     0,     0,     0,     0,     0,   313,   314,   315,   316,
     317,     0,     0,     0,     0,     0,     0,   319,   320,   321,
       0,     0,     0,   322,     0,  5481,   324,     0,   325,   326,
     327,     0,     0,   328,   329,     0,   330,   331,   332,   333,
     334,     0,     0,     0,   336,   337,   338,   339,   340,     0,
       0,   341,   342,  5161,   343,   344,   345,   346,   347,     0,
       0,     0,     0,     0,     0,     0,   350,   351,     0,   352,
       0,     0,     0,   353,     0,   354,   355,   356,   357,     0,
     358,     0,   359,     0,     0,     0,     0,   361,     0,     0,
       0,     0,   363,   364,     0,     0,     0,   365,   366,   367,
     368,  5162,     0,   369,     0,   371,     0,     0,   372,     0,
       0,     0,     0,   373,   374,     0,     0,     0,     0,   376,
       0,     0,     0,   377,   378,     0,   379,   380,  5163,     0,
       0,   381,     0,   382,     0,     0,     0,   384,     0,     0,
     385,  5164,     0,   386,   387,     0,     0,     0,     0,     0,
     388,   389,     0,   390,     0,   391,     0,   392,   393,     0,
       0,     0,     0,  -519,     0,     0,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,     0,   412,   413,   414,     0,
     415,   416,   417,   418,     0,   419,   420,     0,     0,     0,
       0,   421,   422,   423,   424,   425,   426,     0,     0,   427,
     428,     0,   429,     0,   430,     0,   431,   432,   433,   434,
     435,   436,   437,   438,   439,     0,     0,   440,   441,     0,
       0,   442,   443,   444,   445,   446,     0,     0,     0,     0,
     448,     0,     0,     0,   449,     0,   450,   451,     0,   452,
     453,  5165,     0,     0,   455,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,     0,   459,     0,
     460,     0,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,     0,     0,     0,     0,   473,   474,     0,   475,
       0,   476,   477,   478,   479,   480,     0,   481,   482,   483,
       0,     0,   484,     0,     0,     0,   485,   486,     0,   487,
     488,     0,     0,   489,   490,   491,   492,   493,     0,   494,
     495,     0,   496,     0,   498,  -519,     0,   499,   500,   501,
     502,   503,   504,   505,   506,     0,     0,     0,   508,   509,
       0,   510,   511,   512,  5166,   513,     0,     0,     0,   515,
     516,   517,     0,   518,     0,   519,   520,     0,   522,   523,
       0,   524,   525,     0,     0,     0,   526,   527,   528,   529,
       0,     0,     0,   530,     0,     0,     0,     0,     0,     0,
     533,     0,   535,     0,   536,   537,   538,   539,   540,     0,
       0,     0,     0,     0,   541,   542,   543,     0,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,     0,
     550,   551,   552,   553,     0,     0,     0,   555,     0,     0,
     556,   557,   558,   559,   560,   561,     0,     0,   562,   563,
     564,   565,     0,   566,   567,     0,     0,   568,   569,   570,
     571,     0,     0,   572,   573,     0,   574,   575,   576,   577,
       0,     0,     0,     0,     0,   578,   579,     0,     0,     0,
       0,   581,   582,     0,     0,   583,   584,     0,   585,   586,
       0,     0,     0,     0,     0,   589,     0,     0,   590,     0,
     591,     0,   592,   593,     0,     0,     0,     0,     0,   594,
       0,   595,     0,     0,   596,     0,     0,     0,   597,     0,
     598,   599,   600,   601,     0,     0,  -519,     0,     0,     0,
     602,   603,   604,     0,   605,     0,   607,   608,     0,     0,
     609,     0,     0,   610,   611,   612,   613,   614,     0,   615,
       0,     0,     0,     0,     0,     0,     0,     0,   616,   617,
     618,     0,   619,   620,   621,     0,     0,     0,     0,   623,
       0,   624,     0,     0,     0,     0,     0,     0,   625,   626,
       0,     0,   627,     0,   628,     0,   629,   630,     0,     0,
       0,   631,   632,   633,   634,   635,   636,   637,   638,     0,
     639,   640,   641,     0,   643,   644,   645,   646,   647,   648,
       0,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,     0,   673,   674,   675,   676,
     677,   678,   679,     0,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   243,   244,     0,   245,   246,
     247,   248,   249,     0,     0,   250,     0,     0,     0,     0,
     251,     0,     0,     0,     0,   253,   254,   255,   256,   257,
     258,     0,  -564,     0,     0,     0,   260,     0,     0,     0,
     261,     0,     0,   262,   263,   264,     0,   265,     0,     0,
       0,     0,     0,   268,  5159,     0,   269,   270,     0,   271,
     272,     0,     0,     0,     0,   275,   276,   277,  5160,   279,
     280,     0,   281,   282,     0,   283,   284,     0,   286,     0,
     288,   289,   290,   291,   292,   293,     0,   294,   295,     0,
     296,   297,   298,     0,   300,     0,     0,     0,   301,     0,
       0,     0,     0,   302,     0,     0,   303,     0,     0,     0,
     304,   305,   306,     0,     0,   307,     0,     0,     0,     0,
     308,     0,     0,     0,     0,     0,   310,   311,     0,   312,
       0,     0,     0,     0,     0,   313,   314,   315,   316,   317,
       0,     0,     0,     0,     0,     0,   319,   320,   321,     0,
       0,     0,   322,     0,  5522,   324,     0,   325,   326,   327,
       0,     0,   328,   329,     0,   330,   331,   332,   333,   334,
       0,     0,     0,   336,   337,   338,   339,   340,     0,     0,
     341,   342,  5161,   343,   344,   345,   346,   347,     0,     0,
       0,     0,     0,     0,     0,   350,   351,     0,   352,     0,
       0,     0,   353,     0,   354,   355,   356,   357,     0,   358,
       0,   359,     0,     0,     0,     0,   361,     0,     0,     0,
       0,   363,   364,     0,     0,     0,   365,   366,   367,   368,
    5162,     0,   369,     0,   371,     0,     0,   372,     0,     0,
       0,     0,   373,   374,     0,     0,     0,     0,   376,     0,
       0,     0,   377,   378,     0,   379,   380,  5163,     0,     0,
     381,     0,   382,     0,     0,     0,   384,     0,     0,   385,
    5164,     0,   386,   387,     0,     0,     0,     0,     0,   388,
     389,     0,   390,     0,   391,     0,   392,   393,     0,     0,
       0,     0,  -519,     0,     0,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,     0,   412,   413,   414,     0,   415,
     416,   417,   418,     0,   419,   420,     0,     0,     0,     0,
     421,   422,   423,   424,   425,   426,     0,     0,   427,   428,
       0,   429,     0,   430,     0,   431,   432,   433,   434,   435,
     436,   437,   438,   439,     0,     0,   440,   441,     0,     0,
     442,   443,   444,   445,   446,     0,     0,     0,     0,   448,
       0,     0,     0,   449,     0,   450,   451,     0,   452,   453,
    5165,     0,     0,   455,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   456,   457,   458,     0,   459,     0,   460,
       0,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,     0,     0,     0,     0,   473,   474,     0,   475,     0,
     476,   477,   478,   479,   480,     0,   481,   482,   483,     0,
       0,   484,     0,     0,     0,   485,   486,     0,   487,   488,
       0,     0,   489,   490,   491,   492,   493,     0,   494,   495,
       0,   496,     0,   498,  -519,     0,   499,   500,   501,   502,
     503,   504,   505,   506,     0,     0,     0,   508,   509,     0,
     510,   511,   512,  5166,   513,     0,     0,     0,   515,   516,
     517,     0,   518,     0,   519,   520,     0,   522,   523,     0,
     524,   525,     0,     0,     0,   526,   527,   528,   529,     0,
       0,     0,   530,     0,     0,     0,     0,     0,     0,   533,
       0,   535,     0,   536,   537,   538,   539,   540,     0,     0,
       0,     0,     0,   541,   542,   543,     0,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,     0,   550,
     551,   552,   553,     0,     0,     0,   555,     0,     0,   556,
     557,   558,   559,   560,   561,     0,     0,   562,   563,   564,
     565,     0,   566,   567,     0,     0,   568,   569,   570,   571,
       0,     0,   572,   573,     0,   574,   575,   576,   577,     0,
       0,     0,     0,     0,   578,   579,     0,     0,     0,     0,
     581,   582,     0,     0,   583,   584,     0,   585,   586,     0,
       0,     0,     0,     0,   589,     0,     0,   590,     0,   591,
       0,   592,   593,     0,     0,     0,     0,     0,   594,     0,
     595,     0,     0,   596,     0,     0,     0,   597,     0,   598,
     599,   600,   601,     0,     0,  -519,     0,     0,     0,   602,
     603,   604,     0,   605,     0,   607,   608,     0,     0,   609,
       0,     0,   610,   611,   612,   613,   614,     0,   615,     0,
       0,     0,     0,     0,     0,     0,     0,   616,   617,   618,
       0,   619,   620,   621,     0,     0,     0,     0,   623,     0,
     624,     0,     0,     0,     0,     0,     0,   625,   626,     0,
       0,   627,     0,   628,     0,   629,   630,     0,     0,     0,
     631,   632,   633,   634,   635,   636,   637,   638,     0,   639,
     640,   641,     0,   643,   644,   645,   646,   647,   648,     0,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,     0,   673,   674,   675,   676,   677,
     678,   679,     0,   680,   681,   682,   683,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   243,   244,     0,   245,   246,   247,
     248,   249,     0,     0,   250,     0,     0,     0,     0,   251,
       0,     0,     0,     0,   253,   254,   255,   256,   257,   258,
       0,  -564,     0,     0,     0,   260,     0,     0,     0,   261,
       0,     0,   262,   263,   264,     0,   265,     0,     0,     0,
       0,     0,   268,  5159,     0,   269,   270,     0,   271,   272,
       0,     0,     0,     0,   275,   276,   277,  5160,   279,   280,
       0,   281,   282,     0,   283,   284,     0,   286,     0,   288,
     289,   290,   291,   292,   293,     0,   294,   295,     0,   296,
     297,   298,     0,   300,     0,     0,     0,   301,     0,     0,
       0,     0,   302,     0,     0,   303,     0,     0,     0,   304,
     305,   306,     0,     0,   307,     0,     0,     0,     0,   308,
       0,     0,     0,     0,     0,   310,   311,     0,   312,     0,
       0,     0,     0,     0,   313,   314,   315,   316,   317,     0,
       0,     0,     0,     0,     0,   319,   320,   321,     0,     0,
       0,   322,     0,  -538,   324,     0,   325,   326,   327,     0,
       0,   328,   329,     0,   330,   331,   332,   333,   334,     0,
       0,     0,   336,   337,   338,   339,   340,     0,     0,   341,
     342,  5161,   343,   344,   345,   346,   347,     0,     0,     0,
       0,     0,     0,     0,   350,   351,     0,   352,     0,     0,
       0,   353,     0,   354,   355,   356,   357,     0,   358,     0,
     359,     0,     0,     0,     0,   361,     0,     0,     0,     0,
     363,   364,     0,     0,     0,   365,   366,   367,   368,  5162,
       0,   369,     0,   371,     0,     0,   372,     0,     0,     0,
       0,   373,   374,     0,     0,     0,     0,   376,     0,     0,
       0,   377,   378,     0,   379,   380,  5163,     0,     0,   381,
       0,   382,     0,     0,     0,   384,     0,     0,   385,  5164,
       0,   386,   387,     0,     0,     0,     0,     0,   388,   389,
       0,   390,     0,   391,     0,   392,   393,     0,     0,     0,
       0,  -519,     0,     0,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,     0,   412,   413,   414,     0,   415,   416,
     417,   418,     0,   419,   420,     0,     0,     0,     0,   421,
     422,   423,   424,   425,   426,     0,     0,   427,   428,     0,
     429,     0,   430,     0,   431,   432,   433,   434,   435,   436,
     437,   438,   439,     0,     0,   440,   441,     0,     0,   442,
     443,   444,   445,   446,     0,     0,     0,     0,   448,     0,
       0,     0,   449,     0,   450,   451,     0,   452,   453,  5165,
       0,     0,   455,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   456,   457,   458,     0,   459,     0,   460,     0,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
       0,     0,     0,     0,   473,   474,     0,   475,     0,   476,
     477,   478,   479,   480,     0,   481,   482,   483,     0,     0,
     484,     0,     0,     0,   485,   486,     0,   487,   488,     0,
       0,   489,   490,   491,   492,   493,     0,   494,   495,     0,
     496,     0,   498,  -519,     0,   499,   500,   501,   502,   503,
     504,   505,   506,     0,     0,     0,   508,   509,     0,   510,
     511,   512,  5166,   513,     0,     0,     0,   515,   516,   517,
       0,   518,     0,   519,   520,     0,   522,   523,     0,   524,
     525,     0,     0,     0,   526,   527,   528,   529,     0,     0,
       0,   530,     0,     0,     0,     0,     0,     0,   533,     0,
     535,     0,   536,   537,   538,   539,   540,     0,     0,     0,
       0,     0,   541,   542,   543,     0,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,     0,   550,   551,
     552,   553,     0,     0,     0,   555,     0,     0,   556,   557,
     558,   559,   560,   561,     0,     0,   562,   563,   564,   565,
       0,   566,   567,     0,     0,   568,   569,   570,   571,     0,
       0,   572,   573,     0,   574,   575,   576,   577,     0,     0,
       0,     0,     0,   578,   579,     0,     0,     0,     0,   581,
     582,     0,     0,   583,   584,     0,   585,   586,     0,     0,
       0,     0,     0,   589,     0,     0,   590,     0,   591,     0,
     592,   593,     0,     0,     0,     0,     0,   594,     0,   595,
       0,     0,   596,     0,     0,     0,   597,     0,   598,   599,
     600,   601,     0,     0,  -519,     0,     0,     0,   602,   603,
     604,     0,   605,     0,   607,   608,     0,     0,   609,     0,
       0,   610,   611,   612,   613,   614,     0,   615,     0,     0,
       0,     0,     0,     0,     0,     0,   616,   617,   618,     0,
     619,   620,   621,     0,     0,     0,     0,   623,     0,   624,
       0,     0,     0,     0,     0,     0,   625,   626,     0,     0,
     627,     0,   628,     0,   629,   630,     0,     0,     0,   631,
     632,   633,   634,   635,   636,   637,   638,     0,   639,   640,
     641,     0,   643,   644,   645,   646,   647,   648,     0,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,     0,   673,   674,   675,   676,   677,   678,
     679,     0,   680,   681,   682,   683,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   243,   244,     0,   245,   246,   247,   248,
     249,     0,     0,   250,     0,     0,     0,     0,   251,     0,
       0,     0,     0,   253,   254,   255,   256,   257,   258,     0,
    -564,     0,     0,     0,   260,     0,     0,     0,   261,     0,
       0,   262,   263,   264,     0,   265,     0,     0,     0,     0,
       0,   268,  5159,     0,   269,   270,     0,   271,   272,     0,
       0,     0,     0,   275,   276,   277,  5160,   279,   280,     0,
     281,   282,     0,   283,   284,     0,   286,     0,   288,   289,
     290,   291,   292,   293,     0,   294,   295,     0,   296,   297,
     298,     0,   300,     0,     0,     0,   301,     0,     0,     0,
       0,   302,     0,     0,   303,     0,     0,     0,   304,   305,
     306,     0,     0,   307,     0,     0,     0,     0,   308,     0,
       0,     0,     0,     0,   310,   311,     0,   312,     0,     0,
       0,     0,     0,   313,   314,   315,   316,   317,     0,     0,
       0,     0,     0,     0,   319,   320,   321,     0,     0,     0,
     322,     0,     0,   324,     0,   325,   326,   327,     0,     0,
     328,   329,     0,   330,   331,   332,   333,   334,     0,     0,
       0,   336,   337,   338,   339,   340,     0,     0,   341,   342,
    5161,   343,   344,   345,   346,   347,     0,     0,     0,     0,
       0,     0,     0,   350,   351,     0,   352,     0,     0,     0,
     353,     0,   354,   355,   356,   357,     0,   358,     0,   359,
       0,     0,     0,     0,   361,     0,     0,     0,     0,   363,
     364,     0,     0,     0,   365,   366,   367,   368,  5162,     0,
     369,     0,   371,     0,     0,   372,     0,     0,     0,     0,
     373,   374,     0,     0,     0,     0,   376,     0,     0,     0,
     377,   378,     0,   379,   380,  5163,     0,     0,   381,     0,
     382,     0,     0,     0,   384,     0,     0,   385,  5164,     0,
     386,   387,     0,     0,     0,     0,     0,   388,   389,     0,
     390,     0,   391,     0,   392,   393,     0,     0,     0,     0,
    -519,     0,     0,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,     0,   412,   413,   414,     0,   415,   416,   417,
     418,     0,   419,   420,     0,     0,     0,     0,   421,   422,
     423,   424,   425,   426,     0,     0,   427,   428,     0,   429,
       0,   430,     0,   431,   432,   433,   434,   435,   436,   437,
     438,   439,     0,     0,   440,   441,     0,     0,   442,   443,
     444,   445,   446,     0,     0,     0,     0,   448,     0,     0,
       0,   449,     0,   450,   451,     0,   452,   453,  5165,     0,
       0,   455,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   456,   457,   458,     0,   459,     0,   460,     0,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,     0,
       0,     0,     0,   473,   474,     0,   475,     0,   476,   477,
     478,   479,   480,     0,   481,   482,   483,     0,     0,   484,
       0,     0,     0,   485,   486,     0,   487,   488,     0,     0,
     489,   490,   491,   492,   493,     0,   494,   495,     0,   496,
       0,   498,  -519,     0,   499,   500,   501,   502,   503,   504,
     505,   506,     0,     0,     0,   508,   509,     0,   510,   511,
     512,  5166,   513,     0,     0,     0,   515,   516,   517,     0,
     518,     0,   519,   520,     0,   522,   523,     0,   524,   525,
       0,     0,     0,   526,   527,   528,   529,     0,     0,     0,
     530,     0,     0,     0,     0,     0,     0,   533,     0,   535,
       0,   536,   537,   538,   539,   540,     0,     0,     0,     0,
       0,   541,   542,   543,     0,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,     0,   550,   551,   552,
     553,     0,     0,     0,   555,     0,     0,   556,   557,   558,
     559,   560,   561,     0,     0,   562,   563,   564,   565,     0,
     566,   567,     0,     0,   568,   569,   570,   571,     0,     0,
     572,   573,     0,   574,   575,   576,   577,     0,     0,     0,
       0,     0,   578,   579,     0,     0,     0,     0,   581,   582,
       0,     0,   583,   584,     0,   585,   586,     0,     0,     0,
       0,     0,   589,     0,     0,   590,     0,   591,     0,   592,
     593,     0,     0,     0,     0,     0,   594,     0,   595,     0,
       0,   596,     0,     0,     0,   597,     0,   598,   599,   600,
     601,     0,     0,  -519,     0,     0,     0,   602,   603,   604,
       0,   605,     0,   607,   608,     0,     0,   609,     0,     0,
     610,   611,   612,   613,   614,     0,   615,     0,     0,     0,
       0,     0,     0,     0,     0,   616,   617,   618,     0,   619,
     620,   621,     0,     0,     0,     0,   623,     0,   624,     0,
       0,     0,     0,     0,     0,   625,   626,     0,     0,   627,
       0,   628,     0,   629,   630,     0,     0,     0,   631,   632,
     633,   634,   635,   636,   637,   638,     0,   639,   640,   641,
       0,   643,   644,   645,   646,   647,   648,     0,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,     0,   673,   674,   675,   676,   677,   678,   679,
       0,   680,   681,   682,   683,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   243,   244,     0,   245,   246,   247,   248,   249,
       0,     0,   250,     0,     0,     0,     0,   251,     0,     0,
       0,     0,   253,   254,   255,   256,   257,   258,     0,  -564,
       0,     0,     0,   260,     0,     0,     0,   261,     0,     0,
     262,   263,   264,     0,   265,     0,     0,     0,     0,     0,
     268,  5159,     0,   269,   270,     0,   271,   272,     0,     0,
       0,     0,   275,   276,   277,  5160,   279,   280,     0,   281,
     282,     0,   283,   284,     0,   286,     0,   288,   289,   290,
     291,   292,   293,     0,   294,   295,     0,   296,   297,   298,
       0,   300,     0,     0,     0,   301,     0,     0,     0,     0,
     302,     0,     0,   303,     0,     0,     0,   304,   305,   306,
       0,     0,   307,     0,     0,     0,     0,   308,     0,     0,
       0,     0,     0,   310,   311,     0,   312,     0,     0,     0,
       0,     0,   313,   314,   315,   316,   317,     0,     0,     0,
       0,     0,     0,   319,   320,   321,     0,     0,     0,   322,
       0,     0,   324,     0,   325,   326,   327,     0,     0,   328,
     329,     0,   330,   331,   332,   333,   334,     0,     0,     0,
     336,   337,   338,   339,   340,     0,     0,   341,   342,  5161,
     343,   344,   345,   346,   347,     0,     0,     0,     0,     0,
       0,     0,   350,   351,     0,   352,     0,     0,     0,   353,
       0,   354,   355,   356,   357,     0,   358,     0,   359,     0,
       0,     0,     0,   361,     0,     0,     0,     0,   363,   364,
       0,     0,     0,   365,   366,   367,   368,  5162,     0,   369,
       0,   371,     0,     0,   372,     0,     0,     0,     0,   373,
     374,     0,     0,     0,     0,   376,     0,     0,     0,   377,
     378,     0,   379,   380,  5163,     0,     0,   381,     0,   382,
       0,     0,     0,   384,     0,     0,   385,  5164,     0,   386,
     387,     0,     0,     0,     0,     0,   388,   389,     0,   390,
       0,   391,     0,   392,   393,     0,     0,     0,     0,  -519,
       0,     0,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,     0,   412,   413,   414,     0,   415,   416,   417,   418,
       0,   419,   420,     0,     0,     0,     0,   421,   422,   423,
     424,   425,   426,     0,     0,   427,   428,     0,   429,     0,
     430,     0,   431,   432,   433,   434,   435,   436,   437,   438,
     439,     0,     0,   440,   441,     0,     0,   442,   443,   444,
     445,   446,     0,     0,     0,     0,   448,     0,     0,     0,
     449,     0,   450,   451,     0,   452,   453,  5165,     0,     0,
     455,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     456,   457,   458,     0,   459,     0,   460,     0,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,     0,     0,
       0,     0,   473,   474,     0,   475,     0,   476,   477,   478,
     479,   480,     0,   481,   482,   483,     0,     0,   484,     0,
       0,     0,   485,   486,     0,   487,   488,     0,     0,   489,
     490,   491,   492,   493,     0,   494,   495,     0,   496,     0,
     498,  -519,     0,   499,   500,   501,   502,   503,   504,   505,
     506,     0,     0,     0,   508,   509,     0,   510,   511,   512,
    5166,   513,     0,     0,     0,   515,   516,   517,     0,   518,
       0,   519,   520,     0,   522,   523,     0,   524,   525,     0,
       0,     0,   526,   527,   528,   529,     0,     0,     0,   530,
       0,     0,     0,     0,     0,     0,   533,     0,   535,     0,
     536,   537,   538,   539,   540,     0,     0,     0,     0,     0,
     541,   542,   543,     0,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,     0,   550,   551,   552,   553,
       0,     0,     0,   555,     0,     0,   556,   557,   558,   559,
     560,   561,     0,     0,   562,   563,   564,   565,     0,   566,
     567,     0,     0,   568,   569,   570,   571,     0,     0,   572,
     573,     0,   574,   575,   576,   577,     0,     0,     0,     0,
       0,   578,   579,     0,     0,     0,     0,   581,   582,     0,
       0,   583,   584,     0,   585,   586,     0,     0,     0,     0,
       0,   589,     0,     0,  5419,     0,   591,     0,   592,   593,
       0,     0,     0,     0,     0,   594,     0,   595,     0,     0,
     596,     0,     0,     0,   597,     0,   598,   599,   600,   601,
       0,     0,  -519,     0,     0,     0,   602,   603,   604,     0,
     605,     0,   607,   608,     0,     0,   609,     0,     0,   610,
     611,   612,   613,   614,     0,   615,     0,     0,     0,     0,
       0,     0,     0,     0,   616,   617,   618,     0,   619,   620,
     621,     0,     0,     0,     0,   623,     0,   624,     0,     0,
       0,     0,     0,     0,   625,   626,     0,     0,   627,     0,
     628,     0,   629,   630,     0,     0,     0,   631,   632,   633,
     634,   635,   636,   637,   638,     0,   639,   640,   641,     0,
     643,   644,   645,   646,   647,   648,     0,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,     0,   673,   674,   675,   676,   677,   678,   679,     0,
     680,   681,   682,   683,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   243,   244,     0,   245,   246,   247,   248,   249,     0,
       0,   250,     0,     0,     0,     0,   251,     0,     0,     0,
       0,   253,   254,   255,   256,   257,   258,     0,     0,     0,
       0,     0,   260,     0,     0,     0,   261,     0,     0,   262,
     263,   264,     0,   265,     0,     0,     0,     0,     0,   268,
       0,     0,   269,   270,     0,   271,   272,     0,     0,     0,
       0,   275,   276,   277,   278,   279,   280,     0,   281,   282,
       0,   283,   284,     0,   286,     0,   288,   289,   290,   291,
     292,   293,     0,   294,   295,     0,   296,   297,   298,     0,
     300,     0,     0,     0,   301,     0,     0,     0,     0,   302,
       0,     0,   303,     0,     0,     0,   304,   305,   306,     0,
       0,   307,     0,     0,     0,     0,   308,     0,     0,     0,
       0,     0,   310,   311,     0,   312,     0,     0,     0,     0,
       0,   313,   314,   315,   316,   317,     0,     0,     0,     0,
       0,     0,   319,   320,   321,     0,     0,     0,   322,     0,
       0,   324,     0,   325,   326,   327,     0,     0,   328,   329,
       0,   330,   331,   332,   333,   334,     0,     0,     0,   336,
     337,   338,   339,   340,     0,     0,   341,   342,     0,   343,
     344,   345,   346,   347,     0,     0,     0,     0,     0,     0,
       0,   350,   351,     0,   352,     0,     0,     0,   353,     0,
     354,   355,   356,   357,     0,   358,     0,   359,     0,     0,
       0,     0,   361,     0,     0,     0,     0,   363,   364,     0,
       0,     0,   365,   366,   367,   368,     0,     0,   369,     0,
     371,     0,     0,   372,     0,     0,     0,     0,   373,   374,
       0,     0,     0,     0,   376,     0,     0,     0,   377,   378,
       0,   379,   380,     0,     0,     0,   381,     0,   382,     0,
       0,     0,   384,     0,     0,   385,     0,     0,   386,   387,
       0,     0,     0,     0,     0,   388,   389,     0,   390,     0,
     391,     0,   392,   393,     0,     0,     0,     0,     0,     0,
       0,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
       0,   412,   413,   414,     0,   415,   416,   417,   418,     0,
     419,   420,     0,     0,     0,     0,   421,   422,   423,   424,
     425,   426,     0,     0,   427,   428,     0,   429,     0,   430,
       0,   431,   432,   433,   434,   435,   436,   437,   438,   439,
       0,     0,   440,   441,     0,     0,   442,   443,   444,   445,
     446,     0,     0,     0,     0,   448,     0,     0,     0,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   456,
     457,   458,     0,   459,     0,   460,     0,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,     0,     0,     0,
       0,   473,   474,     0,   475,     0,   476,   477,   478,   479,
     480,     0,   481,   482,   483,     0,     0,   484,     0,     0,
       0,   485,   486,     0,   487,   488,     0,     0,   489,   490,
     491,   492,   493,     0,   494,   495,     0,   496,     0,   498,
       0,     0,   499,   500,   501,   502,   503,   504,   505,   506,
       0,     0,     0,   508,   509,     0,   510,   511,   512,     0,
     513,     0,     0,     0,   515,   516,   517,     0,   518,     0,
     519,   520,     0,   522,   523,     0,   524,   525,     0,     0,
       0,   526,   527,   528,   529,     0,     0,     0,   530,     0,
       0,     0,     0,     0,     0,   533,     0,   535,     0,   536,
     537,   538,   539,   540,     0,     0,     0,     0,     0,   541,
     542,   543,     0,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,     0,   550,   551,   552,   553,     0,
       0,     0,   555,     0,     0,   556,   557,   558,   559,   560,
     561,     0,     0,   562,   563,   564,   565,     0,   566,   567,
       0,     0,   568,   569,   570,   571,     0,     0,   572,   573,
       0,   574,   575,   576,   577,     0,     0,     0,     0,     0,
     578,   579,     0,     0,     0,     0,   581,   582,     0,     0,
     583,   584,     0,   585,   586,     0,     0,     0,     0,     0,
     589,     0,     0,   590,     0,   591,     0,   592,   593,     0,
       0,     0,     0,     0,   594,     0,   595,     0,     0,   596,
       0,     0,     0,   597,     0,   598,   599,   600,   601,     0,
       0,     0,     0,     0,     0,   602,   603,   604,     0,   605,
       0,   607,   608,     0,     0,   609,     0,     0,   610,   611,
     612,   613,   614,     0,   615,     0,     0,     0,     0,     0,
       0,     0,     0,   616,   617,   618,     0,   619,   620,   621,
       0,     0,     0,     0,   623,     0,   624,     0,     0,     0,
       0,     0,     0,   625,   626,     0,     0,   627,     0,   628,
       0,   629,   630,     0,     0,     0,   631,   632,   633,   634,
     635,   636,   637,   638,     0,   639,   640,   641,     0,   643,
     644,   645,   646,   647,   648,     0,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
       0,   673,   674,   675,   676,   677,   678,   679,     0,   680,
     681,   682,   683,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
    3807,  3808,     0,     0,     0,     0,  3809,     0,  3810,     0,
    3811,  3812,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3813,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3814,     0,
       0,  3815,     0,     0,     0,     0,     0,     0,     0,  3816,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3460,     0,
       0,     0,     0,     0,     0,  2594,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3817,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3818,     0,  3819,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3820,  3821,     0,     0,     0,     0,     0,  2595,  2596,
    2597,  2598,  2599,  2600,  2601,  2602,  2603,  2604,  2605,  2606,
    2607,  2608,  2609,  2610,  2611,  2612,  2613,  2614,     0,  2615,
    2616,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3822,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3823,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3824,     0,     0,     0,     0,
       0,     0,     0,     0,  3825,  3826,     0,  3827,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3828,  3829,  3830,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3831,  3832,  3833,     0,     0,     0,     0,  3834,
       0,     0,  3835,     0,     0,     0,     0,  2617,  2618,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3836,  3837,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3838,  3839,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3472,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3840,     0,     0,     0,  3841,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3842,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3843,     0,
       0,  3844,     0,     0,  3845,  3846,  3847,  3848,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3849,  3850,     0,
       0,     0,     0,  2619,  2620,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2621,  3851,  2622,  2623,  2624,  2625,
    2626,     0,     0,  2627,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2628,     0,     0,     0,     0,  2629,  2630,
    2631,  2632,  2633,  2634,  2635,  2636,  2637,  2638,  2639,  2640,
    2641,  2642,  2643,  2644,  2645,  2646,  2647,  2648,  2649,  2650,
    2651,  2652,  2653,  2654,  2655,  2656,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2657
};

static const yytype_int16 yycheck[] =
{
       6,   887,   901,    44,   115,     0,    60,     0,    97,    15,
      43,    44,    18,  1031,  1032,     0,    22,  1183,  1279,  1233,
    1697,  1080,  1184,    21,  1171,    31,    57,  1176,  1330,  2204,
     116,  1867,    38,  1051,  1624,    41,  1422,     6,  1422,    43,
      46,  1330,  1458,    49,  1164,    43,  1149,    53,   802,    55,
    1144,  1144,  2844,    60,  1134,  1149,  1149,  3054,  1198,  2700,
    2468,  2434,  2435,  2471,  2472,  2247,  1252,  1253,  1837,    64,
     763,  1199,  1383,  2555,  2556,    22,    19,  2941,  1199,    64,
    1778,  3020,  3211,  2051,  2052,  2496,  1166,    30,  2169,  2169,
    1669,    97,    35,    59,  2505,  1281,  2064,  2065,  2066,  2385,
    1798,  2703,    49,  2194,  2390,  3123,  2512,  1293,  1294,  1295,
    1169,  2471,  2472,  1299,  1173,  3474,  1058,  3373,  1816,  1689,
    1690,  1691,  2745,  3267,  2965,  1346,  2749,  1746,  3067,  1272,
    2836,  1746,  3319,  2997,  2545,  2283,   121,  1778,  2549,  3853,
     230,  1083,    21,  3706,  3757,  1149,  1746,  2141,  2974,   226,
    2910,  2703,  1338,  2742,  1672,   116,  2247,  1675,  1780,  1677,
    2703,  2750,  1784,  3050,  1149,  3297,  2703,  3382,  3107,  3108,
    1580,  2703,   735,   736,  1049,  2376,  1798,  2378,  2979,   872,
     873,  1149,   875,  3853,  2242,   191,  2479,  1597,  1810,  4521,
    2391,  2750,  2719,  2394,  1604,   888,  2397,  3382,  3625,  1346,
    1610,  2543,  2544,  3873,  3874,   121,  2445,  3916,  4521,  1760,
      21,    18,    19,  1427,   220,    35,   222,  4178,    22,   225,
     226,   227,   228,    18,    19,    71,    21,  2830,  2494,  2694,
    2742,    11,    68,    18,    19,    21,   242,  4419,  2750,  2880,
     125,  2482,   144,   160,   191,  1681,    71,  1683,  1684,  1685,
      73,  3826,  3827,   222,  2984,  3830,   225,  2523,   125,  2525,
    2526,    52,  4776,   194,    73,    77,    18,    19,   197,  1245,
    1246,  1247,    71,  3848,    18,    19,  1356,   158,    18,    19,
    1256,   228,    31,    62,    21,    21,   194,    18,    19,   176,
     246,   235,  2700,   194,  3233,   242,  1510,   156,     5,    73,
      48,  1237,  1238,    18,    19,  2735,  2736,  2737,   125,    18,
      19,  1287,   749,   750,  1290,   125,   163,  4232,   156,   197,
    4396,   249,  2752,    21,   231,    26,  2967,   131,    73,    48,
     282,    21,  3756,  1309,  1310,   372,  1222,  1313,    67,   156,
      18,    19,    18,    19,   387,    43,   156,  2777,   231,  3263,
    1901,  2781,    18,    19,   285,  1331,  1332,    18,    19,     9,
    1336,  1337,   401,    18,    19,   125,   144,  2797,  2798,  4649,
     156,    73,   366,  2803,   756,  1351,    18,    19,    73,    29,
     141,  4166,    21,    84,    34,    59,   158,    81,   372,  2819,
    2820,    47,   230,    21,   235,   483,   156,   194,  2828,    18,
      19,   377,   282,   162,   194,   156,   111,  3346,    23,  3348,
     276,   204,   111,    70,  2825,   472,  2846,   276,   571,  2705,
     156,   197,   156,    71,    35,    37,   191,  4550,   259,    12,
     156,   777,   406,   156,    18,    19,  2892,   125,    18,    19,
      18,    19,   275,    19,   156,   197,    61,    62,   377,   246,
     194,    18,    19,    18,    19,  3814,  4031,   158,   379,   156,
     355,    18,    19,   332,    85,   636,   176,   571,   231,   614,
     246,   315,  2880,   582,   455,     9,  3663,   239,   387,    18,
      19,   372,   432,    18,    19,  3844,  3845,   249,   285,   109,
      18,    19,  3115,  1379,   235,   285,   198,    13,    18,    19,
      21,   847,   176,   571,   156,   156,   180,   634,    18,    19,
      43,  1410,  1411,   186,  1268,  3310,    22,   156,  1536,   197,
     194,   387,   263,   326,   235,   282,   611,   194,  1282,  1547,
     235,  4892,    23,   446,   432,  4148,   237,   126,  1658,   243,
     276,   428,   388,   746,    35,  4339,   150,   234,   235,   400,
     276,    18,    19,   194,    78,   453,   293,  3159,    49,  2967,
     216,   800,  4744,   388,  3657,     9,   680,    37,   640,   808,
      61,    62,   156,  5087,   261,   150,  4370,   691,   282,   386,
    3421,   784,   389,   344,   501,   565,  1706,    31,   238,   388,
     486,   386,   231,   266,   389,  4956,   432,   495,   449,  1498,
     103,   386,    18,    19,   389,   246,   582,   219,    18,    19,
    4571,  3406,   456,   370,   100,  3238,  3650,  3651,   285,   571,
     533,   322,   432,   708,   140,   131,  3660,  3661,    18,    19,
     392,  1573,    22,   125,   386,  1577,   130,   389,   150,  4353,
    1582,   812,   386,  1206,   285,   389,   386,   412,   130,   389,
      70,   387,   186,  1552,   807,   386,   330,  1350,   389,   400,
    3071,   204,  1721,  1722,   400,   546,   743,   812,   369,  1611,
    1612,   386,   293,  4236,   389,  3298,   571,   386,   469,  2258,
     389,  2260,   203,   371,   658,   812,   636,  5201,  3099,  3100,
    3101,  3102,   455,   602,  1387,   432,   403,   376,   578,   130,
     569,   596,   285,   812,   315,  4828,   608,   811,   386,   212,
     386,   389,  5226,   389,  1407,    18,    19,   510,   428,   807,
     386,   642,   500,   389,  3853,   386,   595,    52,   389,   735,
     736,   386,   786,  4308,   389,   729,   602,   743,  3867,   745,
     388,   131,  3383,  4318,   386,  2984,   727,   389,  2134,   219,
    2134,  4326,   238,  3164,   428,  2937,   813,   194,  4940,  4941,
    2144,   400,  1948,  5043,  3605,   464,  3032,   386,   807,   812,
     389,   808,   258,   103,   546,   634,  4561,    18,    19,   786,
    3382,   510,  2480,   630,  2482,   271,   693,  4362,   735,   736,
     742,   584,  3248,   487,  3595,  1141,   802,   571,  3737,  1236,
     877,   634,   386,   371,  1990,   389,   386,  3008,   386,   389,
     241,   389,  4727,   757,   403,   799,   455,   562,  3000,   386,
     651,   386,   389,  2998,   389,  2241,   916,   917,   918,   485,
    2449,   921,   922,   582,  2449,   925,   812,   927,   928,   929,
     647,  4265,  3548,   622,  3550,   546,  2937,   386,  3787,  2449,
     389,   386,   647,   492,   389,   722,   812,  1239,   386,  2917,
     562,   389,   647,  1426,   492,   368,   386,   562,   354,   389,
    3276,   877,  2840,   879,   614,   716,   386,   808,   884,   389,
    4841,   876,  4958,   812,   812,   542,  2072,  3751,   636,  2883,
    3129,   876,  3806,  2974,  2974,   647,   813,   974,   634,  3192,
    1904,  3194,   612,   647,   812,   642,   995,   647,   634,  3000,
     812,   812,  1002,   919,  3379,  1478,   647,   636,   924,   386,
    3650,   812,   389,  1859,  1487,   812,   565,   812,   629,   812,
    3341,   812,   647,  3344,   812,   747,  3539,   565,   647,   698,
    3351,   646,   808,  2379,  2380,  3356,  3357,  3358,  3359,  3360,
    2070,   810,  3127,  2722,  1031,  3869,  3367,  3198,  1934,   571,
     753,  3372,  1039,  1040,  3375,  5479,   812,   510,   974,   647,
     386,   647,   810,   389,   980,  3383,   386,   813,   758,   389,
     619,   647,  1059,   808,   807,   600,   647,   807,   994,   995,
     476,   619,   647,   810,  1930,  4182,   386,   636,   807,   389,
     810,   812,  2592,   807,   807,   647,   582,   627,   636,   808,
     817,   808,  1010,   808,  5196,  3445,  1022,   812,   808,    18,
      19,   812,   611,   808,   810,  1031,  2002,   812,   647,   633,
    2006,   738,   739,  1039,  1040,   574,   812,  4746,  1036,  5000,
     801,   802,   803,   804,  4062,  1049,   808,   748,    21,  1135,
     810,  1049,  2028,  1059,  2268,  3485,  3995,  3487,   633,   810,
     812,   812,   548,   647,   808,  1176,  1177,   647,  2658,   647,
     594,  3501,   812,  3503,   810,  2694,   810,   808,   812,  2694,
     647,   812,   647,   386,   810,  1162,   389,   810,  3518,   812,
     647,  1177,  2068,   808,  2694,  1101,  1102,   812,   810,  1188,
     812,   571,   812,   812,  1110,   377,  4199,  4200,   647,   600,
    2946,  3377,   647,   810,   608,   812,  1193,    18,    19,   647,
    1557,   633,   542,    18,    19,  3555,   608,   647,    18,    19,
     808,  1010,  1127,   812,  1140,  4562,   812,   647,   812,    18,
      19,   255,  1127,  1232,   469,   386,   812,   808,   389,  4183,
    4294,  1136,    44,  2704,  1101,   723,  1162,   812,   810,   810,
     812,   812,  4101,   655,   656,  1171,   808,   808,   807,  4339,
     812,   810,  2386,   812,  1135,  5488,   167,   608,  1184,   807,
     647,    57,  1188,  5515,  1190,  1191,   200,  1193,  1183,  1195,
    1183,  2353,   695,   812,  1200,   122,  1202,  1203,  1183,   636,
    1206,    52,   292,  1164,  4336,   535,   315,  1213,   636,   200,
     753,   192,   258,  4428,   219,  3621,   185,  1223,  1224,  1225,
    1136,    19,  1228,   158,  4353,  1231,  1232,  2529,  1234,  1235,
     808,   647,   812,   153,  1203,  1233,    65,   647,   216,  2257,
    2529,   808,   285,  4428,   164,   812,  2000,   812,    18,    19,
     231,   235,   246,   122,    18,    19,  4333,   647,   231,  1206,
      18,    19,  1268,   536,   216,  2324,   455,    65,   400,  1300,
    2947,  1357,   125,  3800,  3801,  4214,  1282,   812,   591,   263,
     808,   931,   276,  1278,   812,   263,   652,  2434,  2435,   464,
    3701,  4961,   812,  1278,    35,  4372,  4235,   570,   808,    18,
      19,   614,   812,    18,    19,  2408,   366,   174,  4247,   162,
    2900,   263,  1010,  4252,  2408,  2408,  1103,  2703,   432,  2703,
    1010,    62,   808,   160,  1330,  4166,  2466,    18,    19,  1406,
    2470,   500,  1386,  4908,  4221,  4910,  2476,    64,  1036,  1429,
    1346,   991,   352,  1420,   647,   812,  1036,   997,    87,  4175,
     160,  1049,   455,  1384,  1385,   415,  1362,  1388,  1447,  1365,
    1391,  1392,  1393,   290,   454,  1396,  1397,  1398,  1399,  1400,
    1401,  1402,  1403,   571,  3974,  2317,  4177,  4137,  1455,  1386,
    2970,  2971,    18,    19,   812,  2327,   176,   386,  2330,  3989,
     389,  2333,   808,   387,  3996,  3072,   812,   123,   808,  3393,
    1406,   510,   812,  2278,  2408,   419,   647,  1413,  1414,  1415,
    1416,  2286,  1418,  1419,  1420,  2169,  3758,  1423,  1424,  1425,
    1426,   290,  1428,  2408,   470,  2118,  1432,   256,   419,  1427,
    1519,   563,  4688,  4689,   369,  2563,  2564,  3431,  1444,   379,
    2408,  1447,  2563,  2564,  3996,   372,  1415,    18,    19,  1455,
    1419,    77,  1458,  3996,  1423,  1105,  1462,  1463,   256,  3996,
    4049,  1459,   354,  1900,  3996,   385,   193,    93,  3643,   741,
     742,  1477,  1478,  3043,  1563,  1912,  1913,  1914,  1915,  1426,
    1486,  1487,   455,  1489,  1490,   386,  1923,  3662,   389,  1578,
    4049,   386,   368,  5106,   389,  2881,   386,  2881,  3791,   389,
    3198,  3907,  3908,   372,  2920,  1511,  3204,   386,  3690,   812,
     389,  3750,  1510,  1519,  3925,  1548,  1049,   368,   371,   492,
    3721,   247,   179,    18,    19,    18,    19,  4697,  1534,  4118,
    1477,  1478,  3680,  3302,  5204,  1233,  1542,  4049,   727,  1486,
    1487,   532,  1489,  1233,  1548,   635,  1507,    65,   517,  2860,
    1548,   565,  1558,  1559,  1560,  1561,  1562,  1563,  1564,  4118,
    5123,  4558,   605,  2703,  1653,  1651,   571,   808,  1574,  3087,
    1576,  3753,  1578,  3009,  3010,  1581,  4708,   198,  3546,  3637,
    1459,  3549,  2768,    18,    19,  3993,  3994,  2150,   125,  1558,
    1559,  1560,   565,  1562,  1671,   586,  2289,   464,  1687,  3690,
      18,    19,  3300,  3301,  2865,  2866,  4118,  1576,   602,  2795,
     808,   546,  1581,  2834,  1561,  5285,   386,  1564,   469,   389,
    3036,  1698,   386,  5337,   727,   389,  1632,  1633,   386,    18,
      19,   389,   613,  3993,  3994,  3045,  3046,   812,   428,   265,
    5310,  1647,  4829,   812,   753,    19,   619,  1653,   647,   500,
     570,   122,    18,    19,  3090,  1732,  3092,  3093,    21,  3300,
      18,    19,  3753,   636,   501,  1671,   593,   386,   293,   406,
     389,   386,    18,    19,   389,  4105,  4278,   571,  1465,  3301,
    4280,  1687,    18,    19,  3678,  4285,  4309,  2834,   427,  4289,
     417,   501,  1698,  4104,   629,   386,   122,  1658,   389,    77,
      18,    19,   642,   713,   714,   715,  4347,   243,   434,    18,
      19,    74,  3998,   571,   371,   369,   342,   188,   571,   112,
    4561,  1727,   115,   552,   593,  1710,  1732,  3425,   230,  1427,
    4986,  5090,  2875,   160,  1719,    18,    19,  1427,   256,    71,
     636,    71,   368,  1749,  1750,   582,   647,   141,   219,  4893,
     386,   194,   647,   389,   552,   278,   227,   647,   229,   287,
    3379,  1459,   188,   542,  3379,    18,    19,   194,   647,  1459,
    3340,  3607,  3342,  3159,  4792,  3159,   571,  3771,   399,  3379,
    4572,  1431,  3352,  3353,  3354,  3355,   246,  3001,  3002,  3003,
     125,  3361,  3362,  3363,  3364,  3365,  3366,   160,  3368,  3369,
    3370,  3371,   492,   276,   430,   371,  3376,   432,  1841,  4515,
      86,   139,  1510,   812,   808,   386,   276,   137,   389,   290,
    1510,   349,   612,   549,    25,  5256,  4428,   565,  5498,   105,
      13,   547,   152,   165,   807,   165,   703,   704,  5094,   186,
    5286,   237,    18,    19,   623,    59,   364,    18,    19,  4449,
    1548,  2827,   238,   429,   228,  1861,  1862,    18,    19,    18,
      19,   638,    26,   614,   290,   209,   100,    33,    18,    19,
    4360,  1877,   235,  4363,    77,   565,   603,   647,  1844,   634,
    2939,    18,    19,   647,   262,   271,    18,    19,   509,   647,
      77,   386,   546,   386,   389,   432,   389,    18,    19,  4740,
     263,   372,  3896,   243,  1910,   481,   532,  5051,    18,    19,
     245,   812,   628,   807,   387,  1862,   812,   812,   368,   266,
      84,   658,   812,    18,    19,   368,  3310,   387,   647,   619,
    1877,   588,   647,   812,    18,    19,    18,    19,   282,  4347,
    2507,   125,    18,    19,   197,   137,   372,   604,   743,   807,
     344,   386,  2519,  4239,   389,   139,   647,   140,   481,  4245,
     152,    40,   176,  1910,    18,    19,   180,   168,   386,    18,
      19,   389,   128,   369,  3033,   629,    18,    19,    18,    19,
     194,  2058,  3041,  2550,  3978,   636,    18,    19,    18,    19,
      18,    19,    18,    19,  2000,  2001,  3382,   386,  3382,  2076,
     389,    18,    19,   331,   238,   571,  5437,  5438,  3026,    18,
      19,   647,  5458,  2580,   542,  1548,   534,   642,  4426,  4427,
     386,   368,  3406,   389,   258,   360,   562,   483,   386,   565,
      53,   389,    18,    19,   552,   812,  5292,   271,  4661,  2093,
     386,    64,   812,   389,    18,    19,   209,  2137,   812,   122,
     386,   128,  2058,   389,   812,  4485,   388,   812,   388,   262,
     197,   812,   813,  2117,   220,   571,  4426,  4427,   386,   138,
    2076,   389,  2103,   237,   501,   262,   647,   386,    18,    19,
     389,  4263,  4264,   249,   534,  2116,  2093,  4269,  2119,   808,
     476,  3670,  3671,  2170,  4175,  4175,   197,   812,  3688,   421,
      23,  2096,    23,   386,  1710,   681,   389,    18,    19,   275,
    2117,  2096,    35,  1719,    35,   188,   330,   807,  2124,   282,
     354,   812,   593,  2212,  2213,   643,    49,  2133,    49,   602,
     614,  2208,   614,   386,  4998,   197,   389,   293,    61,    62,
      61,    62,   602,   125,  2150,  2838,  4114,   331,  4116,   400,
     546,  2240,   647,   497,   647,   582,    18,    19,   322,   228,
     239,   812,  2168,  2169,  2170,    18,    19,   593,   807,  2862,
     400,  2864,  4263,  4264,  4664,     0,   812,  2254,  4269,  2185,
     162,   653,   575,  2189,  3600,   578,  2133,   249,   158,    18,
      19,  2197,  2246,  2270,  2200,  3579,  5128,  3411,  5137,  5131,
    3718,   571,  2208,  2150,  3722,   369,  2212,  2213,  5337,   156,
     386,     7,   647,   389,   428,   386,   293,   290,   389,   582,
    2974,  2168,  3638,  4705,  4706,   386,   732,   386,   389,   647,
     389,    18,    19,   629,  2240,  2241,   386,   414,  2244,   389,
    2246,   812,   476,  4012,   373,    18,    19,   231,  2254,   386,
    2197,   160,   389,  2200,   386,  3566,   448,   389,   647,   282,
     212,   362,    11,   585,  2270,   386,   127,   237,   389,  4339,
    2268,    18,    19,  2271,  2278,   441,   386,   655,   656,   389,
    2278,   647,  2286,    18,    19,   160,  2723,   479,  2286,   647,
     212,   386,    18,    19,   389,  2301,    18,    19,  2352,   372,
    4370,   647,   386,   372,   386,   389,   258,   389,   652,   293,
     386,   647,  2389,   389,   548,   808,  4152,   812,   562,    19,
    3622,   565,   368,  3625,   808,  2331,  2332,   671,   812,   647,
     812,   813,   386,   563,   497,   389,  3625,   386,   647,    13,
     389,   813,   138,  4754,   386,  2352,   386,   389,   144,   389,
    2427,   502,   563,  3433,   386,   484,   386,   389,   386,   389,
     386,   389,   732,   389,   647,  4547,   239,   500,   194,   386,
     748,   749,   389,   808,  5313,  3561,   249,   386,   277,   127,
     389,   280,   546,  2389,  2331,  2332,  5318,   248,  2386,   371,
     808,  2445,  2425,   212,   647,    13,  4807,  5163,  5164,   369,
     386,   447,    13,   389,   591,   799,   800,   801,   802,   803,
     804,  2417,   386,   167,   492,   389,    18,    19,   167,   808,
     246,  2427,  2455,    13,   197,   807,    13,   614,  2434,  2435,
     141,   813,   228,   636,  2440,   387,  5077,    18,    19,  2445,
    2517,   141,   808,  4849,   428,  4851,   386,  4517,  3576,   389,
     808,   200,   655,   656,  3575,  3757,  4547,   608,   562,   285,
     127,   565,   808,   680,    19,   629,   140,  2473,   655,   656,
    2503,   647,   808,  2479,   691,   386,   647,  2554,   389,  2485,
    2486,  2487,  2488,  2489,  2490,  2491,   647,   565,   647,  2495,
     808,  2497,   625,  2440,  5135,  5136,   227,   647,   229,   808,
     248,  2507,   137,  2509,  2510,   680,  2512,   611,  2514,  2515,
     647,  2517,  2518,  2519,  5306,   647,   691,   152,  2524,   392,
     593,  2527,   140,  2529,   386,   808,   647,   389,  2534,   140,
     429,  2537,  2538,   386,    18,    19,   389,   647,  2481,    18,
      19,   619,  2548,  3602,  2550,   748,   749,   343,  2554,  2492,
     140,  4755,   647,   140,  5551,  2498,  4760,   386,   636,  3650,
     389,   748,   749,   647,  2570,   647,  5048,  5049,  3659,   807,
    2268,   647,  4944,  2271,  2580,  2581,   546,  4949,  2268,    12,
    2278,  2271,  3884,   125,   748,  2528,   141,   194,  2286,  2532,
     680,  2538,   508,   647,   813,  3884,  2539,  2540,   647,   386,
    4298,   691,   389,     7,    64,   647,   148,   647,    21,   667,
    3996,   669,  3996,   386,    74,   647,   389,   647,    13,   647,
      13,   647,    26,  2570,    18,    19,  2715,    21,   179,    89,
     647,    25,   808,   344,   241,    48,  5047,   808,   647,   386,
     365,   366,   389,   108,   344,   187,  3213,   808,    43,   808,
    5023,   386,    61,    62,   389,  3554,  5422,  5423,   808,   629,
     386,   647,    71,   389,   386,  3456,   800,   389,  2745,  5077,
     419,  5463,  2749,   647,   808,   108,   808,   600,   582,   600,
      84,  4885,  4451,    61,    62,  4889,  3477,   808,  2386,  2695,
     606,   249,  2417,  2699,   127,    19,  2386,  3264,   808,    94,
     621,   622,   625,    98,    38,  3272,  5078,   647,   492,  2715,
    3277,   807,    46,   808,   272,  2440,   500,   813,  2724,  2725,
    2726,  2727,  2728,  4849,   808,  4851,   808,  5135,  5136,   807,
     787,   788,   808,   790,   650,   622,   647,  2722,   625,  2745,
     144,  4945,  2773,  2749,   230,  2278,  4950,   140,  2695,  3691,
      61,    62,  2699,  2286,   808,  2724,   221,  2726,  2727,   808,
      71,   808,  4023,   235,  4180,   812,   808,   200,   808,   212,
     807,   300,   301,    84,   811,   235,  4212,  4213,   808,   455,
     808,   565,   808,   532,   386,   647,   808,   389,   563,   344,
     812,   808,   503,   504,   647,  4056,  4057,  2886,   212,   808,
     235,   122,    33,   503,   504,   386,   319,   320,   389,   808,
     243,   324,   325,   812,   365,   366,  2893,    12,   647,    32,
     371,  4082,   808,   636,  2830,   565,   639,   220,  2834,  3199,
     807,  2908,   807,   237,   808,   619,   620,   586,  4364,  3209,
    3210,  4367,  4368,  3742,  3743,  4813,  4148,   492,   455,   717,
     718,   807,   636,   286,   480,   500,  3996,  5274,   253,   807,
     647,   807,  4432,  4433,  4434,  4435,    79,   188,   808,   807,
    2876,  2877,   103,  2868,   647,  3568,  1116,  1117,   807,  1119,
    2886,  1121,  4068,  2868,   807,   492,   812,  2893,   807,  4587,
    4588,   122,  4278,  4013,  4278,   808,  3999,   808,   219,   812,
     647,  4063,  2908,   813,  2910,  3999,  3999,   386,   571,  2915,
     389,   212,   647,  2919,  2920,   444,   445,   807,   322,   815,
     565,   647,   808,   808,   807,   647,   812,   812,   393,  2983,
    2984,   655,   656,   807,   808,  5110,   331,   563,   403,   835,
    4126,   154,   568,  2949,   807,   410,   808,   807,   503,   504,
    2956,  2957,   848,   849,   716,   808,   808,   188,   565,   952,
     812,   807,   955,    37,   141,   369,   808,   960,  2974,   290,
     812,   807,   965,  2979,   619,   620,  2983,   808,  2984,   808,
    2965,   812,   150,   151,   807,   611,   419,   103,    33,  2984,
     808,   636,   386,  5410,   812,   389,  3029,  2563,  2564,  2984,
     395,   627,  2949,  3001,  3002,  3003,   122,    47,    48,  2956,
    2957,   141,   619,   808,   245,   122,   808,   812,    26,  3810,
     812,   808,   808,   807,    77,  3029,   812,   653,   808,   636,
    3036,  3029,   812,  3064,   212,  3066,   808,   588,  3115,   807,
     812,   115,  4428,   492,  4428,   647,   450,   807,   122,   514,
    3056,   372,  3843,   604,   807,  3061,  5473,   807,  5475,   290,
    3851,   808,  1317,  1318,   808,   498,   647,  3858,   812,    77,
    1608,  1609,   188,   808,  5491,  3129,    84,   807,   807,    77,
     808,   188,   808,   563,   812,   135,   808,   798,   799,   800,
     801,   802,   803,   804,   807,   574,   141,   797,   798,   799,
     800,   801,   802,   803,   804,   179,   808,   480,   807,  3115,
     812,  3188,   219,   111,   188,  5526,   565,   808,   807,  5536,
    5537,   812,   517,  3129,  3130,  3131,   807,  4543,   807,   245,
     563,  5542,   565,   526,   527,   492,   529,   530,   531,   808,
     808,   372,   546,   812,   812,   219,   611,  4165,   807,  3155,
     158,  4567,  4314,   807,    80,   548,    82,  5568,     7,   807,
     158,  3238,   807,  4325,   559,   396,   599,   344,   647,   177,
     619,   620,   418,   807,   290,   808,   184,   808,   611,   812,
     807,   812,  3188,   290,   237,   808,  3192,   636,  3194,   812,
     807,   122,   653,   808,  3200,   807,   141,   812,  3204,   125,
     807,   414,   666,   667,   249,   669,   808,  3213,   565,   108,
     807,   807,   384,   808,   344,  3221,   290,   812,   807,   807,
    3297,  3298,   148,   436,   808,   629,   562,   808,   812,   237,
     275,   807,  3238,   807,   807,   764,   765,   235,  3244,   807,
     807,   807,   797,   798,   799,   800,   801,   802,   803,   804,
      37,    77,   377,   647,   807,  4557,   372,   188,  3264,   808,
    4562,   187,   619,   812,   477,   372,  3272,   807,   167,   807,
    3276,  3277,   593,  4562,   707,   807,   125,   380,   808,   636,
     396,   355,   812,   808,   300,   301,  3292,   812,   219,   138,
     808,  3297,  3298,   367,   812,   144,   808,   371,   372,   344,
     812,   200,   808,  3001,  3002,  3003,   812,  3384,   807,   807,
     363,  3001,  3002,  3003,   322,   807,   369,   807,   807,    21,
     365,   366,  3328,   321,    12,   538,   503,   504,   115,   197,
     808,  3029,   158,   807,   812,   122,   807,  3343,   807,   807,
    1759,   339,  1761,  1762,   748,  3292,   808,  1766,  3434,   808,
     812,   231,   808,   812,   807,   363,   812,   807,   807,   290,
    1779,   369,   593,  1782,  1783,   363,  1785,    26,   807,  1788,
    1789,  1790,  1791,   503,   504,   696,  1795,   807,  3384,   228,
     808,  1800,   807,    64,   812,   438,  1805,  1806,  1807,  1808,
    1809,   807,   179,    74,  1813,  1814,   441,   807,   100,   344,
    1819,   188,  1821,  1822,  1823,   807,  1825,  1826,    89,  1828,
     807,   237,  1831,  3411,  3420,  1834,  1835,  3423,    77,  3425,
     108,  4175,   807,  5013,   807,    84,  4842,   807,   444,   445,
    3425,  3437,   219,   122,   808,   807,  3421,    64,   812,   127,
    3425,   372,   807,   246,   808,  3430,  3431,    74,   812,   808,
     807,  3436,   808,   812,   156,   807,   812,   807,   503,   504,
     808,   141,    89,   807,   812,   696,   807,  4629,  4630,   807,
    4632,   516,  4733,  3420,   807,   807,  3423,   593,   457,   458,
     459,   460,   461,   462,   463,   807,   593,   807,   807,   122,
    4639,  4640,   194,   546,   343,   807,  3029,   571,   808,   188,
     807,   575,   812,   290,   578,   807,   197,   523,   524,   525,
     212,   199,   193,   439,   588,   217,   807,    64,   177,   593,
     419,   194,   596,   372,   246,   184,   620,    74,  3617,   500,
     219,   141,   171,  3539,   500,   808,   238,   363,   546,   812,
     212,   813,    89,   369,   246,   598,   808,   235,   546,   808,
     812,   100,  3558,   812,   235,   188,   258,  5234,   503,   504,
     808,   812,   166,   808,   812,   563,   193,   812,   355,   271,
      21,   808,   199,   808,   276,   812,   629,   812,   237,  4478,
     696,   807,   263,   285,   371,   372,   219,   194,   542,  3595,
     521,   276,   562,  3599,  3600,   166,  3650,  3651,   286,   222,
    3606,   290,   542,   542,   287,  3659,  3660,  3661,   235,   157,
     813,  3617,   438,   807,   812,  3621,  3622,   807,    96,  3625,
    3605,   629,   799,   800,   801,   802,   803,   804,   812,    48,
    3625,   813,  3638,   807,   156,   156,   263,   197,   111,   808,
    3625,   807,   160,   810,  3650,  3651,   193,   811,   141,   100,
     160,   160,   354,  3659,  3660,  3661,   812,   290,   249,  3606,
      48,   293,   593,   322,   344,   195,   565,   797,   798,   799,
     800,   801,   802,   803,   804,   377,   721,   160,   808,   122,
    3711,   532,   125,   372,   383,   387,   518,   586,   235,   238,
     193,   708,     7,    71,    13,   633,  3750,   808,  3704,   122,
    3706,   389,   125,   808,   363,   156,   140,    10,   812,   258,
     369,   122,   611,  3411,   125,  4877,   263,  4879,  4880,   400,
     546,  3411,   271,   813,   808,   799,   800,   808,   627,   808,
     808,   808,   808,   807,   344,   808,   417,   501,   807,   372,
     748,   192,   275,   194,  3750,   188,  3752,  4909,   764,   765,
     666,  3757,   797,   798,   799,   800,   801,   802,   803,   804,
     377,   212,   708,   562,   614,   188,   217,   122,  4827,   515,
     125,   812,   598,   400,   476,    50,   219,   188,   282,   287,
     231,    30,   812,   812,   571,  3791,   582,   238,   575,   377,
     417,   578,   486,  3799,    71,   246,   219,   732,   500,   571,
     812,   588,    64,   629,  5106,   354,   593,   258,   219,   596,
     498,   273,    74,   812,   657,   811,   813,   812,   249,   801,
     271,   560,   252,   503,   504,   276,   194,    89,   377,   181,
     518,   812,   194,   188,   285,    88,   812,   812,    21,  4986,
     141,   378,   558,   812,   645,    21,   548,   290,   136,   156,
     141,   344,   797,   798,   799,   800,   801,   802,   803,   804,
     808,   728,   108,   808,   219,  3871,    48,   290,   786,   120,
     417,   455,   372,   653,   728,   563,  5023,   565,  3884,   290,
     568,  3887,  3888,   727,   636,   571,   502,   546,   812,    87,
     315,   518,     7,   503,   504,   807,    37,   110,   582,   158,
     602,  3907,  3908,   354,   593,  3911,   400,  3913,    74,   400,
    3916,   599,   614,   400,   582,   603,   136,   261,   261,   400,
     136,   167,    48,   611,   100,   400,   377,   476,   400,   372,
     400,   193,   634,   400,   636,   290,   387,   199,   160,   161,
     584,   400,   618,   618,   500,  4844,   812,  5094,   249,   372,
     812,  2370,   709,  5214,   200,   491,   627,   812,   249,   807,
     593,   372,   807,   609,    57,   653,   808,   447,  3974,   171,
     629,   377,     7,   235,   115,   226,   603,   111,   716,   201,
     156,   122,   377,  3989,   613,  3991,     7,   808,   591,   235,
     200,   808,   214,   808,   808,   697,   808,   808,    27,   548,
     808,   263,  4008,   197,   808,   812,  5220,   800,   808,   807,
     503,   504,   799,   800,   808,   812,   808,   372,   194,   707,
     807,   812,   808,   808,   808,   476,   808,   808,   689,  5290,
     808,    15,   254,   812,   808,    64,   212,    21,   179,   808,
     286,   217,    71,   344,   804,   267,    75,   188,    77,   500,
     813,   813,   141,   344,   813,   808,   807,   807,  2477,    43,
      89,  4008,   238,   807,   812,   614,   100,   156,   813,   812,
     246,   192,   294,    57,    58,   811,   287,   812,   219,    63,
     287,   287,   258,   334,   287,  2504,  3459,   338,  3461,   748,
     287,   287,   812,   160,   345,   271,   125,   548,   377,   634,
     276,   236,  2521,   582,   812,   807,   808,   812,   810,   285,
     812,   812,    13,   582,   400,   817,   582,   797,   798,   799,
     800,   801,   802,   803,   804,   812,   197,   160,   808,  4183,
     812,  4137,   582,   582,   432,   255,   358,   194,   812,  2558,
    2559,   197,  4148,   813,   813,  5292,   813,  2566,   813,   290,
     593,   602,   808,   813,    21,   417,   614,   427,    60,    26,
      27,    28,   613,   614,   513,   607,   808,   812,   414,  4175,
     593,  4177,   404,   419,  4180,   426,   194,  4183,   354,   814,
     401,  4166,   593,   634,  5486,   636,   403,   797,   798,   799,
     800,   801,   802,   803,   804,   160,    63,  5486,   808,   789,
     789,   377,   503,   504,   238,   228,   144,   103,   403,  5511,
      77,   387,   503,   504,   355,   571,    83,    84,   571,   341,
      87,   186,  5511,   571,   258,   812,   379,   668,  5530,    60,
    4236,   372,  4309,   813,   263,   477,   201,   271,   593,   490,
     597,  5530,   807,   263,   111,   402,   697,   263,  5550,   214,
     263,   706,   498,   377,   672,   344,   518,   672,   125,  4336,
     249,  5550,   129,   160,   708,   160,   160,   160,   160,  5431,
     160,  4304,   518,   160,  4280,   160,  4282,   160,   160,  4285,
     160,   160,   160,  4289,   160,   160,   160,   160,   160,   156,
     160,   158,  4298,   286,   160,   160,   160,   160,  2717,   160,
     476,   266,   267,  4309,   797,   798,   799,   800,   801,   802,
     803,   804,   160,   160,   160,   160,   160,   563,    35,   160,
     354,   160,   568,   160,   500,   160,  4332,   160,   160,   294,
    4336,   160,   160,   160,   160,   160,   365,   366,   160,   160,
     586,   603,   371,   377,   160,   160,   641,    19,   377,   653,
     464,   791,   377,   599,   808,   154,   808,   808,   582,   810,
     813,   812,   808,   808,   231,   611,   817,   571,   235,   808,
    4376,  4377,   548,   808,   245,   242,   245,   813,   571,   808,
     631,   627,  5548,    56,   808,  4332,   812,   571,   417,    56,
     654,  4397,   813,    66,   807,   262,   813,   362,   649,    66,
    5286,   813,   812,    76,   582,   807,   210,   653,   275,    76,
     377,   197,   730,  4419,   503,   504,   807,    90,    91,    92,
     812,    21,   212,    90,    91,    92,   602,    27,  4397,  4376,
     571,   432,   732,   106,   575,  3808,  3809,   578,   614,   106,
    3813,   158,   476,  4449,   372,   162,   611,   588,   812,  4455,
     156,   416,   593,   807,   321,   596,   807,   554,   634,    12,
     636,   707,   807,   403,    64,     7,  4451,   496,   500,   403,
     812,    71,   339,   335,    73,    75,  3849,    77,   532,   532,
     532,   532,  3855,  3856,  3857,   202,   343,  3860,   532,    89,
     807,  5390,   491,   377,   263,   263,   797,   798,   799,   800,
     801,   802,   803,   804,   614,   222,   797,   798,   799,   800,
     801,   802,   803,   804,   548,  5533,   591,   546,   807,   812,
     563,   697,   563,   366,   636,   125,   450,   394,  4639,  4640,
     812,   812,   582,   400,   582,   377,   403,  4543,   372,   377,
     808,   808,   807,  4549,   807,    19,   807,   807,   212,   807,
     807,  4557,   807,   807,   785,   807,  4562,  4563,   413,    77,
     807,  4567,   807,    62,   247,   247,    35,    21,   720,   808,
     287,   751,  5458,   808,   603,    93,  4561,    48,   808,   494,
     614,   807,   687,   812,  4661,   808,   687,   812,   455,  5488,
     571,  4597,   285,   808,    12,   546,   160,   384,   812,   231,
     801,   282,   642,   203,   160,  4611,   384,   807,   604,   197,
     258,   258,    48,   812,   390,   482,   134,   808,   808,   808,
     808,   808,   217,   160,   160,   492,   655,   656,   160,   403,
     807,  4708,   808,   812,   810,    48,   812,   160,   807,   228,
     103,   817,   792,  4649,   245,   278,   813,  4653,   368,   111,
     111,   162,   807,   400,   565,  4661,  5542,   729,   799,   800,
     333,   807,   807,   263,   807,   382,   333,   807,   440,   807,
     125,   538,   539,   540,   541,   808,   705,   350,   582,   546,
     799,   383,  5568,   350,   228,   377,   372,   472,  4765,   158,
     807,   807,   636,   162,   245,   808,   563,   808,   565,   566,
     729,   418,  4708,   400,   808,   808,   808,   197,   797,   798,
     799,   800,   801,   802,   803,   804,   808,   432,   210,   748,
     749,    21,   582,   377,  3143,   442,  3145,   246,   269,   808,
     812,   197,   813,   202,   812,   602,  4825,   817,  4744,   697,
    4746,  4747,   258,   611,   817,   258,   258,   265,   817,   160,
     467,   126,   619,   222,    48,  4740,   277,    21,   403,  4765,
      18,    19,    48,    48,   153,   365,   366,    48,   477,   636,
     801,   371,    35,  4779,    35,  5348,   625,   377,   608,   763,
     807,   729,   125,   263,   768,    64,   203,   263,    35,   372,
    5363,   372,   807,   372,   511,   415,    21,   377,   471,   377,
      77,   813,   807,   487,  5377,   808,   377,   515,   808,   265,
     808,   808,   341,   808,   798,   488,   808,   417,   287,  4825,
     808,   488,    35,   808,   342,   542,  4832,    48,   387,   812,
     814,   427,  4779,   812,   808,   175,  4842,   377,   285,   384,
     210,    21,   147,  4849,   565,  4851,  4887,   365,   366,    62,
     368,   808,   197,   258,   258,   807,  5429,   724,   116,   117,
     118,   119,   120,   160,   807,   812,   405,   808,   120,   120,
    5443,    48,    48,    48,   377,   619,   372,   550,   387,   367,
    5453,   748,   749,   550,   807,  4832,   620,    15,   872,   873,
      21,   875,   876,  3312,   567,   812,   496,    81,   510,   112,
     567,   143,   115,   812,   888,   372,  4912,   807,   228,   515,
     123,  5484,   430,   382,   812,   372,    21,   808,   341,   808,
    5493,    48,  5495,   173,   377,   384,   263,   808,   194,   142,
      21,   160,   276,   318,  4940,  4941,   813,   636,   162,   397,
     807,   673,    48,   810,    21,  5518,   546,   112,   194,   418,
     808,   807,   162,   812,  4960,   807,   636,   808,   812,   812,
     573,   158,   608,  4969,   136,   223,   224,   225,   226,  3388,
    3389,  3390,  3391,   442,   136,   136,   189,   377,   472,   537,
    5553,  5554,   149,  5014,   808,  5558,   483,   691,   808,   807,
     678,   808,   205,   812,   808,   808,   807,  5038,   467,   807,
     984,   807,   807,   603,  5010,   807,   807,    48,   808,   653,
      48,   807,   691,   691,   532,   155,   554,  5023,   633,   534,
      32,   814,    64,   384,    64,   808,  1010,    19,   702,   808,
     481,   483,    32,   553,   197,   633,   384,  5043,  1022,   143,
     691,   808,   511,   384,   483,   688,   228,   260,   701,   464,
       6,   377,  1036,   377,   246,   655,   656,   154,   810,   134,
      48,   171,   608,   130,   633,  1049,   279,   154,   810,   292,
     230,    15,   124,   542,  5107,   814,   334,   231,   336,   337,
     338,   702,    54,   574,   143,   810,   154,   345,   372,   807,
     574,   215,   500,   562,   810,    54,   565,   154,   812,   194,
    5106,   194,   194,  5109,   574,   705,   125,   454,   635,   812,
    5116,  5117,   377,   698,   196,  5170,  3583,  5123,  3331,    63,
    4746,  3337,  4749,  3333,  3349,  4754,  3335,  3987,   386,   729,
    1238,   389,  5138,   346,   347,   348,  4759,  3784,  4772,  5080,
     353,  5200,  5371,   356,  5150,  5425,  1755,  4960,   748,   749,
    5086,  5568,  5526,    46,  5160,  1091,  2973,  2915,  4137,  5165,
    5065,  5065,  5065,  5538,  5440,  5065,  5065,  5341,   426,  5440,
    5423,  5065,  5065,  5250,  5367,  5170,  5253,  5170,  5366,  5065,
    3996,  5065,  2470,  5065,  1198,  5170,  2476,  3579,  5065,  5065,
    5196,  5065,  4428,  4278,  2696,   408,   409,  4451,  3431,  3430,
    3436,  4231,  5315,  4868,  4646,  5399,  5327,  5325,  5239,  5038,
    2449,  4453,  2563,  3425,  4298,  4350,  4299,  3827,  3860,  3859,
    4675,   434,  5220,  4353,  3535,  5337,  5042,  1211,  4945,  4889,
    4950,   489,   490,   116,   117,   118,   119,   120,  4885,  5107,
    4899,  3200,  4653,  1909,  5250,  4325,  4447,  5253,  4001,  1233,
    2564,  3110,  3103,  3413,  4725,  2564,  2339,  1241,  1242,  2563,
    5266,  1729,  3890,  3230,  1692,  2962,  1250,  1251,  1252,  1253,
    1254,  1255,  1887,  2341,  1097,  3328,  2956,  1862,  4153,  1263,
    1264,  3606,  1266,  1267,  5325,  2946,    64,  1271,  1272,  2249,
    1023,  1275,  1276,  1277,  1278,   508,  1280,  1281,  2420,  1022,
    1362,  2124,  5308,  5380,  1288,  1289,  4476,  1291,  1292,  1293,
    1294,  1295,  2874,  2834,  1298,  1299,  1300,  1301,  1302,  1303,
    1304,  1305,  1306,  2056,  1308,  5009,  1282,  1311,  1312,  5292,
    5390,  2984,  1316,  4986,  2984,  2984,  1320,  1321,  1322,  5488,
     223,   224,   225,   226,  2984,  5515,  5308,  4590,  4853,  1333,
    1334,  1335,  5116,  3911,  1338,  4211,  1110,  1341,  1342,  1343,
    1344,  1345,  5117,  1632,  4599,   578,  1350,  5065,  5399,  3666,
    1256,  3884,  5010,   631,  5380,  5065,  4808,  1361,  1362,  4981,
    2427,  4883,    16,  1467,  2881,  1369,  1183,  1371,  1372,   647,
     648,   649,  2134,   606,  1183,  4548,  1630,  3605,  3605,  1383,
    1384,  1385,  4565,  1387,  1388,  4172,  3603,  1391,  1392,  1393,
    1183,  4557,  1396,  1397,  1398,  1399,  1400,  1401,  1402,  1403,
    1179,  1183,  1728,  1407,  2325,   993,  2326,  1595,  1412,  1180,
    5507,  3609,  2902,  2223,  3292,  5305,   649,  4259,  5389,  5445,
    4636,  4517,  5550,  1427,  4370,  2222,  5452,  5530,  4856,  4562,
    3343,   334,  3130,   336,   337,   338,  4620,  1365,  2271,  1546,
    5300,    43,   345,    43,  3029,  5163,  5164,  2286,  1544,  1459,
    3098,  2266,  2949,  5163,  5164,  1459,  2264,  1010,  1502,  1149,
    5486,  2715,  2707,  2716,  4822,  1011,  5492,  4991,    11,  1506,
      11,  5497,  1238,     4,  5316,  1687,  1172,  1238,  1238,  4004,
    4387,  5507,  4448,  4767,  3901,  5511,    -1,    -1,    -1,    -1,
      21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5220,    -1,  5530,    -1,  1510,    -1,    -1,    -1,
    5220,    -1,  5065,  1517,    -1,    -1,  5542,    -1,    -1,    -1,
      -1,    -1,    -1,   426,  5550,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5548,    -1,    -1,  3975,  3976,    -1,    -1,
      -1,    -1,  5568,  5548,  1548,    -1,  1550,    -1,    -1,  1553,
      -1,    -1,    -1,    -1,    -1,  5273,  5274,    -1,    -1,    -1,
      -1,    -1,    -1,  5273,  5274,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   489,   490,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5163,  5164,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1629,    -1,    -1,    -1,    -1,
    5348,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5348,    -1,
      -1,    -1,    -1,    -1,  1648,  5363,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5363,    -1,    -1,    -1,    -1,    -1,  5377,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5377,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5410,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5410,    -1,    -1,  1707,  5422,  5423,    -1,    -1,    -1,    -1,
      -1,  5429,  5422,  5423,    -1,    -1,    -1,    -1,    -1,  5429,
    5273,  5274,    -1,    -1,    -1,  5443,    -1,    -1,   631,    -1,
      -1,    -1,    -1,  5443,    -1,  5453,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5453,    -1,   648,   649,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5473,    -1,  5475,    -1,    -1,
      -1,    -1,    -1,  5473,    -1,  5475,  5484,    -1,    -1,    -1,
      -1,    -1,    -1,  5491,  5484,  5493,    -1,  5495,    -1,    -1,
      -1,  5491,    -1,  5493,    -1,  5495,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5348,    -1,    -1,    -1,    -1,
    5518,    -1,    -1,    -1,   768,    -1,    -1,    -1,  5518,    -1,
    5363,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5536,  5537,
      -1,    -1,    -1,    -1,  5377,    -1,  5536,  5537,    -1,    -1,
      -1,    -1,    -1,    -1,   798,  5553,  5554,    -1,    -1,    -1,
    5558,    -1,    -1,  5553,  5554,    -1,    -1,    -1,  5558,    -1,
     814,    -1,    -1,    -1,    -1,    -1,    -1,  5410,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5422,
    5423,    -1,    -1,    -1,    -1,    -1,  5429,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5443,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5453,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4348,
    4349,    -1,   876,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5473,    -1,  5475,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5484,  1936,    -1,    -1,    -1,  1940,    -1,  5491,    -1,
    5493,    -1,  5495,    -1,  1948,    -1,  1950,    -1,    -1,    -1,
      -1,    -1,    -1,    21,    -1,    -1,    -1,    -1,    26,    27,
      28,    -1,    -1,    -1,    -1,  5518,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5536,  5537,    -1,  1990,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    63,    -1,    -1,    -1,    -1,
    5553,  5554,    -1,    -1,    -1,  5558,    -1,    -1,    -1,    77,
      -1,    -1,    -1,    -1,    -1,    83,    84,    -1,    -1,    87,
     984,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2034,  2035,  2036,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   111,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   125,  1022,    -1,
      -1,   129,    -1,    -1,    -1,    -1,    -1,    -1,  2072,    -1,
      -1,    -1,    -1,  2077,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   156,    -1,
     158,    -1,  2096,    -1,    -1,    -1,    -1,    -1,    -1,  2103,
      -1,    -1,    -1,    -1,  2108,    -1,  2110,    -1,    -1,    -1,
      -1,    -1,  2116,    -1,  2118,  2119,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    26,    27,    28,    -1,
      -1,    -1,    -1,   231,    -1,    -1,    -1,   235,    -1,    -1,
      -1,    -1,    -1,    -1,   242,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    61,    62,    63,   262,    -1,    -1,    -1,    -1,    -1,
      -1,    71,    -1,    -1,    -1,    -1,    -1,    77,    -1,    -1,
      -1,    -1,    -1,    83,    84,    -1,    -1,    87,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   321,    -1,   125,    -1,    -1,    -1,   129,
      -1,    -1,    -1,    -1,  2268,    -1,    -1,  2271,    -1,    -1,
      -1,   339,    -1,    -1,  2278,  2279,    -1,  1241,  1242,  2283,
      -1,    -1,  2286,    -1,    -1,  2289,  1250,  1251,   158,    -1,
    1254,  1255,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1263,
    1264,    -1,  1266,  1267,    -1,    -1,    -1,  1271,    -1,    -1,
      -1,  1275,  1276,  1277,  1278,    -1,  1280,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1288,  1289,   394,  1291,  1292,    -1,
      -1,    -1,   400,    -1,  1298,   403,    -1,  1301,  1302,  1303,
    1304,  1305,  1306,    -1,  1308,    -1,    -1,  1311,  1312,    -1,
      -1,    -1,  1316,    -1,    -1,    -1,  1320,  1321,  1322,    -1,
      -1,    -1,    -1,    -1,    -1,   235,    -1,    -1,    -1,  1333,
    1334,  1335,   242,    -1,    -1,    -1,    -1,  1341,  1342,  1343,
    1344,  1345,  2386,    -1,    -1,    -1,    -1,   455,    -1,    -1,
      -1,    -1,   262,    -1,    -1,    -1,    -1,  1361,  1362,    -1,
      -1,    -1,    -1,    -1,    -1,  1369,    -1,  1371,  1372,    -1,
      -1,    -1,    -1,    -1,   482,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   492,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1412,    -1,
     981,   321,    -1,    -1,    -1,    -1,  4895,  4896,  4897,    -1,
      -1,    -1,    -1,    -1,  2468,    -1,    -1,  2471,  2472,   339,
     538,   539,   540,   541,    -1,    -1,    -1,    -1,   546,  1010,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   563,    -1,   565,   566,    -1,
      -1,    -1,    -1,    -1,    -1,  1036,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   403,   602,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   619,    -1,  1517,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   636,    -1,
      -1,    -1,  1103,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2584,    -1,    -1,    -1,    -1,    -1,  1550,    -1,    -1,  1553,
      -1,  5030,    -1,    -1,  5033,  5034,  5035,  5036,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   482,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   724,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1629,    -1,    -1,   538,   539,
     540,   541,    -1,    -1,    -1,    -1,   546,    -1,    -1,    -1,
     748,   749,    -1,    -1,  1648,  5124,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   563,  5133,  5134,   566,    -1,    -1,    -1,
      -1,    -1,  1233,  5142,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2730,    -1,    -1,    -1,
      -1,    -1,   602,    -1,    -1,  2739,  2740,    -1,    -1,   807,
      -1,    -1,   810,  1707,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2760,  2761,    -1,  2763,
      -1,    -1,  2766,  2767,  2768,  2769,  2770,    -1,    -1,  2773,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2782,    -1,
      -1,    -1,    -1,  2787,    -1,  2789,    -1,  2791,  2792,    -1,
    2794,  2795,    -1,    -1,    -1,  2799,  2800,  2801,    -1,    -1,
      -1,  2805,  2806,  2807,    -1,  2809,    -1,  2811,    -1,  2813,
      -1,  2815,    -1,  2817,    -1,    -1,    -1,    -1,  2822,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2838,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    35,    36,    -1,
      -1,    -1,    -1,    -1,   724,    -1,  2860,    -1,  2862,    -1,
    2864,    -1,    -1,    -1,  2868,    -1,    -1,    -1,    -1,    -1,
    2874,  2875,    -1,    61,    62,    -1,    -1,    -1,   748,   749,
      -1,    -1,    -1,    -1,    72,    73,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1427,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    97,
      -1,    99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   109,    -1,    -1,    14,    -1,    -1,    17,  1459,    -1,
      -1,    -1,    -1,    -1,  1465,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    32,    -1,    -1,    -1,    36,  2951,  1479,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      50,    51,    -1,    -1,    -1,    -1,    -1,    -1,    58,   157,
     158,    -1,  1936,    63,    64,   163,  1940,    -1,   166,  1510,
      -1,    -1,    -1,    -1,    -1,    -1,  1950,    -1,   176,    79,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3001,  3002,  3003,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,
     198,    -1,   200,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   209,    -1,   211,    -1,  3029,    -1,    -1,    -1,    -1,
      -1,   121,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   131,   132,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3054,    -1,    -1,   143,   144,    -1,    -1,    -1,    -1,    -1,
    3064,    -1,  3066,    -1,    -1,    -1,   156,    -1,    -1,    -1,
    2034,  2035,  2036,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     170,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   282,    -1,    -1,    -1,    -1,    -1,
     190,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2077,    -1,    -1,    -1,    -1,   208,  3123,
     210,    -1,    -1,    -1,    -1,   215,    -1,   315,   218,    -1,
      -1,    -1,  2096,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   233,  2108,    -1,  2110,    -1,    -1,    -1,
      -1,   241,    -1,    -1,   244,    -1,    -1,    -1,  1689,  1690,
    1691,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   264,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   281,   380,    -1,    -1,   285,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   407,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     418,   419,    -1,   421,   422,   423,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   443,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   381,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   497,
      -1,    -1,    -1,    -1,    -1,  2279,    -1,    -1,    -1,  2283,
      -1,    -1,   510,    -1,   414,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   425,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   542,    -1,    -1,   447,   546,    -1,
     450,    -1,   452,    -1,    -1,   455,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   562,   465,   466,   565,    34,    35,
      -1,    -1,    -1,    -1,    40,   475,    42,   477,    44,    45,
      -1,    -1,    -1,    -1,    -1,    -1,   486,   585,    -1,    -1,
      -1,    -1,   492,    -1,    -1,    -1,    62,  3411,    -1,    -1,
     500,    -1,    -1,    -1,    -1,   505,   506,   507,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   623,    -1,    -1,    -1,  3443,
      -1,    -1,   630,    -1,    -1,    -1,    -1,  3451,   538,    -1,
      -1,    -1,    -1,    -1,    -1,   545,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   123,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   565,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3488,  3489,   142,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   589,
      -1,    -1,    -1,   159,    -1,    -1,    -1,    -1,    -1,    -1,
    3514,   601,    -1,    -1,    -1,   605,    -1,    -1,    -1,    -1,
    3524,    -1,  3526,   613,  3528,    -1,    26,    27,    28,   619,
      -1,   187,    -1,   189,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   636,    -1,    -1,   205,
     206,    -1,    -1,    -1,   644,    -1,    -1,  3561,    -1,    -1,
      -1,    -1,  3566,    63,  3568,   753,   754,    -1,    -1,    -1,
     660,   661,   662,   663,    -1,    -1,    -1,    77,    -1,    -1,
      -1,    -1,    -1,    83,    84,   675,    -1,    87,    -1,    -1,
      -1,   247,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3603,
      -1,    -1,    -1,    -1,   260,    -1,    -1,    -1,    -1,    -1,
      -1,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2584,    -1,   712,   279,    -1,   125,    -1,    -1,    -1,   129,
      -1,    -1,   288,   289,    -1,   291,    -1,    -1,  3642,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   158,    -1,
      -1,    -1,   752,    -1,    -1,    -1,    -1,  2198,  2199,    -1,
      -1,   327,   328,   329,    -1,    -1,  3680,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     346,   347,   348,    -1,    -1,    -1,    -1,   353,    -1,    -1,
     356,    -1,    -1,    -1,    -1,    -1,    -1,  3711,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   807,   374,   375,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   235,    -1,  2268,    -1,    -1,
    2271,    -1,   242,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   408,   409,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   262,    -1,    -1,  2296,  2730,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2739,  2740,    -1,   434,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3790,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2760,  2761,    -1,  2763,
      -1,    -1,  2766,  2767,  2768,  2769,  2770,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2782,    -1,
      -1,   321,    -1,  2787,    -1,  2789,    -1,  2791,  2792,    -1,
    2794,    -1,    -1,    -1,    -1,  2799,  2800,  2801,    -1,   339,
     496,  2805,  2806,  2807,   500,  2809,    -1,  2811,    -1,  2813,
      -1,  2815,    -1,  2817,    -1,  2386,   512,    -1,  2822,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,    -1,    -1,
      17,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,    -1,    -1,    -1,    -1,    36,
      -1,    -1,    -1,   403,  2868,    -1,    -1,    -1,    -1,    -1,
    2874,    -1,    -1,    50,    51,    -1,   572,    -1,    -1,   575,
      -1,    58,   578,   579,   580,   581,    63,    64,    -1,    -1,
      -1,    -1,    -1,    -1,  2465,    -1,    -1,    -1,  2469,    -1,
      -1,    -1,    79,  2474,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    99,    -1,    -1,   621,   622,    -1,  2499,  2500,
    2501,  2502,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   482,    -1,   121,    -1,    -1,  2951,    -1,  3993,
    3994,    -1,    -1,   649,   131,   132,    -1,    -1,    -1,    -1,
    2531,    -1,    -1,    -1,    -1,    -1,   143,   144,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4027,  2555,  2556,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   170,    -1,    -1,    -1,    -1,   538,   539,
     540,   541,    -1,    -1,    -1,    -1,   546,    -1,    -1,    -1,
      -1,    -1,    -1,   190,    -1,    -1,  4060,    -1,  4062,    -1,
      -1,  4065,  4066,   563,  4068,    -1,   566,    -1,    -1,    -1,
      -1,   208,    -1,   210,    -1,  4079,    -1,    -1,   215,    -1,
    4084,   218,    -1,  4087,    -1,    -1,  4090,  4091,    -1,    -1,
    3054,    -1,    -1,    -1,    -1,    -1,   233,    -1,    -1,    -1,
      -1,    -1,   602,    -1,   241,    -1,    -1,   244,  4112,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4126,    -1,    -1,    -1,    -1,   264,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   281,    -1,    -1,    -1,   285,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   812,    -1,    -1,  3123,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4172,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4208,  4209,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   724,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   381,    -1,    -1,    -1,   748,   749,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   414,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4290,    -1,   425,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     447,    -1,    -1,   450,    -1,   452,    -1,    -1,   455,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   465,   466,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   475,    -1,
     477,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   486,
      -1,    -1,    -1,    -1,    -1,   492,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   500,    -1,    -1,    -1,    -1,   505,   506,
     507,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4394,  4395,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   538,    -1,    -1,    -1,    -1,    -1,    -1,   545,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2952,  4426,  4427,    -1,    -1,    -1,    -1,   565,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   589,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   601,    -1,    -1,    -1,   605,    -1,
    3001,  3002,  3003,    -1,    -1,    -1,   613,    -1,    -1,  3443,
      -1,    -1,   619,    -1,    -1,    -1,    -1,  3451,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   636,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   644,    -1,    -1,
      -1,    -1,  3043,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3488,  3489,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   675,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3514,    -1,    -1,    -1,  4558,    -1,    -1,    -1,    -1,    -1,
    3524,    -1,  3526,    -1,  3528,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   712,    -1,  4581,    -1,  4583,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3146,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3158,    -1,  3160,
    3161,  3162,  3163,    -1,  3165,  3166,    -1,    -1,    -1,  3603,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     7,    -1,
     807,    -1,    -1,    12,    -1,    14,    -1,    -1,  3642,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4690,    26,    27,    28,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3239,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3680,    -1,  4722,    58,
      -1,  3252,    -1,    -1,    63,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    77,    -1,
      -1,    -1,    -1,    -1,    83,    84,    -1,    -1,    87,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    96,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   125,    -1,  4792,    -1,
     129,  4795,    -1,    -1,    -1,    -1,    -1,    -1,   137,    -1,
      -1,    -1,    -1,    -1,  4808,   144,    -1,    -1,    -1,  3340,
      -1,  3342,    -1,   152,    -1,    -1,    -1,    -1,    -1,   158,
      -1,  3352,  3353,  3354,  3355,    -1,  3790,    -1,    -1,    -1,
    3361,  3362,  3363,  3364,  3365,  3366,    -1,  3368,  3369,  3370,
    3371,    -1,    -1,  3374,    -1,  3376,    -1,    -1,    -1,    -1,
      -1,    -1,  4856,   192,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3411,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   235,    -1,    -1,    -1,
      -1,    -1,    -1,   242,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   262,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   285,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4981,    -1,    -1,
      -1,    -1,   321,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     339,    -1,    -1,    -1,   343,    -1,    -1,    -1,    -1,    -1,
    5014,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   387,    -1,
      -1,    -1,    -1,    -1,    -1,   394,  5060,    -1,    -1,    -1,
      -1,  5065,    -1,  4027,   403,    -1,    -1,  5071,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5096,    -1,    -1,    -1,  4060,    -1,  4062,    -1,
      -1,  4065,  4066,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   450,    -1,    -1,    -1,  4079,    -1,    -1,    -1,    -1,
    4084,    -1,    -1,  4087,    -1,    -1,  4090,  4091,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   482,    -1,    -1,    -1,    -1,  4112,    -1,
      -1,    -1,    -1,  5157,    -1,    -1,    -1,    -1,    -1,  5163,
    5164,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3720,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   538,
     539,   540,   541,  5207,    -1,    -1,    -1,   546,  4172,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5220,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   563,    -1,    -1,   566,  3759,    -1,
      -1,     7,    -1,    -1,    -1,  5239,    12,    -1,    14,    -1,
      -1,    17,    -1,    -1,  4208,  4209,    -1,    -1,    -1,    -1,
      26,    27,    28,    -1,    -1,  5259,    -1,  5261,    -1,    -1,
      -1,    -1,    -1,   602,    -1,    -1,    -1,  5271,    -1,  5273,
    5274,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    58,    -1,    -1,    61,    62,    63,    64,    -1,
      -1,    -1,    -1,    69,    -1,    71,    -1,   636,    -1,    -1,
     639,    77,    -1,    -1,    -1,    -1,    -1,    83,    84,    -1,
      -1,    87,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      96,    -1,    -1,    -1,    -1,    -1,  4290,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   111,    -1,    -1,    -1,    -1,
      -1,    -1,  5346,    -1,  5348,    -1,    -1,    -1,    -1,   125,
      -1,    -1,    -1,   129,    -1,    -1,    -1,    -1,    -1,  5363,
    5364,   137,   138,    -1,    -1,    -1,    -1,    -1,   144,    -1,
      -1,    -1,    -1,  5377,    -1,    -1,   152,    -1,    -1,    -1,
      -1,    -1,   158,    -1,    -1,   724,    -1,    -1,  3919,    -1,
      -1,    -1,    -1,   169,    -1,  5399,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5409,  5410,    -1,    -1,   748,
     749,    -1,    -1,    -1,    -1,    -1,   192,    -1,  5422,  5423,
      -1,    -1,    -1,    -1,    -1,  5429,    -1,    -1,    -1,    -1,
    4394,  4395,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5443,
      -1,    -1,    -1,    -1,    -1,    -1,  5450,    -1,    -1,  5453,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   233,    -1,   235,
      -1,  3992,  5466,    -1,    -1,    -1,   242,    -1,    -1,  5473,
      -1,  5475,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5484,    -1,    -1,    -1,    -1,    -1,   262,  5491,    -1,  5493,
      -1,  5495,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   285,
      -1,    -1,    -1,    -1,  5518,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5536,  5537,    -1,    -1,    -1,    -1,    -1,  5543,
      -1,    -1,    -1,    -1,    -1,   321,    -1,  5551,    -1,  5553,
    5554,    -1,    -1,    -1,  5558,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   339,    -1,    -1,    -1,   343,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4558,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   381,    -1,    -1,    -1,    -1,
      -1,   387,    -1,    -1,    -1,    -1,    -1,  4581,   394,  4583,
      -1,    -1,    -1,    -1,    34,    35,    -1,   403,    -1,    -1,
      40,    -1,    42,    -1,    44,    45,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    62,    -1,    -1,    -1,    -1,    -1,    -1,   435,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   450,   451,   452,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4219,  4220,
      -1,  4222,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   112,    -1,    -1,   115,   482,    -1,    -1,    -1,
      -1,    -1,    -1,   123,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4690,    -1,    -1,    -1,
      -1,    -1,   142,    -1,    -1,     7,    -1,    -1,    -1,    -1,
      12,    -1,    14,    -1,    -1,    17,    -1,    -1,    -1,   159,
      -1,    -1,    -1,    -1,    26,    27,    28,    -1,  4722,    -1,
      -1,    -1,   538,   539,   540,   541,    -1,    -1,    -1,    -1,
     546,    -1,    -1,    -1,    -1,    -1,    -1,   187,    -1,   189,
      -1,    -1,    -1,    -1,   194,    -1,    58,   563,    -1,    -1,
     566,    63,    64,    -1,    -1,   205,   206,    69,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    77,    -1,  4338,    -1,    -1,
      -1,    83,    84,   589,    -1,    87,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    96,    -1,   602,    -1,  4792,    -1,
      -1,  4795,    -1,    -1,    -1,    -1,    -1,   247,    -1,   111,
      -1,    -1,    -1,    -1,  4808,    -1,    -1,    -1,    -1,    -1,
     260,    -1,    -1,   125,    -1,    -1,    -1,   129,    -1,    -1,
     636,    -1,    -1,   639,    -1,   137,   138,    -1,    -1,   279,
      -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,   288,   289,
     152,   291,    -1,    -1,    -1,    -1,   158,    -1,    -1,    -1,
      -1,    -1,  4856,    -1,    -1,    -1,    -1,   169,    -1,    -1,
      -1,  4432,  4433,  4434,  4435,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   327,   328,   329,
     192,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   346,   347,   348,    -1,
      -1,    -1,    -1,   353,    -1,    -1,   356,    -1,   724,   725,
     726,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   233,    -1,   235,   374,   375,    -1,    -1,    -1,    -1,
     242,    -1,   748,   749,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     262,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   408,   409,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   285,    -1,    -1,    -1,  4981,    -1,    -1,
      -1,    -1,    -1,    -1,   434,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   321,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   339,    -1,    -1,
      -1,   343,    -1,    -1,    -1,    -1,  4607,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   496,    -1,  4619,  4620,
     500,    -1,    -1,    -1,    -1,    -1,  5060,    -1,    -1,    -1,
      -1,    -1,   512,    -1,    -1,    -1,    -1,    -1,    -1,   381,
      -1,    -1,    -1,    -1,    -1,   387,    -1,    -1,    -1,    -1,
      -1,    -1,   394,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   403,  5096,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   572,   435,    -1,   575,    -1,    -1,   578,   579,
     580,   581,    -1,    -1,  4705,  4706,    -1,    -1,   450,   451,
     452,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5157,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4738,    -1,    -1,
     482,   621,   622,    -1,    -1,    -1,    -1,    -1,  4749,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   649,
      -1,    -1,    -1,  5207,    -1,    -1,  4777,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   538,   539,   540,   541,
      -1,    -1,    -1,    -1,   546,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   563,    -1,    -1,   566,  5259,    -1,  5261,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5271,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   589,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     602,    -1,  4863,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4894,   636,    -1,    -1,   639,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5346,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5364,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4957,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5409,    -1,    -1,    -1,    -1,
      -1,    -1,   724,   725,   726,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   748,   749,    -1,    -1,
      -1,  5012,    -1,    -1,    -1,    -1,  5450,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5466,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5048,  5049,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5543,
      -1,    -1,    -1,    -1,    -1,     5,     6,  5551,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,  5132,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    -1,
      -1,    -1,   102,   103,   104,    -1,   106,   107,   108,  5220,
     110,   111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,  5244,  5245,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,   245,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
     340,   341,    -1,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,   355,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
      -1,   371,   372,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,   396,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,   476,   477,   478,   479,
     480,    -1,   482,   483,   484,   485,   486,   487,   488,    -1,
     490,   491,   492,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,    -1,   565,   566,   567,   568,   569,
      -1,   571,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,   587,   588,   589,
     590,   591,    -1,   593,   594,   595,   596,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,   615,   616,   617,   618,   619,
     620,    -1,    -1,   623,   624,    -1,   626,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,   636,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,   664,   665,    -1,   667,   668,   669,
     670,   671,   672,   673,    -1,   675,   676,   677,   678,   679,
     680,    -1,   682,   683,   684,   685,   686,   687,   688,    -1,
     690,   691,   692,   693,   694,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,    -1,    -1,    -1,    -1,    -1,   799,
     800,    -1,    -1,    -1,    -1,   805,    -1,   807,    -1,    -1,
      -1,   811,    -1,    -1,    -1,   815,   816,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    37,
      38,    39,    40,    41,    -1,    43,    44,    45,    46,    47,
      -1,    49,    50,    -1,    -1,    53,    54,    55,    56,    57,
      -1,    59,    60,    61,    62,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,
     108,    -1,   110,   111,   112,   113,   114,   115,    -1,    -1,
      -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,   171,    -1,   173,   174,   175,   176,   177,
     178,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,
     218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
     268,   269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,   355,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,    -1,   371,   372,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,   396,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,   476,   477,
     478,   479,   480,    -1,   482,   483,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,   571,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,   583,   584,   585,    -1,   587,
     588,   589,   590,   591,    -1,   593,   594,   595,   596,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,   615,   616,   617,
     618,   619,   620,    -1,    -1,   623,   624,    -1,   626,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,   664,   665,    -1,   667,
     668,   669,   670,   671,   672,   673,    -1,   675,   676,   677,
     678,   679,   680,    -1,   682,   683,   684,   685,   686,   687,
     688,    -1,   690,   691,   692,   693,   694,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,    -1,    -1,    -1,    -1,
      -1,   799,   800,    -1,    -1,    -1,    -1,   805,    -1,   807,
      -1,    -1,    -1,   811,    -1,    -1,    -1,   815,   816,     5,
       6,    -1,     8,     9,    10,    11,    12,    13,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    37,    38,    39,    40,    41,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,    55,
      56,    57,    -1,    59,    60,    61,    62,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      96,    97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,
     106,   107,   108,    -1,   110,   111,   112,   113,   114,   115,
      -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,   171,    -1,   173,   174,   175,
     176,   177,   178,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,
     216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,   245,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,   340,   341,    -1,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,   355,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,    -1,   371,   372,   373,    -1,   375,
     376,   377,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
     396,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
     476,   477,   478,   479,   480,    -1,   482,   483,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,   571,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,   587,   588,   589,   590,   591,    -1,   593,   594,   595,
     596,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,   615,
     616,   617,   618,   619,   620,    -1,    -1,   623,   624,    -1,
     626,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,   664,   665,
      -1,   667,   668,   669,   670,   671,   672,   673,    -1,   675,
     676,   677,   678,   679,   680,    -1,   682,   683,   684,   685,
     686,   687,   688,    -1,   690,   691,   692,   693,   694,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,    -1,    -1,
      -1,    -1,    -1,   799,   800,    -1,    -1,    -1,    -1,   805,
      -1,   807,    -1,    -1,    -1,   811,    -1,    -1,    -1,   815,
     816,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    37,    38,    39,    40,    41,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,
     104,    -1,   106,   107,   108,    -1,   110,   111,   112,   113,
     114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,   171,    -1,   173,
     174,   175,   176,   177,   178,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,   213,
      -1,   215,   216,    -1,   218,   219,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,   340,   341,    -1,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,   355,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,    -1,   371,   372,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,   396,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,   476,   477,   478,   479,   480,    -1,   482,   483,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,   571,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,   587,   588,   589,   590,   591,    -1,   593,
     594,   595,   596,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,   615,   616,   617,   618,   619,   620,    -1,    -1,   623,
     624,    -1,   626,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
     664,   665,    -1,   667,   668,   669,   670,   671,   672,   673,
      -1,   675,   676,   677,   678,   679,   680,    -1,   682,   683,
     684,   685,   686,   687,   688,    -1,   690,   691,   692,   693,
     694,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
      -1,    -1,    -1,    -1,    -1,   799,   800,   801,    -1,    -1,
      -1,   805,    -1,   807,    -1,    -1,    -1,   811,    -1,    -1,
      -1,   815,   816,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    35,    36,    37,    38,    39,    40,    41,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    54,    55,    56,    57,    -1,    59,    60,    61,
      62,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,
     102,   103,   104,    -1,   106,   107,   108,    -1,   110,   111,
     112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,
     122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,   171,
      -1,   173,   174,   175,   176,   177,   178,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,
     242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,   355,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,    -1,   371,
     372,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,   396,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,   476,   477,   478,   479,   480,    -1,
     482,   483,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,   571,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,   587,   588,   589,   590,   591,
      -1,   593,   594,   595,   596,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,   615,   616,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,   626,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,   664,   665,    -1,   667,   668,   669,   670,   671,
     672,   673,    -1,   675,   676,   677,   678,   679,   680,    -1,
     682,   683,   684,   685,   686,   687,   688,    -1,   690,   691,
     692,   693,   694,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,    -1,    -1,    -1,    -1,    -1,   799,   800,   801,
      -1,    -1,    -1,   805,    -1,   807,    -1,    -1,    -1,   811,
      -1,    -1,    -1,   815,   816,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    -1,
      -1,    -1,   102,   103,   104,    -1,   106,   107,   108,    -1,
     110,   111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,   197,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,   245,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
     340,   341,    -1,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,   355,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
      -1,   371,   372,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,   396,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,   476,   477,   478,   479,
     480,    -1,   482,   483,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,   571,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,   587,   588,   589,
     590,   591,    -1,   593,   594,   595,   596,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,   615,   616,   617,   618,   619,
     620,    -1,    -1,   623,   624,    -1,   626,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,   664,   665,    -1,   667,   668,   669,
     670,   671,   672,   673,    -1,   675,   676,   677,   678,   679,
     680,    -1,   682,   683,   684,   685,   686,   687,   688,    -1,
     690,   691,   692,   693,   694,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,    -1,    -1,    -1,    -1,    -1,   799,
     800,    -1,    -1,    -1,    -1,   805,    -1,   807,    -1,    -1,
      -1,   811,    -1,    -1,    -1,   815,   816,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    37,
      38,    39,    40,    41,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    54,    55,    56,    57,
      -1,    59,    60,    61,    62,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,
     108,    -1,   110,   111,   112,   113,   114,   115,    -1,    -1,
      -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,   171,    -1,   173,   174,   175,   176,   177,
     178,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,   197,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,
     218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,   355,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,    -1,   371,   372,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,   396,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,   476,   477,
     478,   479,   480,    -1,   482,   483,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,   571,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,   587,
     588,   589,   590,   591,    -1,   593,   594,   595,   596,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,   615,   616,   617,
     618,   619,   620,    -1,    -1,   623,   624,    -1,   626,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,   664,   665,    -1,   667,
     668,   669,   670,   671,   672,   673,    -1,   675,   676,   677,
     678,   679,   680,    -1,   682,   683,   684,   685,   686,   687,
     688,    -1,   690,   691,   692,   693,   694,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,    -1,    -1,    -1,    -1,
      -1,   799,   800,    -1,    -1,    -1,    -1,   805,    -1,   807,
      -1,    -1,    -1,   811,    -1,    -1,    -1,   815,   816,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    37,    38,    39,    40,    41,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,    55,
      56,    57,    -1,    59,    60,    61,    62,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      96,    97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,
     106,   107,   108,    -1,   110,   111,   112,   113,   114,   115,
      -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,   171,    -1,   173,   174,   175,
     176,   177,   178,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,   197,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,
     216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,   245,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,   340,   341,    -1,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,   355,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,    -1,   371,   372,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
     396,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
     476,   477,   478,   479,   480,    -1,   482,   483,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,   571,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,   587,   588,   589,   590,   591,    -1,   593,   594,   595,
     596,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,   615,
     616,   617,   618,   619,   620,    -1,    -1,   623,   624,    -1,
     626,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,   664,   665,
      -1,   667,   668,   669,   670,   671,   672,   673,    -1,   675,
     676,   677,   678,   679,   680,    -1,   682,   683,   684,   685,
     686,   687,   688,    -1,   690,   691,   692,   693,   694,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,    -1,    -1,
      -1,    -1,    -1,   799,   800,    -1,    -1,    -1,    -1,   805,
      -1,   807,    -1,    -1,    -1,   811,    -1,    -1,    -1,   815,
     816,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    37,    38,    39,    40,    41,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,
     104,    -1,   106,   107,   108,    -1,   110,   111,   112,   113,
     114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,   171,    -1,   173,
     174,   175,   176,   177,   178,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,   213,
      -1,   215,   216,    -1,   218,   219,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,   340,   341,    -1,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,   355,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,    -1,   371,   372,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,   396,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,   476,   477,   478,   479,   480,    -1,   482,   483,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,   571,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,   587,   588,   589,   590,   591,    -1,   593,
     594,   595,   596,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,   615,   616,   617,   618,   619,   620,    -1,    -1,   623,
     624,    -1,   626,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
     664,   665,    -1,   667,   668,   669,   670,   671,   672,   673,
      -1,   675,   676,   677,   678,   679,   680,    -1,   682,   683,
     684,   685,   686,   687,   688,    -1,   690,   691,   692,   693,
     694,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
      -1,    -1,    -1,    -1,    -1,   799,   800,    -1,    -1,    -1,
      -1,   805,    -1,   807,    -1,    -1,    -1,   811,    -1,    -1,
      -1,   815,   816,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    35,    36,    37,    38,    39,    40,    41,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    54,    55,    56,    57,    -1,    59,    60,    61,
      62,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,
     102,   103,   104,    -1,   106,   107,   108,    -1,   110,   111,
     112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,
     122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,   171,
      -1,   173,   174,   175,   176,   177,   178,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,
     242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,   355,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,    -1,   371,
     372,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,   396,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,   476,   477,   478,   479,   480,    -1,
     482,   483,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,   571,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,   587,   588,   589,   590,   591,
      -1,   593,   594,   595,   596,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,   615,   616,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,   626,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,   664,   665,    -1,   667,   668,   669,   670,   671,
     672,   673,    -1,   675,   676,   677,   678,   679,   680,    -1,
     682,   683,   684,   685,   686,   687,   688,    -1,   690,   691,
     692,   693,   694,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,    -1,    -1,    -1,    -1,    -1,   799,   800,    -1,
      -1,    -1,    -1,   805,    -1,   807,    -1,    -1,    -1,   811,
      -1,    -1,    -1,   815,   816,     5,     6,    -1,     8,     9,
      10,    11,    12,    13,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    -1,
      -1,    -1,   102,   103,   104,    -1,   106,   107,   108,    -1,
     110,   111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,   245,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
     340,   341,    -1,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,   355,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,   365,    -1,   367,   368,   369,
      -1,   371,   372,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,   396,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,   476,   477,   478,   479,
     480,    -1,   482,   483,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,   571,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,   587,   588,   589,
     590,   591,    -1,   593,   594,   595,   596,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,   615,   616,   617,   618,   619,
     620,    -1,    -1,   623,   624,    -1,   626,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,   664,   665,    -1,   667,   668,   669,
     670,   671,   672,   673,    -1,   675,   676,   677,   678,   679,
     680,    -1,   682,   683,   684,   685,   686,   687,   688,    -1,
     690,   691,   692,   693,   694,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,    -1,    -1,    -1,    -1,    -1,   799,
     800,    -1,    -1,    -1,    -1,   805,    -1,   807,    -1,    -1,
      -1,   811,    -1,    -1,    -1,   815,   816,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    37,
      38,    39,    40,    41,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    54,    55,    56,    57,
      -1,    59,    60,    61,    62,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,
     108,    -1,   110,   111,   112,   113,   114,   115,    -1,    -1,
      -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,   171,    -1,   173,   174,   175,   176,   177,
     178,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,
     218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,   355,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,    -1,   371,   372,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,   396,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,   476,   477,
     478,   479,   480,    -1,   482,   483,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,   571,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,   587,
     588,   589,   590,   591,    -1,   593,   594,   595,   596,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,   615,   616,   617,
     618,   619,   620,    -1,    -1,   623,   624,    -1,   626,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,   664,   665,    -1,   667,
     668,   669,   670,   671,   672,   673,    -1,   675,   676,   677,
     678,   679,   680,    -1,   682,   683,   684,   685,   686,   687,
     688,    -1,   690,   691,   692,   693,   694,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,    -1,    -1,    -1,    -1,
      -1,   799,   800,    -1,    -1,    -1,    -1,   805,    -1,   807,
      -1,    -1,    -1,   811,    -1,    -1,    -1,   815,   816,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    37,    38,    39,    40,    41,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,    55,
      56,    57,    -1,    59,    60,    61,    62,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      96,    97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,
     106,   107,   108,    -1,   110,   111,   112,   113,   114,   115,
      -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,   171,    -1,   173,   174,   175,
     176,   177,   178,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,
     216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,   245,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,   340,   341,    -1,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,   355,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,    -1,   371,   372,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
     396,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
     476,   477,   478,   479,   480,    -1,   482,   483,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,   571,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,   587,   588,   589,   590,   591,    -1,   593,   594,   595,
     596,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,   615,
     616,   617,   618,   619,   620,    -1,    -1,   623,   624,    -1,
     626,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,   664,   665,
      -1,   667,   668,   669,   670,   671,   672,   673,    -1,   675,
     676,   677,   678,   679,   680,    -1,   682,   683,   684,   685,
     686,   687,   688,    -1,   690,   691,   692,   693,   694,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,    -1,    -1,
      -1,    -1,    -1,   799,   800,    -1,    -1,    -1,    -1,   805,
      -1,   807,    -1,    -1,    -1,   811,    -1,    -1,    -1,   815,
     816,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    37,    38,    39,    40,    41,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,
     104,    -1,   106,   107,   108,    -1,   110,   111,   112,   113,
     114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,   171,    -1,   173,
     174,   175,   176,   177,   178,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,   213,
      -1,   215,   216,    -1,   218,   219,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,   340,   341,    -1,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,   355,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,    -1,   371,   372,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,   396,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,   476,   477,   478,   479,   480,    -1,   482,   483,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,   571,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,   587,   588,   589,   590,   591,    -1,   593,
     594,   595,   596,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,   615,   616,   617,   618,   619,   620,    -1,    -1,   623,
     624,    -1,   626,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
     664,   665,    -1,   667,   668,   669,   670,   671,   672,   673,
      -1,   675,   676,   677,   678,   679,   680,    -1,   682,   683,
     684,   685,   686,   687,   688,    -1,   690,   691,   692,   693,
     694,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
      -1,    -1,    -1,    -1,    -1,   799,   800,    -1,    -1,    -1,
      -1,   805,    -1,   807,    -1,    -1,    -1,   811,    -1,    -1,
      -1,   815,   816,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    35,    36,    37,    38,    39,    40,    41,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    54,    55,    56,    57,    -1,    59,    60,    61,
      62,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,
     102,   103,   104,    -1,   106,   107,   108,    -1,   110,   111,
     112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,
     122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,   171,
      -1,   173,   174,   175,   176,   177,   178,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,
     242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,   340,   341,
      -1,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,   355,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,   365,    -1,   367,   368,   369,    -1,   371,
     372,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,   396,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,   476,   477,   478,   479,   480,    -1,
     482,   483,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,   571,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,   587,   588,   589,   590,   591,
      -1,   593,   594,   595,   596,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,   615,   616,   617,   618,   619,   620,    -1,
      -1,   623,   624,    -1,   626,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,   664,   665,    -1,   667,   668,   669,   670,   671,
     672,   673,    -1,   675,   676,   677,   678,   679,   680,    -1,
     682,   683,   684,   685,   686,   687,   688,    -1,   690,   691,
     692,   693,   694,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,    -1,    -1,    -1,    -1,    -1,   799,   800,    -1,
      -1,    -1,    -1,   805,    -1,   807,    -1,    -1,    -1,   811,
      -1,    -1,    -1,   815,   816,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    -1,
      -1,    -1,   102,   103,   104,    -1,   106,   107,   108,    -1,
     110,   111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,   245,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
     340,   341,    -1,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,   355,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,   365,    -1,   367,   368,   369,
      -1,   371,   372,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,   396,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,   476,   477,   478,   479,
     480,    -1,   482,   483,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,   571,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,   587,   588,   589,
     590,   591,    -1,   593,   594,   595,   596,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,   615,   616,   617,   618,   619,
     620,    -1,    -1,   623,   624,    -1,   626,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,   664,   665,    -1,   667,   668,   669,
     670,   671,   672,   673,    -1,   675,   676,   677,   678,   679,
     680,    -1,   682,   683,   684,   685,   686,   687,   688,    -1,
     690,   691,   692,   693,   694,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,    -1,    -1,    -1,    -1,    -1,   799,
     800,    -1,    -1,    -1,    -1,   805,    -1,   807,    -1,    -1,
      -1,   811,    -1,    -1,    -1,   815,   816,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    37,
      38,    39,    40,    41,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    54,    55,    56,    57,
      -1,    59,    60,    61,    62,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,
     108,    -1,   110,   111,   112,   113,   114,   115,    -1,    -1,
      -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,   171,    -1,   173,   174,   175,   176,   177,
     178,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,
     218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,   340,   341,    -1,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,   355,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,   365,    -1,   367,
     368,   369,    -1,   371,   372,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,   396,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,   476,   477,
     478,   479,   480,    -1,   482,   483,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,   571,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,   587,
     588,   589,   590,   591,    -1,   593,   594,   595,   596,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,   615,   616,   617,
     618,   619,   620,    -1,    -1,   623,   624,    -1,   626,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,   664,   665,    -1,   667,
     668,   669,   670,   671,   672,   673,    -1,   675,   676,   677,
     678,   679,   680,    -1,   682,   683,   684,   685,   686,   687,
     688,    -1,   690,   691,   692,   693,   694,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,    -1,    -1,    -1,    -1,
      -1,   799,   800,    -1,    -1,    -1,    -1,   805,    -1,   807,
      -1,    -1,    -1,   811,    -1,    -1,    -1,   815,   816,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    37,    38,    39,    40,    41,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,    55,
      56,    57,    -1,    59,    60,    61,    62,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      96,    97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,
     106,   107,   108,    -1,   110,   111,   112,   113,   114,   115,
      -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,   171,    -1,   173,   174,   175,
     176,   177,   178,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,
     216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,   245,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,   340,   341,    -1,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,   355,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,   365,
      -1,   367,   368,   369,    -1,   371,   372,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
     396,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
     476,   477,   478,   479,   480,    -1,   482,   483,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,   571,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,   587,   588,   589,   590,   591,    -1,   593,   594,   595,
     596,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,   615,
     616,   617,   618,   619,   620,    -1,    -1,   623,   624,    -1,
     626,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,   664,   665,
      -1,   667,   668,   669,   670,   671,   672,   673,    -1,   675,
     676,   677,   678,   679,   680,    -1,   682,   683,   684,   685,
     686,   687,   688,    -1,   690,   691,   692,   693,   694,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,    -1,    -1,
      -1,    -1,    -1,   799,   800,    -1,    -1,    -1,    -1,   805,
      -1,   807,    -1,    -1,    -1,   811,    -1,    -1,    -1,   815,
     816,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
      -1,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,
     484,   485,   486,   487,   488,    -1,   490,   491,   492,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,   565,   566,   567,   568,   569,    -1,    -1,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,   619,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,   636,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,   699,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
      -1,    -1,    -1,    -1,    -1,     5,     6,    -1,     8,     9,
      10,    11,    12,   807,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,   816,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,   145,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,    -1,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,   699,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,    -1,    -1,    -1,    -1,    -1,     5,
       6,    -1,     8,     9,    10,    11,    12,   807,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,   816,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,    -1,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,   699,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,    -1,    -1,
      -1,    -1,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,   807,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
     816,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,
      53,    54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,
      -1,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    -1,    78,    -1,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      -1,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
      -1,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,    -1,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
      -1,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,
      -1,    -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,    -1,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,    -1,
      -1,    -1,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,    -1,
     453,   454,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,    -1,    -1,   467,   468,    -1,   470,   471,   472,
     473,   474,    -1,    -1,    -1,   478,   479,   480,    -1,   482,
      -1,   484,   485,    -1,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,    -1,    -1,    -1,   509,    -1,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,    -1,   539,   540,   541,   542,
      -1,    -1,    -1,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,    -1,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,    -1,    -1,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,   635,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,    -1,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,    -1,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,    -1,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,    -1,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,   812,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    37,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,   122,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,   219,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,   355,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,   368,   369,    -1,   371,   372,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,    -1,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,   571,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,   588,   589,   590,   591,    -1,
     593,   594,   595,   596,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,   811,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,   368,   369,    -1,    -1,   372,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,   396,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
      -1,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,   593,
     594,   595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,   811,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   391,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,   571,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,   811,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    62,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,    -1,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,   811,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,   571,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,   811,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,   571,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,   811,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    62,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,   811,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,   571,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,   811,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    86,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,    -1,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
      -1,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
     811,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,    -1,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,
     482,    -1,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,   808,    20,    -1,   811,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,    -1,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,   811,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
      -1,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,   811,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,   492,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
     565,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,   619,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,   636,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,   807,   808,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,    -1,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,   808,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,    -1,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,   808,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,   199,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,   235,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,   263,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,   275,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,   492,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,   565,   566,   567,
     568,   569,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,   619,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,   636,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,   807,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
     699,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,   807,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,    -1,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,   807,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,    -1,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
      -1,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,   807,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,    -1,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,
     482,    -1,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,   807,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,    -1,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,   807,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
      -1,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
      -1,    -1,    -1,    -1,    -1,     5,     6,   801,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,    -1,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,    -1,    -1,    -1,    -1,    -1,     5,
       6,   801,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,    -1,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,    -1,    -1,
      -1,    -1,    -1,     5,     6,   801,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,    -1,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,
     482,    -1,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,    -1,    -1,    -1,    -1,    -1,     5,     6,   801,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,    -1,    -1,    -1,    -1,
      -1,     5,     6,   801,     8,     9,    10,    11,    12,    13,
      14,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    99,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,   130,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
     144,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,   210,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,   235,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,   285,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
      -1,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,   440,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
      -1,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,
     484,   485,   486,   487,   488,    -1,   490,   491,   492,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,   505,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,   571,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,   586,    -1,    -1,   589,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,   608,   609,   610,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,    -1,    -1,   709,   710,   711,    -1,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
       5,     6,    -1,     8,     9,    10,    11,    12,    13,    14,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    99,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,   130,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,   144,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,   210,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
     235,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
     285,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,    -1,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,   440,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,   492,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
     505,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,   571,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,   586,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,   608,   609,   610,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,    -1,    -1,   709,   710,   711,    -1,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    14,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    99,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,   130,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,   144,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,   210,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,   235,
      -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,   285,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,    -1,    -1,
      -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,    -1,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,   440,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,   492,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,   505,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,   571,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
     586,    -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,   608,   609,   610,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,    -1,    -1,   709,   710,   711,    -1,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,   122,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,    -1,    -1,   372,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,   520,   521,   522,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,    -1,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,   593,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      18,    19,    20,    21,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,   386,    -1,
      -1,   389,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,   571,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,   647,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,   160,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,   501,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,   199,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,   235,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,   263,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,    -1,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    35,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,    -1,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
     571,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,
     372,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,   396,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,    -1,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,
     482,    -1,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,
      -1,   593,   594,   595,    -1,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    35,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,    -1,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,   571,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
     104,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
      -1,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,   571,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,   104,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,   571,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,     5,
       6,    -1,     8,     9,    10,    11,    12,    13,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,   571,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      37,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,   571,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,   571,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,   371,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,   571,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
     371,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,    -1,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
     571,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,    -1,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,
     482,    -1,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,   571,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    95,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,   172,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,    -1,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
      -1,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,   521,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    17,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,    -1,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,   571,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,   197,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,   452,   453,    -1,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,   452,   453,    -1,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,    -1,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,     5,     6,    -1,     8,     9,    10,
      11,    12,    13,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,   452,   453,    -1,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
      -1,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,    -1,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
     452,   453,    -1,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,
     482,    -1,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,   417,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,   452,
     453,    -1,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,    -1,
     414,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,   452,   453,
      -1,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,   465,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,
     484,   485,   486,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,   506,    -1,   508,   509,   510,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
     644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,    -1,   414,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,   452,   453,    -1,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
     465,    -1,   467,   468,    -1,   470,   471,   472,    -1,   474,
      -1,    -1,   477,   478,   479,   480,    -1,   482,    -1,   484,
     485,   486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,   506,    -1,   508,   509,   510,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,
      -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
     675,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,    -1,   414,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,   465,
      -1,   467,   468,    -1,   470,   471,   472,    -1,   474,    -1,
      -1,   477,   478,   479,   480,    -1,   482,    -1,   484,   485,
     486,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
     506,    -1,   508,   509,   510,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,    -1,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,   644,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,   675,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,   125,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,    -1,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,    -1,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,   368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,    -1,   414,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,   452,   453,    -1,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,   465,    -1,
     467,   468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,
     477,   478,   479,   480,    -1,   482,    -1,   484,   485,   486,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
      -1,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,
      -1,   508,   509,   510,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,    -1,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,   644,   645,   646,
      -1,    -1,   649,    -1,    -1,    -1,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,    -1,   672,   673,    -1,   675,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,    -1,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,    -1,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
     368,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,    -1,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,   452,   453,    -1,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,   465,    -1,   467,
     468,    -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,
     478,   479,   480,    -1,   482,    -1,   484,   485,   486,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,    -1,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,   506,    -1,
     508,   509,   510,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,   589,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,   644,   645,   646,    -1,
      -1,   649,    -1,    -1,    -1,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,    -1,   672,   673,    -1,   675,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,     5,     6,    -1,     8,
       9,    10,    11,    12,    13,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,    -1,   168,
     169,    -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,    -1,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,   368,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,    -1,   414,   415,   416,    -1,   418,
      -1,    -1,   421,   422,   423,    -1,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,    -1,
     449,    -1,   451,   452,   453,    -1,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,    -1,   465,    -1,   467,   468,
      -1,   470,   471,   472,    -1,   474,    -1,    -1,   477,   478,
     479,   480,    -1,   482,    -1,   484,   485,   486,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,   508,
     509,   510,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,    -1,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,   571,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
     589,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,   600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,   644,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,    -1,    -1,
     709,   710,   711,    -1,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,     5,     6,    -1,     8,     9,
      10,    11,    12,    13,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,    -1,   168,   169,
      -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,    -1,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,   368,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,
      -1,   421,   422,   423,    -1,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,    -1,   449,
      -1,   451,   452,   453,    -1,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,    -1,   465,    -1,   467,   468,    -1,
     470,   471,   472,    -1,   474,    -1,    -1,   477,   478,   479,
     480,    -1,   482,    -1,   484,   485,   486,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,   508,   509,
     510,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,    -1,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,   571,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
     600,   601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,   644,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,    -1,    -1,   709,
     710,   711,    -1,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,     5,     6,    -1,     8,     9,    10,
      11,    12,    13,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,    -1,   168,   169,    -1,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,    -1,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,    -1,   414,   415,   416,    -1,   418,    -1,    -1,
     421,   422,   423,    -1,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,    -1,   449,    -1,
     451,   452,   453,    -1,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,    -1,   465,    -1,   467,   468,    -1,   470,
     471,   472,    -1,   474,    -1,    -1,   477,   478,   479,   480,
      -1,   482,    -1,   484,   485,   486,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,    -1,    -1,   508,   509,   510,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,    -1,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
     571,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,
     601,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,    -1,    -1,   709,   710,
     711,    -1,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,     5,     6,    -1,     8,     9,    10,    11,
      12,    13,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,    -1,   168,   169,    -1,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,    -1,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,   368,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,    -1,   414,   415,   416,    -1,   418,    -1,    -1,   421,
     422,   423,    -1,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,    -1,   449,    -1,   451,
     452,   453,    -1,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,    -1,   465,    -1,   467,   468,    -1,   470,   471,
     472,    -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,
     482,    -1,   484,   485,   486,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,    -1,    -1,   508,   509,   510,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,    -1,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,   571,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,   600,   601,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,    -1,    -1,   709,   710,   711,
      -1,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,    -1,   168,   169,    -1,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
      -1,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,    -1,    -1,    -1,    -1,   368,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
      -1,   414,   415,   416,    -1,   418,    -1,    -1,   421,   422,
     423,    -1,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,    -1,   449,    -1,   451,   452,
     453,    -1,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,    -1,   465,    -1,   467,   468,    -1,   470,   471,   472,
      -1,   474,    -1,    -1,   477,   478,   479,   480,    -1,   482,
      -1,   484,   485,   486,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,    -1,    -1,   508,   509,   510,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,    -1,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,   571,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,   589,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,   600,   601,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,   644,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,   675,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,    -1,    -1,   709,   710,   711,    -1,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,
      54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    -1,    78,    -1,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    -1,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,
      -1,    -1,   146,   147,   148,    -1,   150,   151,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,    -1,   216,    -1,    -1,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,    -1,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
      -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,    -1,
      -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,    -1,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,    -1,    -1,
      -1,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,    -1,   453,
     454,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,    -1,    -1,   467,   468,    -1,   470,   471,   472,   473,
     474,    -1,    -1,    -1,   478,   479,   480,    -1,   482,    -1,
     484,   485,    -1,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,    -1,    -1,    -1,   509,    -1,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,    -1,   539,   540,   541,   542,    -1,
      -1,    -1,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,    -1,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,    -1,    -1,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,   635,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
      -1,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,    -1,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,    -1,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    54,
      -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    -1,    78,    -1,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    -1,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,    -1,
      -1,   146,   147,   148,    -1,   150,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,    -1,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,   182,   183,   184,
     185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
      -1,   216,    -1,    -1,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,    -1,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,    -1,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,   257,    -1,    -1,   260,    -1,   262,    -1,    -1,
      -1,   266,    -1,    -1,   269,   270,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,   292,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,    -1,   324,
     325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,
     335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
      -1,   356,   357,    -1,    -1,   360,   361,   362,   363,   364,
      -1,    -1,    -1,    -1,   369,    -1,    -1,    -1,   373,    -1,
     375,   376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,
     395,    -1,   397,    -1,   399,    -1,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,    -1,    -1,    -1,    -1,
     415,   416,    -1,   418,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,
     435,   436,    -1,   438,   439,    -1,    -1,   442,   443,   444,
     445,   446,    -1,   448,   449,    -1,   451,    -1,   453,   454,
      -1,   456,   457,   458,   459,   460,   461,   462,   463,    -1,
      -1,    -1,   467,   468,    -1,   470,   471,   472,   473,   474,
      -1,    -1,    -1,   478,   479,   480,    -1,   482,    -1,   484,
     485,    -1,   487,   488,    -1,   490,   491,    -1,    -1,    -1,
     495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,
      -1,    -1,    -1,    -1,   509,    -1,   511,    -1,   513,   514,
     515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,
     525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,
     535,    -1,   537,    -1,   539,   540,   541,   542,    -1,    -1,
      -1,   546,    -1,    -1,   549,   550,   551,   552,   553,   554,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
      -1,   566,   567,   568,   569,    -1,    -1,   572,   573,    -1,
     575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,
     585,    -1,    -1,    -1,    -1,   590,   591,    -1,    -1,   594,
     595,    -1,   597,   598,    -1,    -1,    -1,    -1,    -1,   604,
      -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,
      -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,
      -1,    -1,   627,    -1,   629,   630,   631,   632,   633,    -1,
     635,    -1,    -1,    -1,   639,   640,   641,    -1,   643,    -1,
     645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,
     655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   667,   668,   669,    -1,   671,   672,   673,    -1,
      -1,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,
      -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,
     695,   696,    -1,    -1,    -1,   700,   701,   702,   703,   704,
     705,   706,   707,    -1,   709,   710,   711,    -1,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
     745,   746,   747,   748,   749,   750,   751,    -1,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    54,    -1,
      56,    57,    -1,    59,    60,    -1,    -1,    -1,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    -1,    78,    -1,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    -1,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,    -1,    -1,    -1,
     146,   147,   148,    -1,   150,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,    -1,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,    -1,
     216,    -1,    -1,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,    -1,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,    -1,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,   257,    -1,    -1,   260,    -1,   262,    -1,    -1,    -1,
     266,    -1,    -1,   269,   270,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,   292,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,    -1,   315,
     316,   317,    -1,   319,   320,   321,   322,    -1,   324,   325,
      -1,    -1,    -1,    -1,   330,   331,   332,   333,   334,   335,
      -1,    -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,
     346,   347,   348,   349,   350,   351,   352,   353,    -1,    -1,
     356,   357,    -1,    -1,   360,   361,   362,   363,   364,    -1,
      -1,    -1,    -1,   369,    -1,    -1,    -1,   373,    -1,   375,
     376,    -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,
      -1,   397,    -1,   399,    -1,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,    -1,    -1,    -1,    -1,   415,
     416,    -1,   418,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,
     436,    -1,   438,   439,    -1,    -1,   442,   443,   444,   445,
     446,    -1,   448,   449,    -1,   451,    -1,   453,   454,    -1,
     456,   457,   458,   459,   460,   461,   462,   463,    -1,    -1,
      -1,   467,   468,    -1,   470,   471,   472,   473,   474,    -1,
      -1,    -1,   478,   479,   480,    -1,   482,    -1,   484,   485,
      -1,   487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,
     496,   497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,
      -1,    -1,    -1,   509,    -1,   511,    -1,   513,   514,   515,
     516,   517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,
      -1,   527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,
      -1,   537,    -1,   539,   540,   541,   542,    -1,    -1,    -1,
     546,    -1,    -1,   549,   550,   551,   552,   553,   554,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,   567,   568,   569,    -1,    -1,   572,   573,    -1,   575,
     576,   577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,
      -1,    -1,    -1,    -1,   590,   591,    -1,    -1,   594,   595,
      -1,   597,   598,    -1,    -1,    -1,    -1,    -1,   604,    -1,
      -1,   607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,
      -1,    -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,
      -1,   627,    -1,   629,   630,   631,   632,   633,    -1,   635,
      -1,    -1,    -1,   639,   640,   641,    -1,   643,    -1,   645,
     646,    -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,
     656,    -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   667,   668,   669,    -1,   671,   672,   673,    -1,    -1,
      -1,    -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,
      -1,   687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,
     696,    -1,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,    -1,   709,   710,   711,    -1,   713,   714,   715,
     716,   717,   718,    -1,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,   745,
     746,   747,   748,   749,   750,   751,    -1,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   783,   784,   785,
     786,   787,   788,   789,   790,   791,   792,   793,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    -1,    -1,    -1,    -1,    53,    54,    -1,    56,
      57,    -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      -1,    78,    -1,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,    -1,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,   182,   183,   184,   185,   186,
     187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,    -1,   216,
      -1,    -1,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,   230,    -1,   232,    -1,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
     257,    -1,    -1,   260,    -1,   262,    -1,    -1,    -1,   266,
      -1,    -1,   269,   270,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,   292,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,    -1,   324,   325,    -1,
      -1,    -1,    -1,   330,   331,   332,   333,   334,   335,    -1,
      -1,   338,   339,    -1,   341,    -1,   343,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,    -1,   356,
     357,    -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,
      -1,    -1,   369,    -1,    -1,    -1,   373,    -1,   375,   376,
      -1,   378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,    -1,    -1,    -1,    -1,   415,   416,
      -1,   418,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,
      -1,   438,   439,    -1,    -1,   442,   443,   444,   445,   446,
      -1,   448,   449,    -1,   451,    -1,   453,   454,    -1,   456,
     457,   458,   459,   460,   461,   462,   463,    -1,    -1,    -1,
     467,   468,    -1,   470,   471,   472,   473,   474,    -1,    -1,
      -1,   478,   479,   480,    -1,   482,    -1,   484,   485,    -1,
     487,   488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,
     497,   498,    -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,
      -1,    -1,   509,    -1,   511,    -1,   513,   514,   515,   516,
     517,    -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,
     527,    -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,
     537,    -1,   539,   540,   541,   542,    -1,    -1,    -1,   546,
      -1,    -1,   549,   550,   551,   552,   553,   554,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,    -1,   566,
     567,   568,   569,    -1,    -1,   572,   573,    -1,   575,   576,
     577,   578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,
      -1,    -1,    -1,   590,   591,    -1,    -1,   594,   595,    -1,
     597,   598,    -1,    -1,    -1,    -1,    -1,   604,    -1,    -1,
     607,    -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,
      -1,   618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,
     627,    -1,   629,   630,   631,   632,    -1,    -1,   635,    -1,
      -1,    -1,   639,   640,   641,    -1,   643,    -1,   645,   646,
      -1,    -1,   649,    -1,    -1,   652,   653,   654,   655,   656,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     667,   668,   669,    -1,   671,   672,   673,    -1,    -1,    -1,
      -1,   678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,
     687,   688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,
      -1,    -1,    -1,   700,   701,   702,   703,   704,   705,   706,
     707,    -1,   709,   710,   711,    -1,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,   745,   746,
     747,   748,   749,   750,   751,    -1,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,   783,   784,   785,   786,
     787,   788,   789,   790,   791,   792,   793,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,
      -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    -1,
      78,    -1,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,    -1,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,
      -1,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,    -1,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,
      -1,    -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,
      -1,   269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,   292,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,    -1,   324,   325,    -1,    -1,
      -1,    -1,   330,   331,   332,   333,   334,   335,    -1,    -1,
     338,   339,    -1,   341,    -1,   343,    -1,   345,   346,   347,
     348,   349,   350,   351,   352,   353,    -1,    -1,   356,   357,
      -1,    -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,
      -1,   369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,
     378,   379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,
      -1,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,    -1,    -1,    -1,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,    -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,
     438,   439,    -1,    -1,   442,   443,   444,   445,   446,    -1,
     448,   449,    -1,   451,    -1,   453,   454,    -1,   456,   457,
     458,   459,   460,   461,   462,   463,    -1,    -1,    -1,   467,
     468,    -1,   470,   471,   472,   473,   474,    -1,    -1,    -1,
     478,   479,   480,    -1,   482,    -1,   484,   485,    -1,   487,
     488,    -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,
     498,    -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,
      -1,   509,    -1,   511,    -1,   513,   514,   515,   516,   517,
      -1,    -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,
      -1,    -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,
      -1,   539,   540,   541,   542,    -1,    -1,    -1,   546,    -1,
      -1,   549,   550,   551,   552,   553,   554,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,   567,
     568,   569,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,    -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,
      -1,    -1,   590,   591,    -1,    -1,   594,   595,    -1,   597,
     598,    -1,    -1,    -1,    -1,    -1,   604,    -1,    -1,   607,
      -1,   609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,
     618,    -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,
      -1,   629,   630,   631,   632,    -1,    -1,   635,    -1,    -1,
      -1,   639,   640,   641,    -1,   643,    -1,   645,   646,    -1,
      -1,   649,    -1,    -1,   652,   653,   654,   655,   656,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,
     668,   669,    -1,   671,   672,   673,    -1,    -1,    -1,    -1,
     678,    -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,
     688,    -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,
      -1,    -1,   700,   701,   702,   703,   704,   705,   706,   707,
      -1,   709,   710,   711,    -1,   713,   714,   715,   716,   717,
     718,    -1,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,   745,   746,   747,
     748,   749,   750,   751,    -1,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,   763,   764,   765,   766,   767,
     768,   769,   770,   771,   772,   773,   774,   775,   776,   777,
     778,   779,   780,   781,   782,   783,   784,   785,   786,   787,
     788,   789,   790,   791,   792,   793,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,
      59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    -1,    78,
      -1,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,    -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,    -1,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,    -1,
      -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,
     269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,   292,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,
      -1,   330,   331,   332,   333,   334,   335,    -1,    -1,   338,
     339,    -1,   341,    -1,   343,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,   356,   357,    -1,
      -1,   360,   361,   362,   363,   364,    -1,    -1,    -1,    -1,
     369,    -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,
     379,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,
     399,    -1,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,    -1,    -1,    -1,    -1,   415,   416,    -1,   418,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,   428,
      -1,    -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,
     439,    -1,    -1,   442,   443,   444,   445,   446,    -1,   448,
     449,    -1,   451,    -1,   453,   454,    -1,   456,   457,   458,
     459,   460,   461,   462,   463,    -1,    -1,    -1,   467,   468,
      -1,   470,   471,   472,   473,   474,    -1,    -1,    -1,   478,
     479,   480,    -1,   482,    -1,   484,   485,    -1,   487,   488,
      -1,   490,   491,    -1,    -1,    -1,   495,   496,   497,   498,
      -1,    -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,    -1,
     509,    -1,   511,    -1,   513,   514,   515,   516,   517,    -1,
      -1,    -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,
      -1,   530,    -1,    -1,   533,    -1,   535,    -1,   537,    -1,
     539,   540,   541,   542,    -1,    -1,    -1,   546,    -1,    -1,
     549,   550,   551,   552,   553,   554,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,    -1,   566,   567,   568,
     569,    -1,    -1,   572,   573,    -1,   575,   576,   577,   578,
      -1,    -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,
      -1,   590,   591,    -1,    -1,   594,   595,    -1,   597,   598,
      -1,    -1,    -1,    -1,    -1,   604,    -1,    -1,   607,    -1,
     609,    -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,
      -1,   620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,
     629,   630,   631,   632,    -1,    -1,   635,    -1,    -1,    -1,
     639,   640,   641,    -1,   643,    -1,   645,   646,    -1,    -1,
     649,    -1,    -1,   652,   653,   654,   655,   656,    -1,   658,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,
     669,    -1,   671,   672,   673,    -1,    -1,    -1,    -1,   678,
      -1,   680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,
      -1,    -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,    -1,
     709,   710,   711,    -1,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,   745,   746,   747,   748,
     749,   750,   751,    -1,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,   763,   764,   765,   766,   767,   768,
     769,   770,   771,   772,   773,   774,   775,   776,   777,   778,
     779,   780,   781,   782,   783,   784,   785,   786,   787,   788,
     789,   790,   791,   792,   793,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,
      -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,    59,
      60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
      -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,    -1,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,   257,    -1,    -1,
     260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,   269,
     270,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,   292,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,    -1,   315,   316,   317,    -1,   319,
     320,   321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,
     330,   331,   332,   333,   334,   335,    -1,    -1,   338,   339,
      -1,   341,    -1,   343,    -1,   345,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,
     360,   361,   362,   363,   364,    -1,    -1,    -1,    -1,   369,
      -1,    -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,
     380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,    -1,    -1,    -1,   415,   416,    -1,   418,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,    -1,
      -1,   431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,
      -1,    -1,   442,   443,   444,   445,   446,    -1,   448,   449,
      -1,   451,    -1,   453,   454,    -1,   456,   457,   458,   459,
     460,   461,   462,   463,    -1,    -1,    -1,   467,   468,    -1,
     470,   471,   472,   473,   474,    -1,    -1,    -1,   478,   479,
     480,    -1,   482,    -1,   484,   485,    -1,   487,   488,    -1,
     490,   491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,
      -1,    -1,   502,    -1,    -1,    -1,    -1,    -1,    -1,   509,
      -1,   511,    -1,   513,   514,   515,   516,   517,    -1,    -1,
      -1,    -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,
     530,    -1,    -1,   533,    -1,   535,    -1,   537,    -1,   539,
     540,   541,   542,    -1,    -1,    -1,   546,    -1,    -1,   549,
     550,   551,   552,   553,   554,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,   567,   568,   569,
      -1,    -1,   572,   573,    -1,   575,   576,   577,   578,    -1,
      -1,    -1,    -1,    -1,   584,   585,    -1,    -1,    -1,    -1,
     590,   591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,
      -1,    -1,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,
      -1,   611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,
     620,    -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,
     630,   631,   632,    -1,    -1,   635,    -1,    -1,    -1,   639,
     640,   641,    -1,   643,    -1,   645,   646,    -1,    -1,   649,
      -1,    -1,   652,   653,   654,   655,   656,    -1,   658,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,
      -1,   671,   672,   673,    -1,    -1,    -1,    -1,   678,    -1,
     680,    -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,
      -1,   691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,
     700,   701,   702,   703,   704,   705,   706,   707,    -1,   709,
     710,   711,    -1,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,   745,   746,   747,   748,   749,
     750,   751,    -1,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   763,   764,   765,   766,   767,   768,   769,
     770,   771,   772,   773,   774,   775,   776,   777,   778,   779,
     780,   781,   782,   783,   784,   785,   786,   787,   788,   789,
     790,   791,   792,   793,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,    -1,
      -1,    -1,    53,    54,    -1,    56,    57,    -1,    59,    60,
      -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    -1,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
      -1,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,    -1,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,    -1,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,   230,
      -1,   232,    -1,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,    -1,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,   257,    -1,    -1,   260,
      -1,   262,    -1,    -1,    -1,   266,    -1,    -1,   269,   270,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,   292,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,
     331,   332,   333,   334,   335,    -1,    -1,   338,   339,    -1,
     341,    -1,   343,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,
     361,   362,   363,   364,    -1,    -1,    -1,    -1,   369,    -1,
      -1,    -1,   373,    -1,   375,   376,    -1,   378,   379,   380,
      -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,    -1,    -1,    -1,   415,   416,    -1,   418,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,    -1,    -1,
     431,    -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,
      -1,   442,   443,   444,   445,   446,    -1,   448,   449,    -1,
     451,    -1,   453,   454,    -1,   456,   457,   458,   459,   460,
     461,   462,   463,    -1,    -1,    -1,   467,   468,    -1,   470,
     471,   472,   473,   474,    -1,    -1,    -1,   478,   479,   480,
      -1,   482,    -1,   484,   485,    -1,   487,   488,    -1,   490,
     491,    -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,
      -1,   502,    -1,    -1,    -1,    -1,    -1,    -1,   509,    -1,
     511,    -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,
      -1,    -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,
      -1,    -1,   533,    -1,   535,    -1,   537,    -1,   539,   540,
     541,   542,    -1,    -1,    -1,   546,    -1,    -1,   549,   550,
     551,   552,   553,   554,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,    -1,   566,   567,   568,   569,    -1,
      -1,   572,   573,    -1,   575,   576,   577,   578,    -1,    -1,
      -1,    -1,    -1,   584,   585,    -1,    -1,    -1,    -1,   590,
     591,    -1,    -1,   594,   595,    -1,   597,   598,    -1,    -1,
      -1,    -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,
     611,   612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,
      -1,    -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,
     631,   632,    -1,    -1,   635,    -1,    -1,    -1,   639,   640,
     641,    -1,   643,    -1,   645,   646,    -1,    -1,   649,    -1,
      -1,   652,   653,   654,   655,   656,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,
     671,   672,   673,    -1,    -1,    -1,    -1,   678,    -1,   680,
      -1,    -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,
     691,    -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,    -1,   709,   710,
     711,    -1,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,   745,   746,   747,   748,   749,   750,
     751,    -1,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,   763,   764,   765,   766,   767,   768,   769,   770,
     771,   772,   773,   774,   775,   776,   777,   778,   779,   780,
     781,   782,   783,   784,   785,   786,   787,   788,   789,   790,
     791,   792,   793,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    -1,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,
      -1,    53,    54,    -1,    56,    57,    -1,    59,    60,    -1,
      -1,    -1,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    -1,    78,    -1,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    -1,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,    -1,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,    -1,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,    -1,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
     182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,    -1,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,   257,    -1,    -1,   260,    -1,
     262,    -1,    -1,    -1,   266,    -1,    -1,   269,   270,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
     292,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,    -1,   315,   316,   317,    -1,   319,   320,   321,
     322,    -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,
     332,   333,   334,   335,    -1,    -1,   338,   339,    -1,   341,
      -1,   343,    -1,   345,   346,   347,   348,   349,   350,   351,
     352,   353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,
     362,   363,   364,    -1,    -1,    -1,    -1,   369,    -1,    -1,
      -1,   373,    -1,   375,   376,    -1,   378,   379,   380,    -1,
      -1,   383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   393,   394,   395,    -1,   397,    -1,   399,    -1,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,    -1,
      -1,    -1,    -1,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,    -1,    -1,   431,
      -1,    -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,
     442,   443,   444,   445,   446,    -1,   448,   449,    -1,   451,
      -1,   453,   454,    -1,   456,   457,   458,   459,   460,   461,
     462,   463,    -1,    -1,    -1,   467,   468,    -1,   470,   471,
     472,   473,   474,    -1,    -1,    -1,   478,   479,   480,    -1,
     482,    -1,   484,   485,    -1,   487,   488,    -1,   490,   491,
      -1,    -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,
     502,    -1,    -1,    -1,    -1,    -1,    -1,   509,    -1,   511,
      -1,   513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,
      -1,   523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,
      -1,   533,    -1,   535,    -1,   537,    -1,   539,   540,   541,
     542,    -1,    -1,    -1,   546,    -1,    -1,   549,   550,   551,
     552,   553,   554,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,
     572,   573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,
      -1,    -1,   584,   585,    -1,    -1,    -1,    -1,   590,   591,
      -1,    -1,   594,   595,    -1,   597,   598,    -1,    -1,    -1,
      -1,    -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,
     612,    -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,
      -1,   623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,
     632,    -1,    -1,   635,    -1,    -1,    -1,   639,   640,   641,
      -1,   643,    -1,   645,   646,    -1,    -1,   649,    -1,    -1,
     652,   653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,
     672,   673,    -1,    -1,    -1,    -1,   678,    -1,   680,    -1,
      -1,    -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,
      -1,   693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,
     702,   703,   704,   705,   706,   707,    -1,   709,   710,   711,
      -1,   713,   714,   715,   716,   717,   718,    -1,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,   745,   746,   747,   748,   749,   750,   751,
      -1,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,   763,   764,   765,   766,   767,   768,   769,   770,   771,
     772,   773,   774,   775,   776,   777,   778,   779,   780,   781,
     782,   783,   784,   785,   786,   787,   788,   789,   790,   791,
     792,   793,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      -1,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,
      53,    54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,
      -1,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    -1,    78,    -1,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      -1,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
      -1,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,    -1,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
      -1,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,
      -1,    -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,   315,   316,   317,    -1,   319,   320,   321,   322,
      -1,   324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,
     333,   334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,
     343,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,
     363,   364,    -1,    -1,    -1,    -1,   369,    -1,    -1,    -1,
     373,    -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,
     383,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     393,   394,   395,    -1,   397,    -1,   399,    -1,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,    -1,    -1,
      -1,    -1,   415,   416,    -1,   418,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,
      -1,    -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,
     443,   444,   445,   446,    -1,   448,   449,    -1,   451,    -1,
     453,   454,    -1,   456,   457,   458,   459,   460,   461,   462,
     463,    -1,    -1,    -1,   467,   468,    -1,   470,   471,   472,
     473,   474,    -1,    -1,    -1,   478,   479,   480,    -1,   482,
      -1,   484,   485,    -1,   487,   488,    -1,   490,   491,    -1,
      -1,    -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,
      -1,    -1,    -1,    -1,    -1,    -1,   509,    -1,   511,    -1,
     513,   514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,
     523,   524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,
     533,    -1,   535,    -1,   537,    -1,   539,   540,   541,   542,
      -1,    -1,    -1,   546,    -1,    -1,   549,   550,   551,   552,
     553,   554,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,
     573,    -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,
      -1,   584,   585,    -1,    -1,    -1,    -1,   590,   591,    -1,
      -1,   594,   595,    -1,   597,   598,    -1,    -1,    -1,    -1,
      -1,   604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,
      -1,    -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,
     623,    -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,
      -1,    -1,   635,    -1,    -1,    -1,   639,   640,   641,    -1,
     643,    -1,   645,   646,    -1,    -1,   649,    -1,    -1,   652,
     653,   654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,
     673,    -1,    -1,    -1,    -1,   678,    -1,   680,    -1,    -1,
      -1,    -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,
     693,    -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,
     703,   704,   705,   706,   707,    -1,   709,   710,   711,    -1,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,   745,   746,   747,   748,   749,   750,   751,    -1,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,
      -1,    25,    26,    27,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    -1,    78,    -1,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    -1,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
      -1,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,    -1,   216,    -1,    -1,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,    -1,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
      -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,    -1,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
      -1,   315,   316,   317,    -1,   319,   320,   321,   322,    -1,
     324,   325,    -1,    -1,    -1,    -1,   330,   331,   332,   333,
     334,   335,    -1,    -1,   338,   339,    -1,   341,    -1,   343,
      -1,   345,   346,   347,   348,   349,   350,   351,   352,   353,
      -1,    -1,   356,   357,    -1,    -1,   360,   361,   362,   363,
     364,    -1,    -1,    -1,    -1,   369,    -1,    -1,    -1,   373,
      -1,   375,   376,    -1,   378,   379,   380,    -1,    -1,   383,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   393,
     394,   395,    -1,   397,    -1,   399,    -1,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,    -1,    -1,    -1,
      -1,   415,   416,    -1,   418,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,   428,    -1,    -1,   431,    -1,    -1,
      -1,   435,   436,    -1,   438,   439,    -1,    -1,   442,   443,
     444,   445,   446,    -1,   448,   449,    -1,   451,    -1,   453,
      -1,    -1,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,    -1,    -1,   467,   468,    -1,   470,   471,   472,    -1,
     474,    -1,    -1,    -1,   478,   479,   480,    -1,   482,    -1,
     484,   485,    -1,   487,   488,    -1,   490,   491,    -1,    -1,
      -1,   495,   496,   497,   498,    -1,    -1,    -1,   502,    -1,
      -1,    -1,    -1,    -1,    -1,   509,    -1,   511,    -1,   513,
     514,   515,   516,   517,    -1,    -1,    -1,    -1,    -1,   523,
     524,   525,    -1,   527,    -1,    -1,   530,    -1,    -1,   533,
      -1,   535,    -1,   537,    -1,   539,   540,   541,   542,    -1,
      -1,    -1,   546,    -1,    -1,   549,   550,   551,   552,   553,
     554,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,   567,   568,   569,    -1,    -1,   572,   573,
      -1,   575,   576,   577,   578,    -1,    -1,    -1,    -1,    -1,
     584,   585,    -1,    -1,    -1,    -1,   590,   591,    -1,    -1,
     594,   595,    -1,   597,   598,    -1,    -1,    -1,    -1,    -1,
     604,    -1,    -1,   607,    -1,   609,    -1,   611,   612,    -1,
      -1,    -1,    -1,    -1,   618,    -1,   620,    -1,    -1,   623,
      -1,    -1,    -1,   627,    -1,   629,   630,   631,   632,    -1,
      -1,    -1,    -1,    -1,    -1,   639,   640,   641,    -1,   643,
      -1,   645,   646,    -1,    -1,   649,    -1,    -1,   652,   653,
     654,   655,   656,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   667,   668,   669,    -1,   671,   672,   673,
      -1,    -1,    -1,    -1,   678,    -1,   680,    -1,    -1,    -1,
      -1,    -1,    -1,   687,   688,    -1,    -1,   691,    -1,   693,
      -1,   695,   696,    -1,    -1,    -1,   700,   701,   702,   703,
     704,   705,   706,   707,    -1,   709,   710,   711,    -1,   713,
     714,   715,   716,   717,   718,    -1,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,   745,   746,   747,   748,   749,   750,   751,    -1,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,   763,
     764,   765,   766,   767,   768,   769,   770,   771,   772,   773,
     774,   775,   776,   777,   778,   779,   780,   781,   782,   783,
     784,   785,   786,   787,   788,   789,   790,   791,   792,   793,
      34,    35,    -1,    -1,    -1,    -1,    40,    -1,    42,    -1,
      44,    45,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    62,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   123,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   142,    -1,
      -1,    -1,    -1,    -1,    -1,   232,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   159,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   187,    -1,   189,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   205,   206,    -1,    -1,    -1,    -1,    -1,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   247,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   260,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   279,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   288,   289,    -1,   291,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   327,   328,   329,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   346,   347,   348,    -1,    -1,    -1,    -1,   353,
      -1,    -1,   356,    -1,    -1,    -1,    -1,   444,   445,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     374,   375,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   408,   409,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     434,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   496,    -1,    -1,    -1,   500,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   512,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   572,    -1,
      -1,   575,    -1,    -1,   578,   579,   580,   581,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   621,   622,    -1,
      -1,    -1,    -1,   710,   711,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   731,   649,   733,   734,   735,   736,
     737,    -1,    -1,   740,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   750,    -1,    -1,    -1,    -1,   755,   756,
     757,   758,   759,   760,   761,   762,   763,   764,   765,   766,
     767,   768,   769,   770,   771,   772,   773,   774,   775,   776,
     777,   778,   779,   780,   781,   782,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   793
};

  /* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
     symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    14,    17,    32,    36,    50,    51,    58,    63,    64,
      79,    99,   121,   131,   132,   143,   144,   156,   170,   190,
     208,   210,   215,   218,   233,   241,   244,   264,   281,   285,
     381,   414,   425,   447,   450,   452,   455,   465,   466,   475,
     477,   486,   492,   500,   505,   506,   507,   538,   545,   565,
     589,   601,   605,   613,   619,   636,   644,   660,   661,   662,
     663,   675,   712,   752,   807,   819,   820,   823,   824,   825,
     826,   827,   829,   834,   837,   890,   891,   892,   893,   895,
     898,   920,   942,   949,   950,  1185,  1186,  1188,  1190,  1192,
    1195,  1197,  1198,  1199,  1200,  1201,  1203,  1204,  1239,  1240,
    1248,  1249,  1252,  1265,  1267,  1271,  1274,  1275,  1279,  1281,
    1286,  1290,  1296,  1297,  1298,  1299,  1300,  1301,  1302,  1307,
    1308,  1434,  1467,  1468,  1469,  1470,  1471,  1472,  1473,  1474,
    1475,  1476,  1477,  1478,  1479,  1480,  1481,  1482,  1483,  1492,
    1493,  1514,  1515,  1519,  1523,  1529,  1530,  1531,  1532,  1533,
    1534,  1535,  1536,  1537,  1538,  1539,  1540,  1541,  1542,  1543,
    1544,  1545,  1546,  1547,  1548,  1549,  1550,  1551,  1552,  1553,
    1554,  1555,  1556,  1557,  1558,  1559,  1560,  1561,  1562,  1563,
    1564,  1565,  1566,  1567,  1568,  1569,  1570,  1571,  1572,  1584,
    1585,  1587,  1591,  1600,  1610,  1614,  1616,  1617,  1687,  1689,
    1691,  1714,  1720,  1722,  1723,  1724,  1726,  1730,  1732,  1769,
    1775,  1776,  1777,  1778,  1814,  1821,  1822,  1824,  1825,    12,
     108,   127,   200,   243,   286,   419,   498,   563,   565,   599,
     611,   707,  1788,  1789,  1790,  1793,   282,   370,  1280,  1770,
     571,  1662,   235,     5,     6,     8,     9,    10,    11,    12,
      15,    20,    23,    25,    26,    27,    28,    29,    30,    32,
      36,    40,    43,    44,    45,    47,    49,    50,    53,    56,
      57,    59,    60,    61,    63,    65,    66,    67,    68,    69,
      70,    72,    73,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    87,    88,    90,    91,    92,    93,
      94,    98,   103,   106,   110,   111,   112,   115,   120,   121,
     126,   127,   129,   135,   136,   137,   138,   139,   143,   146,
     147,   148,   152,   154,   155,   157,   158,   159,   162,   163,
     165,   166,   167,   168,   169,   170,   173,   174,   175,   176,
     177,   180,   181,   183,   184,   185,   186,   187,   190,   191,
     195,   196,   198,   202,   204,   205,   206,   207,   209,   211,
     215,   216,   218,   221,   222,   226,   227,   228,   229,   232,
     233,   234,   237,   242,   243,   244,   248,   252,   253,   255,
     256,   260,   262,   265,   266,   269,   272,   273,   279,   280,
     282,   284,   286,   287,   295,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   315,   316,   317,   319,   320,   321,   322,   324,
     325,   330,   331,   332,   333,   334,   335,   338,   339,   341,
     343,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     356,   357,   360,   361,   362,   363,   364,   368,   369,   373,
     375,   376,   378,   379,   380,   383,   393,   394,   395,   397,
     399,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   412,   414,   415,   416,   418,   420,   421,   422,   423,
     424,   426,   427,   428,   431,   435,   436,   438,   439,   442,
     443,   444,   445,   446,   448,   449,   451,   452,   453,   456,
     457,   458,   459,   460,   461,   462,   463,   465,   467,   468,
     470,   471,   472,   474,   477,   478,   479,   480,   482,   484,
     485,   486,   487,   488,   490,   491,   495,   496,   497,   498,
     502,   506,   508,   509,   510,   511,   513,   514,   515,   516,
     517,   523,   524,   525,   527,   530,   533,   535,   537,   538,
     539,   540,   541,   542,   545,   546,   549,   550,   551,   552,
     553,   554,   557,   558,   559,   560,   562,   563,   566,   567,
     568,   569,   572,   573,   575,   576,   577,   578,   584,   585,
     589,   590,   591,   594,   595,   597,   598,   600,   601,   604,
     607,   609,   611,   612,   618,   620,   623,   627,   629,   630,
     631,   632,   639,   640,   641,   643,   644,   645,   646,   649,
     652,   653,   654,   655,   656,   658,   667,   668,   669,   671,
     672,   673,   675,   678,   680,   687,   688,   691,   693,   695,
     696,   700,   701,   702,   703,   704,   705,   706,   707,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   745,   746,   747,   748,   749,   750,   751,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     763,   764,   765,   766,   767,   768,   769,   770,   771,   772,
     773,   774,   775,   776,   777,   778,   779,   780,   781,   782,
     783,   784,   785,   786,   787,   788,   789,   790,   791,   792,
     793,   914,  1659,  1668,  1678,  1679,  1680,  1682,  1683,  1686,
     315,   456,   836,   562,   565,  1716,  1716,   640,  1771,   108,
     199,   286,   389,   498,   518,   563,   568,   599,   603,   611,
     653,   707,  1163,  1488,  1785,  1789,  1790,  1791,  1792,  1793,
       8,    23,    29,    35,    37,    38,    39,    41,    54,    55,
      61,    62,    69,    72,    96,    97,   102,   104,   107,   108,
     113,   114,   115,   120,   122,   125,   171,   178,   179,   188,
     195,   205,   207,   213,   219,   226,   230,   241,   245,   271,
     279,   290,   318,   323,   334,   338,   340,   344,   345,   346,
     347,   348,   355,   365,   366,   367,   371,   372,   396,   408,
     409,   411,   426,   454,   455,   474,   476,   483,   484,   490,
     543,   544,   551,   555,   556,   561,   571,   575,   576,   577,
     578,   587,   588,   589,   593,   596,   611,   615,   616,   617,
     619,   624,   626,   631,   632,   649,   664,   665,   670,   676,
     677,   679,   682,   683,   684,   685,   686,   690,   692,   694,
     745,   783,   799,   800,   801,   805,   807,   811,   815,   816,
    1136,  1300,  1318,  1319,  1322,  1323,  1324,  1326,  1330,  1333,
    1335,  1336,  1338,  1339,  1340,  1347,  1348,  1349,  1372,  1373,
    1374,  1638,  1640,  1643,  1644,  1645,  1646,  1647,  1648,  1651,
    1654,  1656,  1659,  1668,  1780,  1782,   108,   167,   200,   235,
     286,   419,   498,   518,   563,   586,   599,   611,   627,   653,
     707,  1488,  1668,  1280,   103,   535,   951,    13,    14,    99,
     130,   144,   167,   170,   183,   210,   235,   241,   274,   285,
     420,   424,   440,   448,   456,   492,   505,   506,   557,   586,
     608,   610,  1659,  1662,  1669,  1673,  1680,  1683,  1684,  1686,
    1736,  1737,  1657,  1668,   835,   565,   128,   220,   293,  1494,
     406,   658,    87,   427,  1615,   111,   235,   646,  1618,   243,
    1716,  1280,  1668,  1611,   486,   611,  1716,  1280,   128,   293,
    1495,  1518,   652,  1601,   521,   939,   943,   944,  1668,   230,
    1486,  1771,  1668,    13,   140,   220,   526,   527,   529,   530,
     531,   548,  1309,  1310,  1311,  1783,    61,    62,   125,   209,
     282,   351,   403,   497,   584,   652,   653,   671,   707,   811,
    1138,  1659,  1671,  1679,  1680,  1682,  1683,  1685,  1688,  1698,
    1703,  1704,    35,    36,    61,    72,    97,    99,   109,   158,
     163,   166,   176,   198,   200,   209,   211,   282,   315,   380,
     407,   418,   419,   422,   423,   443,   497,   510,   546,   565,
     630,   753,   754,  1138,  1247,  1574,  1575,  1577,  1578,  1579,
    1699,   943,   204,   510,   584,  1247,   204,  1247,  1657,  1668,
     565,  1524,   406,   658,   243,  1721,  1668,   483,  1504,  1508,
     659,  1435,  1436,  1668,    32,    79,   154,   414,   436,   477,
     538,  1817,  1326,  1668,  1659,   400,  1055,   807,  1781,  1782,
     243,   282,  1322,  1297,  1298,  1300,  1434,     0,   156,   821,
     414,   104,   274,   611,  1212,  1662,  1668,  1672,  1674,  1675,
    1758,  1761,   126,   403,   611,  1241,  1242,  1243,  1244,  1245,
    1246,   194,   246,   285,  1312,  1313,  1465,   387,   602,  1447,
    1448,   276,   602,  1448,  1453,  1465,  1299,  1300,   130,   608,
      17,   195,  1588,  1589,  1657,   160,  1216,  1668,   160,   914,
     137,   152,   448,   479,  1725,   212,   914,  1672,  1668,  1657,
     563,  1486,   212,   167,  1194,  1788,  1716,  1771,  1287,  1288,
    1657,   807,   921,   813,   185,   517,   582,  1484,  1657,  1484,
      19,  1772,   230,  1086,   235,   212,   455,  1672,   235,   716,
    1668,   563,  1086,  1086,   212,   235,   565,  1784,  1784,  1788,
    1793,   807,   807,   807,  1333,   807,   807,   807,  1322,  1385,
     807,   807,   807,   807,   807,   807,   807,   807,  1321,  1321,
     807,  1124,   807,   807,   807,   571,   807,   807,   807,  1781,
     807,   807,   807,   807,   807,   807,   807,   807,   807,  1322,
     807,   807,   807,  1383,  1384,  1654,  1668,   807,   807,   807,
     807,   807,   807,   807,   807,   807,  1322,  1124,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,  1124,   571,   807,   807,   807,   571,
     807,   807,   807,    37,   219,   571,   807,  1321,  1124,  1124,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,   807,   807,   807,   807,   807,   807,   807,   807,
     807,   807,  1333,  1333,  1333,   619,  1298,  1300,  1322,   811,
    1672,  1668,   812,    18,    19,    21,   386,   389,   571,   647,
    1320,  1327,  1328,  1667,  1668,   160,   161,   201,   214,   254,
     267,   294,   358,  1331,    33,   141,   249,   275,   344,   365,
     366,   441,   503,   504,   516,   721,   797,   798,   799,   800,
     801,   802,   803,   804,  1329,  1333,    71,   388,   571,  1663,
     259,   651,   807,   813,  1486,  1486,  1486,  1668,   212,  1486,
    1486,   716,  1668,  1486,   563,  1486,  1486,  1486,   212,  1716,
     830,  1592,   135,   418,  1735,   480,   480,   563,   568,   611,
     627,   653,   653,   384,   807,  1762,   562,   377,  1762,    67,
     510,  1762,   109,   627,  1762,   811,  1762,   377,   582,   812,
     380,    68,   432,   813,  1672,   197,   231,  1235,  1668,  1662,
    1823,  1322,   246,    85,   293,  1620,   194,  1715,  1716,   197,
     315,  1574,  1612,  1668,  1283,  1675,  1282,  1716,   246,  1496,
    1486,  1603,   315,   510,   753,  1602,  1604,   620,   940,   500,
     945,   171,    13,   424,  1736,   582,  1772,  1318,  1311,   500,
     653,   813,    35,   125,   160,   501,  1139,  1505,  1672,   194,
     582,  1505,   255,   432,  1706,  1707,  1709,  1711,    13,   125,
     364,  1673,  1676,  1744,   212,   811,  1672,    35,   125,  1141,
    1142,  1672,   813,   125,   584,  1694,  1702,  1704,   812,  1695,
    1505,   166,   275,   634,  1432,  1583,   807,   108,   167,   200,
     419,   565,   586,   611,   627,  1583,    13,  1573,  1672,  1452,
    1453,   197,   249,  1576,  1580,   198,    70,   542,   194,   542,
     562,    70,   542,    13,    43,    94,    98,   253,   331,   395,
     517,   559,  1525,  1526,  1527,   166,   222,   542,  1452,  1583,
     542,   287,   157,   421,   585,   234,   235,   261,  1162,    73,
     562,   542,   623,   945,   432,   636,  1253,  1254,  1255,   446,
     533,  1260,  1261,  1262,  1260,  1657,  1668,  1823,  1716,   807,
     812,  1435,   812,   807,  1437,    37,   219,  1639,  1663,  1816,
    1816,  1816,    96,  1815,  1816,  1816,   156,   813,   807,    48,
     156,  1300,   156,   197,   111,   156,   808,   808,  1312,   808,
     810,  1668,  1321,   807,   138,   228,   372,  1747,  1751,  1752,
    1759,   811,     7,   125,   138,   144,   228,   343,  1746,  1747,
    1751,  1752,  1753,  1754,  1755,  1756,   464,   812,  1764,   160,
     160,   160,   812,   502,   608,  1314,   146,   391,   811,  1463,
    1464,  1466,  1672,   249,  1313,  1465,  1312,    48,    13,   140,
    1779,  1452,   290,   372,   593,  1454,  1455,  1640,  1668,  1779,
    1452,  1447,  1448,  1453,   231,   293,   428,  1521,  1522,  1518,
     195,  1588,   160,   194,  1296,  1492,  1493,  1514,  1519,  1586,
    1590,  1639,  1668,   332,   569,   595,  1187,  1675,  1191,  1668,
    1668,   746,   784,  1672,  1668,  1189,   383,     7,    26,    84,
     144,   237,   322,   369,   450,   629,   748,  1022,  1023,  1036,
    1037,  1038,  1039,  1045,  1047,  1048,  1049,  1575,     7,    12,
      14,    17,    27,    28,    58,    63,    64,    69,    77,    83,
      84,    87,    96,   111,   125,   129,   137,   138,   144,   152,
     158,   169,   192,   233,   235,   242,   262,   285,   321,   339,
     343,   381,   387,   394,   403,   435,   450,   451,   452,   482,
     538,   539,   540,   541,   546,   563,   566,   589,   602,   636,
     639,   724,   725,   726,   748,   749,  1038,  1087,  1090,  1092,
    1093,  1145,  1217,  1218,  1220,  1221,  1223,  1225,  1226,  1227,
    1228,  1230,  1232,  1668,  1668,   914,   532,  1794,  1795,  1193,
    1484,   249,   812,   235,   263,   400,  1160,  1293,  1294,  1322,
    1381,  1382,  1668,   839,   838,   176,   428,   812,  1266,    59,
     176,   180,   194,   330,   428,  1276,  1277,  1278,    57,   368,
     368,   447,  1773,  1329,  1668,  1668,  1668,   518,   193,  1668,
     708,     7,  1016,  1668,  1675,  1748,  1760,  1744,  1668,  1668,
    1086,    11,   167,   200,   419,   586,   901,  1787,  1795,  1801,
    1803,  1804,  1809,   200,   901,  1786,  1795,  1801,  1804,  1809,
    1784,  1322,  1322,    13,   140,  1379,  1430,  1379,  1379,  1379,
     633,  1387,  1322,  1322,  1382,  1382,  1322,  1322,   140,  1379,
    1430,   808,   372,   808,   808,  1322,  1322,  1322,  1322,  1654,
     116,   117,   118,   119,   120,   223,   224,   225,   226,   334,
     336,   337,   338,   345,   426,   489,   490,   631,   648,   649,
    1425,  1426,  1322,  1381,   112,   115,   575,   578,  1427,   140,
    1375,  1322,  1322,  1322,  1322,  1425,  1322,  1382,  1384,    10,
     812,   813,   140,  1379,  1322,  1322,   140,  1379,  1322,  1322,
    1382,  1382,  1382,  1322,  1382,  1326,  1322,  1322,  1322,  1322,
    1322,  1322,   808,  1322,  1379,  1379,  1322,  1322,   140,  1379,
    1322,  1426,  1426,  1322,    46,   268,   583,  1322,  1322,   808,
    1655,  1656,  1668,  1379,  1379,  1322,  1322,  1322,  1379,  1379,
    1382,   808,   808,  1322,  1322,  1322,  1322,  1322,   811,  1351,
    1352,  1640,  1647,  1668,   808,   808,   808,  1333,   140,  1379,
    1312,   808,   812,   209,   282,   497,  1700,   501,  1322,  1319,
    1667,  1668,  1322,  1322,  1322,   179,   371,   588,   604,  1329,
      13,    20,  1324,  1332,  1326,  1326,   807,  1781,  1333,  1326,
    1326,  1326,  1326,   275,   666,  1325,  1326,  1326,   245,  1326,
     245,  1326,  1326,  1326,  1326,  1326,    33,   249,   275,   441,
    1672,  1333,  1663,  1663,  1322,  1344,  1345,  1346,   801,  1668,
    1668,   914,  1668,   377,  1668,   914,  1672,   708,  1045,  1047,
    1489,  1490,  1491,   914,  1668,  1675,  1743,  1484,  1744,  1668,
    1486,   614,   831,    35,   158,   162,   202,   222,   287,   382,
     418,   442,   467,   511,   542,  1593,  1597,  1598,  1716,    86,
     811,   952,   953,   954,   955,  1668,  1733,   562,  1668,  1763,
    1675,  1672,   200,   419,   565,  1734,  1743,  1737,    21,  1428,
    1429,   186,   362,  1668,  1727,  1668,  1823,  1496,   515,   812,
      50,   282,  1619,    30,  1657,  1717,  1718,  1484,   811,   828,
    1662,   287,   812,   582,  1284,  1285,  1657,  1484,  1657,  1668,
    1607,  1605,  1606,   812,  1663,    56,    66,    76,    90,    91,
      92,   106,   333,   350,   488,   550,   567,   946,   948,  1735,
     377,   197,   377,   486,  1774,  1773,   197,  1303,  1304,  1465,
      13,   364,  1744,  1668,    71,  1144,  1322,  1675,   732,   571,
    1665,   273,   379,   642,   812,  1710,   812,  1708,   657,  1690,
     811,   812,  1668,   209,   282,   497,   652,   671,  1701,  1505,
    1668,  1706,  1695,  1505,  1696,  1697,  1698,  1703,    13,    35,
     125,   377,   483,   708,  1322,  1713,   249,  1581,  1663,  1322,
     801,  1086,   914,   914,   914,  1657,   914,  1675,  1657,   287,
     349,   542,  1583,  1668,   914,  1583,  1675,  1576,   914,  1583,
     252,   560,   181,   194,  1528,   812,  1581,  1576,   194,   889,
    1576,  1580,  1580,  1576,  1583,  1583,   379,   642,    88,   812,
    1250,   812,   889,   125,  1322,  1509,  1510,  1511,  1508,  1436,
    1438,  1668,    21,   812,   378,  1819,   558,  1820,   645,   258,
     470,  1818,  1668,  1322,   277,   280,   429,  1056,  1057,  1675,
     136,   808,   156,   822,   808,   728,    48,   786,   455,  1202,
    1202,   787,   788,   790,  1672,  1759,   653,   728,  1759,   636,
    1759,   455,   727,  1745,   455,  1745,  1745,   455,  1745,  1745,
      65,   256,   364,   534,   552,   643,  1740,  1741,  1675,  1758,
     636,  1209,  1660,  1662,  1660,  1660,  1243,   666,   667,   669,
    1315,  1316,  1317,   571,  1664,  1664,  1672,   812,   502,  1322,
    1449,  1652,  1300,  1301,   376,   812,  1300,  1301,  1452,  1452,
     197,  1485,  1658,  1668,  1521,  1235,  1672,    87,   432,  1081,
    1082,  1085,  1092,  1093,  1094,  1145,   915,  1668,  1668,   194,
     368,   315,     7,   915,   807,   110,  1033,  1505,  1506,  1506,
    1033,  1506,  1506,   582,  1506,   812,  1089,   158,    74,    89,
     199,   400,   518,  1102,  1104,  1160,  1234,  1506,    64,    89,
     235,  1234,   400,  1506,  1506,  1234,  1506,   400,   400,  1506,
    1506,  1506,  1506,   582,   136,  1506,   261,   400,   563,    64,
      89,   193,   400,   417,  1160,  1234,   261,  1506,   400,   400,
     563,   136,  1506,  1506,  1506,  1506,  1506,  1234,   400,    48,
    1506,  1506,   400,    21,    74,   160,   582,  1160,  1238,   400,
     400,  1506,   584,  1506,  1506,  1506,   139,   331,  1506,  1506,
     400,  1506,   618,   618,  1506,  1506,  1506,  1090,    71,  1138,
     449,  1055,  1219,   812,   812,   500,   709,  1829,  1196,   491,
     627,  1795,   144,   608,  1273,   125,  1289,  1668,  1288,  1657,
     807,   807,  1294,   808,   812,   457,   458,   459,   460,   461,
     462,   463,   840,   841,   232,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   316,   317,   444,   445,   710,
     711,   731,   733,   734,   735,   736,   737,   740,   750,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   771,   772,   773,   774,   775,
     776,   777,   778,   779,   780,   781,   782,   793,   853,   854,
     855,   856,   857,   858,   859,   860,   861,   862,   863,   864,
     865,   866,   867,   868,   869,   870,   871,   872,   873,   874,
     875,   876,   877,   878,   879,   886,   887,   888,  1657,   609,
    1277,    57,   447,   171,   894,   377,     7,   716,   111,   377,
    1086,  1033,   613,  1017,     7,    19,  1749,  1750,  1751,  1752,
    1753,  1754,  1755,  1756,   125,   812,   897,   591,   591,   614,
    1175,  1176,  1657,   200,  1086,  1086,  1086,  1086,  1086,  1795,
     812,   808,  1379,   808,  1322,   808,   808,   808,  1322,   150,
     633,  1386,    21,    25,   808,   614,   808,   808,   808,   614,
     812,  1382,   808,   801,   808,   812,   812,   808,   808,   808,
     197,   812,   808,   812,  1382,   808,   812,   812,   812,   800,
     812,   808,   808,   807,  1654,  1668,  1379,   808,   808,   808,
    1379,   808,   812,   808,   808,   808,   808,   812,   808,   249,
     808,   812,   812,   808,   812,   812,   808,   808,   808,   812,
     197,   812,  1379,   808,   808,   812,   812,   812,   808,   197,
    1322,   197,  1322,   197,  1322,   197,   808,   812,   808,   808,
     808,   808,   812,    21,   808,   812,   808,   812,   808,   808,
     689,  1357,  1357,   808,   812,  1350,   808,  1350,   812,  1672,
     808,  1357,  1357,  1357,   812,  1379,   808,  1382,   813,   813,
     813,  1672,  1705,  1322,   817,   179,   371,   588,   604,  1781,
      19,  1322,   165,  1326,   807,  1322,  1322,  1326,   807,  1781,
    1333,  1326,  1320,   808,   812,   807,   813,   813,  1657,  1489,
    1486,  1089,  1024,  1025,  1026,  1045,   812,    52,   469,  1236,
     192,  1835,  1484,   811,   832,   833,   287,   287,   287,   287,
     287,   287,   812,  1484,  1599,   115,   575,   578,   811,   947,
     957,  1374,  1645,  1654,  1672,   812,   160,   377,   808,   812,
     582,   801,  1668,  1677,  1742,   636,  1738,  1668,   160,   186,
     201,   214,   266,   267,   294,   362,   416,  1728,  1729,  1431,
    1432,  1657,  1662,  1662,  1291,  1292,  1657,   236,  1429,   812,
    1672,    31,   582,  1613,  1675,  1675,   812,   582,   176,   428,
     612,  1268,  1269,  1270,   400,  1396,  1397,   582,  1609,    13,
    1608,  1608,  1604,   812,   160,   812,  1731,  1675,  1743,  1734,
    1668,   145,   699,   719,   807,   816,  1305,  1306,  1388,  1390,
    1398,  1399,  1400,  1401,  1402,  1403,  1404,  1657,  1781,  1431,
    1303,   582,   582,   582,    35,  1143,  1672,   582,  1505,  1202,
    1202,   432,   453,   495,  1712,  1709,  1707,  1744,  1672,  1676,
     194,   813,   813,   813,   813,   813,  1704,  1322,  1713,   812,
    1702,  1662,   197,  1582,   808,  1668,   614,  1583,   427,  1452,
    1527,  1582,  1583,    60,  1583,  1657,  1657,  1583,   513,  1255,
     607,  1263,  1262,   808,   812,   808,   812,  1781,  1639,   404,
     194,   813,   808,    73,   807,    73,   807,   401,  1059,   216,
     263,   814,  1506,   403,   732,  1665,  1665,  1745,  1745,   789,
     789,  1750,  1753,    13,   364,  1744,   403,   144,  1672,  1750,
    1665,   103,  1665,  1665,   571,   571,   571,    19,  1739,   319,
     320,   324,   325,  1210,  1211,     5,   403,   738,   739,  1206,
    1207,  1208,  1485,   668,  1316,  1138,  1140,  1464,   341,    22,
     131,  1450,  1451,   812,  1455,  1455,  1485,  1657,  1668,   197,
     812,   813,  1520,  1306,   122,   188,   219,   290,   372,   593,
    1458,  1461,  1462,   379,  1082,    84,    77,    93,   265,   342,
     368,   430,   532,   917,   919,    60,   477,   263,   597,  1035,
     108,   221,   393,   403,   410,   514,   611,   899,   900,  1662,
    1021,  1022,   219,   290,   372,   593,  1050,  1460,  1461,  1659,
    1662,  1021,  1050,  1050,  1668,  1662,  1836,  1023,  1506,  1183,
    1668,  1160,  1161,  1280,  1161,    64,   193,   417,   603,  1103,
    1159,  1174,  1183,  1668,   807,  1668,   125,  1231,  1668,  1668,
    1668,  1668,  1668,  1280,   122,   188,   290,   372,   593,  1459,
    1459,  1668,   122,   188,   219,   290,   372,   593,  1457,    13,
    1224,  1424,  1668,  1280,  1662,  1662,  1662,  1662,  1138,  1506,
    1457,  1224,  1668,  1668,   263,  1424,   263,  1668,  1668,  1672,
    1668,  1224,  1506,   186,   266,   368,  1096,  1459,   125,  1233,
    1668,  1459,  1459,  1668,  1280,  1445,  1446,  1655,   125,  1091,
    1457,  1662,  1280,  1668,  1668,  1657,  1280,  1280,    80,    82,
     125,   148,   187,   439,  1095,  1091,  1091,   125,  1457,  1668,
    1457,  1224,   807,   371,  1672,  1836,  1836,  1506,  1506,   402,
       7,   144,  1087,  1227,  1228,  1221,  1225,  1228,   717,   718,
    1034,  1506,   706,  1833,   377,   909,  1213,   127,   248,  1657,
     672,   672,  1224,   417,  1420,  1421,  1422,  1668,   249,  1322,
     160,   160,   160,   160,   160,   160,   160,   812,   889,   160,
     160,   160,   160,   160,   160,   160,   160,   160,   160,   812,
     889,   160,   160,   160,   160,   160,   160,   160,   160,   160,
     160,   160,   160,   160,   160,   160,   160,   160,   160,   160,
     160,   160,   160,   160,   160,   160,   160,   160,  1083,  1084,
    1085,  1657,  1035,   708,   641,  1657,  1460,   286,    77,   177,
     184,   363,  1018,  1019,  1020,  1036,  1037,  1039,  1040,  1043,
    1044,  1045,  1046,  1047,  1048,  1049,  1033,  1750,  1749,   791,
    1757,   653,  1748,  1764,  1506,    47,   216,   485,  1178,  1178,
     377,    21,   231,   275,   455,   807,  1051,  1052,  1053,  1054,
    1055,  1088,  1090,  1298,  1300,  1501,  1622,  1086,   914,   914,
    1668,   914,   914,   245,  1322,   808,  1356,  1357,  1356,  1356,
    1356,   574,  1322,  1322,   154,    35,    62,   112,   115,   123,
     142,   189,   205,   260,   279,   346,   347,   348,   353,   356,
     408,   409,   434,   508,   578,   606,   649,  1113,  1117,  1380,
     282,   578,  1139,  1139,  1380,   808,  1356,   808,   245,   245,
    1322,  1322,  1322,   387,  1377,  1322,  1322,  1322,  1322,  1322,
    1326,   808,  1356,   808,  1356,  1322,  1322,  1322,  1322,  1322,
    1322,  1382,  1356,  1356,   245,  1322,  1322,  1322,   808,  1356,
    1322,  1322,  1322,  1322,   197,  1322,   197,  1322,   197,  1322,
    1322,  1356,  1356,  1322,    35,    62,  1457,  1379,  1356,   807,
    1358,  1359,  1360,  1668,   231,   693,  1354,  1351,   808,  1354,
     808,  1333,  1357,   596,  1638,   808,  1356,   808,   813,  1324,
     808,   812,  1333,  1333,  1425,  1425,    19,  1322,   165,  1346,
    1381,   801,  1668,  1668,  1229,  1230,  1232,  1460,  1491,  1089,
    1675,  1236,  1672,   812,   889,  1598,  1594,  1672,   955,   958,
     959,   954,   373,   484,   956,  1734,  1668,  1743,   813,   813,
     582,   654,  1431,   807,  1452,  1396,   812,  1293,  1294,  1664,
     293,   432,   642,  1719,  1718,  1322,  1662,   582,  1285,  1657,
    1270,   807,   500,   619,   620,   807,  1497,  1498,  1500,  1501,
    1502,  1460,   889,   889,   948,   947,   210,   377,   197,   231,
    1487,  1742,   807,  1781,  1306,  1390,  1399,  1400,  1401,  1402,
     730,   812,   100,   238,   258,   271,   354,   476,   548,  1391,
    1392,  1393,  1396,  1429,   212,  1442,  1431,  1744,  1744,  1744,
     732,  1665,  1745,  1745,    78,   594,   432,  1458,  1692,  1693,
    1505,  1697,  1459,  1452,   163,   630,  1743,   372,  1452,  1660,
    1576,  1576,   523,   524,   525,   888,  1264,   611,  1256,  1511,
    1668,   812,   335,   156,   807,  1326,   807,  1326,  1458,   554,
    1060,   807,    12,  1058,  1457,  1664,   403,   500,     7,  1759,
      21,    48,   343,  1745,   403,  1745,  1745,  1740,  1457,  1457,
    1457,  1457,  1211,   285,   605,   174,   464,   703,   704,   696,
    1458,  1458,    77,   747,  1205,  1208,  1139,    73,  1623,  1652,
     614,  1429,   813,  1306,  1658,   801,  1668,   500,  1506,  1506,
    1662,   532,   532,   532,   532,   532,   491,  1668,   377,  1662,
    1030,  1031,  1032,  1036,  1045,  1047,  1662,  1662,  1662,  1662,
    1457,  1662,  1662,   808,   812,  1672,  1183,   401,   807,  1183,
     807,   263,   263,  1161,   366,  1105,  1106,  1107,  1174,   807,
     614,   591,  1098,  1099,  1100,  1102,  1668,    34,    35,    40,
      42,    44,    45,    62,   112,   115,   123,   159,   187,   189,
     205,   206,   247,   260,   279,   288,   289,   291,   327,   328,
     329,   346,   347,   348,   353,   356,   374,   375,   408,   409,
     496,   500,   512,   572,   575,   578,   579,   580,   581,   621,
     622,   649,  1108,  1111,  1112,  1113,  1114,  1115,  1116,  1117,
    1119,  1107,  1107,   655,   656,  1177,   144,   500,  1224,  1668,
    1276,   812,  1458,   125,  1139,  1662,   563,  1668,  1236,   636,
     563,  1662,  1108,  1224,   812,  1450,  1224,   582,   582,  1424,
    1224,  1599,  1143,  1139,  1024,   372,  1830,  1831,  1506,   137,
     152,  1834,    81,   487,   450,  1214,  1437,   377,   377,   808,
     808,   812,  1289,   807,   842,   842,   807,   847,   847,   807,
     850,   850,   807,   845,   841,   807,  1660,  1457,  1660,   371,
     882,  1674,  1457,   377,   741,   742,   883,  1458,   282,   571,
     742,   884,  1458,   879,  1457,  1660,  1660,  1660,  1660,  1457,
    1457,  1457,  1457,  1457,  1660,  1660,  1660,  1660,  1660,  1660,
    1457,  1660,   371,   885,  1660,  1660,  1660,  1457,  1646,  1662,
    1457,  1660,  1459,  1085,   807,   438,   598,  1027,  1028,  1029,
    1036,  1041,  1042,  1043,  1044,  1045,  1047,  1460,  1672,   807,
     896,   212,  1506,  1506,  1506,  1506,  1089,  1024,    19,   785,
    1744,  1209,   611,   708,  1828,  1657,  1501,  1657,   275,  1098,
    1053,  1052,  1089,  1312,  1054,  1668,   902,   807,   472,  1810,
       9,    31,  1014,  1322,   808,  1356,  1322,   574,   807,  1128,
    1129,  1129,   807,  1123,   807,  1121,  1122,  1128,   413,  1118,
    1120,  1128,    62,   247,  1123,   247,  1129,   720,  1334,    21,
     751,   808,   808,   808,  1356,  1356,  1322,  1322,   808,   808,
     812,   808,    48,   494,  1376,   812,   812,   808,   812,   808,
     249,  1341,  1342,  1356,  1356,   808,   808,   808,   808,   812,
     808,   808,  1322,   808,   194,   808,   808,   812,  1356,   808,
     812,   812,   808,  1322,   808,  1322,   808,  1322,   808,   808,
     808,   807,  1150,  1150,   812,   808,  1359,  1361,  1362,   687,
     687,  1357,   812,  1353,  1354,  1357,  1354,   808,   743,  1337,
    1356,  1668,  1382,   808,  1324,   808,   812,  1333,   808,  1232,
    1230,  1026,   833,   194,   636,  1595,   160,   812,  1742,   636,
    1766,   801,   801,  1668,  1743,   384,  1452,  1510,   500,  1497,
    1498,  1292,  1657,  1294,   231,  1295,  1621,  1622,   642,   282,
    1675,  1423,  1424,  1516,  1517,  1655,   808,  1499,  1650,  1651,
    1655,  1668,   807,  1503,  1507,   160,   384,  1734,  1743,   604,
     197,  1322,  1429,   812,   808,   808,   808,   808,   808,  1388,
    1389,  1390,  1398,  1388,   258,   258,   390,  1395,   238,   271,
     476,  1394,  1395,  1398,  1388,  1388,  1429,  1437,    48,   217,
    1433,  1442,  1202,  1202,  1089,  1713,   889,  1431,  1583,   160,
     160,   812,   160,   403,  1257,  1457,  1062,  1668,   808,  1062,
     808,    48,   807,  1064,  1326,   160,   807,   228,   792,  1759,
     219,  1662,  1666,   732,  1665,  1759,   125,   245,   360,   103,
     125,  1458,   245,  1663,  1663,   153,   164,   385,   570,  1624,
    1625,   278,  1626,  1306,  1396,  1668,  1431,   813,  1520,  1516,
    1091,  1662,   111,   111,   127,   248,   368,   162,  1089,   900,
     807,  1458,   400,  1065,  1066,   807,  1322,  1183,   729,   807,
     807,  1180,  1181,  1182,  1668,  1178,  1178,   808,   812,  1108,
    1128,  1128,  1129,    23,    35,    49,   600,   625,  1128,  1138,
    1146,  1147,  1148,  1123,   807,  1148,    62,   621,  1114,  1148,
    1148,    62,   622,   622,   625,   807,  1129,  1123,  1123,  1148,
    1128,  1129,   440,  1101,  1153,    27,    71,    75,    77,   125,
     366,   371,   377,   417,   496,   546,   603,   705,   748,   749,
    1104,  1107,  1131,  1132,  1133,  1144,  1152,  1177,  1329,    35,
    1128,  1149,  1128,  1128,  1129,   807,  1122,  1130,  1121,   125,
     125,  1177,  1108,  1668,  1144,  1144,   565,     9,   186,  1237,
    1446,  1668,  1668,   246,  1268,   808,   799,  1089,   372,   799,
    1832,  1835,   366,   415,    25,   168,   903,   582,   137,   152,
     905,  1796,  1424,  1424,  1421,   808,   843,   844,  1668,   808,
     848,   849,  1668,  1677,   808,   851,   852,  1660,  1661,   807,
     808,   846,   880,   881,  1457,  1181,  1506,  1506,  1089,   896,
     383,  1181,   352,   713,   714,   715,  1668,  1662,  1050,  1050,
    1458,  1020,  1750,   228,  1751,  1752,  1754,  1206,  1829,   807,
    1657,   808,  1090,   472,   377,  1805,   123,   247,   434,   549,
    1097,   807,   130,   241,   608,  1015,  1425,  1322,   122,   290,
     372,   593,  1148,   372,   372,   808,  1380,   245,  1649,  1425,
    1425,  1322,  1378,  1652,  1639,   808,  1322,  1322,  1382,    44,
     354,   808,   636,  1343,  1322,  1425,  1322,  1322,  1322,  1322,
     808,   808,   808,  1458,   808,   808,  1457,  1356,   808,   400,
    1363,  1322,  1357,  1357,   197,  1355,  1380,   125,   162,   371,
    1409,  1411,  1412,  1413,   808,  1382,  1596,   432,    56,    66,
      76,    90,    91,    92,   106,   333,   350,   471,   488,   550,
     567,   960,   959,   582,   210,   636,  1765,   808,  1516,    21,
    1512,   377,  1513,  1295,   269,   246,   808,   812,  1505,  1500,
    1501,   808,   812,   813,  1509,   812,   947,   197,  1742,  1487,
     611,  1743,   812,  1437,  1388,   817,   258,  1395,  1395,   258,
     258,   377,   614,   377,   614,   192,   231,   613,  1415,  1416,
    1417,  1418,  1419,  1322,  1443,  1653,  1322,   697,  1439,  1433,
    1745,  1745,  1458,  1662,  1662,   888,  1662,   160,   126,  1258,
     808,   812,   808,  1057,  1065,   808,  1458,  1061,  1062,    48,
      21,  1750,   403,  1750,  1458,   125,   722,   125,  1458,    48,
      48,   153,    48,  1625,   536,   570,  1627,  1628,  1431,  1431,
    1431,   477,  1032,  1181,  1668,   808,   812,  1181,   808,   807,
    1181,  1322,   808,   812,   807,  1450,  1099,  1101,    35,    23,
     600,  1138,    35,  1148,  1139,  1184,  1639,  1148,   625,  1184,
    1148,   508,   606,   650,  1125,  1126,  1127,  1657,  1237,  1143,
     125,   148,   187,  1134,  1662,   115,   575,   578,   799,   800,
     807,  1136,  1137,  1641,  1642,  1643,  1644,   608,   125,   125,
     139,   331,  1135,   263,  1460,  1506,  1506,  1103,    71,  1133,
     203,  1109,   263,   371,   723,  1149,  1148,  1149,  1125,   372,
    1125,  1125,   807,  1642,  1237,  1657,  1668,   807,   372,  1831,
     372,   415,  1322,  1322,   377,   909,   914,   377,    77,   910,
      21,   636,  1272,   808,   812,   808,   812,   813,   808,   812,
     844,   808,   812,   808,   812,   808,  1050,  1050,  1029,   807,
     808,  1660,  1660,  1660,  1660,   636,  1205,  1833,  1181,   808,
    1051,  1097,   487,   922,   923,   924,  1668,   515,  1811,   377,
     808,   808,   808,   808,   808,   808,   812,  1334,  1663,   808,
     808,   808,   812,  1356,   808,   812,   808,   341,   265,   427,
     808,   808,   808,   808,   808,   808,  1151,   812,    48,   387,
    1364,   186,   266,  1354,  1641,   808,  1412,  1413,   377,   808,
     175,   285,  1743,   384,   210,    21,  1768,  1431,  1512,  1668,
    1513,   147,   565,  1517,  1511,  1500,  1501,  1650,  1668,   808,
    1507,  1743,   197,  1487,  1638,   808,   258,   258,  1322,   807,
    1322,   807,  1160,  1160,  1416,   638,   812,  1444,  1359,  1440,
    1441,  1439,  1662,   160,   405,  1259,  1668,   216,   263,   808,
     808,  1662,  1666,   120,   120,  1639,  1639,    48,  1639,    48,
      48,  1628,  1447,  1447,   377,   808,   619,  1067,  1066,   808,
    1179,  1180,   808,   808,    77,   262,   748,   749,  1170,  1171,
    1172,  1173,  1176,  1177,  1182,   372,  1139,  1149,   808,   812,
     808,  1127,   807,  1154,  1646,  1646,  1322,  1136,   620,  1836,
    1836,  1143,    15,    21,  1322,  1222,  1223,  1065,  1425,   510,
    1662,   143,  1215,  1501,  1797,   372,   844,   849,  1668,   852,
     812,   807,   881,   636,  1164,  1165,  1166,  1173,   899,  1167,
    1168,  1169,  1173,   228,  1672,  1834,   808,   515,   903,   808,
     812,  1111,  1662,   239,   249,   392,   925,   926,   927,   928,
    1657,   372,   808,    21,  1652,  1322,   341,   173,   808,  1457,
    1443,    48,   429,   481,   681,  1365,  1371,  1357,   377,   162,
     698,  1765,   384,  1675,  1452,  1513,  1437,   263,  1657,  1487,
    1743,    73,  1405,  1423,  1423,   194,  1414,  1414,  1653,    21,
     812,  1662,   160,  1251,   807,  1058,   111,   464,  1826,  1827,
    1639,  1639,  1639,   276,  1456,  1456,   162,  1164,   249,   272,
      77,   111,   235,   321,   339,   363,   563,  1078,  1079,  1080,
    1575,  1167,   808,   812,  1170,  1450,  1662,  1506,  1506,  1506,
    1172,   808,  1148,  1639,  1148,  1155,  1668,   318,  1156,   808,
     807,   808,   808,   904,   911,   912,   636,  1798,   673,   844,
     844,   397,  1229,  1166,   808,  1229,  1169,    48,  1170,  1662,
     908,   909,  1806,   924,  1144,   808,   812,  1668,   194,   808,
     112,   808,   808,  1449,    33,   103,   245,   696,  1366,  1367,
    1368,  1640,  1646,  1768,   636,  1767,   608,  1396,  1487,   807,
     808,   808,   808,   212,   258,   387,   807,   807,  1360,  1441,
    1662,   889,  1326,   807,   136,   368,   534,  1455,   807,  1069,
    1071,   573,  1506,   136,   136,  1506,  1506,  1506,  1506,   807,
    1075,  1080,   158,  1153,  1180,  1457,  1836,  1836,  1450,   808,
     812,   198,   399,   509,   377,  1157,  1322,   537,   906,    54,
      68,   182,   230,   257,   270,   380,   473,   913,   964,   966,
     967,   968,   970,   971,   972,   973,   974,   975,   977,   985,
     986,   989,  1000,  1003,  1005,  1006,  1659,  1670,  1681,  1682,
    1683,  1686,    53,    64,   282,   808,   812,  1659,  1460,  1229,
     905,   472,  1812,   927,  1111,   149,  1123,   245,   696,  1367,
    1369,  1640,  1646,   483,  1322,   691,   678,  1370,   691,   691,
     653,  1516,  1140,   700,  1406,  1407,  1668,  1429,    48,    48,
    1420,  1422,   808,  1062,  1506,   534,   807,  1070,  1071,  1072,
     326,  1068,  1071,  1662,  1506,  1506,  1460,  1460,  1458,  1668,
     554,  1076,  1077,  1506,  1668,   130,   608,   808,  1322,   155,
     907,   987,   990,  1668,   197,   362,   978,   965,  1670,  1670,
    1668,   969,   824,   292,   454,   635,  1009,    32,  1007,   814,
      64,   384,    64,   844,   910,  1111,   916,  1144,   483,   808,
    1322,   680,    19,   680,   680,  1425,   103,   212,   368,   695,
      13,   125,   364,  1744,   481,  1629,   702,   808,   812,   194,
    1111,   808,   808,   553,  1063,   808,  1664,   808,   812,   326,
    1073,  1074,  1326,  1662,  1662,  1672,   808,   812,  1672,    52,
     368,   469,   500,  1158,  1158,   547,   628,  1110,  1322,  1322,
     633,   992,   996,   197,  1668,   980,   981,  1322,   930,   963,
     964,   966,   968,   970,   972,   973,   974,   975,   977,   985,
    1000,  1003,  1005,   930,  1010,  1008,  1001,  1004,   384,   384,
     808,   143,  1144,   134,   917,   918,  1329,  1813,   191,   412,
    1799,  1800,  1425,  1369,   691,   483,   688,  1690,   228,  1623,
    1638,  1407,   701,  1144,  1458,  1063,  1827,  1071,   808,   812,
    1078,  1077,     6,   125,   371,   377,   377,  1131,   988,   997,
     150,   996,   999,   246,   154,  1322,   154,   963,   810,   607,
    1322,   931,  1009,  1007,   911,  1807,   134,   963,  1672,  1802,
     680,    48,  1626,  1405,   171,  1408,  1074,   608,   130,   633,
     991,   993,  1322,   930,   154,   976,   230,   982,   292,   810,
    1012,  1011,   124,   929,   932,  1002,  1670,  1002,   916,   963,
    1639,   231,  1630,   702,  1158,  1158,   994,   993,   999,   998,
      54,   979,  1668,   574,  1322,   143,    95,   172,   935,   961,
    1668,   154,   963,   810,  1808,   372,   807,  1632,  1638,  1322,
     154,   574,   812,   930,  1013,   930,   215,   812,  1111,    86,
     105,   810,   963,   278,   481,  1631,   808,   811,  1633,  1634,
    1655,   500,  1635,  1409,  1410,  1412,   995,    54,   930,  1668,
     983,   154,   154,   194,  1668,  1144,   194,   194,  1672,   808,
     812,  1636,  1637,  1655,  1411,  1413,   574,   150,   151,   984,
     454,   635,   933,   125,   962,   938,   939,  1457,   934,  1634,
     812,  1505,   377,   930,   930,   980,   520,   522,   936,   937,
     938,   941,  1329,  1668,  1322,  1296,  1637,  1511,   812,   963,
     196,   937
};

  /* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   818,   819,   819,   819,   819,   819,   819,   820,   821,
     820,   820,   822,   822,   823,   823,   824,   824,   824,   824,
     824,   824,   824,   824,   824,   824,   824,   824,   824,   824,
     824,   824,   824,   824,   824,   824,   824,   824,   824,   824,
     824,   824,   824,   824,   824,   824,   824,   824,   824,   824,
     824,   824,   824,   824,   824,   824,   824,   824,   824,   824,
     824,   824,   824,   824,   824,   824,   824,   824,   824,   824,
     824,   824,   824,   824,   824,   824,   824,   824,   824,   824,
     824,   824,   824,   824,   824,   824,   824,   824,   824,   824,
     824,   824,   824,   824,   824,   824,   824,   824,   824,   824,
     824,   824,   824,   824,   824,   824,   824,   824,   824,   824,
     824,   824,   824,   824,   824,   824,   824,   824,   824,   824,
     824,   824,   824,   824,   824,   824,   824,   824,   824,   824,
     824,   824,   824,   824,   824,   824,   824,   824,   824,   824,
     824,   824,   824,   824,   824,   824,   824,   824,   824,   824,
     824,   825,   826,   826,   827,   828,   828,   830,   829,   831,
     831,   832,   832,   833,   835,   834,   836,   836,   838,   837,
     839,   837,   840,   840,   841,   841,   841,   841,   841,   841,
     841,   842,   842,   843,   843,   844,   845,   845,   846,   846,
     847,   847,   848,   848,   849,   850,   850,   851,   851,   852,
     853,   853,   854,   854,   855,   855,   856,   856,   857,   857,
     858,   858,   859,   859,   860,   860,   861,   861,   862,   862,
     863,   863,   864,   864,   865,   865,   866,   866,   867,   867,
     868,   868,   869,   869,   870,   870,   871,   871,   872,   872,
     873,   873,   874,   874,   875,   875,   876,   876,   877,   877,
     878,   878,   879,   879,   879,   879,   879,   879,   879,   879,
     879,   879,   879,   879,   879,   879,   879,   879,   879,   879,
     879,   879,   879,   879,   879,   879,   879,   879,   879,   879,
     879,   879,   879,   879,   879,   879,   880,   880,   880,   881,
     882,   882,   883,   883,   883,   884,   884,   884,   885,   885,
     886,   886,   887,   887,   888,   888,   888,   888,   889,   889,
     890,   890,   890,   890,   891,   892,   894,   893,   893,   893,
     893,   893,   893,   893,   895,   895,   896,   896,   896,   896,
     896,   897,   897,   898,   898,   898,   899,   899,   900,   900,
     900,   900,   900,   900,   900,   902,   901,   904,   903,   903,
     905,   905,   905,   905,   906,   906,   907,   907,   908,   908,
     909,   909,   910,   910,   912,   911,   913,   913,   913,   913,
     913,   913,   913,   913,   913,   913,   913,   913,   913,   914,
     914,   915,   915,   916,   916,   917,   917,   917,   917,   917,
     917,   917,   918,   918,   918,   919,   919,   920,   921,   921,
     922,   922,   923,   923,   924,   925,   925,   926,   926,   927,
     928,   928,   928,   928,   929,   929,   930,   930,   931,   931,
     932,   932,   933,   932,   934,   932,   935,   935,   936,   936,
     937,   938,   938,   939,   940,   940,   941,   941,   941,   941,
     941,   942,   943,   943,   944,   944,   945,   945,   946,   946,
     947,   947,   947,   948,   948,   948,   948,   948,   948,   948,
     948,   948,   948,   948,   948,   949,   950,   951,   951,   951,
     952,   952,   953,   953,   954,   955,   955,   956,   956,   957,
     958,   958,   959,   960,   960,   960,   960,   960,   960,   960,
     960,   960,   960,   960,   960,   960,   961,   961,   962,   962,
     963,   963,   963,   963,   963,   963,   963,   963,   963,   963,
     963,   963,   963,   965,   964,   967,   966,   969,   968,   971,
     970,   972,   973,   974,   976,   975,   977,   978,   978,   978,
     979,   979,   981,   982,   983,   980,   984,   984,   984,   985,
     985,   987,   988,   986,   990,   989,   991,   991,   992,   992,
     994,   995,   993,   997,   998,   996,   999,   999,  1001,  1000,
    1002,  1002,  1004,  1003,  1006,  1005,  1008,  1007,  1009,  1010,
    1011,  1009,  1012,  1013,  1009,  1014,  1014,  1015,  1015,  1015,
    1016,  1016,  1017,  1017,  1018,  1018,  1019,  1019,  1020,  1020,
    1020,  1020,  1020,  1020,  1020,  1020,  1020,  1020,  1020,  1021,
    1021,  1022,  1022,  1023,  1023,  1023,  1023,  1023,  1023,  1023,
    1024,  1024,  1025,  1025,  1026,  1027,  1027,  1028,  1028,  1029,
    1029,  1029,  1029,  1029,  1029,  1029,  1030,  1030,  1031,  1031,
    1032,  1032,  1032,  1033,  1034,  1034,  1035,  1036,  1037,  1038,
    1039,  1040,  1041,  1042,  1043,  1044,  1045,  1046,  1047,  1047,
    1048,  1049,  1050,  1050,  1051,  1051,  1052,  1052,  1053,  1053,
    1053,  1054,  1054,  1055,  1056,  1056,  1056,  1056,  1056,  1056,
    1057,  1057,  1058,  1058,  1059,  1059,  1060,  1060,  1060,  1061,
    1061,  1062,  1062,  1063,  1063,  1064,  1064,  1065,  1065,  1066,
    1067,  1067,  1067,  1068,  1068,  1069,  1069,  1070,  1070,  1072,
    1071,  1073,  1073,  1074,  1074,  1075,  1075,  1076,  1076,  1077,
    1078,  1078,  1079,  1079,  1080,  1080,  1080,  1080,  1080,  1080,
    1080,  1080,  1081,  1081,  1082,  1082,  1083,  1083,  1084,  1084,
    1085,  1085,  1085,  1086,  1086,  1087,  1087,  1088,  1088,  1089,
    1089,  1090,  1090,  1090,  1090,  1090,  1090,  1090,  1090,  1090,
    1090,  1090,  1090,  1090,  1090,  1090,  1090,  1090,  1090,  1090,
    1090,  1090,  1090,  1090,  1090,  1090,  1090,  1090,  1090,  1090,
    1090,  1090,  1090,  1090,  1090,  1090,  1091,  1091,  1092,  1093,
    1094,  1095,  1095,  1095,  1095,  1095,  1095,  1096,  1096,  1096,
    1097,  1097,  1097,  1097,  1098,  1098,  1099,  1099,  1100,  1101,
    1101,  1102,  1102,  1102,  1102,  1102,  1102,  1103,  1104,  1104,
    1105,  1105,  1106,  1106,  1107,  1108,  1108,  1109,  1109,  1110,
    1110,  1110,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,
    1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,
    1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,
    1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1111,  1112,
    1112,  1112,  1112,  1112,  1112,  1112,  1112,  1113,  1113,  1114,
    1114,  1115,  1115,  1115,  1115,  1115,  1116,  1116,  1116,  1116,
    1116,  1117,  1117,  1118,  1118,  1119,  1119,  1119,  1119,  1120,
    1120,  1121,  1121,  1121,  1122,  1123,  1123,  1124,  1124,  1124,
    1125,  1125,  1126,  1126,  1127,  1127,  1127,  1128,  1128,  1128,
    1128,  1129,  1129,  1130,  1130,  1131,  1131,  1132,  1132,  1133,
    1133,  1133,  1133,  1133,  1133,  1133,  1133,  1133,  1133,  1133,
    1133,  1133,  1133,  1133,  1133,  1133,  1133,  1133,  1133,  1133,
    1134,  1134,  1134,  1135,  1135,  1135,  1136,  1137,  1137,  1138,
    1138,  1139,  1139,  1140,  1140,  1141,  1141,  1142,  1142,  1143,
    1143,  1144,  1144,  1145,  1145,  1146,  1146,  1146,  1147,  1147,
    1147,  1148,  1148,  1148,  1148,  1148,  1148,  1148,  1149,  1149,
    1151,  1150,  1152,  1152,  1153,  1154,  1154,  1155,  1155,  1156,
    1156,  1156,  1156,  1157,  1157,  1157,  1157,  1157,  1158,  1158,
    1158,  1158,  1158,  1159,  1159,  1160,  1160,  1161,  1161,  1162,
    1162,  1162,  1163,  1163,  1164,  1164,  1165,  1165,  1166,  1166,
    1167,  1167,  1168,  1168,  1169,  1170,  1170,  1171,  1171,  1172,
    1172,  1173,  1173,  1173,  1173,  1173,  1174,  1174,  1174,  1175,
    1175,  1176,  1176,  1177,  1177,  1178,  1178,  1178,  1179,  1179,
    1180,  1180,  1181,  1181,  1182,  1182,  1183,  1183,  1184,  1184,
    1185,  1185,  1187,  1186,  1189,  1188,  1191,  1190,  1193,  1192,
    1194,  1192,  1196,  1195,  1197,  1198,  1198,  1198,  1198,  1199,
    1200,  1201,  1201,  1201,  1201,  1201,  1201,  1201,  1201,  1201,
    1202,  1202,  1203,  1204,  1205,  1205,  1205,  1206,  1206,  1207,
    1207,  1208,  1208,  1208,  1208,  1208,  1208,  1208,  1208,  1208,
    1208,  1208,  1208,  1208,  1208,  1208,  1208,  1209,  1209,  1210,
    1210,  1211,  1211,  1211,  1211,  1212,  1213,  1213,  1213,  1213,
    1214,  1214,  1215,  1215,  1216,  1216,  1217,  1217,  1218,  1218,
    1219,  1219,  1220,  1220,  1220,  1220,  1221,  1221,  1221,  1221,
    1221,  1221,  1221,  1221,  1221,  1221,  1221,  1221,  1221,  1221,
    1221,  1221,  1221,  1221,  1221,  1221,  1222,  1222,  1223,  1223,
    1224,  1224,  1225,  1225,  1225,  1225,  1225,  1226,  1226,  1227,
    1227,  1227,  1227,  1227,  1227,  1227,  1227,  1227,  1227,  1227,
    1227,  1227,  1227,  1227,  1227,  1227,  1227,  1227,  1227,  1227,
    1227,  1227,  1227,  1227,  1227,  1227,  1228,  1228,  1228,  1229,
    1229,  1229,  1229,  1229,  1230,  1231,  1231,  1232,  1233,  1233,
    1234,  1234,  1235,  1235,  1236,  1236,  1236,  1237,  1237,  1237,
    1238,  1238,  1238,  1238,  1239,  1239,  1240,  1241,  1241,  1242,
    1242,  1243,  1243,  1243,  1244,  1245,  1246,  1247,  1247,  1248,
    1250,  1251,  1249,  1252,  1253,  1253,  1254,  1254,  1255,  1255,
    1255,  1256,  1256,  1257,  1257,  1258,  1258,  1259,  1259,  1260,
    1260,  1261,  1261,  1262,  1262,  1263,  1263,  1264,  1264,  1264,
    1264,  1264,  1265,  1266,  1266,  1266,  1267,  1268,  1268,  1269,
    1269,  1270,  1270,  1270,  1271,  1272,  1272,  1273,  1273,  1273,
    1274,  1275,  1276,  1276,  1277,  1277,  1278,  1278,  1278,  1278,
    1278,  1278,  1279,  1280,  1280,  1280,  1282,  1281,  1281,  1283,
    1283,  1284,  1284,  1285,  1286,  1286,  1287,  1287,  1288,  1289,
    1289,  1290,  1290,  1291,  1291,  1292,  1293,  1294,  1294,  1295,
    1295,  1296,  1296,  1296,  1296,  1297,  1297,  1297,  1297,  1297,
    1298,  1298,  1298,  1298,  1298,  1298,  1298,  1299,  1299,  1299,
    1299,  1299,  1300,  1300,  1300,  1301,  1301,  1301,  1302,  1302,
    1303,  1303,  1304,  1305,  1305,  1306,  1306,  1307,  1308,  1309,
    1309,  1310,  1310,  1311,  1311,  1312,  1312,  1313,  1313,  1313,
    1314,  1314,  1315,  1316,  1316,  1317,  1317,  1318,  1318,  1318,
    1319,  1319,  1320,  1320,  1320,  1320,  1320,  1321,  1321,  1322,
    1322,  1322,  1322,  1322,  1322,  1322,  1322,  1322,  1322,  1322,
    1323,  1323,  1323,  1323,  1323,  1324,  1324,  1324,  1324,  1324,
    1324,  1324,  1324,  1324,  1324,  1324,  1324,  1324,  1324,  1324,
    1324,  1324,  1325,  1325,  1326,  1326,  1326,  1326,  1326,  1326,
    1326,  1326,  1326,  1326,  1326,  1326,  1326,  1326,  1326,  1327,
    1327,  1328,  1328,  1329,  1329,  1330,  1330,  1331,  1331,  1331,
    1331,  1331,  1331,  1331,  1332,  1332,  1333,  1333,  1333,  1333,
    1333,  1333,  1333,  1333,  1333,  1333,  1333,  1333,  1333,  1333,
    1333,  1333,  1333,  1333,  1333,  1333,  1333,  1333,  1333,  1333,
    1333,  1333,  1333,  1333,  1333,  1333,  1333,  1333,  1333,  1333,
    1333,  1333,  1334,  1334,  1335,  1335,  1335,  1335,  1335,  1335,
    1335,  1335,  1335,  1335,  1335,  1335,  1335,  1335,  1335,  1335,
    1335,  1335,  1335,  1335,  1335,  1335,  1335,  1335,  1335,  1335,
    1335,  1335,  1336,  1336,  1336,  1336,  1336,  1336,  1336,  1336,
    1336,  1336,  1336,  1336,  1336,  1336,  1336,  1336,  1336,  1336,
    1336,  1336,  1336,  1336,  1337,  1337,  1338,  1338,  1338,  1338,
    1338,  1338,  1338,  1338,  1338,  1338,  1338,  1338,  1338,  1338,
    1338,  1338,  1338,  1338,  1338,  1338,  1338,  1338,  1338,  1339,
    1339,  1339,  1339,  1339,  1339,  1339,  1340,  1340,  1341,  1341,
    1342,  1342,  1343,  1343,  1344,  1344,  1345,  1345,  1346,  1347,
    1347,  1348,  1348,  1348,  1348,  1348,  1348,  1348,  1348,  1348,
    1348,  1348,  1348,  1348,  1348,  1348,  1348,  1348,  1348,  1348,
    1348,  1348,  1348,  1348,  1349,  1349,  1349,  1349,  1349,  1349,
    1349,  1349,  1349,  1349,  1349,  1350,  1350,  1351,  1351,  1352,
    1352,  1352,  1353,  1353,  1354,  1354,  1354,  1355,  1355,  1355,
    1356,  1356,  1357,  1358,  1358,  1359,  1360,  1361,  1362,  1362,
    1363,  1363,  1364,  1364,  1365,  1365,  1366,  1366,  1367,  1367,
    1367,  1367,  1367,  1368,  1369,  1369,  1369,  1369,  1369,  1370,
    1370,  1370,  1370,  1370,  1371,  1371,  1371,  1372,  1373,  1374,
    1374,  1375,  1375,  1376,  1376,  1377,  1377,  1378,  1378,  1379,
    1380,  1380,  1380,  1380,  1380,  1380,  1380,  1380,  1380,  1380,
    1380,  1380,  1380,  1380,  1380,  1380,  1380,  1380,  1380,  1380,
    1380,  1380,  1381,  1381,  1382,  1382,  1383,  1383,  1384,  1384,
    1385,  1385,  1386,  1386,  1387,  1387,  1388,  1388,  1388,  1389,
    1389,  1390,  1390,  1390,  1390,  1390,  1390,  1391,  1391,  1391,
    1392,  1392,  1392,  1392,  1393,  1393,  1394,  1394,  1395,  1395,
    1396,  1396,  1397,  1398,  1398,  1398,  1398,  1398,  1398,  1399,
    1399,  1400,  1400,  1401,  1402,  1402,  1403,  1403,  1404,  1405,
    1406,  1406,  1407,  1407,  1407,  1408,  1408,  1409,  1409,  1409,
    1409,  1410,  1410,  1411,  1412,  1413,  1413,  1413,  1414,  1414,
    1414,  1414,  1415,  1415,  1416,  1416,  1417,  1417,  1418,  1418,
    1419,  1420,  1420,  1421,  1421,  1422,  1422,  1423,  1424,  1424,
    1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,
    1425,  1425,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,
    1426,  1427,  1427,  1427,  1427,  1428,  1428,  1429,  1429,  1430,
    1430,  1431,  1431,  1432,  1433,  1433,  1434,  1434,  1435,  1435,
    1436,  1437,  1437,  1438,  1438,  1439,  1439,  1440,  1440,  1441,
    1442,  1442,  1443,  1443,  1444,  1444,  1445,  1445,  1446,  1447,
    1447,  1448,  1449,  1449,  1450,  1450,  1451,  1451,  1452,  1452,
    1453,  1454,  1454,  1454,  1455,  1455,  1455,  1455,  1455,  1456,
    1456,  1457,  1457,  1457,  1457,  1457,  1457,  1458,  1458,  1458,
    1458,  1458,  1459,  1459,  1459,  1459,  1459,  1460,  1460,  1460,
    1460,  1460,  1461,  1462,  1462,  1463,  1463,  1464,  1464,  1465,
    1466,  1466,  1466,  1467,  1468,  1469,  1470,  1471,  1471,  1472,
    1473,  1474,  1475,  1476,  1477,  1478,  1479,  1480,  1481,  1482,
    1483,  1484,  1484,  1485,  1485,  1486,  1486,  1487,  1487,  1488,
    1488,  1489,  1489,  1490,  1490,  1491,  1491,  1492,  1492,  1492,
    1493,  1493,  1493,  1494,  1494,  1494,  1494,  1495,  1495,  1496,
    1496,  1497,  1497,  1497,  1498,  1498,  1498,  1499,  1499,  1500,
    1501,  1501,  1501,  1502,  1502,  1503,  1503,  1504,  1504,  1505,
    1505,  1506,  1506,  1507,  1508,  1509,  1509,  1510,  1510,  1511,
    1511,  1512,  1512,  1513,  1513,  1514,  1515,  1515,  1516,  1516,
    1517,  1518,  1518,  1519,  1519,  1519,  1520,  1520,  1521,  1521,
    1522,  1522,  1522,  1523,  1524,  1524,  1525,  1525,  1526,  1526,
    1527,  1527,  1527,  1527,  1527,  1527,  1527,  1527,  1527,  1528,
    1528,  1529,  1530,  1531,  1532,  1533,  1534,  1535,  1536,  1537,
    1538,  1539,  1540,  1541,  1541,  1542,  1543,  1544,  1545,  1546,
    1547,  1548,  1549,  1550,  1551,  1552,  1553,  1554,  1555,  1556,
    1557,  1558,  1558,  1558,  1559,  1560,  1561,  1562,  1563,  1564,
    1565,  1566,  1567,  1568,  1569,  1570,  1571,  1572,  1573,  1573,
    1574,  1574,  1575,  1575,  1576,  1576,  1577,  1577,  1578,  1578,
    1579,  1579,  1579,  1579,  1580,  1580,  1581,  1581,  1582,  1582,
    1583,  1583,  1583,  1584,  1585,  1586,  1586,  1586,  1586,  1586,
    1586,  1587,  1587,  1588,  1588,  1589,  1589,  1590,  1590,  1590,
    1592,  1591,  1594,  1593,  1593,  1595,  1595,  1596,  1595,  1597,
    1597,  1598,  1598,  1598,  1598,  1598,  1598,  1598,  1598,  1598,
    1598,  1598,  1598,  1599,  1599,  1601,  1600,  1600,  1602,  1602,
    1603,  1603,  1605,  1604,  1606,  1604,  1607,  1604,  1608,  1608,
    1609,  1609,  1611,  1610,  1612,  1613,  1613,  1614,  1615,  1615,
    1615,  1616,  1617,  1618,  1618,  1619,  1619,  1620,  1620,  1620,
    1621,  1621,  1622,  1622,  1623,  1623,  1624,  1624,  1625,  1625,
    1625,  1625,  1626,  1626,  1627,  1627,  1628,  1628,  1629,  1629,
    1630,  1630,  1631,  1631,  1632,  1632,  1632,  1633,  1633,  1634,
    1634,  1635,  1635,  1636,  1636,  1637,  1638,  1638,  1638,  1638,
    1639,  1639,  1639,  1640,  1641,  1641,  1641,  1642,  1642,  1643,
    1644,  1644,  1644,  1644,  1644,  1644,  1644,  1644,  1644,  1645,
    1645,  1646,  1646,  1646,  1647,  1647,  1647,  1648,  1648,  1648,
    1649,  1649,  1650,  1650,  1651,  1651,  1652,  1653,  1654,  1654,
    1655,  1655,  1656,  1656,  1657,  1657,  1658,  1658,  1659,  1659,
    1660,  1661,  1662,  1663,  1664,  1665,  1666,  1666,  1667,  1668,
    1668,  1669,  1669,  1670,  1670,  1671,  1671,  1672,  1672,  1672,
    1673,  1673,  1673,  1674,  1674,  1675,  1675,  1676,  1676,  1677,
    1678,  1678,  1678,  1678,  1678,  1679,  1679,  1679,  1680,  1680,
    1680,  1680,  1680,  1680,  1680,  1680,  1680,  1680,  1680,  1680,
    1680,  1680,  1680,  1680,  1680,  1680,  1680,  1680,  1680,  1680,
    1680,  1680,  1680,  1680,  1680,  1680,  1680,  1680,  1680,  1680,
    1680,  1680,  1680,  1681,  1681,  1681,  1682,  1682,  1682,  1682,
    1682,  1682,  1682,  1682,  1682,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1684,
    1684,  1684,  1685,  1685,  1685,  1685,  1686,  1686,  1686,  1686,
    1686,  1687,  1688,  1688,  1688,  1688,  1688,  1688,  1688,  1689,
    1689,  1689,  1689,  1689,  1689,  1689,  1690,  1690,  1691,  1691,
    1692,  1692,  1693,  1694,  1694,  1695,  1695,  1696,  1696,  1697,
    1697,  1698,  1698,  1698,  1698,  1698,  1699,  1699,  1699,  1699,
    1700,  1700,  1700,  1700,  1701,  1701,  1701,  1701,  1701,  1701,
    1702,  1703,  1703,  1703,  1703,  1703,  1703,  1703,  1704,  1704,
    1704,  1705,  1705,  1706,  1706,  1707,  1708,  1708,  1709,  1710,
    1710,  1711,  1711,  1712,  1712,  1712,  1712,  1713,  1713,  1713,
    1713,  1713,  1713,  1713,  1715,  1714,  1714,  1716,  1716,  1717,
    1717,  1718,  1719,  1719,  1719,  1719,  1721,  1720,  1720,  1722,
    1723,  1724,  1725,  1725,  1725,  1725,  1725,  1725,  1725,  1725,
    1726,  1726,  1726,  1726,  1726,  1727,  1727,  1728,  1728,  1728,
    1728,  1729,  1729,  1729,  1729,  1729,  1730,  1730,  1731,  1730,
    1730,  1730,  1732,  1732,  1733,  1732,  1732,  1734,  1734,  1734,
    1734,  1735,  1735,  1736,  1736,  1737,  1737,  1737,  1737,  1737,
    1737,  1737,  1737,  1737,  1737,  1737,  1737,  1737,  1737,  1737,
    1737,  1737,  1737,  1737,  1737,  1737,  1737,  1737,  1737,  1737,
    1737,  1737,  1737,  1737,  1737,  1737,  1737,  1737,  1737,  1738,
    1738,  1739,  1739,  1740,  1740,  1741,  1741,  1741,  1742,  1742,
    1742,  1742,  1742,  1743,  1743,  1744,  1744,  1745,  1745,  1746,
    1746,  1747,  1747,  1747,  1748,  1748,  1748,  1749,  1749,  1749,
    1750,  1750,  1750,  1750,  1750,  1750,  1751,  1752,  1753,  1754,
    1755,  1756,  1757,  1757,  1757,  1758,  1758,  1758,  1758,  1758,
    1758,  1758,  1758,  1758,  1758,  1758,  1758,  1758,  1758,  1758,
    1758,  1759,  1760,  1760,  1761,  1761,  1762,  1762,  1763,  1763,
    1764,  1764,  1764,  1764,  1764,  1765,  1765,  1766,  1766,  1767,
    1767,  1767,  1767,  1767,  1768,  1768,  1770,  1769,  1771,  1771,
    1772,  1772,  1772,  1773,  1773,  1773,  1774,  1774,  1775,  1776,
    1776,  1777,  1778,  1779,  1779,  1779,  1780,  1781,  1782,  1783,
    1783,  1783,  1783,  1783,  1783,  1783,  1783,  1784,  1785,  1785,
    1785,  1786,  1786,  1786,  1786,  1786,  1787,  1787,  1787,  1787,
    1787,  1787,  1788,  1788,  1789,  1790,  1791,  1791,  1791,  1792,
    1793,  1793,  1793,  1794,  1794,  1794,  1796,  1795,  1797,  1798,
    1798,  1798,  1798,  1799,  1799,  1800,  1800,  1802,  1801,  1803,
    1803,  1805,  1806,  1807,  1808,  1804,  1810,  1811,  1812,  1813,
    1809,  1814,  1814,  1814,  1814,  1814,  1814,  1815,  1815,  1816,
    1816,  1816,  1817,  1817,  1818,  1818,  1818,  1819,  1819,  1820,
    1820,  1820,  1821,  1821,  1822,  1822,  1823,  1823,  1824,  1825,
    1825,  1826,  1826,  1827,  1827,  1827,  1828,  1828,  1829,  1829,
    1830,  1830,  1831,  1831,  1832,  1832,  1833,  1833,  1834,  1834,
    1834,  1835,  1835,  1836
};

  /* YYR2[YYN] -- Number of symbols on the right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     3,     3,     6,     3,     3,     1,     0,
       4,     2,     0,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     3,     1,     1,     4,     1,     2,     0,     4,     0,
       2,     3,     1,     2,     0,     3,     1,     2,     0,     6,
       0,     6,     1,     3,     3,     3,     3,     3,     3,     3,
       3,     2,     3,     1,     3,     1,     2,     3,     5,     7,
       2,     3,     1,     3,     3,     2,     3,     1,     3,     1,
       1,     3,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     5,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     1,     0,     1,     3,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     3,     3,     3,     3,     0,     3,
       9,     6,     7,     9,     4,    10,     0,     6,     2,     9,
       7,     6,     7,    11,     8,     7,     0,     3,     3,     6,
       3,     0,     3,    12,    11,    11,     1,     3,     2,     2,
       2,     2,     2,     2,     2,     0,    12,     0,     6,     2,
       0,     1,     3,     1,     0,     2,     0,     2,     0,     1,
       3,     4,     0,     2,     0,     2,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     3,
       1,     0,     2,     0,     2,     2,     2,     2,     2,     3,
       3,     1,     1,     1,     2,     3,     3,     3,     0,     3,
       0,     1,     3,     1,     3,     0,     1,     3,     1,     4,
       0,     1,     1,     1,     0,     3,     2,     3,     0,     3,
       5,     5,     0,     7,     0,     6,     1,     1,     1,     3,
       1,     1,     1,     3,     0,     1,     1,     1,     1,     2,
       1,     3,     1,     1,     0,     1,     0,     2,     3,     5,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     4,     0,     1,     1,
       1,     3,     1,     3,     3,     1,     2,     1,     1,     1,
       1,     3,     3,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     3,     0,     2,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     0,     5,     0,     2,     0,     3,     0,
       2,     2,     2,     2,     0,     6,     2,     0,     2,     1,
       1,     3,     0,     0,     0,     7,     0,     2,     2,     1,
       1,     0,     0,     8,     0,     6,     1,     2,     1,     2,
       0,     0,     6,     0,     0,     6,     0,     2,     0,     5,
       0,     1,     0,     5,     0,     2,     0,     5,     4,     0,
       0,     8,     0,     0,     8,     1,     1,     1,     1,     1,
       0,     2,     0,     4,     0,     1,     1,     3,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     0,
       1,     1,     3,     1,     1,     1,     1,     1,     1,     1,
       0,     1,     1,     3,     1,     0,     1,     1,     3,     1,
       1,     1,     1,     1,     1,     1,     0,     1,     1,     3,
       1,     1,     1,     2,     1,     1,     2,     3,     1,     3,
       3,     3,     3,     3,     3,     3,     4,     3,     1,     1,
       3,     3,     1,     1,     2,     1,     2,     1,     0,     2,
       1,     2,     1,     6,     6,     5,     4,     5,     4,     5,
       0,     1,     0,     3,     0,     2,     0,     8,     9,     0,
       1,     1,     3,     0,     2,     0,     3,     1,     3,     5,
       0,     4,     3,     1,     1,     1,     3,     1,     3,     0,
       4,     1,     3,     1,     1,     0,     3,     1,     3,     3,
       0,     1,     2,     1,     3,     4,     3,     3,     3,     4,
       4,     3,     1,     2,     1,     4,     0,     1,     1,     2,
       1,     1,     1,     0,     3,     1,     2,     1,     3,     0,
       1,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     5,     1,     1,     3,     4,     4,     3,     2,     2,
       3,     3,     2,     3,     3,     1,     1,     1,     4,     4,
       4,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     1,     1,     3,     0,
       1,     6,     7,     7,     7,     8,     3,     4,     0,     2,
       0,     1,     0,     1,     2,     2,     9,     0,     2,     0,
       1,     1,     3,     3,     3,     1,     2,     1,     1,     3,
       2,     3,     2,     2,     1,     3,     3,     2,     3,     1,
       2,     2,     2,     1,     2,     1,     1,     1,     2,     3,
       2,     3,     2,     2,     5,     5,     2,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     2,     2,
       1,     2,     1,     2,     3,     2,     1,     1,     1,     1,
       1,     1,     2,     0,     1,     1,     1,     1,     1,     0,
       1,     0,     1,     1,     5,     0,     3,     0,     2,     3,
       0,     1,     2,     1,     1,     1,     1,     3,     3,     3,
       3,     0,     1,     0,     1,     0,     1,     2,     1,     1,
       2,     2,     2,     4,     3,     1,     3,     2,     1,     2,
       2,     2,     2,     2,     2,     2,     1,     3,     3,     1,
       1,     1,     1,     1,     1,     1,     2,     1,     1,     2,
       1,     1,     1,     0,     2,     1,     1,     1,     1,     1,
       1,     0,     2,     0,     1,     1,     2,     2,     1,     2,
       2,     0,     1,     1,     1,     3,     1,     3,     0,     1,
       0,     4,     0,     1,     5,     0,     3,     3,     1,     0,
       2,     2,     2,     0,     3,     3,     6,     6,     1,     1,
       2,     2,     2,     2,     2,     1,     1,     0,     1,     1,
       1,     1,     0,     1,     0,     1,     1,     2,     1,     3,
       0,     1,     1,     2,     1,     0,     1,     1,     2,     1,
       1,     3,     2,     1,     3,     3,     1,     3,     3,     0,
       1,     2,     2,     1,     1,     1,     1,     1,     3,     1,
       2,     5,     3,     1,     1,     4,     0,     1,     1,     3,
       4,     4,     0,     5,     0,     5,     0,     5,     0,     5,
       0,     4,     0,    10,     7,     6,     6,     6,     4,     7,
       7,     6,     5,     5,     5,     5,     5,     5,     3,     3,
       0,     2,     8,     3,     0,     2,     2,     0,     1,     1,
       2,     2,     2,     2,     5,     3,     3,     3,     3,     5,
       4,     3,     4,     4,     2,     2,     2,     0,     2,     2,
       1,     2,     2,     2,     2,     3,     0,     3,     1,     4,
       0,     3,     0,     2,     0,     1,     1,     2,     1,     3,
       1,     2,     0,     1,     1,     3,     2,     2,     3,     6,
       5,     3,     4,     4,     4,     4,     5,     4,     3,     3,
       8,     7,     4,     4,     1,     1,     0,     1,     2,     2,
       1,     1,     1,     3,     3,     1,     3,     1,     3,     6,
       5,     2,     6,     5,     4,     4,     3,     3,     3,     3,
       2,     2,     6,     8,     5,     5,     4,     4,     4,     3,
       5,     5,     5,     5,     1,     3,     1,     1,     1,     0,
       1,     1,     2,     2,     3,     1,     1,     3,     1,     1,
       0,     1,     0,     1,     0,     1,     1,     0,     2,     1,
       0,     1,     1,     1,     2,     2,     2,     0,     1,     1,
       3,     1,     1,     1,     3,     3,     3,     1,     1,     4,
       0,     0,    11,     3,     0,     1,     1,     3,     3,     2,
       2,     0,     3,     0,     3,     0,     3,     0,     3,     0,
       1,     1,     3,     1,     1,     0,     2,     1,     3,     3,
       3,     1,     4,     0,     1,     1,     5,     0,     1,     1,
       2,     1,     1,     1,     5,     0,     3,     0,     5,     4,
       2,     4,     0,     1,     1,     2,     1,     1,     1,     1,
       1,     2,     4,     0,     1,     1,     0,     4,     3,     3,
       5,     1,     3,     3,     5,     7,     1,     3,     2,     1,
       1,     8,     5,     1,     3,     3,     4,     0,     4,     0,
       2,     1,     2,     1,     1,     3,     2,     3,     3,     2,
       3,     4,     3,     4,     2,     3,     2,     1,     4,     4,
       4,     4,     3,     3,     4,     1,     1,     1,     9,     8,
       0,     1,     2,     1,     1,     1,     3,     2,     2,     0,
       1,     2,     1,     1,     1,     2,     1,     3,     4,     4,
       1,     1,     2,     0,     1,     2,     1,     3,     1,     1,
       1,     2,     0,     2,     2,     1,     1,     0,     2,     3,
       3,     3,     2,     3,     4,     3,     4,     3,     4,     1,
       3,     4,     3,     4,     1,     3,     4,     5,     7,     6,
       8,     6,     5,     6,     4,     3,     5,     4,     6,     3,
       4,     1,     1,     0,     3,     3,     3,     3,     3,     3,
       5,     5,     3,     3,     3,     3,     3,     3,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     3,     1,     1,     1,     1,     1,     1,     3,     2,
       2,     2,     2,     1,     3,     5,     6,     2,     4,     7,
       2,     7,     9,    12,     5,     6,     6,     4,     4,     5,
       3,     3,     0,     1,     4,     6,     2,     4,     4,     4,
      10,     6,     8,     8,     6,     4,     4,     6,     4,     4,
       4,     6,     4,     7,     7,     7,     6,     6,     6,     6,
       3,     4,     6,     8,     2,     2,     8,     8,     6,     6,
       1,     6,     6,     8,     8,     6,     8,     6,     2,     8,
       8,     2,     2,     2,     0,     2,     4,     4,     4,     4,
       3,     8,     6,     8,     4,     6,     4,     6,     8,     4,
       3,     6,     4,     6,     4,     7,     7,    10,     1,     4,
       4,     4,     4,     4,     6,     4,     4,     6,     2,     3,
       0,     4,     0,     3,     0,     1,     1,     3,     2,     1,
       1,     5,     6,     5,     5,     5,     7,     5,     6,     5,
       6,     5,     6,     5,     6,     5,     6,     5,     5,     5,
       5,     5,     6,     8,     4,     4,     4,     4,     4,     5,
       7,     7,     6,     6,     9,     0,     3,     1,     1,     1,
       1,     2,     0,     2,     0,     2,     2,     0,     2,     2,
       0,     1,     2,     1,     1,     1,     3,     4,     0,     1,
       0,     3,     0,     3,     0,     3,     1,     1,     2,     2,
       2,     4,     2,     4,     1,     2,     2,     2,     4,     0,
       3,     2,     2,     3,     1,     1,     1,     4,     4,     2,
       4,     0,     1,     0,     2,     0,     3,     3,     1,     2,
       2,     3,     2,     1,     2,     1,     2,     1,     1,     2,
       2,     2,     1,     1,     2,     1,     1,     1,     1,     1,
       1,     1,     0,     1,     1,     3,     1,     3,     1,     3,
       0,     1,     0,     2,     4,     5,     1,     1,     4,     1,
       1,     5,     7,     5,     7,     3,     3,     3,     4,     4,
       1,     2,     2,     1,     3,     3,     0,     1,     0,     1,
       0,     1,     4,     1,     1,     1,     1,     1,     1,     3,
       5,     3,     3,     4,     3,     3,     3,     4,     8,     4,
       1,     3,     3,     7,     4,     0,     1,     0,     1,     1,
       2,     1,     2,     3,     3,     1,     1,     2,     0,     2,
       3,     3,     1,     1,     6,     6,     1,     2,     0,     1,
       1,     0,     1,     1,     1,     1,     3,     1,     1,     3,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     0,     1,     0,     2,     0,
       1,     0,     1,     2,     0,     2,     2,     3,     3,     1,
       4,     0,     3,     1,     3,     0,     2,     1,     3,     3,
       0,     4,     3,     1,     0,     1,     3,     1,     2,     0,
       1,     3,     3,     1,     0,     1,     1,     1,     0,     1,
       2,     1,     3,     3,     1,     1,     1,     1,     1,     0,
       2,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     1,     2,     1,     2,
       5,     2,     1,     2,     6,     6,     4,     6,     4,     5,
       4,     4,     5,     4,     4,     4,     5,     5,     4,     6,
       4,     1,     3,     1,     3,     0,     2,     0,     3,     0,
       1,     0,     1,     1,     3,     1,     1,     9,    10,     8,
       6,     7,     6,     0,     1,     1,     1,     1,     1,     0,
       1,     1,     3,     4,     1,     3,     4,     3,     1,     2,
       1,     2,     1,     1,     1,     3,     1,     3,     1,     1,
       1,     0,     1,     3,     4,     0,     1,     3,     1,     1,
       1,     0,     3,     0,     5,    10,     0,     1,     3,     1,
       3,     0,     1,    10,     7,     8,     0,     2,     0,     2,
       1,     1,     1,     3,     0,     1,     0,     1,     1,     3,
       1,     1,     2,     2,     2,     1,     1,     1,     1,     0,
       3,     3,     5,     5,     4,     5,     5,     2,     4,     4,
       4,     7,     3,     3,     2,     6,     7,     7,     3,     6,
       6,     3,     3,     2,     5,     4,     3,     4,     3,     3,
       2,     2,     4,     6,     5,     4,     4,     3,     4,     4,
       4,     4,     4,     4,     4,     4,     4,     4,     1,     1,
       1,     1,     0,     1,     0,     2,     0,     1,     0,     1,
       0,     1,     1,     2,     1,     1,     0,     2,     0,     2,
       0,     2,     1,     3,     3,     1,     1,     1,     1,     1,
       3,     1,     1,     0,     3,     2,     1,     0,     1,     1,
       0,     4,     0,     4,     1,     0,     3,     0,     3,     3,
       1,     2,     2,     2,     2,     2,     3,     1,     1,     1,
       1,     1,     1,     0,     1,     0,     3,     3,     3,     1,
       0,     2,     0,     4,     0,     4,     0,     3,     0,     1,
       0,     2,     0,     3,     3,     2,     2,     3,     0,     1,
       1,     2,    18,     1,     1,     0,     1,     0,     1,     1,
       0,     1,     1,     1,     0,     2,     2,     1,     3,     4,
       3,     3,     0,     2,     2,     1,     3,     3,     0,     4,
       0,     3,     1,     1,     0,     3,     2,     3,     1,     1,
       2,     0,     2,     3,     1,     3,     1,     1,     2,     2,
       1,     1,     1,     1,     1,     2,     2,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     2,     2,     1,
       1,     1,     1,     1,     1,     1,     1,     2,     2,     2,
       0,     1,     1,     1,     3,     5,     2,     1,     1,     1,
       1,     1,     3,     5,     1,     3,     2,     4,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     3,     1,     2,     1,     3,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     2,     2,     2,     2,     5,     5,     7,     7,     3,
       3,     3,     6,     6,     6,     4,     0,     2,     4,     6,
       1,     3,     1,     2,     2,     0,     2,     1,     3,     2,
       1,     1,     1,     1,     1,     1,     0,     1,     1,     1,
       0,     2,     2,     2,     0,     2,     2,     2,     2,     2,
       3,     3,     4,     6,     2,     3,     3,     2,     1,     3,
       3,     1,     3,     2,     2,     1,     0,     2,     3,     0,
       2,     2,     2,     2,     2,     2,     1,     1,     1,     1,
       1,     1,     1,     1,     0,     4,     4,     1,     1,     1,
       3,     3,     1,     1,     2,     2,     0,     3,     2,     1,
       1,     3,     4,     2,     6,     5,     9,     3,     3,     2,
       4,     3,     6,     7,    10,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     6,     9,     0,    11,
      10,     8,     5,     9,     0,    11,     7,     0,     1,     1,
       1,     0,     1,     1,     3,     2,     3,     2,     2,     2,
       2,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     2,     2,     1,     3,     2,     2,     2,     2,
       2,     2,     2,     2,     1,     1,     2,     2,     2,     0,
       3,     0,     1,     3,     1,     2,     2,     2,     1,     3,
       3,     1,     3,     1,     3,     1,     3,     0,     3,     0,
       3,     3,     2,     7,     3,     3,     2,     0,     2,     4,
       1,     1,     1,     1,     1,     1,     3,     4,     3,     5,
       5,     6,     3,     3,     3,     5,     5,     3,     3,     5,
       2,     3,     3,     3,     2,     4,     7,     4,     7,     3,
       5,     2,     1,     3,     1,     3,     0,     3,     1,     3,
       0,     2,     2,     2,     2,     0,     3,     0,     3,     0,
       3,     4,     3,     3,     0,     3,     0,     3,     0,     1,
       0,     3,     2,     0,     1,     2,     0,     1,     4,     4,
       5,     2,     3,     0,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     0,     3,     3,
       4,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     0,     3,     1,     2,     1,     2,
       3,     3,     3,     0,     3,     3,     0,     7,     2,     0,
       3,     4,     4,     1,     1,     0,     2,     0,    13,     8,
       7,     0,     0,     0,     0,    15,     0,     0,     0,     0,
      12,     4,     4,     3,     4,     3,     3,     0,     2,     1,
       3,     5,     1,     1,     0,     1,     1,     0,     2,     0,
       1,     3,     5,     3,     3,     3,     1,     3,     4,     6,
      10,     1,     5,     0,     2,     3,     1,     1,     0,     3,
       1,     3,     1,     3,     1,     2,     0,     3,     0,     1,
       1,     0,     1,     1
};


#define yyerrok         (yyerrstatus = 0)
#define yyclearin       (yychar = YYEMPTY)
#define YYEMPTY         (-2)
#define YYEOF           0

#define YYACCEPT        goto yyacceptlab
#define YYABORT         goto yyabortlab
#define YYERROR         goto yyerrorlab


#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)                                  \
do                                                              \
  if (yychar == YYEMPTY)                                        \
    {                                                           \
      yychar = (Token);                                         \
      yylval = (Value);                                         \
      YYPOPSTACK (yylen);                                       \
      yystate = *yyssp;                                         \
      goto yybackup;                                            \
    }                                                           \
  else                                                          \
    {                                                           \
      yyerror (&yylloc, YYTHD, parse_tree, YY_("syntax error: cannot back up")); \
      YYERROR;                                                  \
    }                                                           \
while (0)

/* Error token number */
#define YYTERROR        1
#define YYERRCODE       256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)                                \
    do                                                                  \
      if (N)                                                            \
        {                                                               \
          (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;        \
          (Current).first_column = YYRHSLOC (Rhs, 1).first_column;      \
          (Current).last_line    = YYRHSLOC (Rhs, N).last_line;         \
          (Current).last_column  = YYRHSLOC (Rhs, N).last_column;       \
        }                                                               \
      else                                                              \
        {                                                               \
          (Current).first_line   = (Current).last_line   =              \
            YYRHSLOC (Rhs, 0).last_line;                                \
          (Current).first_column = (Current).last_column =              \
            YYRHSLOC (Rhs, 0).last_column;                              \
        }                                                               \
    while (0)
#endif

#define YYRHSLOC(Rhs, K) ((Rhs)[K])


/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)                        \
do {                                            \
  if (yydebug)                                  \
    YYFPRINTF Args;                             \
} while (0)


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL

/* Print *YYLOCP on YYO.  Private, do not rely on its existence. */

YY_ATTRIBUTE_UNUSED
static unsigned
yy_location_print_ (FILE *yyo, YYLTYPE const * const yylocp)
{
  unsigned res = 0;
  int end_col = 0 != yylocp->last_column ? yylocp->last_column - 1 : 0;
  if (0 <= yylocp->first_line)
    {
      res += YYFPRINTF (yyo, "%d", yylocp->first_line);
      if (0 <= yylocp->first_column)
        res += YYFPRINTF (yyo, ".%d", yylocp->first_column);
    }
  if (0 <= yylocp->last_line)
    {
      if (yylocp->first_line < yylocp->last_line)
        {
          res += YYFPRINTF (yyo, "-%d", yylocp->last_line);
          if (0 <= end_col)
            res += YYFPRINTF (yyo, ".%d", end_col);
        }
      else if (0 <= end_col && yylocp->first_column < end_col)
        res += YYFPRINTF (yyo, "-%d", end_col);
    }
  return res;
 }

#  define YY_LOCATION_PRINT(File, Loc)          \
  yy_location_print_ (File, &(Loc))

# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


# define YY_SYMBOL_PRINT(Title, Type, Value, Location)                    \
do {                                                                      \
  if (yydebug)                                                            \
    {                                                                     \
      YYFPRINTF (stderr, "%s ", Title);                                   \
      yy_symbol_print (stderr,                                            \
                  Type, Value, Location, YYTHD, parse_tree); \
      YYFPRINTF (stderr, "\n");                                           \
    }                                                                     \
} while (0)


/*----------------------------------------.
| Print this symbol's value on YYOUTPUT.  |
`----------------------------------------*/

static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  FILE *yyo = yyoutput;
  YYUSE (yyo);
  YYUSE (yylocationp);
  YYUSE (YYTHD);
  YYUSE (parse_tree);
  if (!yyvaluep)
    return;
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# endif
  YYUSE (yytype);
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  YYFPRINTF (yyoutput, "%s %s (",
             yytype < YYNTOKENS ? "token" : "nterm", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, YYTHD, parse_tree);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

static void
yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
{
  YYFPRINTF (stderr, "Stack now");
  for (; yybottom <= yytop; yybottom++)
    {
      int yybot = *yybottom;
      YYFPRINTF (stderr, " %d", yybot);
    }
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)                            \
do {                                                            \
  if (yydebug)                                                  \
    yy_stack_print ((Bottom), (Top));                           \
} while (0)


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

static void
yy_reduce_print (yytype_int16 *yyssp, YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  unsigned long int yylno = yyrline[yyrule];
  int yynrhs = yyr2[yyrule];
  int yyi;
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
             yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr,
                       yystos[yyssp[yyi + 1 - yynrhs]],
                       &(yyvsp[(yyi + 1) - (yynrhs)])
                       , &(yylsp[(yyi + 1) - (yynrhs)])                       , YYTHD, parse_tree);
      YYFPRINTF (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)          \
do {                                    \
  if (yydebug)                          \
    yy_reduce_print (yyssp, yyvsp, yylsp, Rule, YYTHD, parse_tree); \
} while (0)

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif


#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
static YYSIZE_T
yystrlen (const char *yystr)
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
static char *
yystpcpy (char *yydest, const char *yysrc)
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
        switch (*++yyp)
          {
          case '\'':
          case ',':
            goto do_not_strip_quotes;

          case '\\':
            if (*++yyp != '\\')
              goto do_not_strip_quotes;
            /* Fall through.  */
          default:
            if (yyres)
              yyres[yyn] = *yyp;
            yyn++;
            break;

          case '"':
            if (yyres)
              yyres[yyn] = '\0';
            return yyn;
          }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
   about the unexpected token YYTOKEN for the state stack whose top is
   YYSSP.

   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
   not large enough to hold the message.  In that case, also set
   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
   required number of bytes is too large to store.  */
static int
yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
                yytype_int16 *yyssp, int yytoken)
{
  YYSIZE_T yysize0 = yytnamerr (YY_NULLPTR, yytname[yytoken]);
  YYSIZE_T yysize = yysize0;
  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
  /* Internationalized format string. */
  const char *yyformat = YY_NULLPTR;
  /* Arguments of yyformat. */
  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
  /* Number of reported tokens (one for the "unexpected", one per
     "expected"). */
  int yycount = 0;

  /* There are many possibilities here to consider:
     - If this state is a consistent state with a default action, then
       the only way this function was invoked is if the default action
       is an error action.  In that case, don't check for expected
       tokens because there are none.
     - The only way there can be no lookahead present (in yychar) is if
       this state is a consistent state with a default action.  Thus,
       detecting the absence of a lookahead is sufficient to determine
       that there is no unexpected or expected token to report.  In that
       case, just report a simple "syntax error".
     - Don't assume there isn't a lookahead just because this state is a
       consistent state with a default action.  There might have been a
       previous inconsistent state, consistent state with a non-default
       action, or user semantic action that manipulated yychar.
     - Of course, the expected token list depends on states to have
       correct lookahead information, and it depends on the parser not
       to perform extra reductions after fetching a lookahead from the
       scanner and before detecting a syntax error.  Thus, state merging
       (from LALR or IELR) and default reductions corrupt the expected
       token list.  However, the list is correct for canonical LR with
       one exception: it will still contain any token that will not be
       accepted due to an error action in a later state.
  */
  if (yytoken != YYEMPTY)
    {
      int yyn = yypact[*yyssp];
      yyarg[yycount++] = yytname[yytoken];
      if (!yypact_value_is_default (yyn))
        {
          /* Start YYX at -YYN if negative to avoid negative indexes in
             YYCHECK.  In other words, skip the first -YYN actions for
             this state because they are default actions.  */
          int yyxbegin = yyn < 0 ? -yyn : 0;
          /* Stay within bounds of both yycheck and yytname.  */
          int yychecklim = YYLAST - yyn + 1;
          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
          int yyx;

          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
                && !yytable_value_is_error (yytable[yyx + yyn]))
              {
                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
                  {
                    yycount = 1;
                    yysize = yysize0;
                    break;
                  }
                yyarg[yycount++] = yytname[yyx];
                {
                  YYSIZE_T yysize1 = yysize + yytnamerr (YY_NULLPTR, yytname[yyx]);
                  if (! (yysize <= yysize1
                         && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
                    return 2;
                  yysize = yysize1;
                }
              }
        }
    }

  switch (yycount)
    {
# define YYCASE_(N, S)                      \
      case N:                               \
        yyformat = S;                       \
      break
      YYCASE_(0, YY_("syntax error"));
      YYCASE_(1, YY_("syntax error, unexpected %s"));
      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
# undef YYCASE_
    }

  {
    YYSIZE_T yysize1 = yysize + yystrlen (yyformat);
    if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
      return 2;
    yysize = yysize1;
  }

  if (*yymsg_alloc < yysize)
    {
      *yymsg_alloc = 2 * yysize;
      if (! (yysize <= *yymsg_alloc
             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
      return 1;
    }

  /* Avoid sprintf, as that infringes on the user's name space.
     Don't have undefined behavior even if the translation
     produced a string with the wrong number of "%s"s.  */
  {
    char *yyp = *yymsg;
    int yyi = 0;
    while ((*yyp = *yyformat) != '\0')
      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
        {
          yyp += yytnamerr (yyp, yyarg[yyi++]);
          yyformat += 2;
        }
      else
        {
          yyp++;
          yyformat++;
        }
  }
  return 0;
}
#endif /* YYERROR_VERBOSE */

/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (YYTHD);
  YYUSE (parse_tree);
  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  YYUSE (yytype);
  YY_IGNORE_MAYBE_UNINITIALIZED_END
}




/*----------.
| yyparse.  |
`----------*/

int
yyparse (class THD *YYTHD, class Parse_tree_root **parse_tree)
{
/* The lookahead symbol.  */
int yychar;


/* The semantic value of the lookahead symbol.  */
/* Default value used for initialization, for pacifying older GCCs
   or non-GCC compilers.  */
YY_INITIAL_VALUE (static YYSTYPE yyval_default;)
YYSTYPE yylval YY_INITIAL_VALUE (= yyval_default);

/* Location data for the lookahead symbol.  */
static YYLTYPE yyloc_default
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
  = { 1, 1, 1, 1 }
# endif
;
YYLTYPE yylloc = yyloc_default;

    /* Number of syntax errors so far.  */
    int yynerrs;

    int yystate;
    /* Number of tokens to shift before error messages enabled.  */
    int yyerrstatus;

    /* The stacks and their tools:
       'yyss': related to states.
       'yyvs': related to semantic values.
       'yyls': related to locations.

       Refer to the stacks through separate pointers, to allow yyoverflow
       to reallocate them elsewhere.  */

    /* The state stack.  */
    yytype_int16 yyssa[YYINITDEPTH];
    yytype_int16 *yyss;
    yytype_int16 *yyssp;

    /* The semantic value stack.  */
    YYSTYPE yyvsa[YYINITDEPTH];
    YYSTYPE *yyvs;
    YYSTYPE *yyvsp;

    /* The location stack.  */
    YYLTYPE yylsa[YYINITDEPTH];
    YYLTYPE *yyls;
    YYLTYPE *yylsp;

    /* The locations where the error started and ended.  */
    YYLTYPE yyerror_range[3];

    YYSIZE_T yystacksize;

  int yyn;
  int yyresult;
  /* Lookahead token as an internal (translated) token number.  */
  int yytoken = 0;
  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  yyssp = yyss = yyssa;
  yyvsp = yyvs = yyvsa;
  yylsp = yyls = yylsa;
  yystacksize = YYINITDEPTH;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY; /* Cause a token to be read.  */
  yylsp[0] = yylloc;
  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
        /* Give user a chance to reallocate the stack.  Use copies of
           these so that the &'s don't force the real ones into
           memory.  */
        YYSTYPE *yyvs1 = yyvs;
        yytype_int16 *yyss1 = yyss;
        YYLTYPE *yyls1 = yyls;

        /* Each stack pointer address is followed by the size of the
           data in use in that stack, in bytes.  This used to be a
           conditional around just the two extra args, but that might
           be undefined if yyoverflow is a macro.  */
        yyoverflow (YY_("memory exhausted"),
                    &yyss1, yysize * sizeof (*yyssp),
                    &yyvs1, yysize * sizeof (*yyvsp),
                    &yyls1, yysize * sizeof (*yylsp),
                    &yystacksize);

        yyls = yyls1;
        yyss = yyss1;
        yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
        goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
        yystacksize = YYMAXDEPTH;

      {
        yytype_int16 *yyss1 = yyss;
        union yyalloc *yyptr =
          (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
        if (! yyptr)
          goto yyexhaustedlab;
        YYSTACK_RELOCATE (yyss_alloc, yyss);
        YYSTACK_RELOCATE (yyvs_alloc, yyvs);
        YYSTACK_RELOCATE (yyls_alloc, yyls);
#  undef YYSTACK_RELOCATE
        if (yyss1 != yyssa)
          YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
                  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
        YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  if (yystate == YYFINAL)
    YYACCEPT;

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     lookahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to lookahead token.  */
  yyn = yypact[yystate];
  if (yypact_value_is_default (yyn))
    goto yydefault;

  /* Not known => get a lookahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = yylex (&yylval, &yylloc, YYTHD);
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yytable_value_is_error (yyn))
        goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the lookahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token.  */
  yychar = YYEMPTY;

  yystate = yyn;
  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     '$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 3:
#line 2183 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[-1].item), &(yyvsp[-1].item));
            static_cast<Expression_parser_state *>(YYP)->result= (yyvsp[-1].item);
          }
#line 24863 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 4:
#line 2188 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              We enter here when translating partition info string into
              partition_info data structure.
            */
            CONTEXTUALIZE((yyvsp[-1].partition_clause));
            static_cast<Partition_expr_parser_state *>(YYP)->result=
              &(yyvsp[-1].partition_clause)->part_info;
          }
#line 24877 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 5:
#line 2198 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              We enter here when translating generated column info string into
              partition_info data structure.
            */

            // Check gcol expression for the "PARSE_GCOL_EXPR" prefix:
            if (!is_identifier((yyvsp[-4].lexer.lex_str), "PARSE_GCOL_EXPR"))
              MYSQL_YYABORT;

            auto gcol_info= NEW_PTN Value_generator;
            if (gcol_info == NULL)
              MYSQL_YYABORT; // OOM
            ITEMIZE((yyvsp[-2].item), &(yyvsp[-2].item));
            gcol_info->expr_item= (yyvsp[-2].item);
            static_cast<Gcol_expr_parser_state *>(YYP)->result= gcol_info;
          }
#line 24899 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 6:
#line 2216 "sql_yacc.yy" /* yacc.c:1646  */
    {
            static_cast<Common_table_expr_parser_state *>(YYP)->result= (yyvsp[-1].subquery);
          }
#line 24907 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 7:
#line 2220 "sql_yacc.yy" /* yacc.c:1646  */
    {
           ITEMIZE((yyvsp[-1].item), &(yyvsp[-1].item));
           static_cast<Derived_expr_parser_state *>(YYP)->result= (yyvsp[-1].item);
         }
#line 24916 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 8:
#line 2228 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            if (!thd->is_bootstrap_system_thread() &&
                !thd->m_parser_state->has_comment())
            {
              my_error(ER_EMPTY_QUERY, MYF(0));
              MYSQL_YYABORT;
            }
            thd->lex->sql_command= SQLCOM_EMPTY_QUERY;
            YYLIP->found_semicolon= NULL;
          }
#line 24932 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 9:
#line 2240 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex_input_stream *lip = YYLIP;

            if (YYTHD->get_protocol()->has_client_capability(CLIENT_MULTI_QUERIES) &&
                lip->multi_statements &&
                ! lip->eof())
            {
              /*
                We found a well formed query, and multi queries are allowed:
                - force the parser to stop after the ';'
                - mark the start of the next query for the next invocation
                  of the parser.
              */
              lip->next_state= MY_LEX_END;
              lip->found_semicolon= lip->get_ptr();
            }
            else
            {
              /* Single query, terminated. */
              lip->found_semicolon= NULL;
            }
          }
#line 24959 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 11:
#line 2265 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Single query, not terminated. */
            YYLIP->found_semicolon= NULL;
          }
#line 24968 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 14:
#line 2277 "sql_yacc.yy" /* yacc.c:1646  */
    { *parse_tree= (yyvsp[0].top_level_node); }
#line 24974 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 16:
#line 2283 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24980 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 17:
#line 2284 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24986 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 18:
#line 2285 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24992 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 20:
#line 2287 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 24998 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 21:
#line 2288 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25004 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 23:
#line 2290 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25010 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 24:
#line 2291 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25016 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 25:
#line 2292 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25022 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 27:
#line 2294 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25028 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 28:
#line 2295 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25034 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 30:
#line 2297 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25040 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 32:
#line 2299 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25046 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 34:
#line 2301 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25052 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 35:
#line 2302 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25058 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 36:
#line 2303 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25064 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 37:
#line 2304 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25070 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 43:
#line 2310 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25076 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 47:
#line 2314 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25082 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 48:
#line 2315 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25088 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 49:
#line 2316 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25094 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 51:
#line 2318 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25100 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 52:
#line 2319 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25106 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 55:
#line 2322 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25112 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 57:
#line 2324 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25118 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 58:
#line 2325 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25124 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 59:
#line 2326 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25130 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 60:
#line 2327 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25136 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 61:
#line 2328 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25142 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 62:
#line 2329 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25148 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 63:
#line 2330 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25154 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 65:
#line 2332 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25160 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 66:
#line 2333 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25166 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 67:
#line 2334 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25172 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 68:
#line 2335 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25178 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 70:
#line 2337 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25184 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 71:
#line 2338 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25190 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 73:
#line 2340 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25196 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 74:
#line 2341 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25202 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 76:
#line 2343 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25208 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 80:
#line 2347 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25214 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 81:
#line 2348 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25220 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 82:
#line 2349 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25226 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 83:
#line 2350 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25232 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 86:
#line 2353 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25238 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 87:
#line 2354 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25244 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 89:
#line 2356 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25250 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 90:
#line 2357 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25256 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 91:
#line 2358 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25262 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 93:
#line 2360 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; CONTEXTUALIZE((yyvsp[0].set)); }
#line 25268 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 141:
#line 2408 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25274 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 142:
#line 2409 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25280 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 143:
#line 2410 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25286 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 144:
#line 2411 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25292 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 146:
#line 2413 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25298 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 147:
#line 2414 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25304 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 149:
#line 2416 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25310 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 150:
#line 2417 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 25316 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 151:
#line 2422 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_DEALLOCATE_PREPARE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[0].lexer.lex_str));
          }
#line 25327 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 154:
#line 2437 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_PREPARE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[-2].lexer.lex_str));
            /*
              We don't know know at this time whether there's a password
              in prepare_src, so we err on the side of caution.  Setting
              the flag will force a rewrite which will obscure all of
              prepare_src in the "Query" log line.  We'll see the actual
              query (with just the passwords obscured, if any) immediately
              afterwards in the "Prepare" log lines anyway, and then again
              in the "Execute" log line if and when prepare_src is executed.
            */
            lex->contains_plaintext_password= true;
          }
#line 25348 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 155:
#line 2457 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[0].lexer.lex_str);
            lex->prepared_stmt_code_is_varref= false;
          }
#line 25359 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 156:
#line 2464 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[0].lexer.lex_str);
            lex->prepared_stmt_code_is_varref= true;
          }
#line 25370 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 157:
#line 2474 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_EXECUTE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[0].lexer.lex_str));
          }
#line 25381 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 158:
#line 2481 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25387 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 163:
#line 2496 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            LEX_STRING *lexstr= (LEX_STRING*)sql_memdup(&(yyvsp[0].lexer.lex_str), sizeof(LEX_STRING));
            if (!lexstr || lex->prepared_stmt_params.push_back(lexstr))
              MYSQL_YYABORT;
          }
#line 25398 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 164:
#line 2508 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HELP");
              MYSQL_YYABORT;
            }
          }
#line 25410 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 165:
#line 2516 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_HELP;
            lex->help_arg= (yyvsp[0].lexer.lex_str).str;
          }
#line 25420 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 166:
#line 2527 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "CHANGE MASTER",
                                        "CHANGE REPLICATION SOURCE");
          }
#line 25429 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 168:
#line 2536 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            lex->sql_command = SQLCOM_CHANGE_MASTER;
            /*
              Clear LEX_MASTER_INFO struct. repl_ignore_server_ids is cleared
              in THD::cleanup_after_query. So it is guaranteed to be empty here.
            */
            assert(Lex->mi.repl_ignore_server_ids.empty());
            lex->mi.set_unspecified();
          }
#line 25444 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 169:
#line 2547 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->set_channel_name((yyvsp[0].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
#line 25453 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 170:
#line 2552 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            assert(!lex->m_sql_cmd);
            lex->sql_command = SQLCOM_CHANGE_REPLICATION_FILTER;
            lex->m_sql_cmd= NEW_PTN Sql_cmd_change_repl_filter();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 25467 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 171:
#line 2562 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->set_channel_name((yyvsp[0].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
#line 25476 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 174:
#line 2574 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_DO_DB);
          }
#line 25487 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 175:
#line 2581 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_IGNORE_DB);
          }
#line 25498 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 176:
#line 2588 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd);
           filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_DO_TABLE);
          }
#line 25509 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 177:
#line 2595 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_IGNORE_TABLE);
          }
#line 25520 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 178:
#line 2602 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_WILD_DO_TABLE);
          }
#line 25531 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 179:
#line 2609 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list),
                                             OPT_REPLICATE_WILD_IGNORE_TABLE);
          }
#line 25543 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 180:
#line 2617 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            assert(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_REWRITE_DB);
          }
#line 25554 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 181:
#line 2626 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 25564 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 182:
#line 2632 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 25572 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 183:
#line 2639 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 25583 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 184:
#line 2646 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 25592 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 185:
#line 2654 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item *db_item= NEW_PTN Item_string((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                               thd->charset());
            (yyval.item)= db_item;
          }
#line 25603 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 186:
#line 2663 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 25613 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 187:
#line 2669 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 25621 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 188:
#line 2675 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[-3].item));
            (yyval.item_list)->push_back((yyvsp[-1].item));
          }
#line 25633 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 189:
#line 2683 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-6].item_list)->push_back((yyvsp[-3].item));
            (yyvsp[-6].item_list)->push_back((yyvsp[-1].item));
            (yyval.item_list)= (yyvsp[-6].item_list);
          }
#line 25643 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 190:
#line 2691 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 25653 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 191:
#line 2697 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 25661 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 192:
#line 2704 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 25672 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 193:
#line 2711 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 25681 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 194:
#line 2719 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item_string *table_item= NEW_PTN Item_string((yyvsp[-2].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).length,
                                                         thd->charset());
            table_item->append(thd->strmake(".", 1), 1);
            table_item->append((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            (yyval.item)= table_item;
          }
#line 25694 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 195:
#line 2731 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 25704 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 196:
#line 2737 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 25712 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 197:
#line 2744 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 25723 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 198:
#line 2751 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 25732 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 199:
#line 2759 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item *string_item= NEW_PTN Item_string((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                                   thd->charset());
            (yyval.item)= string_item;
          }
#line 25743 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 202:
#line 2774 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_AUTO_POSITION",
                                        "SOURCE_AUTO_POSITION");

          }
#line 25753 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 204:
#line 2784 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_HOST",
                                        "SOURCE_HOST");
          }
#line 25762 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 206:
#line 2793 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_BIND",
                                        "SOURCE_BIND");

          }
#line 25772 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 208:
#line 2803 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_USER",
                                        "SOURCE_USER");
          }
#line 25781 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 210:
#line 2812 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_PASSWORD",
                                        "SOURCE_PASSWORD");
          }
#line 25790 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 212:
#line 2821 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_PORT",
                                        "SOURCE_PORT");
          }
#line 25799 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 214:
#line 2830 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_CONNECT_RETRY",
                                        "SOURCE_CONNECT_RETRY");
          }
#line 25808 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 216:
#line 2839 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_RETRY_COUNT",
                                        "SOURCE_RETRY_COUNT");
          }
#line 25817 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 218:
#line 2848 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_DELAY",
                                        "SOURCE_DELAY");
          }
#line 25826 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 220:
#line 2857 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL",
                                        "SOURCE_SSL");
          }
#line 25835 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 222:
#line 2866 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_CA",
                                        "SOURCE_SSL_CA");
          }
#line 25844 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 224:
#line 2875 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_CAPATH",
                                        "SOURCE_SSL_CAPATH");
          }
#line 25853 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 226:
#line 2884 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_CIPHER",
                                        "SOURCE_SSL_CIPHER");
          }
#line 25862 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 228:
#line 2893 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_CRL",
                                        "SOURCE_SSL_CRL");
          }
#line 25871 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 230:
#line 2902 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_CRLPATH",
                                        "SOURCE_SSL_CRLPATH");
          }
#line 25880 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 232:
#line 2911 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_KEY",
                                        "SOURCE_SSL_KEY");
          }
#line 25889 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 234:
#line 2920 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_VERIFY_SERVER_CERT",
                                        "SOURCE_SSL_VERIFY_SERVER_CERT");
          }
#line 25898 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 236:
#line 2929 "sql_yacc.yy" /* yacc.c:1646  */
    {
             push_deprecated_warn(YYTHD, "MASTER_TLS_VERSION",
                                         "SOURCE_TLS_VERSION");
          }
#line 25907 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 238:
#line 2938 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_TLS_CIPHERSUITES",
                                        "SOURCE_TLS_CIPHERSUITES");
          }
#line 25916 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 240:
#line 2947 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_SSL_CERT",
                                        "SOURCE_SSL_CERT");
          }
#line 25925 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 242:
#line 2956 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_PUBLIC_KEY_PATH",
                                        "SOURCE_PUBLIC_KEY_PATH");
          }
#line 25934 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 244:
#line 2965 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "GET_MASTER_PUBLIC_KEY",
                                        "GET_SOURCE_PUBLIC_KEY");
          }
#line 25943 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 246:
#line 2974 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_HEARTBEAT_PERIOD",
                                        "SOURCE_HEARTBEAT_PERIOD");
          }
#line 25952 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 248:
#line 2983 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_COMPRESSION_ALGORITHM",
                                        "SOURCE_COMPRESSION_ALGORITHM");
          }
#line 25961 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 250:
#line 2992 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_ZSTD_COMPRESSION_LEVEL",
                                        "SOURCE_ZSTD_COMPRESSION_LEVEL");
          }
#line 25970 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 252:
#line 3001 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.host = (yyvsp[0].lexer.lex_str).str;
          }
#line 25978 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 253:
#line 3005 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.network_namespace = (yyvsp[0].lexer.lex_str).str;
          }
#line 25986 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 254:
#line 3009 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.bind_addr = (yyvsp[0].lexer.lex_str).str;
          }
#line 25994 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 255:
#line 3013 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.user = (yyvsp[0].lexer.lex_str).str;
          }
#line 26002 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 256:
#line 3017 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.password = (yyvsp[0].lexer.lex_str).str;
            if (strlen((yyvsp[0].lexer.lex_str).str) > 32)
            {
              my_error(ER_CHANGE_MASTER_PASSWORD_LENGTH, MYF(0));
              MYSQL_YYABORT;
            }
            Lex->contains_plaintext_password= true;
          }
#line 26016 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 257:
#line 3027 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.port = (yyvsp[0].ulong_num);
          }
#line 26024 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 258:
#line 3031 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.connect_retry = (yyvsp[0].ulong_num);
          }
#line 26032 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 259:
#line 3035 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.retry_count= (yyvsp[0].ulong_num);
            Lex->mi.retry_count_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 26041 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 260:
#line 3040 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) > MASTER_DELAY_MAX)
            {
              const char *msg= YYTHD->strmake((yylsp[0]).cpp.start, (yylsp[0]).cpp.end - (yylsp[0]).cpp.start);
              my_error(ER_MASTER_DELAY_VALUE_OUT_OF_RANGE, MYF(0),
                       msg, MASTER_DELAY_MAX);
            }
            else
              Lex->mi.sql_delay = (yyvsp[0].ulong_num);
          }
#line 26056 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 261:
#line 3051 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 26065 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 262:
#line 3056 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_ca= (yyvsp[0].lexer.lex_str).str;
          }
#line 26073 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 263:
#line 3060 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_capath= (yyvsp[0].lexer.lex_str).str;
          }
#line 26081 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 264:
#line 3064 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.tls_version= (yyvsp[0].lexer.lex_str).str;
          }
#line 26089 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 266:
#line 3069 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_cert= (yyvsp[0].lexer.lex_str).str;
          }
#line 26097 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 267:
#line 3073 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_cipher= (yyvsp[0].lexer.lex_str).str;
          }
#line 26105 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 268:
#line 3077 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_key= (yyvsp[0].lexer.lex_str).str;
          }
#line 26113 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 269:
#line 3081 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_verify_server_cert= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 26122 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 270:
#line 3086 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_crl= (yyvsp[0].lexer.lex_str).str;
          }
#line 26130 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 271:
#line 3090 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_crlpath= (yyvsp[0].lexer.lex_str).str;
          }
#line 26138 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 272:
#line 3094 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.public_key_path= (yyvsp[0].lexer.lex_str).str;
          }
#line 26146 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 273:
#line 3098 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.get_public_key= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE :
              LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 26156 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 274:
#line 3104 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *num= (yyvsp[0].item_num);
            ITEMIZE(num, &num);

            Lex->mi.heartbeat_period= (float) num->val_real();
            if (Lex->mi.heartbeat_period > SLAVE_MAX_HEARTBEAT_PERIOD ||
                Lex->mi.heartbeat_period < 0.0)
            {
               const char format[]= "%d";
               char buf[4*sizeof(SLAVE_MAX_HEARTBEAT_PERIOD) + sizeof(format)];
               sprintf(buf, format, SLAVE_MAX_HEARTBEAT_PERIOD);
               my_error(ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE, MYF(0), buf);
               MYSQL_YYABORT;
            }
            if (Lex->mi.heartbeat_period > replica_net_timeout)
            {
              push_warning(YYTHD, Sql_condition::SL_WARNING,
                           ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX,
                           ER_THD(YYTHD, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX));
            }
            if (Lex->mi.heartbeat_period < 0.001)
            {
              if (Lex->mi.heartbeat_period != 0.0)
              {
                push_warning(YYTHD, Sql_condition::SL_WARNING,
                             ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN,
                             ER_THD(YYTHD, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN));
                Lex->mi.heartbeat_period= 0.0;
              }
              Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_DISABLE;
            }
            Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 26194 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 275:
#line 3138 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_ignore_server_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
           }
#line 26202 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 276:
#line 3142 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.compression_algorithm = (yyvsp[0].lexer.lex_str).str;
           }
#line 26210 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 277:
#line 3146 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.zstd_compression_level = (yyvsp[0].ulong_num);
           }
#line 26218 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 278:
#line 3150 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.auto_position= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE :
              LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 26228 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 280:
#line 3157 "sql_yacc.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->mi.require_row_format =
                  LEX_MASTER_INFO::LEX_MI_DISABLE;
                break;
            case 1:
                Lex->mi.require_row_format =
                  LEX_MASTER_INFO::LEX_MI_ENABLE;
                break;
            default:
              const char* wrong_value = YYTHD->strmake((yylsp[0]).raw.start, (yylsp[0]).raw.length());
              my_error(ER_REQUIRE_ROW_FORMAT_INVALID_VALUE, MYF(0), wrong_value);
            }
          }
#line 26248 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 282:
#line 3174 "sql_yacc.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->mi.m_source_connection_auto_failover =
                  LEX_MASTER_INFO::LEX_MI_DISABLE;
                break;
            case 1:
                Lex->mi.m_source_connection_auto_failover =
                  LEX_MASTER_INFO::LEX_MI_ENABLE;
                break;
            default:
                YYTHD->syntax_error_at((yylsp[0]));
                MYSQL_YYABORT;
            }
          }
#line 26268 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 284:
#line 3191 "sql_yacc.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->mi.m_gtid_only =
                  LEX_MASTER_INFO::LEX_MI_DISABLE;
                break;
            case 1:
                Lex->mi.m_gtid_only =
                  LEX_MASTER_INFO::LEX_MI_ENABLE;
                break;
            default:
                YYTHD->syntax_error_at((yylsp[0]),
                  "You have an error in your CHANGE REPLICATION SOURCE syntax; GTID_ONLY only accepts values 0 or 1");
                MYSQL_YYABORT;
            }
          }
#line 26289 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 289:
#line 3218 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_ignore_server_ids.push_back((yyvsp[0].ulong_num));
          }
#line 26297 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 290:
#line 3224 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.privilege_checks_none= false;
            Lex->mi.privilege_checks_username= (yyvsp[0].lex_user)->user.str;
            Lex->mi.privilege_checks_hostname= (yyvsp[0].lex_user)->host.str;
          }
#line 26307 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 291:
#line 3230 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.privilege_checks_none= true;
            Lex->mi.privilege_checks_username= NULL;
            Lex->mi.privilege_checks_hostname= NULL;
          }
#line 26317 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 292:
#line 3239 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.require_table_primary_key_check= LEX_MASTER_INFO::LEX_MI_PK_CHECK_STREAM;
          }
#line 26325 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 293:
#line 3243 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.require_table_primary_key_check= LEX_MASTER_INFO::LEX_MI_PK_CHECK_ON;
          }
#line 26333 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 294:
#line 3247 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.require_table_primary_key_check= LEX_MASTER_INFO::LEX_MI_PK_CHECK_OFF;
          }
#line 26341 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 295:
#line 3254 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.assign_gtids_to_anonymous_transactions_type = LEX_MASTER_INFO::LEX_MI_ANONYMOUS_TO_GTID_OFF;
          }
#line 26349 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 296:
#line 3258 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.assign_gtids_to_anonymous_transactions_type = LEX_MASTER_INFO::LEX_MI_ANONYMOUS_TO_GTID_LOCAL;
          }
#line 26357 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 297:
#line 3262 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.assign_gtids_to_anonymous_transactions_type = LEX_MASTER_INFO::LEX_MI_ANONYMOUS_TO_GTID_UUID;
            Lex->mi.assign_gtids_to_anonymous_transactions_manual_uuid = (yyvsp[0].lexer.lex_str).str;
            if (!binary_log::Uuid::is_valid((yyvsp[0].lexer.lex_str).str, binary_log::Uuid::TEXT_LENGTH))
            {
              my_error(ER_WRONG_VALUE, MYF(0), "UUID", (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 26371 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 298:
#line 3276 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.tls_ciphersuites = LEX_MASTER_INFO::SPECIFIED_STRING;
            Lex->mi.tls_ciphersuites_string= (yyvsp[0].lexer.lex_str).str;
          }
#line 26380 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 299:
#line 3281 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.tls_ciphersuites = LEX_MASTER_INFO::SPECIFIED_NULL;
            Lex->mi.tls_ciphersuites_string = NULL;
          }
#line 26389 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 300:
#line 3289 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_LOG_FILE",
                                        "SOURCE_LOG_FILE");
          }
#line 26398 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 302:
#line 3298 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "MASTER_LOG_POS",
                                        "SOURCE_LOG_POS");
          }
#line 26407 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 304:
#line 3307 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.log_file_name = (yyvsp[0].lexer.lex_str).str;
          }
#line 26415 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 305:
#line 3311 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.pos = (yyvsp[0].ulonglong_number);
            /*
               If the user specified a value < BIN_LOG_HEADER_SIZE, adjust it
               instead of causing subsequent errors.
               We need to do it in this file, because only there we know that
               MASTER_LOG_POS has been explicitely specified. On the contrary
               in change_master() (sql_repl.cc) we cannot distinguish between 0
               (MASTER_LOG_POS explicitely specified as 0) and 0 (unspecified),
               whereas we want to distinguish (specified 0 means "read the binlog
               from 0" (4 in fact), unspecified means "don't change the position
               (keep the preceding value)").
            */
            Lex->mi.pos = max<ulonglong>(BIN_LOG_HEADER_SIZE, Lex->mi.pos);
          }
#line 26435 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 306:
#line 3327 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.relay_log_name = (yyvsp[0].lexer.lex_str).str;
          }
#line 26443 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 307:
#line 3331 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.relay_log_pos = (yyvsp[0].ulong_num);
            /* Adjust if < BIN_LOG_HEADER_SIZE (same comment as Lex->mi.pos) */
            Lex->mi.relay_log_pos = max<ulong>(BIN_LOG_HEADER_SIZE,
                                               Lex->mi.relay_log_pos);
          }
#line 26454 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 308:
#line 3341 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = {}; }
#line 26460 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 309:
#line 3343 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 26466 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 310:
#line 3349 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-7].is_not_empty), (yyvsp[-5].is_not_empty), (yyvsp[-4].table),
                                             (yyvsp[-2].table_element_list),
                                             (yyvsp[0].create_table_tail).opt_create_table_options,
                                             (yyvsp[0].create_table_tail).opt_partitioning,
                                             (yyvsp[0].create_table_tail).on_duplicate,
                                             (yyvsp[0].create_table_tail).opt_query_expression);
          }
#line 26479 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 311:
#line 3359 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-4].is_not_empty), (yyvsp[-2].is_not_empty), (yyvsp[-1].table),
                                             NULL,
                                             (yyvsp[0].create_table_tail).opt_create_table_options,
                                             (yyvsp[0].create_table_tail).opt_partitioning,
                                             (yyvsp[0].create_table_tail).on_duplicate,
                                             (yyvsp[0].create_table_tail).opt_query_expression);
          }
#line 26492 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 312:
#line 3369 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-5].is_not_empty), (yyvsp[-3].is_not_empty), (yyvsp[-2].table), (yyvsp[0].table));
          }
#line 26500 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 313:
#line 3374 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-7].is_not_empty), (yyvsp[-5].is_not_empty), (yyvsp[-4].table), (yyvsp[-1].table));
          }
#line 26508 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 314:
#line 3381 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_role(!!(yyvsp[-1].is_not_empty), (yyvsp[0].user_list));
          }
#line 26516 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 315:
#line 3391 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_resource_group(to_lex_cstring((yyvsp[-6].lexer.lex_str)), (yyvsp[-3].resource_group_type), (yyvsp[-2].resource_group_vcpu_list_type), (yyvsp[-1].resource_group_priority_type),
                                                 (yyvsp[0].resource_group_state_type).is_default ? true :
                                                 (yyvsp[0].resource_group_state_type).value);
          }
#line 26526 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 316:
#line 3400 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            Lex->create_info->default_table_charset= NULL;
            Lex->create_info->used_fields= 0;
          }
#line 26538 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 317:
#line 3408 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CREATE_DB;
            lex->name= (yyvsp[-2].lexer.lex_str);
            lex->create_info->options= (yyvsp[-3].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
          }
#line 26549 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 318:
#line 3415 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26555 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 319:
#line 3420 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CREATE_USER;
            lex->default_roles= (yyvsp[-4].user_list);
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            lex->create_info->options= (yyvsp[-6].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
          }
#line 26569 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 320:
#line 3431 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_logfile_group{CREATE_LOGFILE_GROUP,
                                                          (yyvsp[-3].lexer.lex_str), pc, (yyvsp[-1].lexer.lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 26592 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 321:
#line 3451 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_create_tablespace{(yyvsp[-3].lexer.lex_str), (yyvsp[-2].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 26614 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 322:
#line 3470 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_create_undo_tablespace{
              CREATE_UNDO_TABLESPACE, (yyvsp[-3].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; //OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 26637 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 323:
#line 3490 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CREATE_SERVER;
            if ((yyvsp[-8].lexer.lex_str).length == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "server name", "");
              MYSQL_YYABORT;
            }
            Lex->server_options.m_server_name= (yyvsp[-8].lexer.lex_str);
            Lex->server_options.set_scheme((yyvsp[-4].lexer.lex_str));
            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_create_server(&Lex->server_options);
          }
#line 26654 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 324:
#line 3507 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_srs((yyvsp[-1].ulonglong_number), *(yyvsp[0].sql_cmd_srs_attributes), true, false);
          }
#line 26662 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 325:
#line 3512 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_srs((yyvsp[-1].ulonglong_number), *(yyvsp[0].sql_cmd_srs_attributes), false, (yyvsp[-2].is_not_empty));
          }
#line 26670 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 326:
#line 3519 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sql_cmd_srs_attributes) = NEW_PTN Sql_cmd_srs_attributes();
            if (!(yyval.sql_cmd_srs_attributes))
              MYSQL_YYABORT_ERROR(ER_DA_OOM, MYF(0)); /* purecov: inspected */
          }
#line 26680 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 327:
#line 3525 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].sql_cmd_srs_attributes)->srs_name.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "NAME");
            }
            else
            {
              (yyvsp[-2].sql_cmd_srs_attributes)->srs_name= (yyvsp[0].lexer.lex_str);
            }
          }
#line 26696 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 328:
#line 3537 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].sql_cmd_srs_attributes)->definition.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "DEFINITION");
            }
            else
            {
              (yyvsp[-2].sql_cmd_srs_attributes)->definition= (yyvsp[0].lexer.lex_str);
            }
          }
#line 26712 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 329:
#line 3550 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-5].sql_cmd_srs_attributes)->organization.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "ORGANIZATION");
            }
            else
            {
              (yyvsp[-5].sql_cmd_srs_attributes)->organization= (yyvsp[-3].lexer.lex_str);
              (yyvsp[-5].sql_cmd_srs_attributes)->organization_coordsys_id= (yyvsp[0].ulonglong_number);
            }
          }
#line 26729 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 330:
#line 3563 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].sql_cmd_srs_attributes)->description.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "DESCRIPTION");
            }
            else
            {
              (yyvsp[-2].sql_cmd_srs_attributes)->description= (yyvsp[0].lexer.lex_str);
            }
          }
#line 26745 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 331:
#line 3578 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= 0;
          }
#line 26753 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 332:
#line 3583 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= (yyvsp[0].user_list);
          }
#line 26761 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 333:
#line 3592 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt(YYMEM_ROOT, (yyvsp[-10].key_type), (yyvsp[-8].lexer.lex_str), (yyvsp[-7].index_option),
                                             (yyvsp[-5].table), (yyvsp[-3].index_column_list), (yyvsp[-1].index_options),
                                             (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 26772 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 334:
#line 3600 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt(YYMEM_ROOT, KEYTYPE_FULLTEXT, (yyvsp[-7].lexer.lex_str),
                                             NULL, (yyvsp[-5].table), (yyvsp[-3].index_column_list), (yyvsp[-1].index_options),
                                             (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 26783 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 335:
#line 3608 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt(YYMEM_ROOT, KEYTYPE_SPATIAL, (yyvsp[-7].lexer.lex_str),
                                             NULL, (yyvsp[-5].table), (yyvsp[-3].index_column_list), (yyvsp[-1].index_options),
                                             (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 26794 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 338:
#line 3623 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_username((yyvsp[0].lexer.lex_str));
          }
#line 26802 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 339:
#line 3627 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_host((yyvsp[0].lexer.lex_str));
          }
#line 26810 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 340:
#line 3631 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_db((yyvsp[0].lexer.lex_str));
          }
#line 26818 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 341:
#line 3635 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_owner((yyvsp[0].lexer.lex_str));
          }
#line 26826 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 342:
#line 3639 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_password((yyvsp[0].lexer.lex_str));
            Lex->contains_plaintext_password= true;
          }
#line 26835 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 343:
#line 3644 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_socket((yyvsp[0].lexer.lex_str));
          }
#line 26843 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 344:
#line 3648 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_port((yyvsp[0].ulong_num));
          }
#line 26851 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 345:
#line 3655 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex=Lex;

            lex->stmt_definition_begin= (yylsp[-2]).cpp.start;
            lex->create_info->options= (yyvsp[-1].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            if (!(lex->event_parse_data= new (thd->mem_root) Event_parse_data()))
              MYSQL_YYABORT;
            lex->event_parse_data->identifier= (yyvsp[0].spname);
            lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;

            lex->sql_command= SQLCOM_CREATE_EVENT;
            /* We need that for disallowing subqueries */
          }
#line 26871 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 346:
#line 3675 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_CREATE_EVENT;
          }
#line 26883 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 347:
#line 3686 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[-1].item), &(yyvsp[-1].item));

            Lex->event_parse_data->item_expression= (yyvsp[-1].item);
            Lex->event_parse_data->interval= (yyvsp[0].interval);
          }
#line 26894 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 349:
#line 3695 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            Lex->event_parse_data->item_execute_at= (yyvsp[0].item);
          }
#line 26904 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 350:
#line 3703 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 26910 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 351:
#line 3705 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::ENABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 26920 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 352:
#line 3711 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::SLAVESIDE_DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 26930 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 353:
#line 3717 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 26940 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 354:
#line 3726 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= NEW_PTN Item_func_now_local(0);
            if (item == NULL)
              MYSQL_YYABORT;
            Lex->event_parse_data->item_starts= item;
          }
#line 26951 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 355:
#line 3733 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            Lex->event_parse_data->item_starts= (yyvsp[0].item);
          }
#line 26961 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 357:
#line 3743 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            Lex->event_parse_data->item_ends= (yyvsp[0].item);
          }
#line 26971 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 358:
#line 3751 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 26977 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 360:
#line 3757 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_PRESERVE;
            (yyval.num)= 1;
          }
#line 26987 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 361:
#line 3763 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;
            (yyval.num)= 1;
          }
#line 26997 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 362:
#line 3771 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 27003 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 363:
#line 3773 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->comment= (yyvsp[0].lexer.lex_str);
            (yyval.num)= 1;
          }
#line 27012 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 364:
#line 3780 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            /*
              This stops the following :
              - CREATE EVENT ... DO CREATE EVENT ...;
              - ALTER  EVENT ... DO CREATE EVENT ...;
              - CREATE EVENT ... DO ALTER EVENT DO ....;
              - CREATE PROCEDURE ... BEGIN CREATE EVENT ... END|
              This allows:
              - CREATE EVENT ... DO DROP EVENT yyy;
              - CREATE EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO DROP EVENT yyy;
              - CREATE PROCEDURE ... BEGIN ALTER EVENT ... END|
                (the nested ALTER EVENT can have anything but DO clause)
              - CREATE PROCEDURE ... BEGIN DROP EVENT ... END|
            */
            if (lex->sphead)
            {
              my_error(ER_EVENT_RECURSION_FORBIDDEN, MYF(0));
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd,
                                          enum_sp_type::EVENT,
                                          lex->event_parse_data->identifier);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;

            /*
              Set a body start to the end of the last preprocessed token
              before ev_sql_stmt:
            */
            sp->set_body_start(thd, (yylsp[0]).cpp.end);
          }
#line 27062 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 365:
#line 3826 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            sp_finish_parsing(thd);

            lex->sp_chistics.suid= SP_IS_SUID;  //always the definer!
            lex->event_parse_data->body_changed= true;
          }
#line 27076 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 379:
#line 3855 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!(yyvsp[-2].lexer.lex_str).str ||
                (check_and_convert_db_name(&(yyvsp[-2].lexer.lex_str), false) != Ident_name_check::OK))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
            {
              MYSQL_YYABORT;
            }
            (yyval.spname)= new (YYMEM_ROOT) sp_name(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].lexer.lex_str), true);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(YYTHD);
          }
#line 27094 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 380:
#line 3869 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_CSTRING db;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
            {
              MYSQL_YYABORT;
            }
            if (lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            (yyval.spname)= new (YYMEM_ROOT) sp_name(db, (yyvsp[0].lexer.lex_str), false);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(thd);
          }
#line 27114 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 381:
#line 3887 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27120 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 382:
#line 3888 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27126 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 383:
#line 3892 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27132 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 384:
#line 3893 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27138 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 385:
#line 3899 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.comment= to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 27144 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 386:
#line 3901 "sql_yacc.yy" /* yacc.c:1646  */
    { /* Just parse it, we only have one language for now. */ }
#line 27150 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 387:
#line 3903 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_NO_SQL; }
#line 27156 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 388:
#line 3905 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_CONTAINS_SQL; }
#line 27162 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 389:
#line 3907 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_READS_SQL_DATA; }
#line 27168 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 390:
#line 3909 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_MODIFIES_SQL_DATA; }
#line 27174 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 391:
#line 3911 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27180 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 392:
#line 3916 "sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 27186 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 393:
#line 3917 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.detistic= true; }
#line 27192 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 394:
#line 3918 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.detistic= false; }
#line 27198 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 395:
#line 3923 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_chistics.suid= SP_IS_SUID;
          }
#line 27206 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 396:
#line 3927 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_chistics.suid= SP_IS_NOT_SUID;
          }
#line 27214 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 397:
#line 3934 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_call((yyvsp[-1].spname), (yyvsp[0].item_list2));
          }
#line 27222 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 398:
#line 3940 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= NULL; }
#line 27228 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 399:
#line 3942 "sql_yacc.yy" /* yacc.c:1646  */
    {
              (yyval.item_list2)= (yyvsp[-1].item_list2);
            }
#line 27236 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 404:
#line 3960 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            CONTEXTUALIZE((yyvsp[-1].type));
            enum_field_types field_type= (yyvsp[-1].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-1].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[0].lexer.charset), &cs))
              MYSQL_YYABORT;

            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (sp_check_name(&(yyvsp[-2].lexer.lex_str)))
              MYSQL_YYABORT;

            if (pctx->find_variable((yyvsp[-2].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[-2].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[-2].lexer.lex_str),
                                                   field_type,
                                                   sp_variable::MODE_IN);

            if (spvar->field_def.init(thd, "", field_type,
                                      (yyvsp[-1].type)->get_length(), (yyvsp[-1].type)->get_dec(),
                                      (yyvsp[-1].type)->get_type_flags(),
                                      NULL, NULL, &NULL_CSTR, 0,
                                      (yyvsp[-1].type)->get_interval_list(),
                                      cs ? cs : thd->variables.collation_database,
                                      (yyvsp[0].lexer.charset) != nullptr, (yyvsp[-1].type)->get_uint_geom_type(),
                                      nullptr, nullptr, {},
                                      dd::Column::enum_hidden_type::HT_VISIBLE))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(thd,
                                        &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.is_nullable= true;
          }
#line 27288 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 409:
#line 4022 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (sp_check_name(&(yyvsp[-2].lexer.lex_str)))
              MYSQL_YYABORT;

            if (pctx->find_variable((yyvsp[-2].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[-2].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            CONTEXTUALIZE((yyvsp[-1].type));
            enum_field_types field_type= (yyvsp[-1].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-1].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[0].lexer.charset), &cs))
              MYSQL_YYABORT;

            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[-2].lexer.lex_str),
                                                   field_type,
                                                   (sp_variable::enum_mode) (yyvsp[-3].num));

            if (spvar->field_def.init(thd, "", field_type,
                                      (yyvsp[-1].type)->get_length(), (yyvsp[-1].type)->get_dec(),
                                      (yyvsp[-1].type)->get_type_flags(),
                                      NULL, NULL, &NULL_CSTR, 0,
                                      (yyvsp[-1].type)->get_interval_list(),
                                      cs ? cs : thd->variables.collation_database,
                                      (yyvsp[0].lexer.charset) != nullptr, (yyvsp[-1].type)->get_uint_geom_type(),
                                      nullptr, nullptr, {},
                                      dd::Column::enum_hidden_type::HT_VISIBLE))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(thd,
                                        &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.is_nullable= true;
          }
#line 27339 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 410:
#line 4071 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_IN; }
#line 27345 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 411:
#line 4072 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_IN; }
#line 27351 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 412:
#line 4073 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_OUT; }
#line 27357 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 413:
#line 4074 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_INOUT; }
#line 27363 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 414:
#line 4078 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27369 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 416:
#line 4083 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27375 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 418:
#line 4089 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
#line 27383 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 419:
#line 4093 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* We check for declarations out of (standard) order this way
              because letting the grammar rules reflect it caused tricky
               shift/reduce conflicts with the wrong result. (And we get
               better error handling this way.) */
            if (((yyvsp[-1].spblock).vars || (yyvsp[-1].spblock).conds) && ((yyvsp[-2].spblock).curs || (yyvsp[-2].spblock).hndlrs))
            { /* Variable or condition following cursor or handler */
              my_error(ER_SP_VARCOND_AFTER_CURSHNDLR, MYF(0));
              MYSQL_YYABORT;
            }
            if ((yyvsp[-1].spblock).curs && (yyvsp[-2].spblock).hndlrs)
            { /* Cursor following handler */
              my_error(ER_SP_CURSOR_AFTER_HANDLER, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spblock).vars= (yyvsp[-2].spblock).vars + (yyvsp[-1].spblock).vars;
            (yyval.spblock).conds= (yyvsp[-2].spblock).conds + (yyvsp[-1].spblock).conds;
            (yyval.spblock).hndlrs= (yyvsp[-2].spblock).hndlrs + (yyvsp[-1].spblock).hndlrs;
            (yyval.spblock).curs= (yyvsp[-2].spblock).curs + (yyvsp[-1].spblock).curs;
          }
#line 27408 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 420:
#line 4121 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$6*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->reset_lex(thd);
            lex= thd->lex;

            pctx->declare_var_boundary((yyvsp[-3].num));

            CONTEXTUALIZE((yyvsp[-2].type));
            enum enum_field_types var_type= (yyvsp[-2].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-2].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[-1].lexer.charset), &cs))
              MYSQL_YYABORT;

            uint num_vars= pctx->context_var_count();
            Item *dflt_value_item= (yyvsp[0].sp_default).expr;

            LEX_CSTRING dflt_value_query= EMPTY_CSTR;

            if (dflt_value_item)
            {
              ITEMIZE(dflt_value_item, &dflt_value_item);
              const char *expr_start_ptr= (yyvsp[0].sp_default).expr_start;
              if (lex->is_metadata_used())
              {
                dflt_value_query= make_string(thd, expr_start_ptr,
                                              (yylsp[0]).raw.end);
                if (!dflt_value_query.str)
                  MYSQL_YYABORT;
              }
            }
            else
            {
              dflt_value_item= NEW_PTN Item_null();

              if (dflt_value_item == NULL)
                MYSQL_YYABORT;
            }

            // We can have several variables in DECLARE statement.
            // We need to create an sp_instr_set instruction for each variable.

            for (uint i = num_vars-(yyvsp[-3].num) ; i < num_vars ; i++)
            {
              uint var_idx= pctx->var_context2runtime(i);
              sp_variable *spvar= pctx->find_variable(var_idx);

              if (!spvar)
                MYSQL_YYABORT;

              spvar->type= var_type;
              spvar->default_value= dflt_value_item;

              if (spvar->field_def.init(thd, "", var_type,
                                        (yyvsp[-2].type)->get_length(), (yyvsp[-2].type)->get_dec(),
                                        (yyvsp[-2].type)->get_type_flags(),
                                        NULL, NULL, &NULL_CSTR, 0,
                                        (yyvsp[-2].type)->get_interval_list(),
                                        cs ? cs : thd->variables.collation_database,
                                        (yyvsp[-1].lexer.charset) != nullptr, (yyvsp[-2].type)->get_uint_geom_type(),
                                        nullptr, nullptr, {},
                                        dd::Column::enum_hidden_type::HT_VISIBLE))
              {
                MYSQL_YYABORT;
              }

              if (prepare_sp_create_field(thd, &spvar->field_def))
                MYSQL_YYABORT;

              spvar->field_def.field_name= spvar->name.str;
              spvar->field_def.is_nullable= true;

              /* The last instruction is responsible for freeing LEX. */

              sp_instr_set *is= NEW_PTN sp_instr_set(sp->instructions(),
                                                     lex,
                                                     var_idx,
                                                     dflt_value_item,
                                                     dflt_value_query,
                                                     (i == num_vars - 1));

              if (!is || sp->add_instr(thd, is))
                MYSQL_YYABORT;
            }

            pctx->declare_var_boundary(0);
            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyvsp[-3].num);
            (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
#line 27507 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 421:
#line 4216 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_condition((yyvsp[-3].lexer.lex_str), true))
            {
              my_error(ER_SP_DUP_COND, MYF(0), (yyvsp[-3].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            if(pctx->add_condition(thd, (yyvsp[-3].lexer.lex_str), (yyvsp[0].spcondvalue)))
              MYSQL_YYABORT;
            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // DECLARE COND FOR
            (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
            (yyval.spblock).conds= 1;
          }
#line 27528 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 422:
#line 4233 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *handler_pctx=
              parent_pctx->push_context(thd, sp_pcontext::HANDLER_SCOPE);

            sp_handler *h=
              parent_pctx->add_handler(thd, (sp_handler::enum_type) (yyvsp[-2].num));

            lex->set_sp_current_parsing_ctx(handler_pctx);

            sp_instr_hpush_jump *i=
              NEW_PTN sp_instr_hpush_jump(sp->instructions(), handler_pctx, h);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            if ((yyvsp[-2].num) == sp_handler::CONTINUE)
            {
              // Mark the end of CONTINUE handler scope.

              if (sp->m_parser_data.add_backpatch_entry(
                    i, handler_pctx->last_label()))
              {
                MYSQL_YYABORT;
              }
            }

            if (sp->m_parser_data.add_backpatch_entry(
                  i, handler_pctx->push_label(thd, EMPTY_CSTR, 0)))
            {
              MYSQL_YYABORT;
            }

            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // DECL HANDLER FOR
          }
#line 27573 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 423:
#line 4274 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *hlab= pctx->pop_label(); /* After this hdlr */

            if ((yyvsp[-5].num) == sp_handler::CONTINUE)
            {
              sp_instr_hreturn *i=
                NEW_PTN sp_instr_hreturn(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }
            else
            {  /* EXIT or UNDO handler, just jump to the end of the block */
              sp_instr_hreturn *i=
                NEW_PTN sp_instr_hreturn(sp->instructions(), pctx);

              if (i == NULL ||
                  sp->add_instr(thd, i) ||
                  sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()))
                MYSQL_YYABORT;
            }

            sp->m_parser_data.do_backpatch(hlab, sp->instructions());

            lex->set_sp_current_parsing_ctx(pctx->pop_context());

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).curs= 0;
            (yyval.spblock).hndlrs= 1;
          }
#line 27611 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 424:
#line 4311 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$5*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr((yylsp[0]).raw.end);
          }
#line 27624 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 425:
#line 4320 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$7*/
            MAKE_CMD((yyvsp[0].top_level_node));

            THD *thd= YYTHD;
            LEX *cursor_lex= Lex;
            sp_head *sp= cursor_lex->sphead;

            assert(cursor_lex->sql_command == SQLCOM_SELECT);

            if (cursor_lex->result)
            {
              my_error(ER_SP_BAD_CURSOR_SELECT, MYF(0));
              MYSQL_YYABORT;
            }

            cursor_lex->m_sql_cmd->set_as_part_of_sp();
            cursor_lex->sp_lex_in_use= true;

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;

            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            uint offp;

            if (pctx->find_cursor((yyvsp[-4].lexer.lex_str), &offp, true))
            {
              my_error(ER_SP_DUP_CURS, MYF(0), (yyvsp[-4].lexer.lex_str).str);
              delete cursor_lex;
              MYSQL_YYABORT;
            }

            LEX_CSTRING cursor_query= EMPTY_CSTR;

            if (cursor_lex->is_metadata_used())
            {
              cursor_query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            (yylsp[0]).raw.end);

              if (!cursor_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_cpush *i=
              NEW_PTN sp_instr_cpush(sp->instructions(), pctx,
                                     cursor_lex, cursor_query,
                                     pctx->current_cursor_count());

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                pctx->add_cursor((yyvsp[-4].lexer.lex_str)))
            {
              MYSQL_YYABORT;
            }

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= 0;
            (yyval.spblock).curs= 1;
          }
#line 27690 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 426:
#line 4384 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::EXIT; }
#line 27696 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 427:
#line 4385 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::CONTINUE; }
#line 27702 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 428:
#line 4391 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 27708 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 429:
#line 4393 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)+= 1; }
#line 27714 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 430:
#line 4398 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_pcontext *parent_pctx= pctx->parent_context();

            if (parent_pctx->check_duplicate_handler((yyvsp[0].spcondvalue)))
            {
              my_error(ER_SP_DUP_HANDLER, MYF(0));
              MYSQL_YYABORT;
            }
            else
            {
              sp_instr_hpush_jump *i=
                (sp_instr_hpush_jump *)sp->last_instruction();

              i->add_condition((yyvsp[0].spcondvalue));
            }
          }
#line 27738 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 431:
#line 4421 "sql_yacc.yy" /* yacc.c:1646  */
    { /* mysql errno */
            if ((yyvsp[0].ulong_num) == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "CONDITION", "0");
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= NEW_PTN sp_condition_value((yyvsp[0].ulong_num));
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 27753 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 433:
#line 4436 "sql_yacc.yy" /* yacc.c:1646  */
    { /* SQLSTATE */

            /*
              An error is triggered:
                - if the specified string is not a valid SQLSTATE,
                - or if it represents the completion condition -- it is not
                  allowed to SIGNAL, or declare a handler for the completion
                  condition.
            */
            if (!is_sqlstate_valid(&(yyvsp[0].lexer.lex_str)) || is_sqlstate_completion((yyvsp[0].lexer.lex_str).str))
            {
              my_error(ER_SP_BAD_SQLSTATE, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= NEW_PTN sp_condition_value((yyvsp[0].lexer.lex_str).str);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 27776 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 434:
#line 4457 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27782 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 435:
#line 4458 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 27788 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 436:
#line 4463 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= (yyvsp[0].spcondvalue);
          }
#line 27796 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 437:
#line 4467 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            (yyval.spcondvalue)= pctx->find_condition((yyvsp[0].lexer.lex_str), false);

            if ((yyval.spcondvalue) == NULL)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 27813 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 438:
#line 4480 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::WARNING);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 27823 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 439:
#line 4486 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::NOT_FOUND);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 27833 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 440:
#line 4492 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::EXCEPTION);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 27843 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 441:
#line 4501 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sql_command= SQLCOM_SIGNAL;
            lex->m_sql_cmd= NEW_PTN Sql_cmd_signal((yyvsp[-1].spcondvalue), (yyvsp[0].signal_item_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 27857 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 442:
#line 4514 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (!pctx)
            {
              /* SIGNAL foo cannot be used outside of stored programs */
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_condition_value *cond= pctx->find_condition((yyvsp[0].lexer.lex_str), false);

            if (!cond)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            if (cond->type != sp_condition_value::SQLSTATE)
            {
              my_error(ER_SIGNAL_BAD_CONDITION_TYPE, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= cond;
          }
#line 27887 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 443:
#line 4540 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 27893 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 444:
#line 4545 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= NULL; }
#line 27899 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 445:
#line 4547 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 27905 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 446:
#line 4552 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.signal_item_list)= NEW_PTN Set_signal_information(); }
#line 27911 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 447:
#line 4554 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.signal_item_list)= (yyvsp[0].signal_item_list); }
#line 27917 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 448:
#line 4559 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.signal_item_list)= NEW_PTN Set_signal_information();
            if ((yyval.signal_item_list)->set_item((yyvsp[-2].da_condition_item_name), (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 27927 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 449:
#line 4566 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.signal_item_list)= (yyvsp[-4].signal_item_list);
            if ((yyval.signal_item_list)->set_item((yyvsp[-2].da_condition_item_name), (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 27937 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 450:
#line 4578 "sql_yacc.yy" /* yacc.c:1646  */
    { ITEMIZE((yyvsp[0].item), &(yyval.item)); }
#line 27943 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 451:
#line 4580 "sql_yacc.yy" /* yacc.c:1646  */
    { ITEMIZE((yyvsp[0].item), &(yyval.item)); }
#line 27949 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 452:
#line 4582 "sql_yacc.yy" /* yacc.c:1646  */
    { ITEMIZE((yyvsp[0].item), &(yyval.item)); }
#line 27955 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 453:
#line 4588 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CLASS_ORIGIN; }
#line 27961 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 454:
#line 4590 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_SUBCLASS_ORIGIN; }
#line 27967 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 455:
#line 4592 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_CATALOG; }
#line 27973 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 456:
#line 4594 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_SCHEMA; }
#line 27979 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 457:
#line 4596 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_NAME; }
#line 27985 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 458:
#line 4598 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CATALOG_NAME; }
#line 27991 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 459:
#line 4600 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_SCHEMA_NAME; }
#line 27997 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 460:
#line 4602 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_TABLE_NAME; }
#line 28003 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 461:
#line 4604 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_COLUMN_NAME; }
#line 28009 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 462:
#line 4606 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CURSOR_NAME; }
#line 28015 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 463:
#line 4608 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_MESSAGE_TEXT; }
#line 28021 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 464:
#line 4610 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_MYSQL_ERRNO; }
#line 28027 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 465:
#line 4615 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sql_command= SQLCOM_RESIGNAL;
            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // RESIGNAL doesn't clear diagnostics
            lex->m_sql_cmd= NEW_PTN Sql_cmd_resignal((yyvsp[-1].spcondvalue), (yyvsp[0].signal_item_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 28042 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 466:
#line 4629 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Diagnostics_information *info= (yyvsp[0].diag_info);

            info->set_which_da((yyvsp[-2].diag_area));

            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // GET DIAGS doesn't clear them.
            Lex->sql_command= SQLCOM_GET_DIAGNOSTICS;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_get_diagnostics(info);

            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 28059 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 467:
#line 4645 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 28065 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 468:
#line 4647 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 28071 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 469:
#line 4649 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::STACKED_AREA; }
#line 28077 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 470:
#line 4654 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.diag_info)= NEW_PTN Statement_information((yyvsp[0].stmt_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
#line 28087 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 471:
#line 4660 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.diag_info)= NEW_PTN Condition_information((yyvsp[-1].item), (yyvsp[0].cond_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
#line 28097 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 472:
#line 4669 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.stmt_info_list)= NEW_PTN List<Statement_information_item>;
            if ((yyval.stmt_info_list) == NULL || (yyval.stmt_info_list)->push_back((yyvsp[0].stmt_info_item)))
              MYSQL_YYABORT;
          }
#line 28107 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 473:
#line 4675 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].stmt_info_list)->push_back((yyvsp[0].stmt_info_item)))
              MYSQL_YYABORT;
            (yyval.stmt_info_list)= (yyvsp[-2].stmt_info_list);
          }
#line 28117 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 474:
#line 4684 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.stmt_info_item)= NEW_PTN Statement_information_item((yyvsp[0].stmt_info_item_name), (yyvsp[-2].item));
            if ((yyval.stmt_info_item) == NULL)
              MYSQL_YYABORT;
          }
#line 28127 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 475:
#line 4692 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /*
              NOTE: lex->sphead is NULL if we're parsing something like
              'GET DIAGNOSTICS v' outside a stored program. We should throw
              ER_SP_UNDECLARED_VAR in such cases.
            */

            if (!sp)
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            (yyval.item)=
              create_item_for_sp_var(
                thd, to_lex_cstring((yyvsp[0].lexer.lex_str)), NULL,
                sp->m_parser_data.get_current_stmt_start_ptr(),
                (yylsp[0]).raw.start,
                (yylsp[0]).raw.end);

            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 28159 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 476:
#line 4720 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_get_user_var((yyloc), (yyvsp[0].lexer.lex_str));
            ITEMIZE((yyval.item), &(yyval.item));
          }
#line 28168 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 477:
#line 4728 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
#line 28174 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 478:
#line 4730 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::ROW_COUNT; }
#line 28180 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 479:
#line 4739 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 28186 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 480:
#line 4744 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cond_info_list)= NEW_PTN List<Condition_information_item>;
            if ((yyval.cond_info_list) == NULL || (yyval.cond_info_list)->push_back((yyvsp[0].cond_info_item)))
              MYSQL_YYABORT;
          }
#line 28196 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 481:
#line 4750 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].cond_info_list)->push_back((yyvsp[0].cond_info_item)))
              MYSQL_YYABORT;
            (yyval.cond_info_list)= (yyvsp[-2].cond_info_list);
          }
#line 28206 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 482:
#line 4759 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cond_info_item)= NEW_PTN Condition_information_item((yyvsp[0].cond_info_item_name), (yyvsp[-2].item));
            if ((yyval.cond_info_item) == NULL)
              MYSQL_YYABORT;
          }
#line 28216 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 483:
#line 4767 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CLASS_ORIGIN; }
#line 28222 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 484:
#line 4769 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::SUBCLASS_ORIGIN; }
#line 28228 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 485:
#line 4771 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_CATALOG; }
#line 28234 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 486:
#line 4773 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_SCHEMA; }
#line 28240 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 487:
#line 4775 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_NAME; }
#line 28246 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 488:
#line 4777 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CATALOG_NAME; }
#line 28252 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 489:
#line 4779 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::SCHEMA_NAME; }
#line 28258 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 490:
#line 4781 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::TABLE_NAME; }
#line 28264 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 491:
#line 4783 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::COLUMN_NAME; }
#line 28270 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 492:
#line 4785 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CURSOR_NAME; }
#line 28276 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 493:
#line 4787 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::MESSAGE_TEXT; }
#line 28282 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 494:
#line 4789 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::MYSQL_ERRNO; }
#line 28288 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 495:
#line 4791 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::RETURNED_SQLSTATE; }
#line 28294 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 496:
#line 4796 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[0].lexer.lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= 1;
          }
#line 28318 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 497:
#line 4816 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[0].lexer.lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= (yyvsp[-2].num) + 1;
          }
#line 28342 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 498:
#line 4839 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sp_default).expr_start= NULL;
            (yyval.sp_default).expr = NULL;
          }
#line 28351 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 499:
#line 4844 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sp_default).expr_start= (yylsp[-1]).raw.end;
            (yyval.sp_default).expr= (yyvsp[0].item);
          }
#line 28360 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 513:
#line 4868 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sphead->m_parser_data.new_cont_backpatch(); }
#line 28366 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 514:
#line 4870 "sql_yacc.yy" /* yacc.c:1646  */
    {
            sp_head *sp= Lex->sphead;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
#line 28376 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 515:
#line 4878 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr(yylloc.raw.start);
          }
#line 28389 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 516:
#line 4887 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].top_level_node) != nullptr)
              MAKE_CMD((yyvsp[0].top_level_node));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->m_flags|= sp_get_flags_for_command(lex);
            if (lex->sql_command == SQLCOM_CHANGE_DB)
            { /* "USE db" doesn't work in a procedure */
              my_error(ER_SP_BADSTATEMENT, MYF(0), "USE");
              MYSQL_YYABORT;
            }

            // Mark statement as belonging to a stored procedure:
            if (lex->m_sql_cmd != NULL)
              lex->m_sql_cmd->set_as_part_of_sp();

            /*
              Don't add an instruction for SET statements, since all
              instructions for them were already added during processing
              of "set" rule.
            */
            assert((lex->sql_command != SQLCOM_SET_OPTION &&
                         lex->sql_command != SQLCOM_SET_PASSWORD) ||
                        lex->var_list.is_empty());
            if (lex->sql_command != SQLCOM_SET_OPTION &&
                lex->sql_command != SQLCOM_SET_PASSWORD)
            {
              /* Extract the query statement from the tokenizer. */

              LEX_CSTRING query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            (yylsp[0]).raw.end);

              if (!query.str)
                MYSQL_YYABORT;

              /* Add instruction. */

              sp_instr_stmt *i=
                NEW_PTN sp_instr_stmt(sp->instructions(), lex, query);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 28446 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 517:
#line 4943 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 28458 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 518:
#line 4951 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;

            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Check that this is a stored function. */

            if (sp->m_type != enum_sp_type::FUNCTION)
            {
              my_error(ER_SP_BADRETURN, MYF(0));
              MYSQL_YYABORT;
            }

            /* Indicate that we've reached RETURN statement. */

            sp->m_flags|= sp_head::HAS_RETURN;

            /* Add instruction. */

            sp_instr_freturn *i=
              NEW_PTN sp_instr_freturn(sp->instructions(), lex, (yyvsp[0].item), expr_query,
                                       sp->m_return_field_def.sql_type);

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 28508 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 519:
#line 4999 "sql_yacc.yy" /* yacc.c:1646  */
    { /* Unlabeled controls get a secret label. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            pctx->push_label(thd,
                             EMPTY_CSTR,
                             sp->instructions());
          }
#line 28523 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 520:
#line 5010 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
#line 28536 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 521:
#line 5022 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp = lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[0].lex_cstr));

            if (! lab)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "LEAVE", (yyvsp[0].lex_cstr).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /*
              When jumping to a BEGIN-END block end, the target jump
              points to the block hpop/cpop cleanup instructions,
              so we should exclude the block context here.
              When jumping to something else (i.e., sp_label::ITERATION),
              there are no hpop/cpop at the jump destination,
              so we should include the block context here for cleanup.
            */
            bool exclusive= (lab->type == sp_label::BEGIN);

            size_t n= pctx->diff_handlers(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_hpop *hpop= NEW_PTN sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            n= pctx->diff_cursors(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_cpop *cpop= NEW_PTN sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            sp_instr_jump *i= NEW_PTN sp_instr_jump(ip, pctx);

            if (!i ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, lab) ||
                sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 28594 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 522:
#line 5079 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[0].lex_cstr));

            if (! lab || lab->type != sp_label::ITERATION)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "ITERATE", (yyvsp[0].lex_cstr).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /* Inclusive the dest. */
            size_t n= pctx->diff_handlers(lab->ctx, false);

            if (n)
            {
              sp_instr_hpop *hpop= NEW_PTN sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            /* Inclusive the dest. */
            n= pctx->diff_cursors(lab->ctx, false);

            if (n)
            {
              sp_instr_cpop *cpop= NEW_PTN sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            /* Jump back */
            sp_instr_jump *i= NEW_PTN sp_instr_jump(ip, pctx, lab->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 28642 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 523:
#line 5126 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[0].lexer.lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_copen *i= NEW_PTN sp_instr_copen(sp->instructions(), pctx,
                                                      offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 28666 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 524:
#line 5149 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[-1].lexer.lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[-1].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cfetch *i= NEW_PTN sp_instr_cfetch(sp->instructions(),
                                                        pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 28690 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 525:
#line 5169 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28696 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 526:
#line 5174 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[0].lexer.lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cclose *i=
              NEW_PTN sp_instr_cclose(sp->instructions(), pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 28720 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 530:
#line 5203 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
#line 28742 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 531:
#line 5221 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
#line 28764 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 532:
#line 5241 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$1*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 28776 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 533:
#line 5249 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$3*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_jump_if_not *i =
              NEW_PTN sp_instr_jump_if_not(sp->instructions(), lex,
                                           (yyvsp[0].item), expr_query);

            /* Add jump instruction. */

            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_CSTR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 28817 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 534:
#line 5287 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$6*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i = NEW_PTN sp_instr_jump(sp->instructions(), pctx);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());

            sp->m_parser_data.add_backpatch_entry(
              i, pctx->push_label(thd, EMPTY_CSTR, 0));
          }
#line 28839 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 535:
#line 5305 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$8*/
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
#line 28852 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 541:
#line 5328 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            case_stmt_action_case(thd);

            sp->reset_lex(thd); /* For CASE-expr $3 */
          }
#line 28866 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 542:
#line 5338 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            /* Extract CASE-expression string. */

            LEX_CSTRING case_expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              case_expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!case_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Register new CASE-expression and get its id. */

            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            int case_expr_id= pctx->push_case_expr_id();

            if (case_expr_id < 0)
              MYSQL_YYABORT;

            /* Add CASE-set instruction. */

            sp_instr_set_case_expr *i=
              NEW_PTN sp_instr_set_case_expr(sp->instructions(), lex,
                                             case_expr_id, (yyvsp[0].item), case_expr_query);

            if (i == NULL ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 28912 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 543:
#line 5383 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$9*/
            case_stmt_action_end_case(Lex, true);
          }
#line 28920 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 544:
#line 5390 "sql_yacc.yy" /* yacc.c:1646  */
    {
            case_stmt_action_case(YYTHD);
          }
#line 28928 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 545:
#line 5397 "sql_yacc.yy" /* yacc.c:1646  */
    {
            case_stmt_action_end_case(Lex, false);
          }
#line 28936 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 550:
#line 5414 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 28948 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 551:
#line 5422 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            /* Simple case: <caseval> = <whenval> */

            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING when_expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              when_expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!when_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add CASE-when-jump instruction. */

            sp_instr_jump_case_when *i =
              NEW_PTN sp_instr_jump_case_when(sp->instructions(), lex,
                                              pctx->get_current_case_expr_id(),
                                              (yyvsp[0].item), when_expr_query);

            if (i == NULL ||
                i->on_after_expr_parsing(thd) ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_CSTR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 28993 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 552:
#line 5464 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$7*/
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
#line 29002 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 553:
#line 5472 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 29014 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 554:
#line 5480 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING when_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              when_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!when_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[0].item),
                                           when_query);

            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_CSTR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 29055 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 555:
#line 5518 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$8*/
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
#line 29064 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 556:
#line 5526 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_error *i=
              NEW_PTN
                sp_instr_error(sp->instructions(), pctx, ER_SP_CASE_NOT_FOUND);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 29082 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 558:
#line 5544 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[-1].lex_cstr));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[-1].lex_cstr).str);
              MYSQL_YYABORT;
            }
            else
            {
              lab= pctx->push_label(YYTHD, (yyvsp[-1].lex_cstr), sp->instructions());
              lab->type= sp_label::ITERATION;
            }
          }
#line 29104 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 559:
#line 5562 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[0].lex_cstr).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[0].lex_cstr).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[0].lex_cstr).str);
                MYSQL_YYABORT;
              }
            }
            sp->m_parser_data.do_backpatch(lab, sp->instructions());
          }
#line 29125 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 560:
#line 5581 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)= NULL_CSTR; }
#line 29131 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 561:
#line 5582 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)= (yyvsp[0].lex_cstr); }
#line 29137 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 562:
#line 5587 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[-1].lex_cstr));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[-1].lex_cstr).str);
              MYSQL_YYABORT;
            }

            lab= pctx->push_label(YYTHD, (yyvsp[-1].lex_cstr), sp->instructions());
            lab->type= sp_label::BEGIN;
          }
#line 29157 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 563:
#line 5603 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[0].lex_cstr).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[0].lex_cstr).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[0].lex_cstr).str);
                MYSQL_YYABORT;
              }
            }
          }
#line 29176 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 564:
#line 5620 "sql_yacc.yy" /* yacc.c:1646  */
    { /* Unlabeled blocks get a secret label. */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_label *lab=
              pctx->push_label(YYTHD, EMPTY_CSTR, sp->instructions());

            lab->type= sp_label::BEGIN;
          }
#line 29191 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 565:
#line 5631 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->get_sp_current_parsing_ctx()->pop_label();
          }
#line 29200 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 566:
#line 5639 "sql_yacc.yy" /* yacc.c:1646  */
    { /* QQ This is just a dummy for grouping declarations and statements
              together. No [[NOT] ATOMIC] yet, and we need to figure out how
              make it coexist with the existing BEGIN COMMIT/ROLLBACK. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *child_pctx=
              parent_pctx->push_context(thd, sp_pcontext::REGULAR_SCOPE);

            lex->set_sp_current_parsing_ctx(child_pctx);
          }
#line 29217 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 567:
#line 5654 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            // We always have a label.
            sp->m_parser_data.do_backpatch(pctx->last_label(),
                                           sp->instructions());

            if ((yyvsp[-2].spblock).hndlrs)
            {
              sp_instr *i= NEW_PTN sp_instr_hpop(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if ((yyvsp[-2].spblock).curs)
            {
              sp_instr *i= NEW_PTN sp_instr_cpop(sp->instructions(), pctx,
                                                 (yyvsp[-2].spblock).curs);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            lex->set_sp_current_parsing_ctx(pctx->pop_context());
          }
#line 29251 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 568:
#line 5688 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i= NEW_PTN sp_instr_jump(sp->instructions(), pctx,
                                                    pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 29268 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 569:
#line 5701 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 29280 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 570:
#line 5709 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN
                sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[0].item), expr_query);

            if (i == NULL ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()) ||
                sp->m_parser_data.new_cont_backpatch() ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 29322 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 571:
#line 5750 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$14*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i= NEW_PTN sp_instr_jump(sp->instructions(), pctx,
                                                    pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
#line 29341 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 572:
#line 5767 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 29353 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 573:
#line 5775 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$6*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint ip= sp->instructions();

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN sp_instr_jump_if_not(ip, lex, (yyvsp[0].item), expr_query,
                                           pctx->last_label()->ip);

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }

            /* We can shortcut the cont_backpatch here */
            i->set_cont_dest(ip + 1);
          }
#line 29395 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 575:
#line 5818 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_ACTION_BEFORE; }
#line 29401 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 576:
#line 5820 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_ACTION_AFTER; }
#line 29407 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 577:
#line 5825 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_EVENT_INSERT; }
#line 29413 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 578:
#line 5827 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_EVENT_UPDATE; }
#line 29419 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 579:
#line 5829 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_EVENT_DELETE; }
#line 29425 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 580:
#line 5843 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= { nullptr, 0}; }
#line 29431 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 581:
#line 5845 "sql_yacc.yy" /* yacc.c:1646  */
    {
        (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str);
      }
#line 29439 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 582:
#line 5851 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= { nullptr, 0}; }
#line 29445 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 583:
#line 5853 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
          }
#line 29453 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 584:
#line 5859 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 29459 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 586:
#line 5865 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 29469 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 587:
#line 5871 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 29479 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 599:
#line 5893 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 29485 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 601:
#line 5899 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 29495 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 602:
#line 5905 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 29505 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 610:
#line 5923 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 29511 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 612:
#line 5929 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; // OOM
          }
#line 29521 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 613:
#line 5935 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; // OOM
          }
#line 29531 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 615:
#line 5947 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 29537 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 617:
#line 5953 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 29547 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 618:
#line 5959 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 29557 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 626:
#line 5977 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 29563 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 628:
#line 5983 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 29573 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 629:
#line 5989 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 29583 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 633:
#line 6003 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 29589 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 634:
#line 6007 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_tablespace_type)= ALTER_UNDO_TABLESPACE_SET_ACTIVE; }
#line 29595 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 635:
#line 6008 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_tablespace_type)= ALTER_UNDO_TABLESPACE_SET_INACTIVE; }
#line 29601 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 636:
#line 6012 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 29607 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 637:
#line 6017 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_initial_size((yyvsp[0].ulonglong_number));
          }
#line 29615 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 638:
#line 6024 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option) = NEW_PTN PT_alter_tablespace_option_autoextend_size((yyvsp[0].ulonglong_number));
          }
#line 29623 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 639:
#line 6030 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number) = (yyvsp[0].ulonglong_number); }
#line 29629 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 640:
#line 6035 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_max_size((yyvsp[0].ulonglong_number));
          }
#line 29637 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 641:
#line 6042 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_extent_size((yyvsp[0].ulonglong_number));
          }
#line 29645 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 642:
#line 6049 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_undo_buffer_size((yyvsp[0].ulonglong_number));
          }
#line 29653 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 643:
#line 6056 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_redo_buffer_size((yyvsp[0].ulonglong_number));
          }
#line 29661 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 644:
#line 6063 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_nodegroup((yyvsp[0].ulong_num));
          }
#line 29669 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 645:
#line 6070 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_comment((yyvsp[0].lexer.lex_str));
          }
#line 29677 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 646:
#line 6077 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_engine(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 29685 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 647:
#line 6084 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_file_block_size((yyvsp[0].ulonglong_number));
          }
#line 29693 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 648:
#line 6091 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_wait_until_completed(true);
          }
#line 29701 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 649:
#line 6095 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_wait_until_completed(false);
          }
#line 29709 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 650:
#line 6102 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_encryption((yyvsp[0].lexer.lex_str));
          }
#line 29717 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 651:
#line 6109 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option) = make_tablespace_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 29725 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 652:
#line 6115 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= (yyvsp[0].ulonglong_number);}
#line 29731 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 653:
#line 6117 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ulonglong number;
            uint text_shift_number= 0;
            longlong prefix_number;
            const char *start_ptr= (yyvsp[0].lexer.lex_str).str;
            size_t str_len= (yyvsp[0].lexer.lex_str).length;
            const char *end_ptr= start_ptr + str_len;
            int error;
            prefix_number= my_strtoll10(start_ptr, &end_ptr, &error);
            if ((start_ptr + str_len - 1) == end_ptr)
            {
              switch (end_ptr[0])
              {
                case 'g':
                case 'G':
                  text_shift_number+=10;
                  [[fallthrough]];
                case 'm':
                case 'M':
                  text_shift_number+=10;
                  [[fallthrough]];
                case 'k':
                case 'K':
                  text_shift_number+=10;
                  break;
                default:
                {
                  my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
                  MYSQL_YYABORT;
                }
              }
              if (prefix_number >> 31)
              {
                my_error(ER_SIZE_OVERFLOW_ERROR, MYF(0));
                MYSQL_YYABORT;
              }
              number= prefix_number << text_shift_number;
            }
            else
            {
              my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.ulonglong_number)= number;
          }
#line 29781 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 654:
#line 6193 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail)= (yyvsp[0].create_table_tail);
            (yyval.create_table_tail).opt_create_table_options= (yyvsp[-1].create_table_options);
          }
#line 29790 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 656:
#line 6202 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail)= (yyvsp[0].create_table_tail);
            (yyval.create_table_tail).opt_partitioning= (yyvsp[-1].partition_clause);
          }
#line 29799 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 658:
#line 6211 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= On_duplicate::ERROR;
            (yyval.create_table_tail).opt_query_expression= NULL;
          }
#line 29810 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 659:
#line 6219 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= (yyvsp[-1].on_duplicate);
            (yyval.create_table_tail).opt_query_expression= (yyvsp[0].query_primary);
          }
#line 29821 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 660:
#line 6226 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= On_duplicate::ERROR;
            (yyval.create_table_tail).opt_query_expression= (yyvsp[0].query_primary);
          }
#line 29832 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 661:
#line 6235 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary) = (yyvsp[0].query_primary); }
#line 29838 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 662:
#line 6236 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary) = (yyvsp[0].query_primary); }
#line 29844 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 663:
#line 6252 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.partition_clause)= NEW_PTN PT_partition((yyvsp[-3].part_type_def), (yyvsp[-2].ulong_num), (yyvsp[-1].opt_sub_part), (yylsp[0]), (yyvsp[0].part_def_list));
          }
#line 29852 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 664:
#line 6259 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_key((yyvsp[-5].is_not_empty), (yyvsp[-3].opt_key_algo), (yyvsp[-1].name_list));
          }
#line 29860 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 665:
#line 6263 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_hash((yyvsp[-4].is_not_empty), (yylsp[-1]), (yyvsp[-1].item));
          }
#line 29868 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 666:
#line 6267 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_range_expr((yylsp[-1]), (yyvsp[-1].item));
          }
#line 29876 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 667:
#line 6271 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_range_columns((yyvsp[-1].name_list));
          }
#line 29884 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 668:
#line 6275 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_list_expr((yylsp[-1]), (yyvsp[-1].item));
          }
#line 29892 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 669:
#line 6279 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_list_columns((yyvsp[-1].name_list));
          }
#line 29900 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 670:
#line 6285 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 29906 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 671:
#line 6286 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 29912 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 672:
#line 6291 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_NONE; }
#line 29918 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 673:
#line 6293 "sql_yacc.yy" /* yacc.c:1646  */
    {
            switch ((yyvsp[0].ulong_num)) {
            case 1:
              (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_51;
              break;
            case 2:
              (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_55;
              break;
            default:
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
          }
#line 29936 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 674:
#line 6310 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 29942 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 675:
#line 6312 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "partitions");
              MYSQL_YYABORT;
            }
            (yyval.ulong_num)= (yyvsp[0].ulong_num);
          }
#line 29955 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 676:
#line 6323 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_sub_part)= NULL; }
#line 29961 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 677:
#line 6326 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_sub_part)= NEW_PTN PT_sub_partition_by_hash((yyvsp[-5].is_not_empty), (yylsp[-2]), (yyvsp[-2].item), (yyvsp[0].ulong_num));
          }
#line 29969 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 678:
#line 6331 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_sub_part)= NEW_PTN PT_sub_partition_by_key((yyvsp[-6].is_not_empty), (yyvsp[-4].opt_key_algo), (yyvsp[-2].name_list), (yyvsp[0].ulong_num));
          }
#line 29977 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 679:
#line 6338 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.name_list)= NULL; }
#line 29983 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 681:
#line 6345 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.name_list)= NEW_PTN List<char>;
            if ((yyval.name_list) == NULL || (yyval.name_list)->push_back((yyvsp[0].lexer.lex_str).str))
              MYSQL_YYABORT;
          }
#line 29993 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 682:
#line 6351 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.name_list)= (yyvsp[-2].name_list);
            if ((yyval.name_list)->push_back((yyvsp[0].lexer.lex_str).str))
              MYSQL_YYABORT;
          }
#line 30003 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 683:
#line 6360 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 30009 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 684:
#line 6362 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "subpartitions");
              MYSQL_YYABORT;
            }
            (yyval.ulong_num)= (yyvsp[0].ulong_num);
          }
#line 30022 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 685:
#line 6373 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_def_list)= NULL; }
#line 30028 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 686:
#line 6374 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_def_list)= (yyvsp[-1].part_def_list); }
#line 30034 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 687:
#line 6379 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_def_list)= NEW_PTN Mem_root_array<PT_part_definition*>(YYMEM_ROOT);
            if ((yyval.part_def_list) == NULL || (yyval.part_def_list)->push_back((yyvsp[0].part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 30044 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 688:
#line 6385 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_def_list)= (yyvsp[-2].part_def_list);
            if ((yyval.part_def_list)->push_back((yyvsp[0].part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 30054 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 689:
#line 6394 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_definition)= NEW_PTN PT_part_definition((yylsp[-5]), (yyvsp[-3].lexer.lex_str), (yyvsp[-2].opt_part_values).type, (yyvsp[-2].opt_part_values).values, (yylsp[-2]),
                                           (yyvsp[-1].partition_option_list), (yyvsp[0].sub_part_list), (yylsp[0]));
          }
#line 30063 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 690:
#line 6402 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_part_values).type= partition_type::HASH;
          }
#line 30071 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 691:
#line 6406 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_part_values).type= partition_type::RANGE;
            (yyval.opt_part_values).values= (yyvsp[0].part_value_item_list_paren);
          }
#line 30080 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 692:
#line 6411 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_part_values).type= partition_type::LIST;
            (yyval.opt_part_values).values= (yyvsp[0].part_values);
          }
#line 30089 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 693:
#line 6418 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_value_item_list_paren)= NULL; }
#line 30095 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 695:
#line 6424 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_values)= NEW_PTN PT_part_values_in_item((yylsp[0]), (yyvsp[0].part_value_item_list_paren));
          }
#line 30103 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 696:
#line 6428 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_values)= NEW_PTN PT_part_values_in_list((yylsp[0]), (yyvsp[-1].part_value_list));
          }
#line 30111 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 697:
#line 6435 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_list)= NEW_PTN
              Mem_root_array<PT_part_value_item_list_paren *>(YYMEM_ROOT);
            if ((yyval.part_value_list) == NULL || (yyval.part_value_list)->push_back((yyvsp[0].part_value_item_list_paren)))
              MYSQL_YYABORT; // OOM
          }
#line 30122 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 698:
#line 6442 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_list)= (yyvsp[-2].part_value_list);
            if ((yyval.part_value_list)->push_back((yyvsp[0].part_value_item_list_paren)))
              MYSQL_YYABORT; // OOM
          }
#line 30132 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 699:
#line 6451 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              This empty action is required because it resolves 2 reduce/reduce
              conflicts with an anonymous row expression:

              simple_expr:
                        ...
                      | '(' expr ',' expr_list ')'
            */
          }
#line 30147 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 700:
#line 6462 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_item_list_paren)= NEW_PTN PT_part_value_item_list_paren((yyvsp[-1].part_value_item_list), (yylsp[0]));
          }
#line 30155 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 701:
#line 6469 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_item_list)= NEW_PTN Mem_root_array<PT_part_value_item *>(YYMEM_ROOT);
            if ((yyval.part_value_item_list) == NULL || (yyval.part_value_item_list)->push_back((yyvsp[0].part_value_item)))
              MYSQL_YYABORT; // OOM
          }
#line 30165 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 702:
#line 6475 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_item_list)= (yyvsp[-2].part_value_item_list);
            if ((yyval.part_value_item_list)->push_back((yyvsp[0].part_value_item)))
              MYSQL_YYABORT; // OOM
          }
#line 30175 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 703:
#line 6483 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_value_item)= NEW_PTN PT_part_value_item_max((yylsp[0])); }
#line 30181 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 704:
#line 6484 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_value_item)= NEW_PTN PT_part_value_item_expr((yylsp[0]), (yyvsp[0].item)); }
#line 30187 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 705:
#line 6489 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.sub_part_list)= NULL; }
#line 30193 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 706:
#line 6490 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.sub_part_list)= (yyvsp[-1].sub_part_list); }
#line 30199 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 707:
#line 6495 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sub_part_list)= NEW_PTN Mem_root_array<PT_subpartition *>(YYMEM_ROOT);
            if ((yyval.sub_part_list) == NULL || (yyval.sub_part_list)->push_back((yyvsp[0].sub_part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 30209 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 708:
#line 6501 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sub_part_list)= (yyvsp[-2].sub_part_list);
            if ((yyval.sub_part_list)->push_back((yyvsp[0].sub_part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 30219 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 709:
#line 6510 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sub_part_definition)= NEW_PTN PT_subpartition((yylsp[-2]), (yyvsp[-1].lexer.lex_str).str, (yyvsp[0].partition_option_list));
          }
#line 30227 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 710:
#line 6516 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option_list)= NULL; }
#line 30233 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 712:
#line 6522 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.partition_option_list)= (yyvsp[-1].partition_option_list);
            if ((yyval.partition_option_list)->push_back((yyvsp[0].partition_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30243 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 713:
#line 6528 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.partition_option_list)= NEW_PTN Mem_root_array<PT_partition_option *>(YYMEM_ROOT);
            if ((yyval.partition_option_list) == NULL || (yyval.partition_option_list)->push_back((yyvsp[0].partition_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30253 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 714:
#line 6537 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_tablespace((yyvsp[0].lexer.lex_str).str); }
#line 30259 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 715:
#line 6539 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_engine(to_lex_cstring((yyvsp[0].lexer.lex_str))); }
#line 30265 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 716:
#line 6541 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_nodegroup((yyvsp[0].ulong_num)); }
#line 30271 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 717:
#line 6543 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_max_rows((yyvsp[0].ulonglong_number)); }
#line 30277 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 718:
#line 6545 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_min_rows((yyvsp[0].ulonglong_number)); }
#line 30283 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 719:
#line 6547 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_data_directory((yyvsp[0].lexer.lex_str).str); }
#line 30289 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 720:
#line 6549 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_index_directory((yyvsp[0].lexer.lex_str).str); }
#line 30295 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 721:
#line 6551 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_comment((yyvsp[0].lexer.lex_str).str); }
#line 30301 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 725:
#line 6566 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              If the statement has set READ ONLY already, and we repeat the
              READ ONLY option in the statement, the option must be set to
              the same value as before, otherwise, report an error.
            */
            if ((Lex->create_info->used_fields &
                 HA_CREATE_USED_READ_ONLY) &&
                (Lex->create_info->schema_read_only !=
                    ((yyvsp[0].ternary_option) == Ternary_option::ON))) {
              my_error(ER_CONFLICTING_DECLARATIONS, MYF(0), "READ ONLY", "=0",
                  "READ ONLY", "=1");
              MYSQL_YYABORT;
            }
            Lex->create_info->schema_read_only = ((yyvsp[0].ternary_option) == Ternary_option::ON);
            Lex->create_info->used_fields |= HA_CREATE_USED_READ_ONLY;
          }
#line 30323 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 726:
#line 6586 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30329 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 727:
#line 6587 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30335 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 728:
#line 6591 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30341 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 729:
#line 6592 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30347 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 730:
#line 6597 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (set_default_collation(Lex->create_info, (yyvsp[0].lexer.charset)))
              MYSQL_YYABORT;
          }
#line 30356 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 731:
#line 6602 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (set_default_charset(Lex->create_info, (yyvsp[0].lexer.charset)))
              MYSQL_YYABORT;
          }
#line 30365 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 732:
#line 6607 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Validate if we have either 'y|Y' or 'n|N'
            if (my_strcasecmp(system_charset_info, (yyvsp[0].lexer.lex_str).str, "Y") != 0 &&
                my_strcasecmp(system_charset_info, (yyvsp[0].lexer.lex_str).str, "N") != 0) {
              my_error(ER_WRONG_VALUE, MYF(0), "argument (should be Y or N)", (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            Lex->create_info->encrypt_type= (yyvsp[0].lexer.lex_str);
            Lex->create_info->used_fields |= HA_CREATE_USED_DEFAULT_ENCRYPTION;
          }
#line 30381 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 733:
#line 6621 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 30387 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 734:
#line 6622 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 30393 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 735:
#line 6627 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.space_separated_alter_table_opts)= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
            if ((yyval.space_separated_alter_table_opts) == NULL || (yyval.space_separated_alter_table_opts)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30403 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 736:
#line 6633 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.space_separated_alter_table_opts)= (yyvsp[-1].space_separated_alter_table_opts);
            if ((yyval.space_separated_alter_table_opts)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30413 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 737:
#line 6642 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_options)= NEW_PTN Mem_root_array<PT_create_table_option *>(YYMEM_ROOT);
            if ((yyval.create_table_options) == NULL || (yyval.create_table_options)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30423 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 738:
#line 6648 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_options)= (yyvsp[-2].create_table_options);
            if ((yyval.create_table_options)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30433 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 741:
#line 6662 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_engine_option(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 30441 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 742:
#line 6666 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_secondary_engine_option();
          }
#line 30449 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 743:
#line 6670 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_secondary_engine_option(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 30457 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 744:
#line 6674 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_max_rows_option((yyvsp[0].ulonglong_number));
          }
#line 30465 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 745:
#line 6678 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_min_rows_option((yyvsp[0].ulonglong_number));
          }
#line 30473 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 746:
#line 6682 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // The frm-format only allocated 4 bytes for avg_row_length, and
            // there is code which assumes it can be represented as an uint,
            // so we constrain it here.
            if ((yyvsp[0].ulonglong_number) > std::numeric_limits<std::uint32_t>::max()) {
              YYTHD->syntax_error_at((yylsp[0]),
              "The valid range for avg_row_length is [0,4294967295]. Error"
              );
              MYSQL_YYABORT;
            }
            (yyval.create_table_option)= NEW_PTN PT_create_avg_row_length_option((yyvsp[0].ulonglong_number));
          }
#line 30490 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 747:
#line 6695 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_password_option((yyvsp[0].lexer.lex_str).str);
          }
#line 30498 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 748:
#line 6699 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_commen_option((yyvsp[0].lexer.lex_str));
          }
#line 30506 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 749:
#line 6703 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_compress_option((yyvsp[0].lexer.lex_str));
          }
#line 30514 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 750:
#line 6707 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_encryption_option((yyvsp[0].lexer.lex_str));
          }
#line 30522 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 751:
#line 6711 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_auto_increment_option((yyvsp[0].ulonglong_number));
          }
#line 30530 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 752:
#line 6715 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_pack_keys_option((yyvsp[0].ternary_option));
          }
#line 30538 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 753:
#line 6719 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_auto_recalc_option((yyvsp[0].ternary_option));
          }
#line 30546 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 754:
#line 6723 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_persistent_option((yyvsp[0].ternary_option));
          }
#line 30554 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 755:
#line 6727 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* From user point of view STATS_SAMPLE_PAGES can be specified as
            STATS_SAMPLE_PAGES=N (where 0<N<=65535, it does not make sense to
            scan 0 pages) or STATS_SAMPLE_PAGES=default. Internally we record
            =default as 0. See create_frm() in sql/table.cc, we use only two
            bytes for stats_sample_pages and this is why we do not allow
            larger values. 65535 pages, 16kb each means to sample 1GB, which
            is impractical. If at some point this needs to be extended, then
            we can store the higher bits from stats_sample_pages in .frm too. */
            if ((yyvsp[0].ulong_num) == 0 || (yyvsp[0].ulong_num) > 0xffff)
            {
              YYTHD->syntax_error_at((yylsp[0]),
              "The valid range for stats_sample_pages is [1, 65535]. Error");
              MYSQL_YYABORT;
            }
            (yyval.create_table_option)= NEW_PTN PT_create_stats_stable_pages((yyvsp[0].ulong_num));
          }
#line 30576 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 756:
#line 6745 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_stable_pages;
          }
#line 30584 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 757:
#line 6749 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_checksum_option((yyvsp[0].ulong_num));
          }
#line 30592 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 758:
#line 6753 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_checksum_option((yyvsp[0].ulong_num));
          }
#line 30600 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 759:
#line 6757 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_delay_key_write_option((yyvsp[0].ulong_num));
          }
#line 30608 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 760:
#line 6761 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_row_format_option((yyvsp[0].row_type));
          }
#line 30616 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 761:
#line 6765 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_union_option((yyvsp[-1].table_list));
          }
#line 30624 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 762:
#line 6769 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_default_charset((yyvsp[0].lexer.charset));
          }
#line 30632 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 763:
#line 6773 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_default_collation((yyvsp[0].lexer.charset));
          }
#line 30640 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 764:
#line 6777 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_insert_method_option((yyvsp[0].ulong_num));
          }
#line 30648 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 765:
#line 6781 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_data_directory_option((yyvsp[0].lexer.lex_str).str);
          }
#line 30656 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 766:
#line 6785 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_index_directory_option((yyvsp[0].lexer.lex_str).str);
          }
#line 30664 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 767:
#line 6789 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_tablespace_option((yyvsp[0].lexer.lex_str).str);
          }
#line 30672 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 768:
#line 6793 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_storage_option(HA_SM_DISK);
          }
#line 30680 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 769:
#line 6797 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_storage_option(HA_SM_MEMORY);
          }
#line 30688 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 770:
#line 6801 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_connection_option((yyvsp[0].lexer.lex_str));
          }
#line 30696 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 771:
#line 6805 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // The frm-format only allocated 2 bytes for key_block_size,
            // even if it is represented as std::uint32_t in HA_CREATE_INFO and
            // elsewhere.
            if ((yyvsp[0].ulonglong_number) > std::numeric_limits<std::uint16_t>::max()) {
              YYTHD->syntax_error_at((yylsp[0]),
              "The valid range for key_block_size is [0,65535]. Error");
              MYSQL_YYABORT;
            }

            (yyval.create_table_option)= NEW_PTN
            PT_create_key_block_size_option(static_cast<std::uint32_t>((yyvsp[0].ulonglong_number)));
          }
#line 30714 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 772:
#line 6819 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_start_transaction_option(true);
	  }
#line 30722 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 773:
#line 6823 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option) = make_table_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 30730 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 774:
#line 6827 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option) = make_table_secondary_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 30738 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 775:
#line 6831 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option) = NEW_PTN PT_create_ts_autoextend_size_option((yyvsp[0].ulonglong_number));
          }
#line 30746 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 776:
#line 6838 "sql_yacc.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                (yyval.ternary_option)= Ternary_option::OFF;
                break;
            case 1:
                (yyval.ternary_option)= Ternary_option::ON;
                break;
            default:
                YYTHD->syntax_error();
                MYSQL_YYABORT;
            }
          }
#line 30764 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 777:
#line 6851 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ternary_option)= Ternary_option::DEFAULT; }
#line 30770 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 778:
#line 6855 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset); }
#line 30776 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 779:
#line 6859 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset);}
#line 30782 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 780:
#line 6863 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str);}
#line 30788 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 781:
#line 6867 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_DEFAULT; }
#line 30794 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 782:
#line 6868 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_FIXED; }
#line 30800 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 783:
#line 6869 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_DYNAMIC; }
#line 30806 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 784:
#line 6870 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_COMPRESSED; }
#line 30812 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 785:
#line 6871 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_REDUNDANT; }
#line 30818 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 786:
#line 6872 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_COMPACT; }
#line 30824 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 787:
#line 6876 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_DISABLED; }
#line 30830 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 788:
#line 6877 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_TO_FIRST; }
#line 30836 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 789:
#line 6878 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_TO_LAST; }
#line 30842 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 790:
#line 6882 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) STRING_RESULT; }
#line 30848 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 791:
#line 6883 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) REAL_RESULT; }
#line 30854 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 792:
#line 6884 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) DECIMAL_RESULT; }
#line 30860 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 793:
#line 6885 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) INT_RESULT; }
#line 30866 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 794:
#line 6890 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_element_list)= NEW_PTN Mem_root_array<PT_table_element *>(YYMEM_ROOT);
            if ((yyval.table_element_list) == NULL || (yyval.table_element_list)->push_back((yyvsp[0].table_element)))
              MYSQL_YYABORT; // OOM
          }
#line 30876 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 795:
#line 6896 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_element_list)= (yyvsp[-2].table_element_list);
            if ((yyval.table_element_list)->push_back((yyvsp[0].table_element)))
              MYSQL_YYABORT; // OOM
          }
#line 30886 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 796:
#line 6904 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_element)= (yyvsp[0].column_def); }
#line 30892 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 797:
#line 6905 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_element)= (yyvsp[0].table_constraint_def); }
#line 30898 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 798:
#line 6910 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_def)= NEW_PTN PT_column_def((yyvsp[-2].lexer.lex_str), (yyvsp[-1].field_def), (yyvsp[0].table_constraint_def));
          }
#line 30906 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 799:
#line 6916 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_constraint_def)= NULL; }
#line 30912 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 800:
#line 6918 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Currently we ignore FK references here: */
            (yyval.table_constraint_def)= NULL;
          }
#line 30921 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 801:
#line 6927 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition(KEYTYPE_MULTIPLE,
                                                   (yyvsp[-4].index_name_and_type).name, (yyvsp[-4].index_name_and_type).type, (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 30930 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 802:
#line 6933 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition(KEYTYPE_FULLTEXT, (yyvsp[-4].lexer.lex_str), NULL,
                                                   (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 30939 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 803:
#line 6939 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition(KEYTYPE_SPATIAL, (yyvsp[-4].lexer.lex_str), NULL, (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 30947 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 804:
#line 6944 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Constraint-implementing indexes are named by the constraint type
              by default.
            */
            LEX_STRING name= (yyvsp[-4].index_name_and_type).name.str != NULL ? (yyvsp[-4].index_name_and_type).name : (yyvsp[-6].lexer.lex_str);
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition((yyvsp[-5].key_type), name, (yyvsp[-4].index_name_and_type).type, (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 30960 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 805:
#line 6953 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_foreign_key_definition((yyvsp[-7].lexer.lex_str), (yyvsp[-4].lexer.lex_str), (yyvsp[-2].index_column_list), (yyvsp[0].fk_references).table_name,
                                                  (yyvsp[0].fk_references).reference_list,
                                                  (yyvsp[0].fk_references).fk_match_option,
                                                  (yyvsp[0].fk_references).fk_update_opt,
                                                  (yyvsp[0].fk_references).fk_delete_opt);
          }
#line 30972 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 806:
#line 6961 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_check_constraint((yyvsp[-2].lexer.lex_str), (yyvsp[-1].item), (yyvsp[0].is_not_empty));
            if ((yyval.table_constraint_def) == nullptr) MYSQL_YYABORT; // OOM
          }
#line 30981 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 807:
#line 6968 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[-1].item); }
#line 30987 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 808:
#line 6972 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= NULL_STR; }
#line 30993 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 809:
#line 6973 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 30999 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 810:
#line 6977 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 31005 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 811:
#line 6978 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 31011 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 812:
#line 6982 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 31017 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 813:
#line 6983 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= (yyvsp[0].is_not_empty); }
#line 31023 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 814:
#line 6987 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= !((yyvsp[-1].is_not_empty)); }
#line 31029 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 815:
#line 6992 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_def)= NEW_PTN PT_field_def((yyvsp[-1].type), (yyvsp[0].col_attr_list));
          }
#line 31037 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 816:
#line 6998 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *opt_attrs= (yyvsp[0].col_attr_list);
            if ((yyvsp[-7].lexer.charset) != NULL)
            {
              if (opt_attrs == NULL)
              {
                opt_attrs= NEW_PTN
                  Mem_root_array<PT_column_attr_base *>(YYMEM_ROOT);
              }
              auto *collation= NEW_PTN PT_collate_column_attr((yylsp[-7]), (yyvsp[-7].lexer.charset));
              if (opt_attrs == nullptr || collation == nullptr ||
                  opt_attrs->push_back(collation))
                MYSQL_YYABORT; // OOM
            }
            (yyval.field_def)= NEW_PTN PT_generated_field_def((yyvsp[-8].type), (yyvsp[-3].item), (yyvsp[-1].virtual_or_stored), opt_attrs);
          }
#line 31058 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 819:
#line 7022 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.virtual_or_stored)= Virtual_or_stored::VIRTUAL; }
#line 31064 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 820:
#line 7023 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.virtual_or_stored)= Virtual_or_stored::VIRTUAL; }
#line 31070 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 821:
#line 7024 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.virtual_or_stored)= Virtual_or_stored::STORED; }
#line 31076 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 822:
#line 7029 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_numeric_type(YYTHD, (yyvsp[-2].int_type), (yyvsp[-1].c_str), (yyvsp[0].field_option));
          }
#line 31084 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 823:
#line 7033 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_numeric_type(YYTHD, (yyvsp[-2].numeric_type), (yyvsp[-1].precision).length, (yyvsp[-1].precision).dec, (yyvsp[0].field_option));
          }
#line 31092 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 824:
#line 7037 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_numeric_type(YYTHD, (yyvsp[-2].numeric_type), (yyvsp[-1].precision).length, (yyvsp[-1].precision).dec, (yyvsp[0].field_option));
          }
#line 31100 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 825:
#line 7041 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_bit_type;
          }
#line 31108 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 826:
#line 7045 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_bit_type((yyvsp[0].c_str));
          }
#line 31116 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 827:
#line 7049 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_boolean_type;
          }
#line 31124 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 828:
#line 7053 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_boolean_type;
          }
#line 31132 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 829:
#line 7057 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[-1].c_str), (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31141 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 830:
#line 7062 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31150 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 831:
#line 7067 "sql_yacc.yy" /* yacc.c:1646  */
    {
            const CHARSET_INFO *cs= (yyvsp[0].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[-1].c_str), cs);
            warn_about_deprecated_national(YYTHD);
          }
#line 31163 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 832:
#line 7076 "sql_yacc.yy" /* yacc.c:1646  */
    {
            const CHARSET_INFO *cs= (yyvsp[0].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, cs);
            warn_about_deprecated_national(YYTHD);
          }
#line 31176 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 833:
#line 7085 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[0].c_str), &my_charset_bin);
          }
#line 31184 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 834:
#line 7089 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, &my_charset_bin);
          }
#line 31192 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 835:
#line 7093 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[-1].c_str), (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31201 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 836:
#line 7098 "sql_yacc.yy" /* yacc.c:1646  */
    {
            const CHARSET_INFO *cs= (yyvsp[0].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[-1].c_str), cs);
            warn_about_deprecated_national(YYTHD);
          }
#line 31214 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 837:
#line 7107 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[0].c_str), &my_charset_bin);
          }
#line 31222 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 838:
#line 7111 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].c_str))
            {
              errno= 0;
              ulong length= strtoul((yyvsp[-1].c_str), NULL, 10);
              if (errno != 0 || length != 4)
              {
                /* Only support length is 4 */
                my_error(ER_INVALID_YEAR_COLUMN_LENGTH, MYF(0), "YEAR");
                MYSQL_YYABORT;
              }
              push_deprecated_warn(YYTHD, "YEAR(4)", "YEAR");
            }
            if ((yyvsp[0].field_option) == UNSIGNED_FLAG)
            {
              push_warning(YYTHD, Sql_condition::SL_WARNING,
                           ER_WARN_DEPRECATED_SYNTAX_NO_REPLACEMENT,
                           ER_THD(YYTHD, ER_WARN_DEPRECATED_YEAR_UNSIGNED));
            }
            // We can ignore field length and UNSIGNED/ZEROFILL attributes here.
            (yyval.type)= NEW_PTN PT_year_type;
          }
#line 31249 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 839:
#line 7134 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_date_type;
          }
#line 31257 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 840:
#line 7138 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_time_type(Time_type::TIME, (yyvsp[0].c_str));
          }
#line 31265 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 841:
#line 7142 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_timestamp_type((yyvsp[0].c_str));
          }
#line 31273 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 842:
#line 7146 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_time_type(Time_type::DATETIME, (yyvsp[0].c_str));
          }
#line 31281 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 843:
#line 7150 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::TINY, &my_charset_bin);
          }
#line 31289 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 844:
#line 7154 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type((yyvsp[0].c_str));
          }
#line 31297 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 846:
#line 7159 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, &my_charset_bin);
          }
#line 31305 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 847:
#line 7163 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::LONG, &my_charset_bin);
          }
#line 31313 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 848:
#line 7167 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, &my_charset_bin);
          }
#line 31321 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 849:
#line 7171 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31330 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 850:
#line 7176 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::TINY, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31339 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 851:
#line 7181 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::TEXT, (yyvsp[-1].c_str), (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31348 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 852:
#line 7186 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31357 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 853:
#line 7191 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::LONG, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31366 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 854:
#line 7196 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_enum_type((yyvsp[-2].string_list), (yyvsp[0].charset_with_opt_binary).charset, (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31374 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 855:
#line 7200 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_set_type((yyvsp[-2].string_list), (yyvsp[0].charset_with_opt_binary).charset, (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31382 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 856:
#line 7204 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 31391 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 857:
#line 7209 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_serial_type;
          }
#line 31399 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 858:
#line 7213 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_json_type;
          }
#line 31407 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 859:
#line 7220 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_GEOMETRY); }
#line 31413 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 860:
#line 7222 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_GEOMETRYCOLLECTION); }
#line 31419 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 861:
#line 7224 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_POINT); }
#line 31425 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 862:
#line 7226 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTIPOINT); }
#line 31431 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 863:
#line 7228 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_LINESTRING); }
#line 31437 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 864:
#line 7230 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTILINESTRING); }
#line 31443 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 865:
#line 7232 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_POLYGON); }
#line 31449 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 866:
#line 7234 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTIPOLYGON); }
#line 31455 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 867:
#line 7238 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31461 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 868:
#line 7239 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31467 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 869:
#line 7243 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31473 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 870:
#line 7244 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31479 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 871:
#line 7248 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31485 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 872:
#line 7249 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31491 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 873:
#line 7250 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31497 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 874:
#line 7251 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31503 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 875:
#line 7252 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31509 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 876:
#line 7256 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::INT; }
#line 31515 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 877:
#line 7257 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::TINYINT; }
#line 31521 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 878:
#line 7258 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::SMALLINT; }
#line 31527 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 879:
#line 7259 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::MEDIUMINT; }
#line 31533 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 880:
#line 7260 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::BIGINT; }
#line 31539 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 881:
#line 7265 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.numeric_type)= YYTHD->variables.sql_mode & MODE_REAL_AS_FLOAT ?
              Numeric_type::FLOAT : Numeric_type::DOUBLE;
          }
#line 31548 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 882:
#line 7270 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DOUBLE; }
#line 31554 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 885:
#line 7279 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::FLOAT; }
#line 31560 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 886:
#line 7280 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
#line 31566 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 887:
#line 7281 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
#line 31572 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 888:
#line 7282 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
#line 31578 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 889:
#line 7287 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length = nullptr;
            (yyval.precision).dec = nullptr;
          }
#line 31587 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 890:
#line 7292 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length = (yyvsp[0].c_str);
            (yyval.precision).dec = nullptr;
          }
#line 31596 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 891:
#line 7300 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= NULL;
            (yyval.precision).dec= NULL;
          }
#line 31605 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 892:
#line 7305 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= (yyvsp[0].c_str);
            (yyval.precision).dec= NULL;
          }
#line 31614 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 894:
#line 7314 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= (yyvsp[-3].lexer.lex_str).str;
            (yyval.precision).dec= (yyvsp[-1].lexer.lex_str).str;
          }
#line 31623 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 895:
#line 7322 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= NULL; }
#line 31629 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 896:
#line 7323 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 31635 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 897:
#line 7327 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 31641 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 898:
#line 7328 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 31647 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 899:
#line 7330 "sql_yacc.yy" /* yacc.c:1646  */
    {
             int error;
             (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[-1].lexer.lex_str).str, NULL, &error);
           }
#line 31656 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 900:
#line 7337 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_option) = 0; }
#line 31662 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 902:
#line 7343 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_option) = (yyvsp[-1].field_option) | (yyvsp[0].field_option);
          }
#line 31670 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 904:
#line 7350 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_option) = 0; }
#line 31676 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 905:
#line 7351 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_option) = UNSIGNED_FLAG; }
#line 31682 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 906:
#line 7352 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_option) = ZEROFILL_FLAG;
            push_warning(YYTHD, Sql_condition::SL_WARNING,
                         ER_WARN_DEPRECATED_SYNTAX_NO_REPLACEMENT,
                         ER_THD(YYTHD, ER_WARN_DEPRECATED_ZEROFILL));
          }
#line 31693 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 907:
#line 7361 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 31699 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 908:
#line 7362 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 31705 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 909:
#line 7363 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 31711 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 910:
#line 7364 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 31717 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 911:
#line 7367 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= NULL; /* use default length */ }
#line 31723 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 913:
#line 7373 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= NULL;
            (yyval.precision).dec = NULL;
          }
#line 31732 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 915:
#line 7381 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.col_attr_list)= NULL; }
#line 31738 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 917:
#line 7387 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr_list)= (yyvsp[-1].col_attr_list);
            if ((yyvsp[0].col_attr) == nullptr)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].col_attr)->has_constraint_enforcement()) {
              // $2 is `[NOT] ENFORCED`
              if ((yyvsp[-1].col_attr_list)->back()->set_constraint_enforcement(
                      (yyvsp[0].col_attr)->is_constraint_enforced())) {
                // $1 is not `CHECK(...)`
                YYTHD->syntax_error_at((yylsp[0]));
                MYSQL_YYABORT;
              }
            } else {
              if ((yyval.col_attr_list)->push_back((yyvsp[0].col_attr)))
                MYSQL_YYABORT; // OOM
            }
          }
#line 31761 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 918:
#line 7406 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].col_attr) == nullptr)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].col_attr)->has_constraint_enforcement()) {
              // [NOT] ENFORCED doesn't follow the CHECK clause
              YYTHD->syntax_error_at((yylsp[0]));
              MYSQL_YYABORT;
            }

            (yyval.col_attr_list)=
              NEW_PTN Mem_root_array<PT_column_attr_base *>(YYMEM_ROOT);
            if ((yyval.col_attr_list) == NULL || (yyval.col_attr_list)->push_back((yyvsp[0].col_attr)))
              MYSQL_YYABORT; // OOM
          }
#line 31781 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 919:
#line 7425 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_null_column_attr;
          }
#line 31789 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 920:
#line 7429 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_not_null_column_attr;
          }
#line 31797 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 921:
#line 7433 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_secondary_column_attr;
          }
#line 31805 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 922:
#line 7437 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_default_column_attr((yyvsp[0].item));
          }
#line 31813 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 923:
#line 7441 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_generated_default_val_column_attr((yyvsp[-1].item));
          }
#line 31821 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 924:
#line 7445 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_on_update_column_attr(static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 31829 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 925:
#line 7449 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_auto_increment_column_attr;
          }
#line 31837 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 926:
#line 7453 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_serial_default_value_column_attr;
          }
#line 31845 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 927:
#line 7457 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_primary_key_column_attr;
          }
#line 31853 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 928:
#line 7461 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_unique_key_column_attr;
          }
#line 31861 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 929:
#line 7465 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_unique_key_column_attr;
          }
#line 31869 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 930:
#line 7469 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_comment_column_attr(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 31877 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 931:
#line 7473 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_collate_column_attr((yylsp[0]), (yyvsp[0].lexer.charset));
          }
#line 31885 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 932:
#line 7477 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_column_format_column_attr((yyvsp[0].column_format));
          }
#line 31893 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 933:
#line 7481 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_storage_media_column_attr((yyvsp[0].storage_media));
          }
#line 31901 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 934:
#line 7485 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulonglong_number) > std::numeric_limits<gis::srid_t>::max())
            {
              my_error(ER_DATA_OUT_OF_RANGE, MYF(0), "SRID", "SRID");
              MYSQL_YYABORT;
            }
            (yyval.col_attr)= NEW_PTN PT_srid_column_attr(static_cast<gis::srid_t>((yyvsp[0].ulonglong_number)));
          }
#line 31914 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 935:
#line 7495 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_check_constraint_column_attr((yyvsp[-1].lexer.lex_str), (yyvsp[0].item));
          }
#line 31922 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 936:
#line 7508 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr) = NEW_PTN PT_constraint_enforcement_attr((yyvsp[0].is_not_empty));
          }
#line 31930 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 937:
#line 7512 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr) = make_column_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 31938 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 938:
#line 7516 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr) = make_column_secondary_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 31946 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 939:
#line 7520 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr) = NEW_PTN PT_column_visibility_attr((yyvsp[0].visibility));
          }
#line 31954 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 940:
#line 7526 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_DEFAULT; }
#line 31960 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 941:
#line 7527 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_FIXED; }
#line 31966 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 942:
#line 7528 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_DYNAMIC; }
#line 31972 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 943:
#line 7532 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.storage_media)= HA_SM_DEFAULT; }
#line 31978 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 944:
#line 7533 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.storage_media)= HA_SM_DISK; }
#line 31984 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 945:
#line 7534 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.storage_media)= HA_SM_MEMORY; }
#line 31990 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 946:
#line 7539 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ulong_num)= (yyvsp[0].ulong_num);
          }
#line 31998 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 947:
#line 7545 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_now_local((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 32006 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 951:
#line 7558 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lexer.charset)=get_charset_by_csname((yyvsp[0].lexer.lex_str).str,MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            YYLIP->warn_on_deprecated_charset((yyval.lexer.charset), (yyvsp[0].lexer.lex_str).str);
          }
#line 32019 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 952:
#line 7566 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= &my_charset_bin; }
#line 32025 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 953:
#line 7570 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= NULL; }
#line 32031 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 954:
#line 7571 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset); }
#line 32037 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 955:
#line 7576 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lexer.charset)=get_charset_by_csname((yyvsp[0].lexer.lex_str).str,MY_CS_PRIMARY,MYF(0))) &&
                !((yyval.lexer.charset)=get_old_charset_by_name((yyvsp[0].lexer.lex_str).str)))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 32050 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 956:
#line 7584 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= &my_charset_bin; }
#line 32056 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 957:
#line 7588 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)=(yyvsp[0].lexer.charset);   }
#line 32062 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 958:
#line 7589 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)=NULL; }
#line 32068 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 959:
#line 7594 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lexer.charset)= mysqld_collation_get_by_name((yyvsp[0].lexer.lex_str).str)))
              MYSQL_YYABORT;
            YYLIP->warn_on_deprecated_collation((yyval.lexer.charset));
          }
#line 32078 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 960:
#line 7599 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= &my_charset_bin; }
#line 32084 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 961:
#line 7603 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = nullptr; }
#line 32090 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 962:
#line 7604 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset); }
#line 32096 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 963:
#line 7608 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32102 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 964:
#line 7609 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32108 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 965:
#line 7614 "sql_yacc.yy" /* yacc.c:1646  */
    {
          push_deprecated_warn(YYTHD, "ASCII", "CHARACTER SET charset_name");
          (yyval.lexer.charset)= &my_charset_latin1;
        }
#line 32117 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 966:
#line 7618 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            push_deprecated_warn(YYTHD, "ASCII", "CHARACTER SET charset_name");
            (yyval.lexer.charset)= &my_charset_latin1_bin;
        }
#line 32127 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 967:
#line 7623 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "ASCII", "CHARACTER SET charset_name");
            warn_about_deprecated_binary(YYTHD);
            (yyval.lexer.charset)= &my_charset_latin1_bin;
        }
#line 32137 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 968:
#line 7632 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "UNICODE", "CHARACTER SET charset_name");
            if (!((yyval.lexer.charset)= get_charset_by_csname("ucs2", MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), "ucs2");
              MYSQL_YYABORT;
            }
          }
#line 32150 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 969:
#line 7641 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "UNICODE", "CHARACTER SET charset_name");
            warn_about_deprecated_binary(YYTHD);
            if (!((yyval.lexer.charset)= mysqld_collation_get_by_name("ucs2_bin")))
              MYSQL_YYABORT;
          }
#line 32161 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 970:
#line 7648 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            push_deprecated_warn(YYTHD, "UNICODE", "CHARACTER SET charset_name");
            if (!((yyval.lexer.charset)= mysqld_collation_get_by_name("ucs2_bin")))
              my_error(ER_UNKNOWN_COLLATION, MYF(0), "ucs2_bin");
          }
#line 32172 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 971:
#line 7658 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= NULL;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 32181 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 972:
#line 7663 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[0].lexer.charset);
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 32190 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 973:
#line 7668 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[0].lexer.charset);
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 32199 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 974:
#line 7673 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= &my_charset_bin;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 32208 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 975:
#line 7678 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[0].is_not_empty) ? get_bin_collation((yyvsp[-1].lexer.charset)) : (yyvsp[-1].lexer.charset);
            if ((yyval.charset_with_opt_binary).charset == NULL)
              MYSQL_YYABORT;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 32219 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 976:
#line 7685 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.charset_with_opt_binary).charset= NULL;
            (yyval.charset_with_opt_binary).force_binary= true;
          }
#line 32229 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 977:
#line 7691 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.charset_with_opt_binary).charset= get_bin_collation((yyvsp[0].lexer.charset));
            if ((yyval.charset_with_opt_binary).charset == NULL)
              MYSQL_YYABORT;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 32241 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 978:
#line 7701 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 32247 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 979:
#line 7702 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.is_not_empty)= true;
          }
#line 32256 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 980:
#line 7710 "sql_yacc.yy" /* yacc.c:1646  */
    {
          if ((yyvsp[0].ulong_num) == 0)
          {
            YYTHD->syntax_error();
            MYSQL_YYABORT;
          }
        }
#line 32268 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 981:
#line 7718 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[-2].ulong_num); }
#line 32274 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 984:
#line 7732 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_references).table_name= (yyvsp[-3].table);
            (yyval.fk_references).reference_list= (yyvsp[-2].reference_list);
            (yyval.fk_references).fk_match_option= (yyvsp[-1].opt_match_clause);
            (yyval.fk_references).fk_update_opt= (yyvsp[0].fk_options).fk_update_opt;
            (yyval.fk_references).fk_delete_opt= (yyvsp[0].fk_options).fk_delete_opt;
          }
#line 32286 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 985:
#line 7742 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.reference_list)= NULL; }
#line 32292 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 986:
#line 7743 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.reference_list)= (yyvsp[-1].reference_list); }
#line 32298 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 987:
#line 7748 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.reference_list)= (yyvsp[-2].reference_list);
            auto key= NEW_PTN Key_part_spec(to_lex_cstring((yyvsp[0].lexer.lex_str)), 0, ORDER_ASC);
            if (key == NULL || (yyval.reference_list)->push_back(key))
              MYSQL_YYABORT;
          }
#line 32309 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 988:
#line 7755 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.reference_list)= NEW_PTN List<Key_part_spec>;
            auto key= NEW_PTN Key_part_spec(to_lex_cstring((yyvsp[0].lexer.lex_str)), 0, ORDER_ASC);
            if ((yyval.reference_list) == NULL || key == NULL || (yyval.reference_list)->push_back(key))
              MYSQL_YYABORT;
          }
#line 32320 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 989:
#line 7764 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_UNDEF; }
#line 32326 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 990:
#line 7765 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_FULL; }
#line 32332 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 991:
#line 7766 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_PARTIAL; }
#line 32338 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 992:
#line 7767 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_SIMPLE; }
#line 32344 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 993:
#line 7772 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= FK_OPTION_UNDEF;
            (yyval.fk_options).fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 32353 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 994:
#line 7777 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[0].m_fk_option);
            (yyval.fk_options).fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 32362 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 995:
#line 7782 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= FK_OPTION_UNDEF;
            (yyval.fk_options).fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 32371 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 996:
#line 7788 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[-3].m_fk_option);
            (yyval.fk_options).fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 32380 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 997:
#line 7794 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[0].m_fk_option);
            (yyval.fk_options).fk_delete_opt= (yyvsp[-3].m_fk_option);
          }
#line 32389 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 998:
#line 7801 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_RESTRICT; }
#line 32395 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 999:
#line 7802 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_CASCADE; }
#line 32401 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1000:
#line 7803 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_SET_NULL; }
#line 32407 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1001:
#line 7804 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_NO_ACTION; }
#line 32413 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1002:
#line 7805 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_DEFAULT;  }
#line 32419 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1003:
#line 7809 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= KEYTYPE_PRIMARY; }
#line 32425 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1004:
#line 7810 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= KEYTYPE_UNIQUE; }
#line 32431 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1005:
#line 7814 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32437 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1006:
#line 7815 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32443 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1007:
#line 7819 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32449 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1009:
#line 7824 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32455 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1010:
#line 7825 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32461 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1011:
#line 7826 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32467 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1012:
#line 7830 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= KEYTYPE_MULTIPLE; }
#line 32473 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1013:
#line 7831 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= KEYTYPE_UNIQUE; }
#line 32479 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1014:
#line 7835 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_options).init(YYMEM_ROOT); }
#line 32485 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1016:
#line 7841 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
          }
#line 32495 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1017:
#line 7847 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[-1].index_options);
          }
#line 32505 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1019:
#line 7857 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING plugin_name= {(yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length};
            if (!plugin_is_ready(plugin_name, MYSQL_FTPARSER_PLUGIN))
            {
              my_error(ER_FUNCTION_NOT_DEFINED, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            else
              (yyval.index_option)= NEW_PTN PT_fulltext_index_parser_name(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 32520 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1020:
#line 7870 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_options).init(YYMEM_ROOT); }
#line 32526 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1022:
#line 7876 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
          }
#line 32536 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1023:
#line 7882 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[-1].index_options);
          }
#line 32546 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1025:
#line 7894 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_options).init(YYMEM_ROOT); }
#line 32552 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1027:
#line 7900 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
          }
#line 32562 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1028:
#line 7906 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[-1].index_options);
          }
#line 32572 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1029:
#line 7914 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= (yyvsp[0].index_option); }
#line 32578 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1030:
#line 7915 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= (yyvsp[0].index_option); }
#line 32584 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1031:
#line 7920 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= NEW_PTN PT_block_size((yyvsp[0].ulong_num)); }
#line 32590 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1032:
#line 7922 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_option)= NEW_PTN PT_index_comment(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 32598 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1033:
#line 7926 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_option)= NEW_PTN PT_index_visibility((yyvsp[0].visibility));
          }
#line 32606 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1034:
#line 7930 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_option) = make_index_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 32614 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1035:
#line 7934 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_option) = make_index_secondary_engine_attribute(YYMEM_ROOT, (yyvsp[0].lex_cstr));
          }
#line 32622 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1036:
#line 7957 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_name_and_type)= {(yyvsp[0].lexer.lex_str), NULL}; }
#line 32628 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1037:
#line 7958 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_name_and_type)= {(yyvsp[-2].lexer.lex_str), NEW_PTN PT_index_type((yyvsp[0].key_alg))}; }
#line 32634 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1038:
#line 7959 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_name_and_type)= {(yyvsp[-2].lexer.lex_str), NEW_PTN PT_index_type((yyvsp[0].key_alg))}; }
#line 32640 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1039:
#line 7963 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option) = nullptr; }
#line 32646 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1041:
#line 7968 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= NEW_PTN PT_index_type((yyvsp[0].key_alg)); }
#line 32652 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1042:
#line 7969 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= NEW_PTN PT_index_type((yyvsp[0].key_alg)); }
#line 32658 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1043:
#line 7973 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.visibility)= true; }
#line 32664 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1044:
#line 7974 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.visibility)= false; }
#line 32670 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1045:
#line 7978 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_BTREE; }
#line 32676 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1046:
#line 7979 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_RTREE; }
#line 32682 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1047:
#line 7980 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_HASH; }
#line 32688 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1048:
#line 7985 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; // OOM
            (yyval.index_column_list)= (yyvsp[-2].index_column_list);
          }
#line 32698 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1049:
#line 7991 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // The order is ignored.
            (yyval.index_column_list)= NEW_PTN List<PT_key_part_specification>;
            if ((yyval.index_column_list) == NULL || (yyval.index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; // OOM
          }
#line 32709 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1050:
#line 8001 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_part)= NEW_PTN PT_key_part_specification(to_lex_cstring((yyvsp[-1].lexer.lex_str)), (yyvsp[0].order_direction), 0);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
#line 32719 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1051:
#line 8007 "sql_yacc.yy" /* yacc.c:1646  */
    {
            int key_part_length= atoi((yyvsp[-2].lexer.lex_str).str);
            if (!key_part_length)
            {
              my_error(ER_KEY_PART_0, MYF(0), (yyvsp[-4].lexer.lex_str).str);
            }
            (yyval.key_part)= NEW_PTN PT_key_part_specification(to_lex_cstring((yyvsp[-4].lexer.lex_str)), (yyvsp[0].order_direction),
                                                  key_part_length);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT; /* purecov: deadcode */
          }
#line 32735 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1052:
#line 8022 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; /* purecov: deadcode */
            (yyval.index_column_list)= (yyvsp[-2].index_column_list);
          }
#line 32745 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1053:
#line 8028 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // The order is ignored.
            (yyval.index_column_list)= NEW_PTN List<PT_key_part_specification>;
            if ((yyval.index_column_list) == NULL || (yyval.index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; /* purecov: deadcode */
          }
#line 32756 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1055:
#line 8039 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_part)= NEW_PTN PT_key_part_specification((yyvsp[-2].item), (yyvsp[0].order_direction));
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
#line 32766 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1056:
#line 8047 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= NULL_STR; }
#line 32772 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1058:
#line 8053 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= NEW_PTN List<String>;
            if ((yyval.string_list) == NULL || (yyval.string_list)->push_back((yyvsp[0].string)))
              MYSQL_YYABORT; // OOM
          }
#line 32782 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1059:
#line 8059 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.string_list)->push_back((yyvsp[0].string)))
              MYSQL_YYABORT;
          }
#line 32791 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1060:
#line 8071 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_table_stmt(
                  YYMEM_ROOT,
                  (yyvsp[-1].table),
                  (yyvsp[0].alter_list).actions,
                  (yyvsp[0].alter_list).flags.algo.get_or_default(),
                  (yyvsp[0].alter_list).flags.lock.get_or_default(),
                  (yyvsp[0].alter_list).flags.validation.get_or_default());
          }
#line 32805 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1061:
#line 8081 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_table_standalone_stmt(
                  YYMEM_ROOT,
                  (yyvsp[-1].table),
                  (yyvsp[0].standalone_alter_table_action).action,
                  (yyvsp[0].standalone_alter_table_action).flags.algo.get_or_default(),
                  (yyvsp[0].standalone_alter_table_action).flags.lock.get_or_default(),
                  (yyvsp[0].standalone_alter_table_action).flags.validation.get_or_default());
          }
#line 32819 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1062:
#line 8094 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            Lex->create_info->default_table_charset= NULL;
            Lex->create_info->used_fields= 0;
          }
#line 32831 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1063:
#line 8102 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_ALTER_DB;
            lex->name= (yyvsp[-2].lexer.lex_str);
            if (lex->name.str == NULL &&
                lex->copy_db_to(&lex->name.str, &lex->name.length))
              MYSQL_YYABORT;
          }
#line 32844 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1064:
#line 8114 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 32859 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1065:
#line 8125 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_PROCEDURE;
            lex->spname= (yyvsp[-2].spname);
          }
#line 32870 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1066:
#line 8135 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 32885 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1067:
#line 8146 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_FUNCTION;
            lex->spname= (yyvsp[-2].spname);
          }
#line 32896 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1068:
#line 8156 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_mode= enum_view_create_mode::VIEW_ALTER;
          }
#line 32911 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1069:
#line 8167 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32917 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1070:
#line 8174 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED;
            lex->create_view_mode= enum_view_create_mode::VIEW_ALTER;
          }
#line 32933 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1071:
#line 8186 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32939 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1072:
#line 8191 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              It is safe to use Lex->spname because
              ALTER EVENT xxx RENATE TO yyy DO ALTER EVENT RENAME TO
              is not allowed. Lex->spname is used in the case of RENAME TO
              If it had to be supported spname had to be added to
              Event_parse_data.
            */

            if (!(Lex->event_parse_data= new (YYTHD->mem_root) Event_parse_data()))
              MYSQL_YYABORT;
            Lex->event_parse_data->identifier= (yyvsp[0].spname);

            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
#line 32959 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1073:
#line 8211 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyvsp[-4].num) || (yyvsp[-3].num) || (yyvsp[-2].num) || (yyvsp[-1].num) || (yyvsp[0].num)))
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
#line 32976 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1074:
#line 8228 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_logfile_group{ALTER_LOGFILE_GROUP,
                                                          (yyvsp[-3].lexer.lex_str), pc, (yyvsp[-1].lexer.lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 32999 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1075:
#line 8250 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_alter_tablespace_add_datafile{(yyvsp[-3].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 33021 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1076:
#line 8269 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_tablespace_drop_datafile{(yyvsp[-3].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 33044 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1077:
#line 8288 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_alter_tablespace_rename{(yyvsp[-3].lexer.lex_str), (yyvsp[0].lexer.lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 33056 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1078:
#line 8296 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_tablespace{(yyvsp[-1].lexer.lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 33079 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1079:
#line 8319 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_alter_undo_tablespace{
              ALTER_UNDO_TABLESPACE, (yyvsp[-3].lexer.lex_str),
              {nullptr, 0}, pc, (yyvsp[-1].alter_tablespace_type)};
            if (!cmd)
              MYSQL_YYABORT; //OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 33103 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1080:
#line 8342 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_SERVER;
            lex->server_options.m_server_name= (yyvsp[-4].lexer.lex_str);
            lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_server(&Lex->server_options);
          }
#line 33115 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1082:
#line 8357 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-3].lex_user)->first_factor_auth_info = *(yyvsp[-2].lex_mfa);

            if ((yyvsp[-1].lex_cstr).str != nullptr) {
              (yyvsp[-3].lex_user)->current_auth = (yyvsp[-1].lex_cstr);
              (yyvsp[-3].lex_user)->uses_replace_clause = true;
            }
            (yyvsp[-3].lex_user)->discard_old_password = false;
            (yyvsp[-3].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
          }
#line 33130 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1083:
#line 8369 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-3].lex_user)->first_factor_auth_info = *(yyvsp[-2].lex_mfa);

            if ((yyvsp[-1].lex_cstr).str != nullptr) {
              (yyvsp[-3].lex_user)->current_auth = (yyvsp[-1].lex_cstr);
              (yyvsp[-3].lex_user)->uses_replace_clause = true;
            }
            (yyvsp[-3].lex_user)->discard_old_password = false;
            (yyvsp[-3].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
          }
#line 33145 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1084:
#line 8380 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-3].lex_user)->discard_old_password = true;
            (yyvsp[-3].lex_user)->retain_current_password = false;
          }
#line 33154 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1085:
#line 8385 "sql_yacc.yy" /* yacc.c:1646  */
    {
            List<LEX_USER> *users= new (YYMEM_ROOT) List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[-3].lex_user)))
              MYSQL_YYABORT;
            List<LEX_USER> *role_list= new (YYMEM_ROOT) List<LEX_USER>;
            auto *tmp=
                NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                   users, role_list,
                                                   role_enum::ROLE_ALL);
              MAKE_CMD(tmp);
          }
#line 33170 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1086:
#line 8397 "sql_yacc.yy" /* yacc.c:1646  */
    {
            List<LEX_USER> *users= new (YYMEM_ROOT) List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[-3].lex_user)))
              MYSQL_YYABORT;
            List<LEX_USER> *role_list= new (YYMEM_ROOT) List<LEX_USER>;
            auto *tmp=
                NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                   users, role_list,
                                                   role_enum::ROLE_NONE);
              MAKE_CMD(tmp);
          }
#line 33186 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1087:
#line 8409 "sql_yacc.yy" /* yacc.c:1646  */
    {
            List<LEX_USER> *users= new (YYMEM_ROOT) List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[-3].lex_user)))
              MYSQL_YYABORT;
            auto *tmp=
              NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                 users, (yyvsp[0].user_list),
                                                 role_enum::ROLE_NAME);
            MAKE_CMD(tmp);
          }
#line 33201 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1088:
#line 8420 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].lex_user)->mfa_list.push_back((yyvsp[0].lex_mfa)))
              MYSQL_YYABORT;  // OOM
            LEX *lex=Lex;
            lex->users_list.push_front ((yyvsp[-1].lex_user));
          }
#line 33212 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1089:
#line 8427 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].lex_user)->mfa_list.push_back((yyvsp[0].lex_mfa)))
              MYSQL_YYABORT;  // OOM
          }
#line 33221 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1090:
#line 8434 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = LEX_CSTRING{nullptr, 0}; }
#line 33227 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1091:
#line 8435 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 33233 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1092:
#line 8442 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_resource_group(to_lex_cstring((yyvsp[-4].lexer.lex_str)),
                                                (yyvsp[-3].resource_group_vcpu_list_type), (yyvsp[-2].resource_group_priority_type), (yyvsp[-1].resource_group_state_type), (yyvsp[0].resource_group_flag_type));
          }
#line 33242 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1093:
#line 8450 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_USER;
            lex->drop_if_exists= (yyvsp[0].num);
          }
#line 33252 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1094:
#line 8459 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_user_attribute =
              enum_alter_user_attribute::ALTER_USER_COMMENT_NOT_USED;
          }
#line 33262 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1095:
#line 8465 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_user_attribute =
              enum_alter_user_attribute::ALTER_USER_ATTRIBUTE;
            lex->alter_user_comment_text = (yyvsp[0].lexer.lex_str);
          }
#line 33273 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1096:
#line 8472 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_user_attribute =
              enum_alter_user_attribute::ALTER_USER_COMMENT;
            lex->alter_user_comment_text = (yyvsp[0].lexer.lex_str);
          }
#line 33284 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1097:
#line 8480 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33290 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1101:
#line 8491 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_password.update_account_locked_column= true;
            lex->alter_password.account_locked= false;
          }
#line 33300 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1102:
#line 8497 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_password.update_account_locked_column= true;
            lex->alter_password.account_locked= true;
          }
#line 33310 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1103:
#line 8503 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= true;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= true;
          }
#line 33322 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1104:
#line 8511 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if ((yyvsp[-1].ulong_num) == 0 || (yyvsp[-1].ulong_num) > UINT_MAX16)
            {
              char buf[MAX_BIGINT_WIDTH + 1];
              snprintf(buf, sizeof(buf), "%lu", (yyvsp[-1].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "DAY", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.expire_after_days= (yyvsp[-1].ulong_num);
            lex->alter_password.update_password_expired_column= false;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= false;
          }
#line 33341 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1105:
#line 8526 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= false;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= false;
          }
#line 33353 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1106:
#line 8534 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= false;
            Lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= true;
          }
#line 33365 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1107:
#line 8542 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_history_length= (yyvsp[0].ulong_num);
            lex->alter_password.update_password_history= true;
            lex->alter_password.use_default_password_history= false;
          }
#line 33376 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1108:
#line 8549 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_history_length= 0;
            lex->alter_password.update_password_history= true;
            lex->alter_password.use_default_password_history= true;
          }
#line 33387 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1109:
#line 8556 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_reuse_interval= (yyvsp[-1].ulong_num);
            lex->alter_password.update_password_reuse_interval= true;
            lex->alter_password.use_default_password_reuse_interval= false;
          }
#line 33398 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1110:
#line 8563 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_reuse_interval= 0;
            lex->alter_password.update_password_reuse_interval= true;
            lex->alter_password.use_default_password_reuse_interval= true;
          }
#line 33409 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1111:
#line 8570 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_require_current=
                Lex_acl_attrib_udyn::YES;
          }
#line 33419 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1112:
#line 8576 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_require_current=
                Lex_acl_attrib_udyn::DEFAULT;
          }
#line 33429 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1113:
#line 8582 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_require_current=
                Lex_acl_attrib_udyn::NO;
          }
#line 33439 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1114:
#line 8588 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if ((yyvsp[0].ulong_num) > INT_MAX16) {
              char buf[MAX_BIGINT_WIDTH + 1];
              snprintf(buf, sizeof(buf), "%lu", (yyvsp[0].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "FAILED_LOGIN_ATTEMPTS", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.update_failed_login_attempts= true;
            lex->alter_password.failed_login_attempts= (yyvsp[0].ulong_num);
          }
#line 33455 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1115:
#line 8600 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if ((yyvsp[0].ulong_num) > INT_MAX16) {
              char buf[MAX_BIGINT_WIDTH + 1];
              snprintf(buf, sizeof(buf), "%lu", (yyvsp[0].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "PASSWORD_LOCK_TIME", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.update_password_lock_time= true;
            lex->alter_password.password_lock_time= (yyvsp[0].ulong_num);
          }
#line 33471 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1116:
#line 8612 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_lock_time= true;
            lex->alter_password.password_lock_time= -1;
          }
#line 33481 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1117:
#line 8620 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33487 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1119:
#line 8625 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33493 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1120:
#line 8626 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33499 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1121:
#line 8631 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.questions=(yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
          }
#line 33509 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1122:
#line 8637 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.updates=(yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
          }
#line 33519 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1123:
#line 8643 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.conn_per_hour= (yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
          }
#line 33529 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1124:
#line 8649 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.user_conn= (yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
          }
#line 33539 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1125:
#line 8658 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty LEX_USER means current_user */
            LEX_USER *curr_user;
            if (!(curr_user= LEX_USER::alloc(YYTHD)))
              MYSQL_YYABORT;

            Lex->users_list.push_back(curr_user);
            (yyval.lex_user)= curr_user;
          }
#line 33553 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1126:
#line 8670 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 33559 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1127:
#line 8671 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 33565 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1128:
#line 8672 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 33571 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1129:
#line 8673 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 33577 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1130:
#line 8677 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 33583 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1131:
#line 8679 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Use lex's spname to hold the new name.
              The original name is in the Event_parse_data object
            */
            Lex->spname= (yyvsp[0].spname);
            (yyval.num)= 1;
          }
#line 33596 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1132:
#line 8690 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 33602 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1133:
#line 8691 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 33608 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1134:
#line 8695 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str).str= 0; (yyval.lexer.lex_str).length= 0; }
#line 33614 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1135:
#line 8696 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 33620 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1137:
#line 8702 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list)= (yyvsp[-1].alter_list);
            if ((yyval.alter_list).actions == NULL)
            {
              (yyval.alter_list).actions= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
              if ((yyval.alter_list).actions == NULL)
                MYSQL_YYABORT; // OOM
            }
            if ((yyval.alter_list).actions->push_back((yyvsp[0].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
#line 33636 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1138:
#line 8717 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.standalone_alter_table_action).flags.init();
            (yyval.standalone_alter_table_action).action= (yyvsp[0].alter_table_standalone_action);
          }
#line 33645 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1139:
#line 8722 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.standalone_alter_table_action).flags= (yyvsp[-2].algo_and_lock_and_validation);
            (yyval.standalone_alter_table_action).action= (yyvsp[0].alter_table_standalone_action);
          }
#line 33654 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1140:
#line 8730 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_partition_by((yyvsp[0].partition_clause));
          }
#line 33662 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1141:
#line 8734 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_remove_partitioning;
          }
#line 33670 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1142:
#line 8741 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= NULL;
          }
#line 33679 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1143:
#line 8746 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags= (yyvsp[0].algo_and_lock_and_validation);
            (yyval.alter_list).actions= NULL;
          }
#line 33688 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1145:
#line 8752 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags= (yyvsp[-2].algo_and_lock_and_validation);
            (yyval.alter_list).flags.merge((yyvsp[0].alter_list).flags);
            (yyval.alter_list).actions= (yyvsp[0].alter_list).actions;
          }
#line 33698 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1146:
#line 8761 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_discard_tablespace;
          }
#line 33706 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1147:
#line 8765 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_import_tablespace;
          }
#line 33714 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1148:
#line 8776 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition((yyvsp[0].num));
          }
#line 33722 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1149:
#line 8780 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition_def_list((yyvsp[-3].num), (yyvsp[-1].part_def_list));
          }
#line 33730 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1150:
#line 8784 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition_num((yyvsp[-2].num), (yyvsp[0].ulong_num));
          }
#line 33738 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1151:
#line 8788 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_drop_partition(*(yyvsp[0].string_list));
          }
#line 33746 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1152:
#line 8793 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_rebuild_partition((yyvsp[-1].num), (yyvsp[0].string_list));
          }
#line 33754 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1153:
#line 8798 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_optimize_partition((yyvsp[-1].num), (yyvsp[0].string_list));
          }
#line 33762 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1154:
#line 8803 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_analyze_partition((yyvsp[-1].num), (yyvsp[0].string_list));
          }
#line 33770 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1155:
#line 8807 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_check_partition((yyvsp[-1].string_list),
                                                       (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 33779 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1156:
#line 8814 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_repair_partition((yyvsp[-2].num), (yyvsp[-1].string_list),
                                                        (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 33788 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1157:
#line 8819 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_coalesce_partition((yyvsp[-1].num), (yyvsp[0].ulong_num));
          }
#line 33796 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1158:
#line 8823 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_truncate_partition((yyvsp[0].string_list));
          }
#line 33804 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1159:
#line 8827 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_reorganize_partition((yyvsp[0].num));
          }
#line 33812 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1160:
#line 8832 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_reorganize_partition_into((yyvsp[-5].num), *(yyvsp[-4].string_list), (yyvsp[-1].part_def_list));
          }
#line 33820 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1161:
#line 8837 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_exchange_partition((yyvsp[-4].lexer.lex_str), (yyvsp[-1].table), (yyvsp[0].with_validation));
          }
#line 33828 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1162:
#line 8842 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_discard_partition_tablespace((yyvsp[-1].string_list));
          }
#line 33836 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1163:
#line 8847 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_import_partition_tablespace((yyvsp[-1].string_list));
          }
#line 33844 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1164:
#line 8851 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_secondary_load;
          }
#line 33852 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1165:
#line 8855 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_secondary_unload;
          }
#line 33860 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1166:
#line 8861 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.with_validation)= Alter_info::ALTER_VALIDATION_DEFAULT; }
#line 33866 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1168:
#line 8867 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_validation)= Alter_info::ALTER_WITH_VALIDATION;
          }
#line 33874 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1169:
#line 8871 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_validation)= Alter_info::ALTER_WITHOUT_VALIDATION;
          }
#line 33882 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1170:
#line 8877 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string_list)= NULL; }
#line 33888 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1172:
#line 8887 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
            if ((yyval.alter_list).actions == NULL || (yyval.alter_list).actions->push_back((yyvsp[0].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
#line 33899 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1173:
#line 8894 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.alter_list).actions->push_back((yyvsp[0].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
#line 33908 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1174:
#line 8899 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.merge((yyvsp[0].algo_and_lock_and_validation));
          }
#line 33916 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1175:
#line 8903 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= (yyvsp[0].space_separated_alter_table_opts);
          }
#line 33925 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1176:
#line 8908 "sql_yacc.yy" /* yacc.c:1646  */
    {
            for (auto *option : *(yyvsp[0].space_separated_alter_table_opts))
            {
              if ((yyvsp[-2].alter_list).actions->push_back(option))
                MYSQL_YYABORT; // OOM
            }
          }
#line 33937 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1178:
#line 8920 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation)= (yyvsp[-2].algo_and_lock_and_validation);
            (yyval.algo_and_lock_and_validation).merge((yyvsp[0].algo_and_lock_and_validation));
          }
#line 33946 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1179:
#line 8928 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_column((yyvsp[-3].lexer.lex_str), (yyvsp[-2].field_def), (yyvsp[-1].table_constraint_def), (yyvsp[0].c_str));
          }
#line 33954 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1180:
#line 8932 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_columns((yyvsp[-1].table_element_list));
          }
#line 33962 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1181:
#line 8936 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_constraint((yyvsp[0].table_constraint_def));
          }
#line 33970 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1182:
#line 8940 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_change_column((yyvsp[-3].lexer.lex_str), (yyvsp[-2].lexer.lex_str), (yyvsp[-1].field_def), (yyvsp[0].c_str));
          }
#line 33978 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1183:
#line 8944 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_change_column((yyvsp[-2].lexer.lex_str), (yyvsp[-1].field_def), (yyvsp[0].c_str));
          }
#line 33986 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1184:
#line 8948 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Note: opt_restrict ($4) is ignored!
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_column((yyvsp[-1].lexer.lex_str).str);
          }
#line 33995 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1185:
#line 8953 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_foreign_key((yyvsp[0].lexer.lex_str).str);
          }
#line 34003 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1186:
#line 8957 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_key(primary_key_name);
          }
#line 34011 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1187:
#line 8961 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_key((yyvsp[0].lexer.lex_str).str);
          }
#line 34019 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1188:
#line 8965 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_check_constraint((yyvsp[0].lexer.lex_str).str);
          }
#line 34027 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1189:
#line 8969 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_constraint((yyvsp[0].lexer.lex_str).str);
          }
#line 34035 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1190:
#line 8973 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_enable_keys(false);
          }
#line 34043 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1191:
#line 8977 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_enable_keys(true);
          }
#line 34051 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1192:
#line 8981 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyvsp[-3].lexer.lex_str).str, (yyvsp[0].item));
          }
#line 34059 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1193:
#line 8985 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyvsp[-5].lexer.lex_str).str, (yyvsp[-1].item));
          }
#line 34067 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1194:
#line 8989 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyvsp[-2].lexer.lex_str).str, NULL);
          }
#line 34075 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1195:
#line 8994 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_column_visibility((yyvsp[-2].lexer.lex_str).str, (yyvsp[0].visibility));
          }
#line 34083 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1196:
#line 8998 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_index_visible((yyvsp[-1].lexer.lex_str).str, (yyvsp[0].visibility));
          }
#line 34091 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1197:
#line 9002 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action) = NEW_PTN PT_alter_table_enforce_check_constraint((yyvsp[-1].lexer.lex_str).str, (yyvsp[0].is_not_empty));
          }
#line 34099 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1198:
#line 9006 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action) = NEW_PTN PT_alter_table_enforce_constraint((yyvsp[-1].lexer.lex_str).str, (yyvsp[0].is_not_empty));
          }
#line 34107 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1199:
#line 9010 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename((yyvsp[0].table));
          }
#line 34115 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1200:
#line 9014 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename_key((yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 34123 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1201:
#line 9018 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename_column((yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 34131 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1202:
#line 9022 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_convert_to_charset((yyvsp[-1].lexer.charset), (yyvsp[0].lexer.charset));
          }
#line 34139 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1203:
#line 9026 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action) = NEW_PTN PT_alter_table_convert_to_charset(
                YYTHD->variables.collation_database,
                (yyvsp[0].lexer.charset) ? (yyvsp[0].lexer.charset) : YYTHD->variables.collation_database);
          }
#line 34149 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1204:
#line 9032 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_force;
          }
#line 34157 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1205:
#line 9036 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_order((yyvsp[0].order_list));
          }
#line 34165 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1206:
#line 9043 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).algo.set((yyvsp[0].alter_table_algorithm));
          }
#line 34174 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1207:
#line 9048 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).lock.set((yyvsp[0].alter_table_lock));
          }
#line 34183 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1208:
#line 9053 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).validation.set((yyvsp[0].with_validation));
          }
#line 34192 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1209:
#line 9060 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_index_lock_and_algorithm).init(); }
#line 34198 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1210:
#line 9062 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[0].alter_table_lock));
          }
#line 34207 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1211:
#line 9067 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[0].alter_table_algorithm));
          }
#line 34216 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1212:
#line 9072 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[-1].alter_table_lock));
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[0].alter_table_algorithm));
          }
#line 34226 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1213:
#line 9078 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[-1].alter_table_algorithm));
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[0].alter_table_lock));
          }
#line 34236 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1214:
#line 9086 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_table_algorithm)= (yyvsp[0].alter_table_algorithm); }
#line 34242 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1215:
#line 9091 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_DEFAULT;
          }
#line 34250 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1216:
#line 9095 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[0].lexer.lex_str), "INPLACE"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_INPLACE;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "INSTANT"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_INSTANT;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "COPY"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_COPY;
            else
            {
              my_error(ER_UNKNOWN_ALTER_ALGORITHM, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 34268 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1217:
#line 9111 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_table_lock)= (yyvsp[0].alter_table_lock); }
#line 34274 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1218:
#line 9116 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_DEFAULT;
          }
#line 34282 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1219:
#line 9120 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[0].lexer.lex_str), "NONE"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_NONE;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "SHARED"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_SHARED;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "EXCLUSIVE"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_EXCLUSIVE;
            else
            {
              my_error(ER_UNKNOWN_ALTER_LOCK, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 34300 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1222:
#line 9141 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 34306 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1223:
#line 9142 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 34312 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1224:
#line 9146 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_restrict)= DROP_DEFAULT; }
#line 34318 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1225:
#line 9147 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_restrict)= DROP_RESTRICT; }
#line 34324 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1226:
#line 9148 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_restrict)= DROP_CASCADE; }
#line 34330 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1227:
#line 9152 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= NULL; }
#line 34336 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1228:
#line 9153 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[0].lexer.lex_str).str; }
#line 34342 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1229:
#line 9154 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= first_keyword; }
#line 34348 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1230:
#line 9158 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34354 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1231:
#line 9159 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34360 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1232:
#line 9160 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34366 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1233:
#line 9161 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34372 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1235:
#line 9167 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            lex->sql_command = SQLCOM_STOP_GROUP_REPLICATION;
          }
#line 34381 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1236:
#line 9175 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            lex->slave_connection.reset();
            lex->sql_command = SQLCOM_START_GROUP_REPLICATION;
          }
#line 34391 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1244:
#line 9200 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.user = (yyvsp[0].lexer.lex_str).str;
            if ((yyvsp[0].lexer.lex_str).length == 0)
            {
              my_error(ER_GROUP_REPLICATION_USER_EMPTY_MSG, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 34404 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1245:
#line 9212 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.password = (yyvsp[0].lexer.lex_str).str;
            Lex->contains_plaintext_password = true;
            if ((yyvsp[0].lexer.lex_str).length > 32)
            {
              my_error(ER_GROUP_REPLICATION_PASSWORD_LENGTH, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 34418 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1246:
#line 9225 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.plugin_auth= (yyvsp[0].lexer.lex_str).str;
          }
#line 34426 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1247:
#line 9231 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->set_replication_deprecated_syntax_used(); }
#line 34432 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1249:
#line 9237 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_STOP;
            lex->type = 0;
            lex->slave_thd_opt= (yyvsp[-1].num);
            if (lex->is_replication_deprecated_syntax_used())
              push_deprecated_warn(YYTHD, "STOP SLAVE", "STOP REPLICA");
            if (lex->set_channel_name((yyvsp[0].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
#line 34447 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1250:
#line 9251 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            /* Clean previous replica connection values */
            lex->slave_connection.reset();
            lex->sql_command = SQLCOM_SLAVE_START;
            lex->type = 0;
            /* We'll use mi structure for UNTIL options */
            lex->mi.set_unspecified();
            lex->slave_thd_opt= (yyvsp[0].num);
            if (lex->is_replication_deprecated_syntax_used())
              push_deprecated_warn(YYTHD, "START SLAVE", "START REPLICA");
          }
#line 34464 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1251:
#line 9266 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              It is not possible to set user's information when
              one is trying to start the SQL Thread.
            */
            if ((Lex->slave_thd_opt & SLAVE_SQL) == SLAVE_SQL &&
                (Lex->slave_thd_opt & SLAVE_IO) != SLAVE_IO &&
                (Lex->slave_connection.user ||
                 Lex->slave_connection.password ||
                 Lex->slave_connection.plugin_auth ||
                 Lex->slave_connection.plugin_dir))
            {
              my_error(ER_SQLTHREAD_WITH_SECURE_SLAVE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 34485 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1252:
#line 9283 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->set_channel_name((yyvsp[0].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
#line 34494 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1253:
#line 9291 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_BEGIN;
            /* READ ONLY and READ WRITE are mutually exclusive. */
            if (((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_WRITE) &&
                ((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_ONLY))
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->start_transaction_opt= (yyvsp[0].num);
          }
#line 34511 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1254:
#line 9307 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= 0;
          }
#line 34519 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1255:
#line 9311 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 34527 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1256:
#line 9318 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 34535 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1257:
#line 9322 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[-2].num) | (yyvsp[0].num);
          }
#line 34543 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1258:
#line 9329 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
          }
#line 34551 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1259:
#line 9333 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_ONLY;
          }
#line 34559 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1260:
#line 9337 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_WRITE;
          }
#line 34567 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1261:
#line 9343 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 34575 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1262:
#line 9347 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.user= (yyvsp[0].lexer.lex_str).str;
          }
#line 34583 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1263:
#line 9353 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 34591 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1264:
#line 9357 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.password= (yyvsp[0].lexer.lex_str).str;
            Lex->contains_plaintext_password= true;
          }
#line 34600 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1265:
#line 9363 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 34608 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1266:
#line 9367 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.plugin_auth= (yyvsp[0].lexer.lex_str).str;
          }
#line 34616 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1267:
#line 9373 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 34624 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1268:
#line 9377 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.plugin_dir= (yyvsp[0].lexer.lex_str).str;
          }
#line 34632 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1269:
#line 9384 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= 0;
          }
#line 34640 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1270:
#line 9388 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 34648 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1271:
#line 9395 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 34656 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1272:
#line 9399 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[-2].num) | (yyvsp[0].num);
          }
#line 34664 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1273:
#line 9406 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= SLAVE_SQL;
          }
#line 34672 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1274:
#line 9410 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= SLAVE_IO;
          }
#line 34680 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1275:
#line 9417 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->mi.slave_until= false;
          }
#line 34689 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1276:
#line 9422 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (((lex->mi.log_file_name || lex->mi.pos) &&
                lex->mi.gtid) ||
               ((lex->mi.relay_log_name || lex->mi.relay_log_pos) &&
                lex->mi.gtid) ||
                !((lex->mi.log_file_name && lex->mi.pos) ||
                  (lex->mi.relay_log_name && lex->mi.relay_log_pos) ||
                  lex->mi.gtid ||
                  lex->mi.until_after_gaps) ||
                /* SQL_AFTER_MTS_GAPS is meaningless in combination */
                /* with any other coordinates related options       */
                ((lex->mi.log_file_name || lex->mi.pos || lex->mi.relay_log_name
                  || lex->mi.relay_log_pos || lex->mi.gtid)
                 && lex->mi.until_after_gaps))
            {
               my_error(ER_BAD_SLAVE_UNTIL_COND, MYF(0));
               MYSQL_YYABORT;
            }
            lex->mi.slave_until= true;
          }
#line 34715 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1279:
#line 9449 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.gtid= (yyvsp[0].lexer.lex_str).str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_BEFORE_GTIDS;
          }
#line 34724 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1280:
#line 9454 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.gtid= (yyvsp[0].lexer.lex_str).str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_AFTER_GTIDS;
          }
#line 34733 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1281:
#line 9459 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.until_after_gaps= true;
          }
#line 34741 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1282:
#line 9466 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CHECKSUM;
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
            if (Select->add_tables(YYTHD, (yyvsp[-1].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
            Lex->check_opt.flags= (yyvsp[0].ulong_num);
          }
#line 34756 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1283:
#line 9479 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 34762 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1284:
#line 9480 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= T_QUICK; }
#line 34768 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1285:
#line 9481 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= T_EXTEND; }
#line 34774 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1286:
#line 9487 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_repair_table_stmt(YYMEM_ROOT, (yyvsp[-3].num), (yyvsp[-1].table_list),
                                             (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 34783 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1287:
#line 9494 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags = T_MEDIUM; (yyval.mi_type).sql_flags= 0; }
#line 34789 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1290:
#line 9501 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.mi_type).flags= (yyvsp[-1].mi_type).flags | (yyvsp[0].mi_type).flags;
            (yyval.mi_type).sql_flags= (yyvsp[-1].mi_type).sql_flags | (yyvsp[0].mi_type).sql_flags;
          }
#line 34798 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1291:
#line 9508 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_QUICK;  (yyval.mi_type).sql_flags= 0; }
#line 34804 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1292:
#line 9509 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_EXTEND; (yyval.mi_type).sql_flags= 0; }
#line 34810 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1293:
#line 9510 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= 0;        (yyval.mi_type).sql_flags= TT_USEFRM; }
#line 34816 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1294:
#line 9516 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_analyze_table_stmt(YYMEM_ROOT, (yyvsp[-3].num), (yyvsp[-1].table_list),
                                              (yyvsp[0].histogram).command, (yyvsp[0].histogram).num_buckets,
                                              (yyvsp[0].histogram).columns);
          }
#line 34826 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1295:
#line 9524 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= DEFAULT_NUMBER_OF_HISTOGRAM_BUCKETS; }
#line 34832 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1296:
#line 9526 "sql_yacc.yy" /* yacc.c:1646  */
    {
            int error;
            longlong num= my_strtoll10((yyvsp[-1].lexer.lex_str).str, nullptr, &error);
            MYSQL_YYABORT_UNLESS(error <= 0);

            if (num < 1 || num > MAX_NUMBER_OF_HISTOGRAM_BUCKETS)
            {
              my_error(ER_DATA_OUT_OF_RANGE, MYF(0), "Number of buckets",
                       "ANALYZE TABLE");
              MYSQL_YYABORT;
            }

            (yyval.num)= num;
          }
#line 34851 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1297:
#line 9544 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.histogram).command= Sql_cmd_analyze_table::Histogram_command::NONE;
            (yyval.histogram).columns= nullptr;
            (yyval.histogram).num_buckets= 0;
          }
#line 34861 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1298:
#line 9550 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.histogram).command=
              Sql_cmd_analyze_table::Histogram_command::UPDATE_HISTOGRAM;
            (yyval.histogram).columns= (yyvsp[-1].string_list);
            (yyval.histogram).num_buckets= (yyvsp[0].num);
          }
#line 34872 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1299:
#line 9557 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.histogram).command=
              Sql_cmd_analyze_table::Histogram_command::DROP_HISTOGRAM;
            (yyval.histogram).columns= (yyvsp[0].string_list);
            (yyval.histogram).num_buckets= 0;
          }
#line 34883 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1300:
#line 9567 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->binlog_stmt_arg= (yyvsp[0].lexer.lex_str);
          }
#line 34892 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1301:
#line 9575 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_check_table_stmt(YYMEM_ROOT, (yyvsp[-1].table_list),
                                            (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 34901 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1302:
#line 9582 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags = T_MEDIUM; (yyval.mi_type).sql_flags= 0; }
#line 34907 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1305:
#line 9589 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.mi_type).flags= (yyvsp[-1].mi_type).flags | (yyvsp[0].mi_type).flags;
            (yyval.mi_type).sql_flags= (yyvsp[-1].mi_type).sql_flags | (yyvsp[0].mi_type).sql_flags;
          }
#line 34916 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1306:
#line 9597 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_QUICK;              (yyval.mi_type).sql_flags= 0; }
#line 34922 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1307:
#line 9599 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_FAST;               (yyval.mi_type).sql_flags= 0; }
#line 34928 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1308:
#line 9601 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_MEDIUM;             (yyval.mi_type).sql_flags= 0; }
#line 34934 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1309:
#line 9603 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_EXTEND;             (yyval.mi_type).sql_flags= 0; }
#line 34940 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1310:
#line 9605 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_CHECK_ONLY_CHANGED; (yyval.mi_type).sql_flags= 0; }
#line 34946 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1311:
#line 9607 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= 0;                    (yyval.mi_type).sql_flags= TT_FOR_UPGRADE; }
#line 34952 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1312:
#line 9612 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_optimize_table_stmt(YYMEM_ROOT, (yyvsp[-2].num), (yyvsp[0].table_list));
          }
#line 34960 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1313:
#line 9618 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 34966 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1314:
#line 9619 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 34972 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1315:
#line 9620 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 34978 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1316:
#line 9625 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_RENAME_TABLE;
          }
#line 34986 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1317:
#line 9629 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 34992 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1318:
#line 9631 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_RENAME_USER;
          }
#line 35000 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1319:
#line 9638 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[-2].lex_user)) || Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 35009 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1320:
#line 9643 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[-2].lex_user)) || Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 35018 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1323:
#line 9656 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            Query_block *sl= Select;
            if (!sl->add_table_to_list(lex->thd, (yyvsp[-2].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE) ||
                !sl->add_table_to_list(lex->thd, (yyvsp[0].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE))
              MYSQL_YYABORT;
          }
#line 35032 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1324:
#line 9669 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_cache_index_stmt(YYMEM_ROOT, (yyvsp[-2].keycache_list), (yyvsp[0].lex_cstr));
          }
#line 35040 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1325:
#line 9674 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_cache_index_partitions_stmt(YYMEM_ROOT,
                                                       (yyvsp[-4].table), (yyvsp[-3].adm_partition), (yyvsp[-2].key_usage_list), (yyvsp[0].lex_cstr));
          }
#line 35049 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1326:
#line 9682 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.keycache_list)= NEW_PTN Mem_root_array<PT_assign_to_keycache *>(YYMEM_ROOT);
            if ((yyval.keycache_list) == NULL || (yyval.keycache_list)->push_back((yyvsp[0].assign_to_keycache)))
              MYSQL_YYABORT; // OOM
          }
#line 35059 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1327:
#line 9688 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.keycache_list)= (yyvsp[-2].keycache_list);
            if ((yyval.keycache_list)->push_back((yyvsp[0].assign_to_keycache)))
              MYSQL_YYABORT; // OOM
          }
#line 35069 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1328:
#line 9697 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.assign_to_keycache)= NEW_PTN PT_assign_to_keycache((yyvsp[-1].table), (yyvsp[0].key_usage_list));
          }
#line 35077 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1329:
#line 9703 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)= to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 35083 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1330:
#line 9704 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = default_key_cache_base; }
#line 35089 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1331:
#line 9710 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_load_index_partitions_stmt(YYMEM_ROOT, (yyvsp[-3].table),(yyvsp[-2].adm_partition), (yyvsp[-1].key_usage_list), (yyvsp[0].is_not_empty));
          }
#line 35097 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1332:
#line 9714 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_load_index_stmt(YYMEM_ROOT, (yyvsp[0].preload_list));
          }
#line 35105 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1333:
#line 9721 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.preload_list)= NEW_PTN Mem_root_array<PT_preload_keys *>(YYMEM_ROOT);
            if ((yyval.preload_list)->push_back((yyvsp[0].preload_keys)))
              MYSQL_YYABORT; // OOM
          }
#line 35115 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1334:
#line 9727 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.preload_list)= (yyvsp[-2].preload_list);
            if ((yyval.preload_list) == NULL || (yyval.preload_list)->push_back((yyvsp[0].preload_keys)))
              MYSQL_YYABORT; // OOM
          }
#line 35125 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1335:
#line 9736 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.preload_keys)= NEW_PTN PT_preload_keys((yyvsp[-2].table), (yyvsp[-1].key_usage_list), (yyvsp[0].is_not_empty));
          }
#line 35133 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1336:
#line 9743 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.adm_partition)= NEW_PTN PT_adm_partition((yyvsp[-1].string_list));
          }
#line 35141 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1337:
#line 9749 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_usage_list)= NULL; }
#line 35147 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1338:
#line 9751 "sql_yacc.yy" /* yacc.c:1646  */
    {
            init_index_hints((yyvsp[-1].key_usage_list), INDEX_HINT_USE,
                             old_mode ? INDEX_HINT_MASK_JOIN
                                      : INDEX_HINT_MASK_ALL);
            (yyval.key_usage_list)= (yyvsp[-1].key_usage_list);
          }
#line 35158 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1339:
#line 9760 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 35164 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1340:
#line 9761 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 35170 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1341:
#line 9766 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyvsp[0].query_expression));
          }
#line 35178 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1342:
#line 9770 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt(NEW_PTN PT_locking((yyvsp[-1].query_expression), (yyvsp[0].locking_clause_list)),
                                        nullptr, true);
          }
#line 35187 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1343:
#line 9775 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyvsp[0].query_primary));
          }
#line 35195 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1345:
#line 9815 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = (yyvsp[-1].top_level_node);
          }
#line 35203 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1346:
#line 9819 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyvsp[-1].query_expression), (yyvsp[0].into_destination));
          }
#line 35211 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1347:
#line 9823 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt(NEW_PTN PT_locking((yyvsp[-2].query_expression), (yyvsp[0].locking_clause_list)), (yyvsp[-1].into_destination), true);
          }
#line 35219 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1348:
#line 9827 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt(NEW_PTN PT_locking((yyvsp[-2].query_expression), (yyvsp[-1].locking_clause_list)), (yyvsp[0].into_destination));
          }
#line 35227 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1349:
#line 9831 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyvsp[-1].query_primary), (yyvsp[0].into_destination));
          }
#line 35235 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1350:
#line 9872 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression) = NEW_PTN PT_query_expression((yyvsp[-2].query_expression_body), (yyvsp[-1].order), (yyvsp[0].limit_clause));
          }
#line 35243 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1351:
#line 9879 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[-3].with_clause), (yyvsp[-2].query_expression_body), (yyvsp[-1].order), (yyvsp[0].limit_clause));
          }
#line 35251 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1352:
#line 9885 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[-2].query_primary), (yyvsp[-1].order), (yyvsp[0].limit_clause));
          }
#line 35259 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1353:
#line 9892 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[-3].with_clause), (yyvsp[-2].query_primary), (yyvsp[-1].order), (yyvsp[0].limit_clause));
          }
#line 35267 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1354:
#line 9897 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression) = NEW_PTN PT_query_expression((yyvsp[-1].query_primary), nullptr, (yyvsp[0].limit_clause));
          }
#line 35275 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1355:
#line 9903 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression) = NEW_PTN PT_query_expression((yyvsp[-2].with_clause), (yyvsp[-1].query_primary), nullptr, (yyvsp[0].limit_clause));
          }
#line 35283 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1356:
#line 9908 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression) = NEW_PTN PT_query_expression((yyvsp[-1].with_clause), (yyvsp[0].query_primary), nullptr, nullptr);
          }
#line 35291 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1357:
#line 9915 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = (yyvsp[0].query_primary);
          }
#line 35299 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1358:
#line 9919 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = NEW_PTN PT_union((yyvsp[-3].query_expression_body), (yylsp[-3]), (yyvsp[-1].num), (yyvsp[0].query_primary));
          }
#line 35307 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1359:
#line 9923 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = NEW_PTN PT_union((yyvsp[-3].query_primary), (yylsp[-3]), (yyvsp[-1].num), (yyvsp[0].query_primary));
          }
#line 35315 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1360:
#line 9927 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = NEW_PTN PT_union((yyvsp[-3].query_expression_body), (yylsp[-3]), (yyvsp[-1].num), (yyvsp[0].query_primary), true);
          }
#line 35323 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1361:
#line 9931 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = NEW_PTN PT_union((yyvsp[-3].query_primary), (yylsp[-3]), (yyvsp[-1].num), (yyvsp[0].query_primary), true);
          }
#line 35331 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1362:
#line 9938 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary)= (yyvsp[-1].query_primary); }
#line 35337 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1363:
#line 9939 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary)= (yyvsp[-1].query_expression); }
#line 35343 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1364:
#line 9941 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary) = NEW_PTN PT_locking((yyvsp[-2].query_expression), (yyvsp[-1].locking_clause_list));
          }
#line 35351 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1365:
#line 9948 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Bison doesn't get polymorphism.
            (yyval.query_primary)= (yyvsp[0].query_primary);
          }
#line 35360 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1366:
#line 9953 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary)= NEW_PTN PT_table_value_constructor((yyvsp[0].values_list));
          }
#line 35368 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1367:
#line 9957 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto item_list= NEW_PTN PT_select_item_list;
            auto asterisk= NEW_PTN Item_asterisk((yyloc), nullptr, nullptr);
            if (item_list == nullptr || asterisk == nullptr ||
                item_list->push_back(asterisk))
              MYSQL_YYABORT;
            (yyval.query_primary)= NEW_PTN PT_explicit_table({}, item_list, (yyvsp[0].table_reference_list));
          }
#line 35381 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1368:
#line 9977 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary)= NEW_PTN PT_query_specification(
                                      (yyvsp[-8].lexer.optimizer_hints),  // SELECT_SYM
                                      (yyvsp[-7].select_options),  // select_options
                                      (yyvsp[-6].item_list2),  // select_item_list
                                      (yyvsp[-5].into_destination),  // into_clause
                                      (yyvsp[-4].table_reference_list),  // from
                                      (yyvsp[-3].item),  // where
                                      (yyvsp[-2].group),  // group
                                      (yyvsp[-1].item),  // having
                                      (yyvsp[0].windows),  // windows
                                      (yylsp[-4]).raw.is_empty()); // implicit FROM
          }
#line 35399 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1369:
#line 9998 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary)= NEW_PTN PT_query_specification(
                                      (yyvsp[-7].lexer.optimizer_hints),  // SELECT_SYM
                                      (yyvsp[-6].select_options),  // select_options
                                      (yyvsp[-5].item_list2),  // select_item_list
                                      NULL,// no INTO clause
                                      (yyvsp[-4].table_reference_list),  // from
                                      (yyvsp[-3].item),  // where
                                      (yyvsp[-2].group),  // group
                                      (yyvsp[-1].item),  // having
                                      (yyvsp[0].windows),  // windows
                                      (yylsp[-4]).raw.is_empty()); // implicit FROM
          }
#line 35417 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1370:
#line 10014 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list).init(YYMEM_ROOT); }
#line 35423 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1372:
#line 10019 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list)= (yyvsp[0].table_reference_list); }
#line 35429 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1373:
#line 10023 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list).init(YYMEM_ROOT); }
#line 35435 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1375:
#line 10029 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list).init(YYMEM_ROOT);
            if ((yyval.table_reference_list).push_back((yyvsp[0].table_reference)))
              MYSQL_YYABORT; // OOM
          }
#line 35445 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1376:
#line 10035 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list)= (yyvsp[-2].table_reference_list);
            if ((yyval.table_reference_list).push_back((yyvsp[0].table_reference)))
              MYSQL_YYABORT; // OOM
          }
#line 35455 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1377:
#line 10044 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= (yyvsp[0].values_list);
          }
#line 35463 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1378:
#line 10051 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list).init(YYMEM_ROOT);
            auto table= NEW_PTN
                PT_table_factor_table_ident((yyvsp[0].table), nullptr, NULL_CSTR, nullptr);
            if ((yyval.table_reference_list).push_back(table))
              MYSQL_YYABORT; // OOM
          }
#line 35475 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1379:
#line 10062 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_options).query_spec_options= 0;
          }
#line 35483 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1381:
#line 10070 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.select_options).merge((yyvsp[-1].select_options), (yyvsp[0].select_options)))
              MYSQL_YYABORT;
          }
#line 35492 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1383:
#line 10079 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_options).query_spec_options= (yyvsp[0].ulonglong_number);
          }
#line 35500 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1384:
#line 10083 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn_no_replacement(YYTHD, "SQL_NO_CACHE");
            /* Ignored since MySQL 8.0. */
            (yyval.select_options).query_spec_options= 0;
          }
#line 35510 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1385:
#line 10092 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause_list)= (yyvsp[-1].locking_clause_list);
            if ((yyval.locking_clause_list)->push_back((yyvsp[0].locking_clause)))
              MYSQL_YYABORT; // OOM
          }
#line 35520 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1386:
#line 10098 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause_list)= NEW_PTN PT_locking_clause_list(YYTHD->mem_root);
            if ((yyval.locking_clause_list) == nullptr || (yyval.locking_clause_list)->push_back((yyvsp[0].locking_clause)))
              MYSQL_YYABORT; // OOM
          }
#line 35530 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1387:
#line 10107 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause)= NEW_PTN PT_query_block_locking_clause((yyvsp[-1].lock_strength), (yyvsp[0].locked_row_action));
          }
#line 35538 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1388:
#line 10111 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause)= NEW_PTN PT_table_locking_clause((yyvsp[-2].lock_strength), (yyvsp[-1].table_ident_list), (yyvsp[0].locked_row_action));
          }
#line 35546 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1389:
#line 10115 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause)= NEW_PTN PT_query_block_locking_clause(Lock_strength::SHARE);
          }
#line 35554 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1390:
#line 10121 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_strength)= Lock_strength::UPDATE; }
#line 35560 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1391:
#line 10122 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_strength)= Lock_strength::SHARE; }
#line 35566 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1392:
#line 10126 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_ident_list)= (yyvsp[0].table_ident_list); }
#line 35572 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1393:
#line 10130 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.locked_row_action)= Locked_row_action::WAIT; }
#line 35578 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1395:
#line 10135 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.locked_row_action)= Locked_row_action::SKIP; }
#line 35584 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1396:
#line 10136 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.locked_row_action)= Locked_row_action::NOWAIT; }
#line 35590 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1397:
#line 10141 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 35600 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1398:
#line 10147 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_select_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 35610 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1399:
#line 10153 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item = NEW_PTN Item_asterisk((yyloc), nullptr, nullptr);
            (yyval.item_list2) = NEW_PTN PT_select_item_list;
            if ((yyval.item_list2) == nullptr || item == nullptr || (yyval.item_list2)->push_back(item))
              MYSQL_YYABORT;
          }
#line 35621 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1400:
#line 10162 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 35627 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1401:
#line 10164 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_expr_with_alias((yyloc), (yyvsp[-1].item), (yylsp[-1]).cpp, to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 35635 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1402:
#line 10171 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=null_lex_str;}
#line 35641 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1403:
#line 10172 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 35647 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1404:
#line 10173 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 35653 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1405:
#line 10174 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 35659 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1406:
#line 10175 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 35665 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1407:
#line 10179 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35671 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1408:
#line 10180 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 35677 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1409:
#line 10186 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= flatten_associative_operator<Item_cond_or,
                                             Item_func::COND_OR_FUNC>(
                                                 YYMEM_ROOT, (yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 35687 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1410:
#line 10192 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* XOR is a proprietary extension */
            (yyval.item) = NEW_PTN Item_func_xor((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 35696 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1411:
#line 10197 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= flatten_associative_operator<Item_cond_and,
                                             Item_func::COND_AND_FUNC>(
                                                 YYMEM_ROOT, (yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 35706 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1412:
#line 10203 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[0].item), Item::BOOL_NEGATED);
          }
#line 35714 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1413:
#line 10207 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-2].item), Item::BOOL_IS_TRUE);
          }
#line 35722 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1414:
#line 10211 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-3].item), Item::BOOL_NOT_TRUE);
          }
#line 35730 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1415:
#line 10215 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-2].item), Item::BOOL_IS_FALSE);
          }
#line 35738 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1416:
#line 10219 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-3].item), Item::BOOL_NOT_FALSE);
          }
#line 35746 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1417:
#line 10223 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnull((yyloc), (yyvsp[-2].item));
          }
#line 35754 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1418:
#line 10227 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnotnull((yyloc), (yyvsp[-3].item));
          }
#line 35762 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1420:
#line 10235 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnull((yyloc), (yyvsp[-2].item));
          }
#line 35770 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1421:
#line 10239 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnotnull((yyloc), (yyvsp[-3].item));
          }
#line 35778 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1422:
#line 10243 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_comp_op((yyloc), (yyvsp[-2].item), (yyvsp[-1].boolfunc2creator), (yyvsp[0].item));
          }
#line 35786 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1423:
#line 10247 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].boolfunc2creator) == &comp_equal_creator)
              /*
                We throw this manual parse error rather than split the rule
                comp_op into a null-safe and a non null-safe rule, since doing
                so would add a shift/reduce conflict. It's actually this rule
                and the ones referencing it that cause all the conflicts, but
                we still don't want the count to go up.
              */
              YYTHD->syntax_error_at((yylsp[-2]));
            (yyval.item)= NEW_PTN PTI_comp_op_all((yyloc), (yyvsp[-3].item), (yyvsp[-2].boolfunc2creator), (yyvsp[-1].num), (yyvsp[0].subquery));
          }
#line 35803 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1425:
#line 10264 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_in_subselect((yyloc), (yyvsp[-2].item), (yyvsp[0].subquery));
          }
#line 35811 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1426:
#line 10268 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= NEW_PTN Item_in_subselect((yyloc), (yyvsp[-3].item), (yyvsp[0].subquery));
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), item, Item::BOOL_NEGATED);
          }
#line 35820 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1427:
#line 10273 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_handle_sql2003_note184_exception((yyloc), (yyvsp[-4].item), true, (yyvsp[-1].item));
          }
#line 35828 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1428:
#line 10277 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].item_list2) == NULL || (yyvsp[-1].item_list2)->push_front((yyvsp[-3].item)) || (yyvsp[-1].item_list2)->push_front((yyvsp[-6].item)))
              MYSQL_YYABORT;

            (yyval.item)= NEW_PTN Item_func_in((yyloc), (yyvsp[-1].item_list2), false);
          }
#line 35839 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1429:
#line 10284 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_handle_sql2003_note184_exception((yyloc), (yyvsp[-5].item), false, (yyvsp[-1].item));
          }
#line 35847 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1430:
#line 10288 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].item_list2) == nullptr)
              MYSQL_YYABORT;
            (yyvsp[-1].item_list2)->push_front((yyvsp[-3].item));
            (yyvsp[-1].item_list2)->value.push_front((yyvsp[-7].item));

            (yyval.item)= NEW_PTN Item_func_in((yyloc), (yyvsp[-1].item_list2), true);
          }
#line 35860 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1431:
#line 10297 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_member_of((yyloc), (yyvsp[-5].item), (yyvsp[-1].item));
          }
#line 35868 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1432:
#line 10301 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_between((yyloc), (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item), false);
          }
#line 35876 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1433:
#line 10305 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_between((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item), true);
          }
#line 35884 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1434:
#line 10309 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item1= NEW_PTN Item_func_soundex((yyloc), (yyvsp[-3].item));
            Item *item4= NEW_PTN Item_func_soundex((yyloc), (yyvsp[0].item));
            if ((item1 == NULL) || (item4 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN Item_func_eq((yyloc), item1, item4);
          }
#line 35896 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1435:
#line 10317 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item) = NEW_PTN Item_func_like((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 35904 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1436:
#line 10321 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item) = NEW_PTN Item_func_like((yyloc), (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 35912 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1437:
#line 10325 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto item = NEW_PTN Item_func_like((yyloc), (yyvsp[-3].item), (yyvsp[0].item));
            (yyval.item) = NEW_PTN Item_func_not((yyloc), item);
          }
#line 35921 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1438:
#line 10330 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto item = NEW_PTN Item_func_like((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item));
            (yyval.item) = NEW_PTN Item_func_not((yyloc), item);
          }
#line 35930 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1439:
#line 10335 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto args= NEW_PTN PT_item_list;
            args->push_back((yyvsp[-2].item));
            args->push_back((yyvsp[0].item));

            (yyval.item)= NEW_PTN Item_func_regexp_like((yylsp[-2]), args);
          }
#line 35942 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1440:
#line 10343 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto args= NEW_PTN PT_item_list;
            args->push_back((yyvsp[-3].item));
            args->push_back((yyvsp[0].item));
            Item *item= NEW_PTN Item_func_regexp_like((yyloc), args);
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), item, Item::BOOL_NEGATED);
          }
#line 35954 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1444:
#line 10360 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_or((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 35962 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1445:
#line 10364 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_and((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 35970 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1446:
#line 10368 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_shift_left((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 35978 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1447:
#line 10372 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_shift_right((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 35986 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1448:
#line 10376 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_plus((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 35994 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1449:
#line 10380 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_minus((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36002 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1450:
#line 10384 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 0);
          }
#line 36010 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1451:
#line 10388 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 1);
          }
#line 36018 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1452:
#line 10392 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mul((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36026 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1453:
#line 10396 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_div((yyloc), (yyvsp[-2].item),(yyvsp[0].item));
          }
#line 36034 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1454:
#line 10400 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[-2].item),(yyvsp[0].item));
          }
#line 36042 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1455:
#line 10404 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_div_int((yyloc), (yyvsp[-2].item),(yyvsp[0].item));
          }
#line 36050 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1456:
#line 10408 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36058 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1457:
#line 10412 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_xor((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36066 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1462:
#line 10426 "sql_yacc.yy" /* yacc.c:1646  */
    {
           push_deprecated_warn(YYTHD, "&&", "AND");
         }
#line 36074 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1465:
#line 10437 "sql_yacc.yy" /* yacc.c:1646  */
    { push_deprecated_warn(YYTHD, "!", "NOT"); }
#line 36080 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1467:
#line 10442 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_eq_creator; }
#line 36086 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1468:
#line 10443 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_equal_creator; }
#line 36092 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1469:
#line 10444 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_ge_creator; }
#line 36098 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1470:
#line 10445 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_gt_creator; }
#line 36104 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1471:
#line 10446 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_le_creator; }
#line 36110 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1472:
#line 10447 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_lt_creator; }
#line 36116 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1473:
#line 10448 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_ne_creator; }
#line 36122 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1474:
#line 10452 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 36128 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1475:
#line 10453 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 36134 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1481:
#line 10463 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_set_collation((yyloc), (yyvsp[-2].item), (yyvsp[0].lexer.lex_str));
          }
#line 36142 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1483:
#line 10467 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].param_marker); }
#line 36148 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1488:
#line 10473 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_concat((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 36156 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1489:
#line 10477 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item); // TODO: do we really want to ignore unary '+' before any kind of literals?
          }
#line 36164 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1490:
#line 10481 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_neg((yyloc), (yyvsp[0].item));
          }
#line 36172 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1491:
#line 10485 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_neg((yyloc), (yyvsp[0].item));
          }
#line 36180 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1492:
#line 10489 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[0].item), Item::BOOL_NEGATED);
          }
#line 36188 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1493:
#line 10493 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_singlerow_subselect((yyloc), (yyvsp[0].subquery));
          }
#line 36196 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1494:
#line 10496 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[-1].item); }
#line 36202 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1495:
#line 10498 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_row((yyloc), (yyvsp[-3].item), (yyvsp[-1].item_list2)->value);
          }
#line 36210 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1496:
#line 10502 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_row((yyloc), (yyvsp[-3].item), (yyvsp[-1].item_list2)->value);
          }
#line 36218 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1497:
#line 10506 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_exists_subselect((yyloc), (yyvsp[0].subquery));
          }
#line 36226 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1498:
#line 10510 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_odbc_date((yyloc), (yyvsp[-2].lexer.lex_str), (yyvsp[-1].item));
          }
#line 36234 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1499:
#line 10514 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_match((yyloc), (yyvsp[-5].item_list2), (yyvsp[-2].item), (yyvsp[-1].num));
          }
#line 36242 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1500:
#line 10518 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn(YYTHD, "BINARY expr", "CAST");
            (yyval.item)= create_func_cast(YYTHD, (yylsp[0]), (yyvsp[0].item), ITEM_CAST_CHAR, &my_charset_bin);
          }
#line 36251 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1501:
#line 10523 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[-4]), (yyvsp[-4].item), (yyvsp[-2].cast_type), (yyvsp[-1].num));
          }
#line 36259 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1502:
#line 10527 "sql_yacc.yy" /* yacc.c:1646  */
    {
            my_error(ER_NOT_SUPPORTED_YET, MYF(0), "AT LOCAL");
          }
#line 36267 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1503:
#line 10532 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Cast_type cast_type{ITEM_CAST_DATETIME, nullptr, nullptr, (yyvsp[-1].c_str)};
            auto datetime_factor =
                NEW_PTN Item_func_at_time_zone((yylsp[-9]), (yyvsp[-9].item), (yyvsp[-4].lexer.lex_str).str, (yyvsp[-5].is_not_empty));
            (yyval.item) = create_func_cast(YYTHD, (yylsp[-9]), datetime_factor, cast_type, false);
          }
#line 36278 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1504:
#line 10539 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_case((yyloc), (yyvsp[-2].item_list), (yyvsp[-3].item), (yyvsp[-1].item) );
          }
#line 36286 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1505:
#line 10543 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[-3]), (yyvsp[-3].item), (yyvsp[-1].cast_type), false);
          }
#line 36294 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1506:
#line 10547 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_conv_charset((yyloc), (yyvsp[-3].item),(yyvsp[-1].lexer.charset));
          }
#line 36302 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1507:
#line 10551 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_default_value((yyloc), (yyvsp[-1].item));
          }
#line 36310 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1508:
#line 10555 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_insert_value((yyloc), (yyvsp[-1].item));
          }
#line 36318 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1509:
#line 10560 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 0);
          }
#line 36326 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1510:
#line 10564 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_string *path=
              NEW_PTN Item_string((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                  YYTHD->variables.collation_connection);
            (yyval.item)= NEW_PTN Item_func_json_extract(YYTHD, (yyloc), (yyvsp[-2].item), path);
          }
#line 36337 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1511:
#line 10571 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_string *path=
              NEW_PTN Item_string((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                  YYTHD->variables.collation_connection);
            Item *extr= NEW_PTN Item_func_json_extract(YYTHD, (yyloc), (yyvsp[-2].item), path);
            (yyval.item)= NEW_PTN Item_func_json_unquote((yyloc), extr);
          }
#line 36349 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1512:
#line 10581 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 36355 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1513:
#line 10582 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= true; }
#line 36361 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1514:
#line 10593 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_char((yyloc), (yyvsp[-1].item_list2));
          }
#line 36369 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1515:
#line 10597 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_char((yyloc), (yyvsp[-3].item_list2), (yyvsp[-1].lexer.charset));
          }
#line 36377 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1516:
#line 10601 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_current_user((yyloc));
          }
#line 36385 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1517:
#line 10605 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_typecast_date((yyloc), (yyvsp[-1].item));
          }
#line 36393 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1518:
#line 10609 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_dayofmonth((yyloc), (yyvsp[-1].item));
          }
#line 36401 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1519:
#line 10613 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_hour((yyloc), (yyvsp[-1].item));
          }
#line 36409 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1520:
#line 10617 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_insert((yyloc), (yyvsp[-7].item), (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 36417 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1521:
#line 10621 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_interval((yyloc), YYMEM_ROOT, (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 36425 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1522:
#line 10625 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_interval((yyloc), YYMEM_ROOT, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item_list2));
          }
#line 36433 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1523:
#line 10630 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_json_value(YYTHD, (yylsp[-5]), (yyvsp[-5].item), (yyvsp[-3].text_literal), (yyvsp[-2].cast_type),
                                       (yyvsp[-1].json_on_error_or_empty).empty.type, (yyvsp[-1].json_on_error_or_empty).empty.default_string,
                                       (yyvsp[-1].json_on_error_or_empty).error.type, (yyvsp[-1].json_on_error_or_empty).error.default_string);
          }
#line 36443 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1524:
#line 10636 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_left((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 36451 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1525:
#line 10640 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_minute((yyloc), (yyvsp[-1].item));
          }
#line 36459 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1526:
#line 10644 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_month((yyloc), (yyvsp[-1].item));
          }
#line 36467 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1527:
#line 10648 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_right((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 36475 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1528:
#line 10652 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_second((yyloc), (yyvsp[-1].item));
          }
#line 36483 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1529:
#line 10656 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_typecast_time((yyloc), (yyvsp[-1].item));
          }
#line 36491 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1530:
#line 10660 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_typecast_datetime((yyloc), (yyvsp[-1].item));
          }
#line 36499 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1531:
#line 10664 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_add_time((yyloc), (yyvsp[-3].item), (yyvsp[-1].item), 1, 0);
          }
#line 36507 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1532:
#line 10668 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item),
                                       Item_func_trim::TRIM_BOTH_DEFAULT);
          }
#line 36516 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1533:
#line 10673 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item),
                                       Item_func_trim::TRIM_LEADING);
          }
#line 36525 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1534:
#line 10678 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item),
                                       Item_func_trim::TRIM_TRAILING);
          }
#line 36534 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1535:
#line 10683 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item), Item_func_trim::TRIM_BOTH);
          }
#line 36542 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1536:
#line 10687 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), Item_func_trim::TRIM_LEADING);
          }
#line 36550 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1537:
#line 10691 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), Item_func_trim::TRIM_TRAILING);
          }
#line 36558 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1538:
#line 10695 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), Item_func_trim::TRIM_BOTH);
          }
#line 36566 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1539:
#line 10699 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item),
                                       Item_func_trim::TRIM_BOTH_DEFAULT);
          }
#line 36575 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1540:
#line 10704 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_user((yyloc));
          }
#line 36583 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1541:
#line 10708 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_year((yyloc), (yyvsp[-1].item));
          }
#line 36591 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1542:
#line 10727 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-3].item), (yyvsp[-1].item), INTERVAL_DAY, 0);
          }
#line 36599 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1543:
#line 10731 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
          }
#line 36607 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1544:
#line 10735 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curdate_local((yyloc));
          }
#line 36615 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1545:
#line 10739 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curtime_local((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 36623 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1546:
#line 10744 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
          }
#line 36631 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1547:
#line 10749 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
          }
#line 36639 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1548:
#line 10753 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_extract((yyloc),  (yyvsp[-3].interval), (yyvsp[-1].item));
          }
#line 36647 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1549:
#line 10757 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_get_format((yyloc), (yyvsp[-3].date_time_type), (yyvsp[-1].item));
          }
#line 36655 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1550:
#line 10761 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_nonkeyword_now((yyloc),
              static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 36664 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1551:
#line 10766 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_locate((yyloc), (yyvsp[-1].item),(yyvsp[-3].item));
          }
#line 36672 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1552:
#line 10770 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-3].item), (yyvsp[-1].item), INTERVAL_DAY, 1);
          }
#line 36680 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1553:
#line 10774 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
          }
#line 36688 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1554:
#line 10778 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 36696 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1555:
#line 10782 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 36704 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1556:
#line 10786 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 36712 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1557:
#line 10790 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 36720 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1558:
#line 10794 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_nonkeyword_sysdate((yyloc),
              static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 36729 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1559:
#line 10799 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-1].item), (yyvsp[-3].item), (yyvsp[-5].interval_time_st), 0);
          }
#line 36737 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1560:
#line 10803 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_timestamp_diff((yyloc), (yyvsp[-3].item),(yyvsp[-1].item),(yyvsp[-5].interval_time_st));
          }
#line 36745 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1561:
#line 10807 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curdate_utc((yyloc));
          }
#line 36753 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1562:
#line 10811 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curtime_utc((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 36761 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1563:
#line 10815 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_now_utc((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 36769 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1564:
#line 10825 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type)= {ITEM_CAST_CHAR, nullptr, "512", nullptr};
          }
#line 36777 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1565:
#line 10829 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type)= (yyvsp[0].cast_type);
          }
#line 36785 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1566:
#line 10840 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_ascii((yyloc), (yyvsp[-1].item));
          }
#line 36793 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1567:
#line 10844 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_charset((yyloc), (yyvsp[-1].item));
          }
#line 36801 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1568:
#line 10848 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_coalesce((yyloc), (yyvsp[-1].item_list2));
          }
#line 36809 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1569:
#line 10852 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_collation((yyloc), (yyvsp[-1].item));
          }
#line 36817 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1570:
#line 10856 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_database((yyloc));
          }
#line 36825 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1571:
#line 10860 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_if((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 36833 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1572:
#line 10864 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_format((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 36841 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1573:
#line 10868 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_format((yyloc), (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 36849 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1574:
#line 10872 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_microsecond((yyloc), (yyvsp[-1].item));
          }
#line 36857 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1575:
#line 10876 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 36865 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1576:
#line 10880 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_quarter((yyloc), (yyvsp[-1].item));
          }
#line 36873 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1577:
#line 10884 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_repeat((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 36881 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1578:
#line 10888 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_replace((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 36889 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1579:
#line 10892 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_reverse((yyloc), (yyvsp[-1].item));
          }
#line 36897 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1580:
#line 10896 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_row_count((yyloc));
          }
#line 36905 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1581:
#line 10900 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_round((yyloc), (yyvsp[-3].item),(yyvsp[-1].item),1);
          }
#line 36913 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1582:
#line 10904 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_week((yyloc), (yyvsp[-1].item), NULL);
          }
#line 36921 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1583:
#line 10908 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_week((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 36929 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1584:
#line 10912 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-1].item), 0, 0, 0);
          }
#line 36937 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1585:
#line 10916 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-4].item), 0, (yyvsp[-1].ulong_num), 0);
          }
#line 36945 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1586:
#line 10920 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-4].item), 0, (yyvsp[-1].ulong_num), 0, true);
          }
#line 36953 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1587:
#line 10924 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-7].item), (yyvsp[-5].ulong_num), (yyvsp[-3].ulong_num), (yyvsp[-1].ulong_num));
          }
#line 36961 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1589:
#line 10932 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_geometrycollection,
                        Geometry::wkb_point);
          }
#line 36971 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1590:
#line 10938 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_linestring,
                        Geometry::wkb_point);
          }
#line 36981 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1591:
#line 10944 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_multilinestring,
                        Geometry::wkb_linestring);
          }
#line 36991 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1592:
#line 10950 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_multipoint,
                        Geometry::wkb_point);
          }
#line 37001 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1593:
#line 10956 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_multipolygon,
                        Geometry::wkb_polygon);
          }
#line 37011 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1594:
#line 10962 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_point((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 37019 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1595:
#line 10966 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_polygon,
                        Geometry::wkb_linestring);
          }
#line 37029 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1596:
#line 10984 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_generic_ident_sys((yylsp[-3]), (yyvsp[-3].lexer.lex_str), (yyvsp[-1].item_list2));
          }
#line 37037 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1597:
#line 10988 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_generic_2d((yyloc), (yyvsp[-5].lexer.lex_str), (yyvsp[-3].lexer.lex_str), (yyvsp[-1].item_list2));
          }
#line 37045 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1598:
#line 10995 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].num) | (yyvsp[0].num); }
#line 37051 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1599:
#line 10997 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= FT_BOOL;
            DBUG_EXECUTE_IF("simulate_bug18831513",
                            {
                              THD *thd= YYTHD;
                              if (thd->sp_runtime_ctx)
                                YYTHD->syntax_error();
                            });
          }
#line 37065 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1600:
#line 11009 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_NL; }
#line 37071 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1601:
#line 11010 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_NL; }
#line 37077 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1602:
#line 11014 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;         }
#line 37083 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1603:
#line 11015 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_EXPAND; }
#line 37089 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1604:
#line 11019 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= NULL; }
#line 37095 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1605:
#line 11020 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[0].item_list2); }
#line 37101 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1606:
#line 11025 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 37111 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1607:
#line 11031 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 37121 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1608:
#line 11040 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_udf_expr((yyloc), (yyvsp[-1].item), (yyvsp[0].lexer.lex_str), (yylsp[-1]).cpp);
          }
#line 37129 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1611:
#line 11052 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_avg((yyloc), (yyvsp[-2].item), false, (yyvsp[0].window));
          }
#line 37137 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1612:
#line 11056 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_avg((yyloc), (yyvsp[-2].item), true, (yyvsp[0].window));
          }
#line 37145 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1613:
#line 11060 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_and((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37153 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1614:
#line 11064 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_or((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37161 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1615:
#line 11068 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto wrapper = make_unique_destroy_only<Json_wrapper>(YYMEM_ROOT);
            if (wrapper == nullptr) YYABORT;
            unique_ptr_destroy_only<Json_array> array{::new (YYMEM_ROOT)
                                                          Json_array};
            if (array == nullptr) YYABORT;
            (yyval.item) = NEW_PTN Item_sum_json_array((yyloc), (yyvsp[-2].item), (yyvsp[0].window), std::move(wrapper),
                                             std::move(array));
          }
#line 37175 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1616:
#line 11078 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto wrapper = make_unique_destroy_only<Json_wrapper>(YYMEM_ROOT);
            if (wrapper == nullptr) YYABORT;
            unique_ptr_destroy_only<Json_object> object{::new (YYMEM_ROOT)
                                                            Json_object};
            if (object == nullptr) YYABORT;
            (yyval.item) = NEW_PTN Item_sum_json_object(
                (yyloc), (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].window), std::move(wrapper), std::move(object));
          }
#line 37189 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1617:
#line 11088 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_collect((yyloc), (yyvsp[-2].item), (yyvsp[0].window), false);
          }
#line 37197 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1618:
#line 11092 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_collect((yyloc), (yyvsp[-2].item), (yyvsp[0].window), true );
          }
#line 37205 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1619:
#line 11096 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_xor((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37213 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1620:
#line 11100 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_count_sym((yyloc), (yyvsp[0].window));
          }
#line 37221 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1621:
#line 11104 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_count((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37229 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1622:
#line 11108 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new Item_sum_count((yyloc), (yyvsp[-2].item_list2), (yyvsp[0].window));
          }
#line 37237 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1623:
#line 11112 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_min((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37245 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1624:
#line 11121 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_min((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37253 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1625:
#line 11125 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_max((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37261 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1626:
#line 11129 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_max((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37269 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1627:
#line 11133 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_std((yyloc), (yyvsp[-2].item), 0, (yyvsp[0].window));
          }
#line 37277 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1628:
#line 11137 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_variance((yyloc), (yyvsp[-2].item), 0, (yyvsp[0].window));
          }
#line 37285 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1629:
#line 11141 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_std((yyloc), (yyvsp[-2].item), 1, (yyvsp[0].window));
          }
#line 37293 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1630:
#line 11145 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_variance((yyloc), (yyvsp[-2].item), 1, (yyvsp[0].window));
          }
#line 37301 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1631:
#line 11149 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_sum((yyloc), (yyvsp[-2].item), false, (yyvsp[0].window));
          }
#line 37309 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1632:
#line 11153 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_sum((yyloc), (yyvsp[-2].item), true, (yyvsp[0].window));
          }
#line 37317 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1633:
#line 11160 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_group_concat((yyloc), (yyvsp[-5].num), (yyvsp[-4].item_list2), (yyvsp[-3].order_list), (yyvsp[-2].string), (yyvsp[0].window));
          }
#line 37325 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1634:
#line 11167 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=  NEW_PTN Item_row_number((yyloc), (yyvsp[0].window));
          }
#line 37333 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1635:
#line 11171 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_rank((yyloc), false, (yyvsp[0].window));
          }
#line 37341 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1636:
#line 11175 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_rank((yyloc), true, (yyvsp[0].window));
          }
#line 37349 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1637:
#line 11179 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=  NEW_PTN Item_cume_dist((yyloc), (yyvsp[0].window));
          }
#line 37357 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1638:
#line 11183 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_percent_rank((yyloc), (yyvsp[0].window));
          }
#line 37365 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1639:
#line 11187 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=NEW_PTN Item_ntile((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 37373 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1640:
#line 11191 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_item_list *args= NEW_PTN PT_item_list;
            if (args == NULL || args->push_back((yyvsp[-4].item)))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).offset != NULL && args->push_back((yyvsp[-3].lead_lag_info).offset))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).default_value != NULL && args->push_back((yyvsp[-3].lead_lag_info).default_value))
              MYSQL_YYABORT; // OOM
            (yyval.item)= NEW_PTN Item_lead_lag((yyloc), true, args, (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 37388 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1641:
#line 11202 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_item_list *args= NEW_PTN PT_item_list;
            if (args == NULL || args->push_back((yyvsp[-4].item)))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).offset != NULL && args->push_back((yyvsp[-3].lead_lag_info).offset))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).default_value != NULL && args->push_back((yyvsp[-3].lead_lag_info).default_value))
              MYSQL_YYABORT; // OOM
            (yyval.item)= NEW_PTN Item_lead_lag((yyloc), false, args, (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 37403 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1642:
#line 11213 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_first_last_value((yyloc), true, (yyvsp[-3].item), (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 37411 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1643:
#line 11217 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_first_last_value((yyloc), false, (yyvsp[-3].item), (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 37419 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1644:
#line 11221 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_item_list *args= NEW_PTN PT_item_list;
            if (args == NULL ||
                args->push_back((yyvsp[-6].item)) ||
                args->push_back((yyvsp[-4].item)))
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN Item_nth_value((yyloc), args, (yyvsp[-2].from_first_last) == NFL_FROM_LAST, (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 37432 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1645:
#line 11233 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lead_lag_info).offset= NULL;
            (yyval.lead_lag_info).default_value= NULL;
          }
#line 37441 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1646:
#line 11238 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lead_lag_info).offset= (yyvsp[-1].item);
            (yyval.lead_lag_info).default_value= (yyvsp[0].item);
          }
#line 37450 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1647:
#line 11249 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].item_num); }
#line 37456 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1649:
#line 11254 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = (yyvsp[0].param_marker); }
#line 37462 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1650:
#line 11255 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = NEW_PTN PTI_int_splocal((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str))); }
#line 37468 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1651:
#line 11256 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = NEW_PTN PTI_user_variable((yyloc), (yyvsp[0].lexer.lex_str)); }
#line 37474 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1652:
#line 11261 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NULL;
          }
#line 37482 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1653:
#line 11265 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item);
          }
#line 37490 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1654:
#line 11272 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.null_treatment)= NT_NONE;
          }
#line 37498 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1655:
#line 11276 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.null_treatment)= NT_RESPECT_NULLS;
          }
#line 37506 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1656:
#line 11280 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.null_treatment)= NT_IGNORE_NULLS;
          }
#line 37514 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1657:
#line 11288 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.from_first_last)= NFL_NONE;
          }
#line 37522 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1658:
#line 11292 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.from_first_last)= NFL_FROM_FIRST;
          }
#line 37530 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1659:
#line 11296 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.from_first_last)= NFL_FROM_LAST;
          }
#line 37538 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1660:
#line 11303 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= NULL;
          }
#line 37546 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1661:
#line 11307 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
          }
#line 37554 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1662:
#line 11314 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
          }
#line 37562 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1663:
#line 11321 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= NEW_PTN PT_window((yyvsp[0].item_string));
          }
#line 37570 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1664:
#line 11325 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
          }
#line 37578 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1665:
#line 11332 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_string)= NEW_PTN Item_string((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, YYTHD->charset());
          }
#line 37586 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1666:
#line 11339 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[-1].window);
          }
#line 37594 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1667:
#line 11349 "sql_yacc.yy" /* yacc.c:1646  */
    {
             auto frame= (yyvsp[0].window_frame);
             if (!frame) // build an equivalent frame spec
             {
               auto start_bound= NEW_PTN PT_border(WBT_UNBOUNDED_PRECEDING);
               auto end_bound= NEW_PTN PT_border((yyvsp[-1].order_list) ? WBT_CURRENT_ROW :
                 WBT_UNBOUNDED_FOLLOWING);
               auto bounds= NEW_PTN PT_borders(start_bound, end_bound);
               frame= NEW_PTN PT_frame(WFU_RANGE, bounds, nullptr);
               frame->m_originally_absent= true;
             }
             (yyval.window)= NEW_PTN PT_window((yyvsp[-2].order_list), (yyvsp[-1].order_list), frame, (yyvsp[-3].item_string));
           }
#line 37612 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1668:
#line 11366 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_string)= NULL;
          }
#line 37620 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1669:
#line 11370 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_string)= (yyvsp[0].item_string);
          }
#line 37628 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1670:
#line 11377 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NULL;
          }
#line 37636 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1671:
#line 11381 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= (yyvsp[0].order_list);
          }
#line 37644 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1672:
#line 11388 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NULL;
          }
#line 37652 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1673:
#line 11392 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= (yyvsp[0].order_list);
          }
#line 37660 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1674:
#line 11399 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame)= NULL;
          }
#line 37668 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1675:
#line 11405 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame)= NEW_PTN PT_frame((yyvsp[-2].frame_units), (yyvsp[-1].frame_extent), (yyvsp[0].frame_exclusion));
          }
#line 37676 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1676:
#line 11412 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto end_bound= NEW_PTN PT_border(WBT_CURRENT_ROW);
            (yyval.frame_extent)= NEW_PTN PT_borders((yyvsp[0].bound), end_bound);
          }
#line 37685 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1677:
#line 11417 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_extent)= (yyvsp[0].frame_extent);
          }
#line 37693 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1678:
#line 11424 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_UNBOUNDED_PRECEDING);
          }
#line 37701 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1679:
#line 11428 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_PRECEDING, (yyvsp[-1].item_num));
          }
#line 37709 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1680:
#line 11432 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_PRECEDING, (yyvsp[-1].param_marker));
          }
#line 37717 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1681:
#line 11436 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_PRECEDING, (yyvsp[-2].item), (yyvsp[-1].interval));
          }
#line 37725 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1682:
#line 11440 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_CURRENT_ROW);
          }
#line 37733 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1683:
#line 11447 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_extent)= NEW_PTN PT_borders((yyvsp[-2].bound), (yyvsp[0].bound));
          }
#line 37741 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1684:
#line 11454 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= (yyvsp[0].bound);
          }
#line 37749 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1685:
#line 11458 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_UNBOUNDED_FOLLOWING);
          }
#line 37757 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1686:
#line 11462 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_FOLLOWING, (yyvsp[-1].item_num));
          }
#line 37765 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1687:
#line 11466 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_FOLLOWING, (yyvsp[-1].param_marker));
          }
#line 37773 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1688:
#line 11470 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_FOLLOWING, (yyvsp[-2].item), (yyvsp[-1].interval));
          }
#line 37781 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1689:
#line 11477 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NULL;
          }
#line 37789 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1690:
#line 11481 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_CURRENT_ROW);
          }
#line 37797 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1691:
#line 11485 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_GROUP);
          }
#line 37805 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1692:
#line 11489 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_TIES);
          }
#line 37813 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1693:
#line 11493 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_NO_OTHERS);
          }
#line 37820 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1694:
#line 11498 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= WFU_ROWS; }
#line 37826 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1695:
#line 11499 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= WFU_RANGE; }
#line 37832 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1696:
#line 11500 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= WFU_GROUPS; }
#line 37838 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1697:
#line 11505 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_grouping((yyloc), (yyvsp[-1].item_list2));
          }
#line 37846 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1698:
#line 11512 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning(YYTHD, Sql_condition::SL_WARNING,
                         ER_WARN_DEPRECATED_SYNTAX,
                         ER_THD(YYTHD, ER_WARN_DEPRECATED_USER_SET_EXPR));
            (yyval.item) = NEW_PTN PTI_variable_aux_set_var((yyloc), (yyvsp[-2].lexer.lex_str), (yyvsp[0].item));
          }
#line 37857 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1699:
#line 11522 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item) = NEW_PTN PTI_user_variable((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 37865 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1700:
#line 11526 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item) = NEW_PTN PTI_get_system_variable((yyloc), (yyvsp[-1].var_type),
                                                 (yylsp[0]), (yyvsp[0].bipartite_name).prefix, (yyvsp[0].bipartite_name).name);
          }
#line 37874 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1701:
#line 11533 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 37880 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1702:
#line 11534 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 37886 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1703:
#line 11539 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string)= NEW_PTN String(",", 1, &my_charset_latin1);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 37896 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1704:
#line 11544 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string) = (yyvsp[0].string); }
#line 37902 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1705:
#line 11548 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_list)= NULL; }
#line 37908 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1706:
#line 11549 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_list)= (yyvsp[0].order_list); }
#line 37914 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1707:
#line 11554 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].order_list)->push_back((yyvsp[0].order_expr));
            (yyval.order_list)= (yyvsp[-2].order_list);
          }
#line 37923 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1708:
#line 11559 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_gorder_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 37934 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1709:
#line 11569 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_in_sum_expr((yylsp[-1]), (yyvsp[0].item));
          }
#line 37942 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1710:
#line 11576 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).charset= &my_charset_bin;
            (yyval.cast_type).length= (yyvsp[0].c_str);
            (yyval.cast_type).dec= NULL;
          }
#line 37953 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1711:
#line 11583 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).length= (yyvsp[-1].c_str);
            (yyval.cast_type).dec= NULL;
            if ((yyvsp[0].charset_with_opt_binary).force_binary)
            {
              // Bugfix: before this patch we ignored [undocumented]
              // collation modifier in the CAST(expr, CHAR(...) BINARY) syntax.
              // To restore old behavior just remove this "if ($3...)" branch.

              (yyval.cast_type).charset= get_bin_collation((yyvsp[0].charset_with_opt_binary).charset ? (yyvsp[0].charset_with_opt_binary).charset :
                  YYTHD->variables.collation_connection);
              if ((yyval.cast_type).charset == NULL)
                MYSQL_YYABORT;
            }
            else
              (yyval.cast_type).charset= (yyvsp[0].charset_with_opt_binary).charset;
          }
#line 37976 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1712:
#line 11602 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).charset= national_charset_info;
            (yyval.cast_type).length= (yyvsp[0].c_str);
            (yyval.cast_type).dec= NULL;
            warn_about_deprecated_national(YYTHD);
          }
#line 37988 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1713:
#line 11610 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_SIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 37999 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1714:
#line 11617 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_SIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 38010 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1715:
#line 11624 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_UNSIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 38021 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1716:
#line 11631 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_UNSIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 38032 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1717:
#line 11638 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_DATE;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 38043 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1718:
#line 11645 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_YEAR;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 38054 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1719:
#line 11652 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_TIME;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= (yyvsp[0].c_str);
          }
#line 38065 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1720:
#line 11659 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_DATETIME;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= (yyvsp[0].c_str);
          }
#line 38076 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1721:
#line 11666 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target=ITEM_CAST_DECIMAL;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= (yyvsp[0].precision).length;
            (yyval.cast_type).dec= (yyvsp[0].precision).dec;
          }
#line 38087 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1722:
#line 11673 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target=ITEM_CAST_JSON;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 38098 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1723:
#line 11680 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ((yyvsp[0].numeric_type) == Numeric_type::DOUBLE) ?
              ITEM_CAST_DOUBLE : ITEM_CAST_FLOAT;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 38110 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1724:
#line 11688 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ITEM_CAST_FLOAT;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = (yyvsp[0].precision).length;
            (yyval.cast_type).dec = nullptr;
          }
#line 38121 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1725:
#line 11695 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ITEM_CAST_POINT;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 38132 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1726:
#line 11702 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ITEM_CAST_LINESTRING;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 38143 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1727:
#line 11709 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ITEM_CAST_POLYGON;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 38154 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1728:
#line 11716 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ITEM_CAST_MULTIPOINT;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 38165 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1729:
#line 11723 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ITEM_CAST_MULTILINESTRING;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 38176 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1730:
#line 11730 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ITEM_CAST_MULTIPOLYGON;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 38187 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1731:
#line 11737 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ITEM_CAST_GEOMETRYCOLLECTION;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 38198 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1732:
#line 11746 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= NULL; }
#line 38204 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1734:
#line 11752 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 38214 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1735:
#line 11758 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 38224 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1736:
#line 11766 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[0].item_list2); }
#line 38230 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1737:
#line 11767 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 38236 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1738:
#line 11772 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 38246 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1739:
#line 11778 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 38256 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1740:
#line 11786 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 38262 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1741:
#line 11787 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 38268 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1742:
#line 11791 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 38274 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1743:
#line 11792 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 38280 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1744:
#line 11797 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (YYMEM_ROOT) mem_root_deque<Item *>(YYMEM_ROOT);
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[-2].item));
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 38292 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1745:
#line 11805 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-4].item_list)->push_back((yyvsp[-2].item));
            (yyvsp[-4].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-4].item_list);
          }
#line 38302 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1746:
#line 11813 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].table_reference); }
#line 38308 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1747:
#line 11814 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].join_table); }
#line 38314 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1748:
#line 11816 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              The ODBC escape syntax for Outer Join.

              All productions from table_factor and joined_table can be escaped,
              not only the '{LEFT | RIGHT} [OUTER] JOIN' syntax.
            */
            (yyval.table_reference) = (yyvsp[-1].table_reference);
          }
#line 38328 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1749:
#line 11828 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].table_reference); }
#line 38334 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1750:
#line 11829 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].join_table); }
#line 38340 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1751:
#line 11911 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_on((yyvsp[-4].table_reference), (yylsp[-3]), (yyvsp[-3].join_type), (yyvsp[-2].table_reference), (yyvsp[0].item));
          }
#line 38348 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1752:
#line 11916 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[-6].table_reference), (yylsp[-5]), (yyvsp[-5].join_type), (yyvsp[-4].table_reference), (yyvsp[-1].string_list));
          }
#line 38356 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1753:
#line 11920 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_on((yyvsp[-4].table_reference), (yylsp[-3]), (yyvsp[-3].join_type), (yyvsp[-2].table_reference), (yyvsp[0].item));
          }
#line 38364 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1754:
#line 11924 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[-6].table_reference), (yylsp[-5]), (yyvsp[-5].join_type), (yyvsp[-4].table_reference), (yyvsp[-1].string_list));
          }
#line 38372 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1755:
#line 11929 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto this_cross_join= NEW_PTN PT_cross_join((yyvsp[-2].table_reference), (yylsp[-1]), (yyvsp[-1].join_type), NULL);

            if ((yyvsp[0].table_reference) == NULL)
              MYSQL_YYABORT; // OOM

            (yyval.join_table)= (yyvsp[0].table_reference)->add_cross_join(this_cross_join);
          }
#line 38385 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1756:
#line 11938 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[-2].table_reference), (yylsp[-1]), (yyvsp[-1].join_type), (yyvsp[0].table_reference));
          }
#line 38393 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1757:
#line 11944 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_NATURAL_INNER; }
#line 38399 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1758:
#line 11945 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_NATURAL_RIGHT; }
#line 38405 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1759:
#line 11946 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_NATURAL_LEFT; }
#line 38411 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1760:
#line 11950 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_INNER; }
#line 38417 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1761:
#line 11951 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_INNER; }
#line 38423 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1762:
#line 11952 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_INNER; }
#line 38429 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1763:
#line 11953 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_STRAIGHT_INNER; }
#line 38435 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1764:
#line 11956 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_LEFT; }
#line 38441 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1765:
#line 11957 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_RIGHT; }
#line 38447 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1770:
#line 11975 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string_list)= NULL; }
#line 38453 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1772:
#line 11981 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= (yyvsp[-1].string_list);
          }
#line 38461 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1775:
#line 12011 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference) = (yyvsp[0].derived_table); }
#line 38467 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1776:
#line 12013 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= NEW_PTN PT_table_factor_joined_table((yyvsp[0].join_table)); }
#line 38473 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1777:
#line 12015 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= NEW_PTN PT_table_reference_list_parens((yyvsp[0].table_reference_list)); }
#line 38479 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1778:
#line 12016 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference) = (yyvsp[0].table_reference); }
#line 38485 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1779:
#line 12020 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list)= (yyvsp[-1].table_reference_list); }
#line 38491 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1780:
#line 12022 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list)= (yyvsp[-3].table_reference_list);
            if ((yyval.table_reference_list).push_back((yyvsp[-1].table_reference)))
              MYSQL_YYABORT; // OOM
          }
#line 38501 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1781:
#line 12030 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[-1].table_reference); }
#line 38507 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1782:
#line 12031 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[-1].table_reference); }
#line 38513 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1783:
#line 12036 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference)= NEW_PTN PT_table_factor_table_ident((yyvsp[-3].table), (yyvsp[-2].string_list), (yyvsp[-1].lex_cstr), (yyvsp[0].key_usage_list));
          }
#line 38521 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1784:
#line 12042 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_table)= (yyvsp[-1].join_table); }
#line 38527 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1785:
#line 12043 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_table)= (yyvsp[-1].join_table); }
#line 38533 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1786:
#line 12048 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              The alias is actually not optional at all, but being MySQL we
              are friendly and give an informative error message instead of
              just 'syntax error'.
            */
            if ((yyvsp[-1].lex_cstr).str == nullptr)
              my_message(ER_DERIVED_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_DERIVED_MUST_HAVE_ALIAS), MYF(0));

            (yyval.derived_table)= NEW_PTN PT_derived_table(false, (yyvsp[-2].subquery), (yyvsp[-1].lex_cstr), &(yyvsp[0].simple_ident_list));
          }
#line 38550 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1787:
#line 12061 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].lex_cstr).str == nullptr)
              my_message(ER_DERIVED_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_DERIVED_MUST_HAVE_ALIAS), MYF(0));

            (yyval.derived_table)= NEW_PTN PT_derived_table(true, (yyvsp[-2].subquery), (yyvsp[-1].lex_cstr), &(yyvsp[0].simple_ident_list));
          }
#line 38562 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1788:
#line 12073 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Alias isn't optional, follow derived's behavior
            if ((yyvsp[0].lex_cstr) == NULL_CSTR)
            {
              my_message(ER_TF_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_TF_MUST_HAVE_ALIAS), MYF(0));
              MYSQL_YYABORT;
            }

            (yyval.table_reference)= NEW_PTN PT_table_factor_function((yyvsp[-5].item), (yyvsp[-3].text_literal), (yyvsp[-2].jtc_list), to_lex_string((yyvsp[0].lex_cstr)));
          }
#line 38578 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1789:
#line 12088 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jtc_list)= (yyvsp[-1].jtc_list);
          }
#line 38586 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1790:
#line 12095 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jtc_list)= NEW_PTN Mem_root_array<PT_json_table_column *>(YYMEM_ROOT);
            if ((yyval.jtc_list) == NULL || (yyval.jtc_list)->push_back((yyvsp[0].jt_column)))
              MYSQL_YYABORT; // OOM
          }
#line 38596 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1791:
#line 12101 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jtc_list)= (yyvsp[-2].jtc_list);
            if ((yyval.jtc_list)->push_back((yyvsp[0].jt_column)))
              MYSQL_YYABORT; // OOM
          }
#line 38606 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1792:
#line 12110 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column)= NEW_PTN PT_json_table_column_for_ordinality((yyvsp[-2].lexer.lex_str));
          }
#line 38614 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1793:
#line 12115 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto column = make_unique_destroy_only<Json_table_column>(
                YYMEM_ROOT, (yyvsp[-3].jt_column_type), (yyvsp[-1].text_literal), (yyvsp[0].json_on_error_or_empty).error.type, (yyvsp[0].json_on_error_or_empty).error.default_string,
                (yyvsp[0].json_on_error_or_empty).empty.type, (yyvsp[0].json_on_error_or_empty).empty.default_string);
            if (column == nullptr) MYSQL_YYABORT;  // OOM
            (yyval.jt_column) = NEW_PTN PT_json_table_column_with_path(std::move(column), (yyvsp[-6].lexer.lex_str),
                                                        (yyvsp[-5].type), (yyvsp[-4].lexer.charset));
          }
#line 38627 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1794:
#line 12124 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column)= NEW_PTN PT_json_table_column_with_nested_path((yyvsp[-1].text_literal), (yyvsp[0].jtc_list));
          }
#line 38635 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1795:
#line 12130 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column_type)= enum_jt_column::JTC_PATH;
          }
#line 38643 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1796:
#line 12134 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column_type)= enum_jt_column::JTC_EXISTS;
          }
#line 38651 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1797:
#line 12144 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_error_or_empty).empty = {Json_on_response_type::IMPLICIT, nullptr};
            (yyval.json_on_error_or_empty).error = {Json_on_response_type::IMPLICIT, nullptr};
          }
#line 38660 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1798:
#line 12149 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_error_or_empty).empty = (yyvsp[0].json_on_response);
            (yyval.json_on_error_or_empty).error = {Json_on_response_type::IMPLICIT, nullptr};
          }
#line 38669 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1799:
#line 12154 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_error_or_empty).error = (yyvsp[0].json_on_response);
            (yyval.json_on_error_or_empty).empty = {Json_on_response_type::IMPLICIT, nullptr};
          }
#line 38678 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1800:
#line 12159 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_error_or_empty).empty = (yyvsp[-1].json_on_response);
            (yyval.json_on_error_or_empty).error = (yyvsp[0].json_on_response);
          }
#line 38687 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1801:
#line 12167 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.json_on_error_or_empty) = (yyvsp[0].json_on_error_or_empty); }
#line 38693 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1802:
#line 12169 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning(
              YYTHD, Sql_condition::SL_WARNING, ER_WARN_DEPRECATED_SYNTAX,
              ER_THD(YYTHD, ER_WARN_DEPRECATED_JSON_TABLE_ON_ERROR_ON_EMPTY));
            (yyval.json_on_error_or_empty).error = (yyvsp[-1].json_on_response);
            (yyval.json_on_error_or_empty).empty = (yyvsp[0].json_on_response);
          }
#line 38705 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1803:
#line 12179 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.json_on_response)= (yyvsp[-2].json_on_response); }
#line 38711 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1804:
#line 12182 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.json_on_response)= (yyvsp[-2].json_on_response); }
#line 38717 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1805:
#line 12186 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_response) = {Json_on_response_type::ERROR, nullptr};
          }
#line 38725 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1806:
#line 12190 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_response) = {Json_on_response_type::NULL_VALUE, nullptr};
          }
#line 38733 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1807:
#line 12194 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.json_on_response) = {Json_on_response_type::DEFAULT, (yyvsp[0].item)};
          }
#line 38741 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1808:
#line 12201 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= old_mode ?  INDEX_HINT_MASK_JOIN : INDEX_HINT_MASK_ALL;
          }
#line 38749 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1809:
#line 12204 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_JOIN;  }
#line 38755 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1810:
#line 12205 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_ORDER; }
#line 38761 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1811:
#line 12206 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_GROUP; }
#line 38767 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1812:
#line 12210 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_hint)= INDEX_HINT_FORCE; }
#line 38773 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1813:
#line 12211 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_hint)= INDEX_HINT_IGNORE; }
#line 38779 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1814:
#line 12217 "sql_yacc.yy" /* yacc.c:1646  */
    {
            init_index_hints((yyvsp[-1].key_usage_list), (yyvsp[-5].index_hint), (yyvsp[-3].num));
            (yyval.key_usage_list)= (yyvsp[-1].key_usage_list);
          }
#line 38788 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1815:
#line 12223 "sql_yacc.yy" /* yacc.c:1646  */
    {
            init_index_hints((yyvsp[-1].key_usage_list), INDEX_HINT_USE, (yyvsp[-3].num));
            (yyval.key_usage_list)= (yyvsp[-1].key_usage_list);
          }
#line 38797 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1817:
#line 12232 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].key_usage_list)->concat((yyvsp[-1].key_usage_list));
            (yyval.key_usage_list)= (yyvsp[0].key_usage_list);
          }
#line 38806 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1818:
#line 12239 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_usage_list)= NULL; }
#line 38812 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1821:
#line 12249 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_list)= NEW_PTN List<Index_hint>;
            Index_hint *hint= NEW_PTN Index_hint(NULL, 0);
            if ((yyval.key_usage_list) == NULL || hint == NULL || (yyval.key_usage_list)->push_front(hint))
              MYSQL_YYABORT;
          }
#line 38823 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1823:
#line 12260 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_element)= NEW_PTN Index_hint((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            if ((yyval.key_usage_element) == NULL)
              MYSQL_YYABORT;
          }
#line 38833 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1824:
#line 12266 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_element)= NEW_PTN Index_hint(STRING_WITH_LEN("PRIMARY"));
            if ((yyval.key_usage_element) == NULL)
              MYSQL_YYABORT;
          }
#line 38843 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1825:
#line 12275 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_list)= NEW_PTN List<Index_hint>;
            if ((yyval.key_usage_list) == NULL || (yyval.key_usage_list)->push_front((yyvsp[0].key_usage_element)))
              MYSQL_YYABORT;
          }
#line 38853 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1826:
#line 12281 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.key_usage_list)->push_front((yyvsp[0].key_usage_element)))
              MYSQL_YYABORT;
          }
#line 38862 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1828:
#line 12293 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= NEW_PTN List<String>;
            String *s= NEW_PTN String(const_cast<const char *>((yyvsp[0].lexer.lex_str).str),
                                               (yyvsp[0].lexer.lex_str).length,
                                               system_charset_info);
            if ((yyval.string_list) == NULL || s == NULL || (yyval.string_list)->push_back(s))
              MYSQL_YYABORT;
          }
#line 38875 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1829:
#line 12302 "sql_yacc.yy" /* yacc.c:1646  */
    {
            String *s= NEW_PTN String(const_cast<const char *>((yyvsp[0].lexer.lex_str).str),
                                               (yyvsp[0].lexer.lex_str).length,
                                               system_charset_info);
            if (s == NULL || (yyvsp[-2].string_list)->push_back(s))
              MYSQL_YYABORT;
            (yyval.string_list)= (yyvsp[-2].string_list);
          }
#line 38888 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1830:
#line 12313 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38894 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1831:
#line 12314 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_HOUR; }
#line 38900 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1832:
#line 12315 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_MICROSECOND; }
#line 38906 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1833:
#line 12316 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_MINUTE; }
#line 38912 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1834:
#line 12317 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_SECOND; }
#line 38918 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1835:
#line 12318 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_MICROSECOND; }
#line 38924 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1836:
#line 12319 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_MINUTE; }
#line 38930 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1837:
#line 12320 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_SECOND; }
#line 38936 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1838:
#line 12321 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_MINUTE_MICROSECOND; }
#line 38942 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1839:
#line 12322 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_MINUTE_SECOND; }
#line 38948 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1840:
#line 12323 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_SECOND_MICROSECOND; }
#line 38954 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1841:
#line 12324 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_YEAR_MONTH; }
#line 38960 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1842:
#line 12328 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_DAY; }
#line 38966 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1843:
#line 12329 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_WEEK; }
#line 38972 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1844:
#line 12330 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_HOUR; }
#line 38978 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1845:
#line 12331 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MINUTE; }
#line 38984 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1846:
#line 12332 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MONTH; }
#line 38990 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1847:
#line 12333 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_QUARTER; }
#line 38996 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1848:
#line 12334 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_SECOND; }
#line 39002 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1849:
#line 12335 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MICROSECOND; }
#line 39008 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1850:
#line 12336 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_YEAR; }
#line 39014 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1851:
#line 12340 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATE; }
#line 39020 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1852:
#line 12341 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_TIME; }
#line 39026 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1853:
#line 12342 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
#line 39032 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1854:
#line 12343 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
#line 39038 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1857:
#line 12352 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = NULL_CSTR; }
#line 39044 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1858:
#line 12353 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 39050 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1861:
#line 12362 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = nullptr; }
#line 39056 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1863:
#line 12367 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = NEW_PTN PTI_where((yylsp[0]), (yyvsp[0].item)); }
#line 39062 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1864:
#line 12371 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 39068 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1865:
#line 12373 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new PTI_having((yyloc), (yyvsp[0].item));
          }
#line 39076 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1866:
#line 12380 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_clause)= NEW_PTN PT_with_clause((yyvsp[0].with_list), false);
          }
#line 39084 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1867:
#line 12384 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_clause)= NEW_PTN PT_with_clause((yyvsp[0].with_list), true);
          }
#line 39092 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1868:
#line 12391 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].with_list)->push_back((yyvsp[0].common_table_expr)))
              MYSQL_YYABORT;
          }
#line 39101 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1869:
#line 12396 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_list)= NEW_PTN PT_with_list(YYTHD->mem_root);
            if ((yyval.with_list) == NULL || (yyval.with_list)->push_back((yyvsp[0].common_table_expr)))
              MYSQL_YYABORT;    /* purecov: inspected */
          }
#line 39111 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1870:
#line 12405 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_STRING subq_text;
            subq_text.length= (yylsp[0]).cpp.length();
            subq_text.str= YYTHD->strmake((yylsp[0]).cpp.start, subq_text.length);
            if (subq_text.str == NULL)
              MYSQL_YYABORT;   /* purecov: inspected */
            uint subq_text_offset= (yylsp[0]).cpp.start - YYLIP->get_cpp_buf();
            (yyval.common_table_expr)= NEW_PTN PT_common_table_expr((yyvsp[-3].lexer.lex_str), subq_text, subq_text_offset,
                                             (yyvsp[0].subquery), &(yyvsp[-2].simple_ident_list), YYTHD->mem_root);
            if ((yyval.common_table_expr) == NULL)
              MYSQL_YYABORT;   /* purecov: inspected */
          }
#line 39128 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1871:
#line 12421 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Because () isn't accepted by the rule of
              simple_ident_list, we can use an empty array to
              designates that the parenthesised list was omitted.
            */
            (yyval.simple_ident_list).init(YYTHD->mem_root);
          }
#line 39141 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1872:
#line 12430 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_ident_list)= (yyvsp[-1].simple_ident_list);
          }
#line 39149 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1873:
#line 12437 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_ident_list).init(YYTHD->mem_root);
            if ((yyval.simple_ident_list).push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT; /* purecov: inspected */
          }
#line 39159 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1874:
#line 12443 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_ident_list)= (yyvsp[-2].simple_ident_list);
            if ((yyval.simple_ident_list).push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT;  /* purecov: inspected */
          }
#line 39169 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1875:
#line 12452 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.windows)= NULL;
          }
#line 39177 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1876:
#line 12456 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.windows)= (yyvsp[0].windows);
          }
#line 39185 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1877:
#line 12463 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.windows)= NEW_PTN PT_window_list();
            if ((yyval.windows) == NULL || (yyval.windows)->push_back((yyvsp[0].window)))
              MYSQL_YYABORT; // OOM
          }
#line 39195 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1878:
#line 12469 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].windows)->push_back((yyvsp[0].window)))
              MYSQL_YYABORT; // OOM
            (yyval.windows)= (yyvsp[-2].windows);
          }
#line 39205 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1879:
#line 12478 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
            if ((yyval.window) == NULL)
              MYSQL_YYABORT; // OOM
            (yyval.window)->set_name((yyvsp[-2].item_string));
          }
#line 39216 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1880:
#line 12491 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.group)= NULL; }
#line 39222 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1881:
#line 12493 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.group)= NEW_PTN PT_group((yyvsp[-1].order_list), (yyvsp[0].olap_type));
          }
#line 39230 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1882:
#line 12500 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].order_list)->push_back((yyvsp[0].order_expr));
            (yyval.order_list)= (yyvsp[-2].order_list);
          }
#line 39239 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1883:
#line 12505 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 39250 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1884:
#line 12515 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.olap_type)= UNSPECIFIED_OLAP_TYPE; }
#line 39256 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1885:
#line 12516 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.olap_type)= ROLLUP_TYPE; }
#line 39262 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1886:
#line 12532 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= (yyvsp[-2].order_list);
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 39271 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1887:
#line 12537 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 39282 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1888:
#line 12547 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[-1].item), (yyvsp[0].order_direction));
          }
#line 39290 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1889:
#line 12553 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order)= NULL; }
#line 39296 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1891:
#line 12559 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order)= NEW_PTN PT_order((yyvsp[0].order_list));
          }
#line 39304 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1892:
#line 12566 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].order_list)->push_back((yyvsp[0].order_expr));
            (yyval.order_list)= (yyvsp[-2].order_list);
          }
#line 39313 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1893:
#line 12571 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 39324 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1894:
#line 12580 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_direction)= ORDER_NOT_RELEVANT; }
#line 39330 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1896:
#line 12585 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_direction)= ORDER_ASC; }
#line 39336 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1897:
#line 12586 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_direction)= ORDER_DESC; }
#line 39342 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1898:
#line 12590 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.limit_clause)= NULL; }
#line 39348 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1900:
#line 12596 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_clause)= NEW_PTN PT_limit_clause((yyvsp[0].limit_options));
          }
#line 39356 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1901:
#line 12603 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_options).limit= (yyvsp[0].item);
            (yyval.limit_options).opt_offset= NULL;
            (yyval.limit_options).is_offset_first= false;
          }
#line 39366 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1902:
#line 12609 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_options).limit= (yyvsp[0].item);
            (yyval.limit_options).opt_offset= (yyvsp[-2].item);
            (yyval.limit_options).is_offset_first= true;
          }
#line 39376 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1903:
#line 12615 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_options).limit= (yyvsp[-2].item);
            (yyval.limit_options).opt_offset= (yyvsp[0].item);
            (yyval.limit_options).is_offset_first= false;
          }
#line 39386 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1904:
#line 12624 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_limit_option_ident((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 39394 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1905:
#line 12628 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_limit_option_param_marker((yyloc), (yyvsp[0].param_marker));
          }
#line 39402 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1906:
#line 12632 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 39410 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1907:
#line 12636 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 39418 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1908:
#line 12640 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 39426 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1909:
#line 12646 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 39432 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1910:
#line 12647 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 39438 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1911:
#line 12651 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39444 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1912:
#line 12652 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (ulong) my_strtoll((yyvsp[0].lexer.lex_str).str, (char**) 0, 16); }
#line 39450 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1913:
#line 12653 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39456 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1914:
#line 12654 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39462 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1915:
#line 12655 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39468 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1916:
#line 12656 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39474 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1917:
#line 12660 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39480 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1918:
#line 12661 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (ulong) my_strtoll((yyvsp[0].lexer.lex_str).str, (char**) 0, 16); }
#line 39486 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1919:
#line 12662 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39492 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1920:
#line 12663 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39498 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1921:
#line 12664 "sql_yacc.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT; }
#line 39504 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1922:
#line 12668 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39510 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1923:
#line 12669 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39516 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1924:
#line 12670 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39522 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1925:
#line 12671 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39528 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1926:
#line 12672 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39534 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1927:
#line 12676 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39540 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1928:
#line 12677 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= (ulonglong) my_strtoll((yyvsp[0].lexer.lex_str).str, (char**) 0, 16); }
#line 39546 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1929:
#line 12678 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39552 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1930:
#line 12679 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 39558 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1931:
#line 12680 "sql_yacc.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT; }
#line 39564 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1932:
#line 12685 "sql_yacc.yy" /* yacc.c:1646  */
    { YYTHD->syntax_error(ER_ONLY_INTEGERS_ALLOWED); }
#line 39570 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1935:
#line 12695 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_list)= (yyvsp[-2].select_var_list);
            if ((yyval.select_var_list) == NULL || (yyval.select_var_list)->push_back((yyvsp[0].select_var_ident)))
              MYSQL_YYABORT;
          }
#line 39580 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1936:
#line 12701 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_list)= NEW_PTN PT_select_var_list((yyloc));
            if ((yyval.select_var_list) == NULL || (yyval.select_var_list)->push_back((yyvsp[0].select_var_ident)))
              MYSQL_YYABORT;
          }
#line 39590 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1937:
#line 12710 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_ident)= NEW_PTN PT_select_var((yyvsp[0].lexer.lex_str));
          }
#line 39598 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1938:
#line 12714 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_ident)= NEW_PTN PT_select_sp_var((yyvsp[0].lexer.lex_str));
          }
#line 39606 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1939:
#line 12721 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.into_destination)= (yyvsp[0].into_destination);
          }
#line 39614 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1940:
#line 12730 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.into_destination)= NEW_PTN PT_into_destination_outfile((yyloc), (yyvsp[-3].lexer.lex_str), (yyvsp[-2].lexer.charset), (yyvsp[-1].field_separators), (yyvsp[0].line_separators));
          }
#line 39622 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1941:
#line 12734 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.into_destination)= NEW_PTN PT_into_destination_dumpfile((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 39630 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1942:
#line 12737 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.into_destination)= (yyvsp[0].select_var_list); }
#line 39636 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1943:
#line 12746 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_select_stmt(SQLCOM_DO,
                  NEW_PTN PT_query_expression(
                    NEW_PTN PT_query_specification({}, (yyvsp[0].item_list2))));
          }
#line 39646 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1944:
#line 12759 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Note: opt_restrict ($6) is ignored!
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_DROP_TABLE;
            lex->drop_temporary= (yyvsp[-4].is_not_empty);
            lex->drop_if_exists= (yyvsp[-2].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
            if (Select->add_tables(YYTHD, (yyvsp[-1].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 39663 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1945:
#line 12775 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_index_stmt(YYMEM_ROOT, (yyvsp[-3].lexer.lex_str).str, (yyvsp[-1].table),
                                           (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                           (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 39673 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1946:
#line 12784 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_DROP_DB;
            lex->drop_if_exists=(yyvsp[-1].num);
            lex->name= (yyvsp[0].lexer.lex_str);
          }
#line 39684 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1947:
#line 12794 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_name *spname;
            if ((yyvsp[-2].lexer.lex_str).str &&
                (check_and_convert_db_name(&(yyvsp[-2].lexer.lex_str), false) != Ident_name_check::OK))
               MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
               MYSQL_YYABORT;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[-3].num);
            spname= new (YYMEM_ROOT) sp_name(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].lexer.lex_str), true);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
#line 39711 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1948:
#line 12817 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Unlike DROP PROCEDURE, "DROP FUNCTION ident" should work
              even if there is no current database. In this case it
              applies only to UDF.
              Hence we can't merge rules for "DROP FUNCTION ident.ident"
              and "DROP FUNCTION ident" into one "DROP FUNCTION sp_name"
              rule. sp_name assumes that database name should be always
              provided - either explicitly or implicitly.
            */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_STRING db= NULL_STR;
            sp_name *spname;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            if (thd->db().str && lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
               MYSQL_YYABORT;
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[-1].num);
            spname= new (YYMEM_ROOT) sp_name(to_lex_cstring(db), (yyvsp[0].lexer.lex_str), false);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
#line 39747 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1949:
#line 12852 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_resource_group(to_lex_cstring((yyvsp[-1].lexer.lex_str)), (yyvsp[0].resource_group_flag_type));
          }
#line 39755 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1950:
#line 12859 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_PROCEDURE;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->spname= (yyvsp[0].spname);
          }
#line 39771 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1951:
#line 12874 "sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex=Lex;
             lex->sql_command= SQLCOM_DROP_USER;
             lex->drop_if_exists= (yyvsp[-1].num);
             lex->users_list= *(yyvsp[0].user_list);
          }
#line 39782 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1952:
#line 12884 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Note: opt_restrict ($5) is ignored!
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_VIEW;
            lex->drop_if_exists= (yyvsp[-2].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
            if (Select->add_tables(YYTHD, (yyvsp[-1].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 39798 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1953:
#line 12899 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->drop_if_exists= (yyvsp[-1].num);
            Lex->spname= (yyvsp[0].spname);
            Lex->sql_command = SQLCOM_DROP_EVENT;
          }
#line 39808 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1954:
#line 12908 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_TRIGGER;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->spname= (yyvsp[0].spname);
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_drop_trigger();
          }
#line 39820 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1955:
#line 12919 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            auto cmd= NEW_PTN Sql_cmd_drop_tablespace{(yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 39842 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1956:
#line 12939 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_drop_undo_tablespace{
              DROP_UNDO_TABLESPACE, (yyvsp[-1].lexer.lex_str), {nullptr, 0},  pc};
            if (!cmd)
              MYSQL_YYABORT; // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 39865 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1957:
#line 12961 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            auto cmd= NEW_PTN Sql_cmd_logfile_group{DROP_LOGFILE_GROUP,
                                                    (yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 39888 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1958:
#line 12984 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_DROP_SERVER;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_drop_server((yyvsp[0].lexer.lex_str), (yyvsp[-1].num));
          }
#line 39897 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1959:
#line 12992 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_srs((yyvsp[0].ulonglong_number), (yyvsp[-1].num));
          }
#line 39905 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1960:
#line 12999 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_role((yyvsp[-1].num), (yyvsp[0].user_list));
          }
#line 39913 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1961:
#line 13006 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_list)= NEW_PTN Mem_root_array<Table_ident *>(YYMEM_ROOT);
            if ((yyval.table_list)->push_back((yyvsp[0].table)))
              MYSQL_YYABORT; // OOM
          }
#line 39923 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1962:
#line 13012 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_list)= (yyvsp[-2].table_list);
            if ((yyval.table_list) == NULL || (yyval.table_list)->push_back((yyvsp[0].table)))
              MYSQL_YYABORT; // OOM
          }
#line 39933 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1963:
#line 13021 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident_list).init(YYMEM_ROOT);
            if ((yyval.table_ident_list).push_back((yyvsp[0].table_ident)))
              MYSQL_YYABORT; // OOM
          }
#line 39943 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1964:
#line 13027 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident_list)= (yyvsp[-2].table_ident_list);
            if ((yyval.table_ident_list).push_back((yyvsp[0].table_ident)))
              MYSQL_YYABORT; // OOM
          }
#line 39953 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1965:
#line 13035 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 39959 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1966:
#line 13036 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 39965 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1967:
#line 13040 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 39971 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1968:
#line 13041 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 39977 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1969:
#line 13045 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 39983 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1970:
#line 13046 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 39989 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1971:
#line 13050 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 39995 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1973:
#line 13056 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 40005 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1974:
#line 13062 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 40015 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1977:
#line 13087 "sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_EXECUTE_IF("bug29614521_simulate_oom",
                             DBUG_SET("+d,simulate_out_of_memory"););
            (yyval.top_level_node)= NEW_PTN PT_insert(false, (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].lock_type), (yyvsp[-6].is_not_empty), (yyvsp[-4].table), (yyvsp[-3].string_list),
                                  (yyvsp[-2].column_row_value_list_pair).column_list, (yyvsp[-2].column_row_value_list_pair).row_value_list,
                                  NULL,
                                  (yyvsp[-1].insert_update_values_reference).table_alias, (yyvsp[-1].insert_update_values_reference).column_list,
                                  (yyvsp[0].column_value_list_pair).column_list, (yyvsp[0].column_value_list_pair).value_list);
            DBUG_EXECUTE_IF("bug29614521_simulate_oom",
                            DBUG_SET("-d,bug29614521_simulate_oom"););
          }
#line 40031 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1978:
#line 13108 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_insert_values_list *one_row= NEW_PTN PT_insert_values_list(YYMEM_ROOT);
            if (one_row == NULL || one_row->push_back(&(yyvsp[-2].column_value_list_pair).value_list->value))
              MYSQL_YYABORT; // OOM
            (yyval.top_level_node)= NEW_PTN PT_insert(false, (yyvsp[-9].lexer.optimizer_hints), (yyvsp[-8].lock_type), (yyvsp[-7].is_not_empty), (yyvsp[-5].table), (yyvsp[-4].string_list),
                                  (yyvsp[-2].column_value_list_pair).column_list, one_row,
                                  NULL,
                                  (yyvsp[-1].insert_update_values_reference).table_alias, (yyvsp[-1].insert_update_values_reference).column_list,
                                  (yyvsp[0].column_value_list_pair).column_list, (yyvsp[0].column_value_list_pair).value_list);
          }
#line 40046 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1979:
#line 13126 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_insert(false, (yyvsp[-7].lexer.optimizer_hints), (yyvsp[-6].lock_type), (yyvsp[-5].is_not_empty), (yyvsp[-3].table), (yyvsp[-2].string_list),
                                  (yyvsp[-1].insert_query_expression).column_list, NULL,
                                  (yyvsp[-1].insert_query_expression).insert_query_expression,
                                  NULL_CSTR, NULL,
                                  (yyvsp[0].column_value_list_pair).column_list, (yyvsp[0].column_value_list_pair).value_list);
          }
#line 40058 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1980:
#line 13142 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_insert(true, (yyvsp[-5].lexer.optimizer_hints), (yyvsp[-4].lock_type), false, (yyvsp[-2].table), (yyvsp[-1].string_list),
                                  (yyvsp[0].column_row_value_list_pair).column_list, (yyvsp[0].column_row_value_list_pair).row_value_list,
                                  NULL,
                                  NULL_CSTR, NULL,
                                  NULL, NULL);
          }
#line 40070 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1981:
#line 13156 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_insert_values_list *one_row= NEW_PTN PT_insert_values_list(YYMEM_ROOT);
            if (one_row == NULL || one_row->push_back(&(yyvsp[0].column_value_list_pair).value_list->value))
              MYSQL_YYABORT; // OOM
            (yyval.top_level_node)= NEW_PTN PT_insert(true, (yyvsp[-6].lexer.optimizer_hints), (yyvsp[-5].lock_type), false, (yyvsp[-3].table), (yyvsp[-2].string_list),
                                  (yyvsp[0].column_value_list_pair).column_list, one_row,
                                  NULL,
                                  NULL_CSTR, NULL,
                                  NULL, NULL);
          }
#line 40085 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1982:
#line 13172 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_insert(true, (yyvsp[-5].lexer.optimizer_hints), (yyvsp[-4].lock_type), false, (yyvsp[-2].table), (yyvsp[-1].string_list),
                                  (yyvsp[0].insert_query_expression).column_list, NULL,
                                  (yyvsp[0].insert_query_expression).insert_query_expression,
                                  NULL_CSTR, NULL,
                                  NULL, NULL);
          }
#line 40097 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1983:
#line 13182 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_CONCURRENT_DEFAULT; }
#line 40103 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1984:
#line 13183 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 40109 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1985:
#line 13185 "sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.lock_type)= TL_WRITE_CONCURRENT_DEFAULT;

          push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                              ER_WARN_LEGACY_SYNTAX_CONVERTED,
                              ER_THD(YYTHD, ER_WARN_LEGACY_SYNTAX_CONVERTED),
                              "INSERT DELAYED", "INSERT");
        }
#line 40122 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1986:
#line 13193 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE; }
#line 40128 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1987:
#line 13197 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= (yyvsp[0].lock_type); }
#line 40134 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1988:
#line 13199 "sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.lock_type)= TL_WRITE_DEFAULT;

          push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                              ER_WARN_LEGACY_SYNTAX_CONVERTED,
                              ER_THD(YYTHD, ER_WARN_LEGACY_SYNTAX_CONVERTED),
                              "REPLACE DELAYED", "REPLACE");
        }
#line 40147 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1991:
#line 13216 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_row_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[0].values_list);
          }
#line 40156 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1992:
#line 13221 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_row_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[0].values_list);
          }
#line 40165 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1993:
#line 13226 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_row_value_list_pair).column_list= (yyvsp[-2].item_list2);
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[0].values_list);
          }
#line 40174 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1994:
#line 13234 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_query_expression).column_list= NEW_PTN PT_item_list;
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[0].query_primary);
          }
#line 40183 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1995:
#line 13239 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_query_expression).column_list= NEW_PTN PT_item_list;
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[0].query_primary);
          }
#line 40192 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1996:
#line 13244 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_query_expression).column_list= (yyvsp[-2].item_list2);
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[0].query_primary);
          }
#line 40201 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1997:
#line 13252 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 40211 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1998:
#line 13258 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 40221 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1999:
#line 13267 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= (yyvsp[0].values_list);
          }
#line 40229 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2000:
#line 13273 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary) = (yyvsp[0].query_expression); }
#line 40235 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2001:
#line 13275 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary) = NEW_PTN PT_locking((yyvsp[-1].query_expression), (yyvsp[0].locking_clause_list));
          }
#line 40243 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2002:
#line 13278 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary) = (yyvsp[0].query_primary); }
#line 40249 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2005:
#line 13288 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 40258 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2006:
#line 13293 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= NEW_PTN PT_insert_values_list(YYMEM_ROOT);
            if ((yyval.values_list) == NULL || (yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 40268 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2007:
#line 13303 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 40277 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2008:
#line 13308 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= NEW_PTN PT_insert_values_list(YYMEM_ROOT);
            if ((yyval.values_list) == nullptr || (yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 40287 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2013:
#line 13326 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 40293 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2014:
#line 13330 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 40299 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2015:
#line 13335 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL)
              MYSQL_YYABORT;
          }
#line 40309 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2017:
#line 13345 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 40319 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2018:
#line 13351 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 40329 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2020:
#line 13361 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_default_value((yyloc));
          }
#line 40337 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2021:
#line 13368 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_update_values_reference).table_alias = NULL_CSTR;
            (yyval.insert_update_values_reference).column_list = NULL;
          }
#line 40346 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2022:
#line 13373 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_update_values_reference).table_alias = to_lex_cstring((yyvsp[-1].lexer.lex_str));
            /* The column list object is short-lived, requiring duplication. */
            void *column_list_raw_mem= YYTHD->memdup(&((yyvsp[0].simple_ident_list)), sizeof((yyvsp[0].simple_ident_list)));
            if (!column_list_raw_mem)
              MYSQL_YYABORT; // OOM
            (yyval.insert_update_values_reference).column_list =
              static_cast<Create_col_name_list *>(column_list_raw_mem);
          }
#line 40360 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2023:
#line 13386 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair).value_list= NULL;
            (yyval.column_value_list_pair).column_list= NULL;
          }
#line 40369 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2024:
#line 13391 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair)= (yyvsp[0].column_value_list_pair);
          }
#line 40377 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2025:
#line 13409 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_update((yyvsp[-9].with_clause), (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].lock_type), (yyvsp[-6].is_not_empty), (yyvsp[-5].table_reference_list), (yyvsp[-3].column_value_list_pair).column_list, (yyvsp[-3].column_value_list_pair).value_list,
                                  (yyvsp[-2].item), (yyvsp[-1].order), (yyvsp[0].item));
          }
#line 40386 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2026:
#line 13416 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.with_clause)= NULL; }
#line 40392 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2027:
#line 13417 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.with_clause)= (yyvsp[0].with_clause); }
#line 40398 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2028:
#line 13422 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair)= (yyvsp[-2].column_value_list_pair);
            if ((yyval.column_value_list_pair).column_list->push_back((yyvsp[0].column_value_pair).column) ||
                (yyval.column_value_list_pair).value_list->push_back((yyvsp[0].column_value_pair).value))
              MYSQL_YYABORT; // OOM
          }
#line 40409 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2029:
#line 13429 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_value_list_pair).value_list= NEW_PTN PT_item_list;
            if ((yyval.column_value_list_pair).column_list == NULL || (yyval.column_value_list_pair).value_list == NULL ||
                (yyval.column_value_list_pair).column_list->push_back((yyvsp[0].column_value_pair).column) ||
                (yyval.column_value_list_pair).value_list->push_back((yyvsp[0].column_value_pair).value))
              MYSQL_YYABORT; // OOM
          }
#line 40422 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2030:
#line 13441 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_pair).column= (yyvsp[-2].item);
            (yyval.column_value_pair).value= (yyvsp[0].item);
          }
#line 40431 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2031:
#line 13448 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 40437 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2032:
#line 13449 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 40443 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2033:
#line 13465 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyvsp[-9].with_clause), (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].num), (yyvsp[-5].table), (yyvsp[-4].lex_cstr), (yyvsp[-3].string_list), (yyvsp[-2].item), (yyvsp[-1].order), (yyvsp[0].item));
          }
#line 40451 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2034:
#line 13475 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyvsp[-6].with_clause), (yyvsp[-5].lexer.optimizer_hints), (yyvsp[-4].num), (yyvsp[-3].table_ident_list), (yyvsp[-1].table_reference_list), (yyvsp[0].item));
          }
#line 40459 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2035:
#line 13486 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyvsp[-7].with_clause), (yyvsp[-6].lexer.optimizer_hints), (yyvsp[-5].num), (yyvsp[-3].table_ident_list), (yyvsp[-1].table_reference_list), (yyvsp[0].item));
          }
#line 40467 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2038:
#line 13497 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 40473 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2039:
#line 13498 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].opt_delete_option) | (yyvsp[0].num); }
#line 40479 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2040:
#line 13502 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_delete_option)= DELETE_QUICK; }
#line 40485 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2041:
#line 13503 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_delete_option)= DELETE_LOW_PRIORITY; }
#line 40491 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2042:
#line 13504 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_delete_option)= DELETE_IGNORE; }
#line 40497 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2043:
#line 13509 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_truncate_table_stmt((yyvsp[0].table));
          }
#line 40505 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2046:
#line 13520 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = 0; }
#line 40511 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2049:
#line 13526 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = (yyvsp[-2].ulong_num) | (yyvsp[0].ulong_num); }
#line 40517 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2050:
#line 13530 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_CPU; }
#line 40523 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2051:
#line 13531 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_MEMORY; }
#line 40529 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2052:
#line 13532 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_BLOCK_IO; }
#line 40535 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2053:
#line 13533 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_CONTEXT; }
#line 40541 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2054:
#line 13534 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_PAGE_FAULTS; }
#line 40547 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2055:
#line 13535 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_IPC; }
#line 40553 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2056:
#line 13536 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_SWAPS; }
#line 40559 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2057:
#line 13537 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_SOURCE; }
#line 40565 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2058:
#line 13538 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num) = PROFILE_ALL; }
#line 40571 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2059:
#line 13542 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_id) = 0; }
#line 40577 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2060:
#line 13544 "sql_yacc.yy" /* yacc.c:1646  */
    {
            int error;
            (yyval.query_id) = static_cast<my_thread_id>(my_strtoll10((yyvsp[0].lexer.lex_str).str, NULL, &error));
            if (error != 0)
              MYSQL_YYABORT;
          }
#line 40588 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2061:
#line 13556 "sql_yacc.yy" /* yacc.c:1646  */
    {
             (yyval.top_level_node) = NEW_PTN PT_show_databases((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
           }
#line 40596 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2062:
#line 13562 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_tables((yyloc), (yyvsp[-3].show_cmd_type), (yyvsp[-1].simple_string), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40604 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2063:
#line 13569 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_triggers((yyloc), (yyvsp[-3].is_not_empty), (yyvsp[-1].simple_string), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40612 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2064:
#line 13576 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_events((yyloc), (yyvsp[-1].simple_string), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40620 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2065:
#line 13583 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_table_status((yyloc), (yyvsp[-1].simple_string), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40628 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2066:
#line 13590 "sql_yacc.yy" /* yacc.c:1646  */
    {
             (yyval.top_level_node) = NEW_PTN PT_show_open_tables((yyloc), (yyvsp[-1].simple_string), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40636 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2067:
#line 13597 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_plugins((yyloc));
          }
#line 40644 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2068:
#line 13604 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_engine_logs((yyloc), (yyvsp[-1].lexer.lex_str));
          }
#line 40652 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2069:
#line 13611 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_engine_mutex((yyloc), (yyvsp[-1].lexer.lex_str));
          }
#line 40660 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2070:
#line 13618 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_engine_status((yyloc), (yyvsp[-1].lexer.lex_str));
          }
#line 40668 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2071:
#line 13631 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // TODO: error if table_ident is <db>.<table> and opt_db is set.
            if ((yyvsp[-1].simple_string))
              (yyvsp[-2].table)->change_db((yyvsp[-1].simple_string));

            (yyval.top_level_node) = NEW_PTN PT_show_fields((yyloc), (yyvsp[-5].show_cmd_type), (yyvsp[-2].table), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40680 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2072:
#line 13642 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_binlogs((yyloc));
          }
#line 40688 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2073:
#line 13649 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->set_replication_deprecated_syntax_used();
            push_deprecated_warn(YYTHD, "SHOW SLAVE HOSTS", "SHOW REPLICAS");

            (yyval.top_level_node) = NEW_PTN PT_show_replicas((yyloc));
          }
#line 40699 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2074:
#line 13656 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_replicas((yyloc));
          }
#line 40707 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2075:
#line 13663 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_binlog_events((yyloc), (yyvsp[-2].lexer.lex_str), (yyvsp[0].limit_clause));
          }
#line 40715 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2076:
#line 13671 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_relaylog_events((yyloc), (yyvsp[-3].lexer.lex_str), (yyvsp[-1].limit_clause), (yyvsp[0].lex_cstr));
          }
#line 40723 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2077:
#line 13684 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // TODO: error if table_ident is <db>.<table> and opt_db is set.
            if ((yyvsp[-1].simple_string))
              (yyvsp[-2].table)->change_db((yyvsp[-1].simple_string));

            (yyval.top_level_node) = NEW_PTN PT_show_keys((yyloc), (yyvsp[-5].is_not_empty), (yyvsp[-2].table), (yyvsp[0].item));
          }
#line 40735 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2078:
#line 13695 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_engines((yyloc));
          }
#line 40743 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2079:
#line 13702 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_count_warnings((yyloc));
          }
#line 40751 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2080:
#line 13709 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_count_errors((yyloc));
          }
#line 40759 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2081:
#line 13716 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_warnings((yyloc), (yyvsp[0].limit_clause));
          }
#line 40767 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2082:
#line 13723 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_errors((yyloc), (yyvsp[0].limit_clause));
          }
#line 40775 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2083:
#line 13730 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                                ER_WARN_DEPRECATED_SYNTAX,
                                ER_THD(YYTHD, ER_WARN_DEPRECATED_SYNTAX),
                                "SHOW PROFILES", "Performance Schema");
            (yyval.top_level_node) = NEW_PTN PT_show_profiles((yyloc));
          }
#line 40787 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2084:
#line 13741 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_profile((yyloc), (yyvsp[-2].ulong_num), (yyvsp[-1].query_id), (yyvsp[0].limit_clause));
          }
#line 40795 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2085:
#line 13748 "sql_yacc.yy" /* yacc.c:1646  */
    {
             (yyval.top_level_node) = NEW_PTN PT_show_status((yyloc), (yyvsp[-2].var_type), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40803 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2086:
#line 13755 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_processlist((yyloc), (yyvsp[-1].is_not_empty));
          }
#line 40811 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2087:
#line 13762 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_variables((yyloc), (yyvsp[-2].var_type), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40819 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2088:
#line 13769 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_charsets((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40827 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2089:
#line 13776 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_collations((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40835 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2090:
#line 13783 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_privileges((yyloc));
          }
#line 40843 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2091:
#line 13790 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_grants((yyloc), nullptr, nullptr);
          }
#line 40851 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2092:
#line 13794 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_grants((yyloc), (yyvsp[0].lex_user), nullptr);
          }
#line 40859 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2093:
#line 13798 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_grants((yyloc), (yyvsp[-2].lex_user), (yyvsp[0].user_list));
          }
#line 40867 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2094:
#line 13805 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_database((yyloc), (yyvsp[-1].is_not_empty), (yyvsp[0].lexer.lex_str));
          }
#line 40875 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2095:
#line 13812 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_table((yyloc), (yyvsp[0].table));
          }
#line 40883 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2096:
#line 13819 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_view((yyloc), (yyvsp[0].table));
          }
#line 40891 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2097:
#line 13826 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_master_status((yyloc));
          }
#line 40899 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2098:
#line 13833 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->is_replication_deprecated_syntax_used())
              push_deprecated_warn(YYTHD, "SHOW SLAVE STATUS", "SHOW REPLICA STATUS");
            (yyval.top_level_node) = NEW_PTN PT_show_replica_status((yyloc), (yyvsp[0].lex_cstr));
          }
#line 40909 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2099:
#line 13842 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_procedure((yyloc), (yyvsp[0].spname));
          }
#line 40917 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2100:
#line 13849 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_function((yyloc), (yyvsp[0].spname));
          }
#line 40925 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2101:
#line 13856 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_trigger((yyloc), (yyvsp[0].spname));
          }
#line 40933 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2102:
#line 13863 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_status_proc((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40941 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2103:
#line 13870 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_status_func((yyloc), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);
          }
#line 40949 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2104:
#line 13877 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_procedure_code((yyloc), (yyvsp[0].spname));
          }
#line 40957 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2105:
#line 13884 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_function_code((yyloc), (yyvsp[0].spname));
          }
#line 40965 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2106:
#line 13891 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_event((yyloc), (yyvsp[0].spname));
          }
#line 40973 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2107:
#line 13898 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_show_create_user((yyloc), (yyvsp[0].lex_user));
          }
#line 40981 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2109:
#line 13905 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str) = {}; }
#line 40987 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2114:
#line 13919 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.simple_string)= 0; }
#line 40993 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2115:
#line 13920 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.simple_string)= (yyvsp[0].lexer.lex_str).str; }
#line 40999 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2116:
#line 13924 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 0; }
#line 41005 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2117:
#line 13925 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 1; }
#line 41011 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2118:
#line 13929 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 0; }
#line 41017 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2119:
#line 13930 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 1; }
#line 41023 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2120:
#line 13934 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::STANDARD; }
#line 41029 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2121:
#line 13935 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::FULL_SHOW; }
#line 41035 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2122:
#line 13936 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::EXTENDED_SHOW; }
#line 41041 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2123:
#line 13937 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::EXTENDED_FULL_SHOW; }
#line 41047 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2126:
#line 13946 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str) = {}; }
#line 41053 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2127:
#line 13947 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str); }
#line 41059 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2128:
#line 13951 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.pos = 4; /* skip magic number */ }
#line 41065 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2129:
#line 13952 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.pos = (yyvsp[0].ulonglong_number); }
#line 41071 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2130:
#line 13956 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.wild_or_where) = {}; }
#line 41077 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2131:
#line 13957 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.wild_or_where) = { (yyvsp[0].lexer.lex_str), {} }; }
#line 41083 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2132:
#line 13958 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.wild_or_where) = { {}, (yyvsp[0].item) }; }
#line 41089 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2133:
#line 13964 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_show_fields((yyloc), Show_cmd_type::STANDARD, (yyvsp[-1].table), (yyvsp[0].lexer.lex_str));
          }
#line 41097 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2134:
#line 13971 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_explain((yyvsp[-1].explain_format_type), (yyvsp[0].top_level_node));
          }
#line 41105 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2140:
#line 13983 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_explain_for_connection(static_cast<my_thread_id>((yyvsp[0].ulong_num)));
          }
#line 41113 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2143:
#line 13995 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.explain_format_type)= Explain_format_type::DEFAULT;
          }
#line 41121 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2144:
#line 13999 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[0].lexer.lex_str), "JSON"))
              (yyval.explain_format_type)= Explain_format_type::JSON;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "TRADITIONAL"))
              (yyval.explain_format_type)= Explain_format_type::TRADITIONAL;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "TREE"))
              (yyval.explain_format_type)= Explain_format_type::TREE;
            else
            {
              my_error(ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 41139 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2145:
#line 14015 "sql_yacc.yy" /* yacc.c:1646  */
    {
            switch ((yyvsp[0].explain_format_type))
            {
              case Explain_format_type::DEFAULT:
              case Explain_format_type::TREE:
                (yyval.explain_format_type)= Explain_format_type::TREE_WITH_EXECUTE;
                break;
              case Explain_format_type::JSON:
                my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                         "FORMAT=JSON with EXPLAIN ANALYZE");
                MYSQL_YYABORT;
              default:
                my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                         "FORMAT=TRADITIONAL with EXPLAIN ANALYZE");
                MYSQL_YYABORT;
            }
          }
#line 41161 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2146:
#line 14033 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].explain_format_type) == Explain_format_type::DEFAULT)
              (yyval.explain_format_type)= Explain_format_type::TRADITIONAL;
            else
              (yyval.explain_format_type)= (yyvsp[0].explain_format_type);
          }
#line 41172 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2147:
#line 14042 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= LEX_STRING{ nullptr, 0 }; }
#line 41178 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2148:
#line 14044 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].string) != nullptr)
              (yyval.lexer.lex_str)= (yyvsp[0].string)->lex_string();
          }
#line 41187 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2150:
#line 14056 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_FLUSH;
            lex->type= 0;
            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 41198 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2151:
#line 14063 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41204 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2152:
#line 14068 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_TABLES;
            /*
              Set type of metadata and table locks for
              FLUSH TABLES table_list [WITH READ LOCK].
            */
            YYPS->m_lock_type= TL_READ_NO_INSERT;
            YYPS->m_mdl_type= MDL_SHARED_HIGH_PRIO;
            if (Select->add_tables(YYTHD, (yyvsp[0].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 41221 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2153:
#line 14080 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41227 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2155:
#line 14085 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41233 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2156:
#line 14087 "sql_yacc.yy" /* yacc.c:1646  */
    {
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_READ_LOCK;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              /* Don't try to flush views. */
              tables->required_type= dd::enum_table_type::BASE_TABLE;
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
#line 41249 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2157:
#line 14099 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->query_tables == NULL) // Table list can't be empty
            {
              YYTHD->syntax_error(ER_NO_TABLES_USED);
              MYSQL_YYABORT;
            }
          }
#line 41261 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2158:
#line 14107 "sql_yacc.yy" /* yacc.c:1646  */
    {
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_FOR_EXPORT;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              /* Don't try to flush views. */
              tables->required_type= dd::enum_table_type::BASE_TABLE;
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
#line 41277 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2160:
#line 14123 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41283 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2161:
#line 14128 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_ERROR_LOG; }
#line 41289 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2162:
#line 14130 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_ENGINE_LOG; }
#line 41295 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2163:
#line 14132 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_GENERAL_LOG; }
#line 41301 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2164:
#line 14134 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_SLOW_LOG; }
#line 41307 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2165:
#line 14136 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_BINARY_LOG; }
#line 41313 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2166:
#line 14138 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_RELAY_LOG;
            if (Lex->set_channel_name((yyvsp[0].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
#line 41323 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2167:
#line 14144 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_HOSTS; }
#line 41329 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2168:
#line 14146 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_GRANT; }
#line 41335 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2169:
#line 14148 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_LOG; }
#line 41341 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2170:
#line 14150 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_STATUS; }
#line 41347 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2171:
#line 14152 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_USER_RESOURCES; }
#line 41353 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2172:
#line 14154 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_OPTIMIZER_COSTS; }
#line 41359 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2173:
#line 14158 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_list)= NULL; }
#line 41365 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2175:
#line 14164 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET; lex->type=0;
          }
#line 41374 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2176:
#line 14169 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41380 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2177:
#line 14171 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET;
            lex->type|= REFRESH_PERSIST;
            lex->option_type= OPT_PERSIST;
          }
#line 41391 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2180:
#line 14186 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->drop_if_exists= false;
            lex->name= NULL_STR;
          }
#line 41401 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2181:
#line 14192 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->name= (yyvsp[0].lexer.lex_str);
          }
#line 41411 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2182:
#line 14201 "sql_yacc.yy" /* yacc.c:1646  */
    {
              Lex->type|= REFRESH_SLAVE;
              Lex->set_replication_deprecated_syntax_used();
              push_deprecated_warn(YYTHD, "RESET SLAVE", "RESET REPLICA");
            }
#line 41421 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2183:
#line 14207 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->set_channel_name((yyvsp[0].lex_cstr)))
              MYSQL_YYABORT;  // OOM
          }
#line 41430 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2184:
#line 14212 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_REPLICA; }
#line 41436 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2185:
#line 14214 "sql_yacc.yy" /* yacc.c:1646  */
    {
          if (Lex->set_channel_name((yyvsp[0].lex_cstr)))
            MYSQL_YYABORT;  // OOM
          }
#line 41445 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2186:
#line 14219 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_MASTER;
            /*
              Reset Master should acquire global read lock
              in order to avoid any parallel transaction commits
              while the reset operation is going on.

              *Only if* the thread is not already acquired the global
              read lock, server will acquire global read lock
              during the operation and release it at the
              end of the reset operation.
            */
            if (!(YYTHD)->global_read_lock.is_acquired())
              Lex->type|= REFRESH_TABLES | REFRESH_READ_LOCK;
          }
#line 41465 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2188:
#line 14238 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->reset_slave_info.all= false; }
#line 41471 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2189:
#line 14239 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->reset_slave_info.all= true; }
#line 41477 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2190:
#line 14243 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41483 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2191:
#line 14245 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulonglong_number) == 0 || (yyvsp[0].ulonglong_number) > MAX_ALLOWED_FN_EXT_RESET_MASTER)
            {
              my_error(ER_RESET_MASTER_TO_VALUE_OUT_OF_RANGE, MYF(0),
                       (yyvsp[0].ulonglong_number), MAX_ALLOWED_FN_EXT_RESET_MASTER);
              MYSQL_YYABORT;
            }
            else
              Lex->next_binlog_file_nr = (yyvsp[0].ulonglong_number);
          }
#line 41498 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2192:
#line 14259 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->type=0;
            lex->sql_command = SQLCOM_PURGE;
          }
#line 41508 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2193:
#line 14265 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 41514 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2195:
#line 14274 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->to_log = (yyvsp[0].lexer.lex_str).str;
          }
#line 41522 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2196:
#line 14278 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            LEX *lex= Lex;
            lex->purge_value_list.clear();
            lex->purge_value_list.push_front((yyvsp[0].item));
            lex->sql_command= SQLCOM_PURGE_BEFORE;
          }
#line 41535 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2197:
#line 14292 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            LEX *lex=Lex;
            lex->kill_value_list.clear();
            lex->kill_value_list.push_front((yyvsp[0].item));
            lex->sql_command= SQLCOM_KILL;
          }
#line 41548 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2198:
#line 14303 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type= 0; }
#line 41554 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2199:
#line 14304 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type= 0; }
#line 41560 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2200:
#line 14305 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type= ONLY_KILL_QUERY; }
#line 41566 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2201:
#line 14312 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CHANGE_DB;
            lex->query_block->db= (yyvsp[0].lexer.lex_str).str;
          }
#line 41576 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2202:
#line 14340 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_load_table((yyvsp[-16].filetype),  // data_or_xml
                                      (yyvsp[-15].lock_type),  // load_data_lock
                                      (yyvsp[-14].is_not_empty),  // opt_local
                                      (yyvsp[-12].lexer.lex_str),  // TEXT_STRING_filesystem
                                      (yyvsp[-11].on_duplicate),  // opt_duplicate
                                      (yyvsp[-8].table), // table_ident
                                      (yyvsp[-7].string_list), // opt_use_partition
                                      (yyvsp[-6].lexer.charset), // opt_load_data_charset
                                      (yyvsp[-5].string), // opt_xml_rows_identified_by
                                      (yyvsp[-4].field_separators), // opt_field_term
                                      (yyvsp[-3].line_separators), // opt_line_term
                                      (yyvsp[-2].ulong_num), // opt_ignore_lines
                                      (yyvsp[-1].item_list2), // opt_field_or_var_spec
                                      (yyvsp[0].load_set_list).set_var_list,// opt_load_data_set_spec
                                      (yyvsp[0].load_set_list).set_expr_list,
                                      (yyvsp[0].load_set_list).set_expr_str_list);
          }
#line 41599 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2203:
#line 14361 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.filetype)= FILETYPE_CSV; }
#line 41605 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2204:
#line 14362 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.filetype)= FILETYPE_XML; }
#line 41611 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2205:
#line 14366 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 41617 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2206:
#line 14367 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 41623 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2207:
#line 14371 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 41629 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2208:
#line 14372 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_CONCURRENT_INSERT; }
#line 41635 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2209:
#line 14373 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 41641 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2210:
#line 14377 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.on_duplicate)= On_duplicate::ERROR; }
#line 41647 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2212:
#line 14382 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.on_duplicate)= On_duplicate::REPLACE_DUP; }
#line 41653 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2213:
#line 14383 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.on_duplicate)= On_duplicate::IGNORE_DUP; }
#line 41659 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2214:
#line 14387 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_separators).cleanup(); }
#line 41665 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2215:
#line 14388 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_separators)= (yyvsp[0].field_separators); }
#line 41671 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2216:
#line 14393 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators)= (yyvsp[-1].field_separators);
            (yyval.field_separators).merge_field_separators((yyvsp[0].field_separators));
          }
#line 41680 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2218:
#line 14402 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).field_term= (yyvsp[0].string);
          }
#line 41689 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2219:
#line 14407 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).enclosed= (yyvsp[0].string);
            (yyval.field_separators).opt_enclosed= 1;
          }
#line 41699 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2220:
#line 14413 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).enclosed= (yyvsp[0].string);
          }
#line 41708 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2221:
#line 14418 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).escaped= (yyvsp[0].string);
          }
#line 41717 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2222:
#line 14425 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.line_separators).cleanup(); }
#line 41723 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2223:
#line 14426 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.line_separators)= (yyvsp[0].line_separators); }
#line 41729 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2224:
#line 14431 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.line_separators)= (yyvsp[-1].line_separators);
            (yyval.line_separators).merge_line_separators((yyvsp[0].line_separators));
          }
#line 41738 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2226:
#line 14440 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.line_separators).cleanup();
            (yyval.line_separators).line_term= (yyvsp[0].string);
          }
#line 41747 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2227:
#line 14445 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.line_separators).cleanup();
            (yyval.line_separators).line_start= (yyvsp[0].string);
          }
#line 41756 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2228:
#line 14452 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string)= nullptr; }
#line 41762 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2229:
#line 14453 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string)= (yyvsp[0].string); }
#line 41768 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2230:
#line 14457 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 41774 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2231:
#line 14458 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= atol((yyvsp[-1].lexer.lex_str).str); }
#line 41780 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2234:
#line 14467 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= nullptr; }
#line 41786 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2235:
#line 14468 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 41792 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2236:
#line 14469 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= nullptr; }
#line 41798 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2237:
#line 14474 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= (yyvsp[-2].item_list2);
            if ((yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT; // OOM
          }
#line 41808 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2238:
#line 14480 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == nullptr || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT; // OOM
          }
#line 41818 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2240:
#line 14490 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_user_var_as_out_param((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 41826 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2241:
#line 14496 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.load_set_list)= {nullptr, nullptr, nullptr}; }
#line 41832 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2242:
#line 14497 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.load_set_list)= (yyvsp[0].load_set_list); }
#line 41838 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2243:
#line 14502 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.load_set_list)= (yyvsp[-2].load_set_list);
            if ((yyval.load_set_list).set_var_list->push_back((yyvsp[0].load_set_element).set_var) ||
                (yyval.load_set_list).set_expr_list->push_back((yyvsp[0].load_set_element).set_expr) ||
                (yyval.load_set_list).set_expr_str_list->push_back((yyvsp[0].load_set_element).set_expr_str))
              MYSQL_YYABORT; // OOM
          }
#line 41850 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2244:
#line 14510 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.load_set_list).set_var_list= NEW_PTN PT_item_list;
            if ((yyval.load_set_list).set_var_list == nullptr ||
                (yyval.load_set_list).set_var_list->push_back((yyvsp[0].load_set_element).set_var))
              MYSQL_YYABORT; // OOM

            (yyval.load_set_list).set_expr_list= NEW_PTN PT_item_list;
            if ((yyval.load_set_list).set_expr_list == nullptr ||
                (yyval.load_set_list).set_expr_list->push_back((yyvsp[0].load_set_element).set_expr))
              MYSQL_YYABORT; // OOM

            (yyval.load_set_list).set_expr_str_list= NEW_PTN List<String>;
            if ((yyval.load_set_list).set_expr_str_list == nullptr ||
                (yyval.load_set_list).set_expr_str_list->push_back((yyvsp[0].load_set_element).set_expr_str))
              MYSQL_YYABORT; // OOM
          }
#line 41871 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2245:
#line 14530 "sql_yacc.yy" /* yacc.c:1646  */
    {
            size_t length= (yylsp[0]).cpp.end - (yylsp[-1]).cpp.start;

            if ((yyvsp[0].item) == nullptr)
              MYSQL_YYABORT; // OOM
            (yyvsp[0].item)->item_name.copy((yylsp[-1]).cpp.start, length, YYTHD->charset());

            (yyval.load_set_element).set_var= (yyvsp[-2].item);
            (yyval.load_set_element).set_expr= (yyvsp[0].item);
            (yyval.load_set_element).set_expr_str= NEW_PTN String((yylsp[-1]).cpp.start,
                                            length,
                                            YYTHD->charset());
            if ((yyval.load_set_element).set_expr_str == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 41891 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2246:
#line 14551 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_text_string((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[0].lexer.lex_str));
          }
#line 41900 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2247:
#line 14556 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_nchar_string((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[0].lexer.lex_str));
            warn_about_deprecated_national(YYTHD);
          }
#line 41910 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2248:
#line 14562 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_underscore_charset((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[-1].lexer.charset), (yyvsp[0].lexer.lex_str));
          }
#line 41919 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2249:
#line 14567 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_concat((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[-1].text_literal), (yyvsp[0].lexer.lex_str));
          }
#line 41928 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2250:
#line 14575 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string)= NEW_PTN String((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                               YYTHD->variables.collation_connection);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 41939 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2251:
#line 14582 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING s= Item_hex_string::make_hex_str((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            (yyval.string)= NEW_PTN String(s.str, s.length, &my_charset_bin);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 41950 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2252:
#line 14589 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING s= Item_bin_string::make_bin_str((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            (yyval.string)= NEW_PTN String(s.str, s.length, &my_charset_bin);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 41961 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2253:
#line 14599 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *i= NEW_PTN Item_param((yyloc), YYMEM_ROOT,
                                        (uint) ((yylsp[0]).raw.start - YYLIP->get_buf()));
            if (i == NULL)
              MYSQL_YYABORT;
            auto *lex= Lex;
            /*
              If we are not re-parsing a CTE definition, this is a
              real parameter, so add it to param_list.
            */
            if (!lex->reparse_common_table_expr_at &&
                lex->param_list.push_back(i))
              MYSQL_YYABORT;
            (yyval.param_marker)= i;
          }
#line 41981 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2255:
#line 14618 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item_num); }
#line 41987 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2256:
#line 14620 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].item_num) == NULL)
              MYSQL_YYABORT; // OOM
            (yyvsp[0].item_num)->max_length++;
            (yyval.item)= (yyvsp[0].item_num)->neg();
          }
#line 41998 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2259:
#line 14635 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex_input_stream *lip= YYLIP;
            /*
              For the digest computation, in this context only,
              NULL is considered a literal, hence reduced to '?'
              REDUCE:
                TOK_GENERIC_VALUE := NULL_SYM
            */
            lip->reduce_digest_token(TOK_GENERIC_VALUE, NULL_SYM);
            (yyval.item)= NEW_PTN Item_null((yyloc));
          }
#line 42014 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2260:
#line 14649 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].text_literal); }
#line 42020 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2261:
#line 14650 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item_num); }
#line 42026 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2263:
#line 14653 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_false((yyloc));
          }
#line 42034 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2264:
#line 14657 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_true((yyloc));
          }
#line 42042 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2265:
#line 14661 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_hex_string((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 42050 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2266:
#line 14665 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_bin_string((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 42058 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2267:
#line 14669 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_literal_underscore_charset_hex_num((yyloc), (yyvsp[-1].lexer.charset), (yyvsp[0].lexer.lex_str));
          }
#line 42066 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2268:
#line 14673 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_literal_underscore_charset_bin_num((yyloc), (yyvsp[-1].lexer.charset), (yyvsp[0].lexer.lex_str));
          }
#line 42074 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2272:
#line 14686 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= NEW_PTN Item_decimal((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, YYCSCL);
          }
#line 42082 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2273:
#line 14690 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= NEW_PTN Item_float((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 42090 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2274:
#line 14700 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_num) = NEW_PTN Item_int((yyloc), (yyvsp[0].lexer.lex_str)); }
#line 42096 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2275:
#line 14701 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_num) = NEW_PTN Item_int((yyloc), (yyvsp[0].lexer.lex_str)); }
#line 42102 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2276:
#line 14702 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_num) = NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length); }
#line 42108 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2277:
#line 14708 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[0].lexer.lex_str), MYSQL_TYPE_DATE, YYCSCL);
          }
#line 42116 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2278:
#line 14712 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[0].lexer.lex_str), MYSQL_TYPE_TIME, YYCSCL);
          }
#line 42124 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2279:
#line 14716 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[0].lexer.lex_str), MYSQL_TYPE_DATETIME, YYCSCL);
          }
#line 42132 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2280:
#line 14722 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty) = false; }
#line 42138 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2281:
#line 14723 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty) = true; }
#line 42144 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2284:
#line 14738 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item) = NEW_PTN Item_asterisk((yyloc), nullptr, (yyvsp[-2].lexer.lex_str).str);
          }
#line 42152 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2285:
#line 14742 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (check_and_convert_db_name(&(yyvsp[-4].lexer.lex_str), false) != Ident_name_check::OK)
              MYSQL_YYABORT;
            auto schema_name = YYCLIENT_NO_SCHEMA ? nullptr : (yyvsp[-4].lexer.lex_str).str;
            (yyval.item) = NEW_PTN Item_asterisk((yyloc), schema_name, (yyvsp[-2].lexer.lex_str).str);
          }
#line 42163 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2286:
#line 14752 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[-1].item), (yyvsp[0].order_direction));
          }
#line 42171 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2287:
#line 14759 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[0].item), ORDER_NOT_RELEVANT);
          }
#line 42179 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2288:
#line 14766 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_ident((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 42187 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2290:
#line 14774 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_nospvar_ident((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 42195 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2292:
#line 14782 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_q_2d((yyloc), (yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 42203 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2293:
#line 14786 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (check_and_convert_db_name(&(yyvsp[-4].lexer.lex_str), false) != Ident_name_check::OK)
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN PTI_simple_ident_q_3d((yyloc), (yyvsp[-4].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 42213 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2294:
#line 14795 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
#line 42223 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2295:
#line 14801 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto schema_name = YYCLIENT_NO_SCHEMA ? LEX_CSTRING{}
                                                  : to_lex_cstring((yyvsp[-2].lexer.lex_str).str);
            (yyval.table)= NEW_PTN Table_ident(schema_name, to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
#line 42235 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2296:
#line 14812 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[-1].lexer.lex_str)));
            if ((yyval.table_ident) == NULL)
              MYSQL_YYABORT;
          }
#line 42245 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2297:
#line 14818 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident)= NEW_PTN Table_ident(YYTHD->get_protocol(),
                                    to_lex_cstring((yyvsp[-3].lexer.lex_str)),
                                    to_lex_cstring((yyvsp[-1].lexer.lex_str)), 0);
            if ((yyval.table_ident) == NULL)
              MYSQL_YYABORT;
          }
#line 42257 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2298:
#line 14828 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 42263 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2299:
#line 14830 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
            {
              const CHARSET_INFO *cs= system_charset_info;
              int dummy_error;
              size_t wlen= cs->cset->well_formed_len(cs, (yyvsp[0].lexer.lex_str).str,
                                                     (yyvsp[0].lexer.lex_str).str+(yyvsp[0].lexer.lex_str).length,
                                                     (yyvsp[0].lexer.lex_str).length, &dummy_error);
              if (wlen < (yyvsp[0].lexer.lex_str).length)
              {
                ErrConvString err((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, &my_charset_bin);
                my_error(ER_INVALID_CHARACTER_STRING, MYF(0),
                         cs->csname, err.ptr());
                MYSQL_YYABORT;
              }
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            }
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), system_charset_info,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 42294 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2300:
#line 14860 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!strcont((yyvsp[0].lexer.lex_str).str, "\n"))
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              my_error(ER_WRONG_VALUE, MYF(0), "argument contains not-allowed LF", (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 42308 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2301:
#line 14873 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (strcont((yyvsp[0].lexer.lex_str).str, "."))
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              my_error(ER_INVALID_RPL_WILD_TABLE_FILTER_PATTERN, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 42322 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2302:
#line 14886 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), system_charset_info,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 42339 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2303:
#line 14902 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_collation_connection)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), thd->variables.collation_connection,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 42356 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2304:
#line 14918 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_character_set_filesystem)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str),
                                      thd->variables.character_set_filesystem,
                                      (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 42374 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2307:
#line 14940 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= to_lex_string(Item_hex_string::make_hex_str((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length));
          }
#line 42382 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2308:
#line 14947 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), system_charset_info,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset(), true))
                MYSQL_YYABORT;
            }
          }
#line 42399 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2309:
#line 14962 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 42405 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2310:
#line 14964 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            (yyval.lexer.lex_str).str= thd->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lexer.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lexer.lex_str).length= (yyvsp[0].lexer.keyword).length;
          }
#line 42417 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2312:
#line 14976 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str).str= YYTHD->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lexer.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lexer.lex_str).length= (yyvsp[0].lexer.keyword).length;
          }
#line 42428 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2313:
#line 14985 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)=to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 42434 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2314:
#line 14987 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            (yyval.lex_cstr).str= thd->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lex_cstr).str == NULL)
              MYSQL_YYABORT;
            (yyval.lex_cstr).length= (yyvsp[0].lexer.keyword).length;
          }
#line 42446 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2316:
#line 14999 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str).str= YYTHD->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lexer.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lexer.lex_str).length= (yyvsp[0].lexer.keyword).length;
          }
#line 42457 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2317:
#line 15008 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str);}
#line 42463 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2318:
#line 15009 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str);}
#line 42469 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2319:
#line 15010 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str);}
#line 42475 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2323:
#line 15021 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[0].lexer.lex_str), NULL)))
              MYSQL_YYABORT;
          }
#line 42484 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2324:
#line 15026 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[-2].lexer.lex_str), &(yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT;
          }
#line 42493 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2325:
#line 15034 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)=(yyvsp[0].lex_user);
          }
#line 42501 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2326:
#line 15038 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD)))
              MYSQL_YYABORT;
            /*
              empty LEX_USER means current_user and
              will be handled in the  get_current_user() function
              later
            */
          }
#line 42515 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2327:
#line 15051 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[0].lexer.lex_str), NULL)))
              MYSQL_YYABORT;
          }
#line 42524 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2328:
#line 15056 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[-2].lexer.lex_str), &(yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT;
          }
#line 42533 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2329:
#line 15064 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str);
            if (check_and_convert_db_name(&(yyval.lexer.lex_str), false) != Ident_name_check::OK)
              MYSQL_YYABORT;
          }
#line 42543 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2821:
#line 15658 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.set)= NEW_PTN PT_set((yylsp[-1]), (yyvsp[0].start_option_value_list));
          }
#line 42551 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2822:
#line 15667 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_no_type((yyvsp[-1].option_value_no_option_type), (yylsp[-1]), (yyvsp[0].option_value_list));
          }
#line 42559 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2823:
#line 15671 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_transaction((yyvsp[0].transaction_characteristics), (yylsp[0]));
          }
#line 42567 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2824:
#line 15675 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_type((yyvsp[-1].var_type), (yyvsp[0].start_option_value_list_following_option_type));
          }
#line 42575 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2825:
#line 15679 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password((yyvsp[-2].lexer.lex_str).str, (yyvsp[-1].lex_cstr).str,
                                                                (yyvsp[0].is_not_empty),
                                                                false,
                                                                (yylsp[-1]));
          }
#line 42586 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2826:
#line 15686 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // RANDOM PASSWORD GENERATION AND RETURN RESULT SET...
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password((yyvsp[-2].lexer.keyword).str, (yyvsp[-1].lex_cstr).str,
                                                                (yyvsp[0].is_not_empty),
                                                                true,
                                                                (yylsp[-1]));
          }
#line 42598 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2827:
#line 15694 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password_for((yyvsp[-4].lex_user), (yyvsp[-2].lexer.lex_str).str,
                                                                    (yyvsp[-1].lex_cstr).str,
                                                                    (yyvsp[0].is_not_empty),
                                                                    false,
                                                                    (yylsp[-1]));
          }
#line 42610 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2828:
#line 15702 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // RANDOM PASSWORD GENERATION AND RETURN RESULT SET...
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password_for((yyvsp[-4].lex_user), (yyvsp[-2].lexer.keyword).str,
                                                                    (yyvsp[-1].lex_cstr).str,
                                                                    (yyvsp[0].is_not_empty),
                                                                    true,
                                                                    (yylsp[-1]));
          }
#line 42623 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2829:
#line 15714 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role((yyvsp[0].user_list));
          }
#line 42631 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2830:
#line 15718 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role(role_enum::ROLE_NONE);
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
#line 42640 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2831:
#line 15723 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role(role_enum::ROLE_DEFAULT);
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
#line 42649 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2832:
#line 15728 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[0].user_list), (yyvsp[-2].user_list),
                                                    role_enum::ROLE_NAME);
          }
#line 42658 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2833:
#line 15733 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[0].user_list), NULL,
                                                   role_enum::ROLE_NONE);
          }
#line 42667 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2834:
#line 15738 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[0].user_list), NULL,
                                                   role_enum::ROLE_ALL);
          }
#line 42676 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2835:
#line 15743 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role(role_enum::ROLE_ALL, (yyvsp[0].user_list));
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
#line 42685 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2836:
#line 15750 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.user_list)= NULL; }
#line 42691 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2837:
#line 15751 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.user_list)= (yyvsp[0].user_list); }
#line 42697 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2838:
#line 15756 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_resource_group(to_lex_cstring((yyvsp[0].lexer.lex_str)), nullptr);
          }
#line 42705 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2839:
#line 15760 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_resource_group(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].thread_id_list_type));
          }
#line 42713 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2840:
#line 15767 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.thread_id_list_type)= NEW_PTN Mem_root_array<ulonglong>(YYMEM_ROOT);
            if ((yyval.thread_id_list_type) == nullptr || (yyval.thread_id_list_type)->push_back((yyvsp[0].ulong_num)))
              MYSQL_YYABORT; // OOM
          }
#line 42723 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2841:
#line 15773 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.thread_id_list_type)= (yyvsp[-2].thread_id_list_type);
            if ((yyval.thread_id_list_type)->push_back((yyvsp[0].ulong_num)))
              MYSQL_YYABORT; // OOM
          }
#line 42733 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2842:
#line 15781 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.thread_id_list_type)= (yyvsp[0].thread_id_list_type); }
#line 42739 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2843:
#line 15787 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list_following_option_type)=
              NEW_PTN PT_start_option_value_list_following_option_type_eq((yyvsp[-1].option_value_following_option_type),
                                                                          (yylsp[-1]),
                                                                          (yyvsp[0].option_value_list));
          }
#line 42750 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2844:
#line 15794 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list_following_option_type)= NEW_PTN
              PT_start_option_value_list_following_option_type_transaction((yyvsp[0].transaction_characteristics),
                                                                           (yylsp[0]));
          }
#line 42760 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2845:
#line 15803 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.option_value_list)= NULL; }
#line 42766 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2846:
#line 15804 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.option_value_list)= (yyvsp[0].option_value_list); }
#line 42772 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2847:
#line 15810 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_list)= NEW_PTN PT_option_value_list_head((yylsp[-1]), (yyvsp[0].node), (yylsp[0]));
          }
#line 42780 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2848:
#line 15814 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_list)= NEW_PTN PT_option_value_list((yyvsp[-2].option_value_list), (yylsp[-1]), (yyvsp[0].node), (yylsp[0]));
          }
#line 42788 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2849:
#line 15822 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.node)= NEW_PTN PT_option_value_type((yyvsp[-1].var_type), (yyvsp[0].option_value_following_option_type));
          }
#line 42796 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2850:
#line 15825 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.node)= (yyvsp[0].option_value_no_option_type); }
#line 42802 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2851:
#line 15829 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 42808 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2852:
#line 15830 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_PERSIST; }
#line 42814 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2853:
#line 15831 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_PERSIST_ONLY; }
#line 42820 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2854:
#line 15832 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 42826 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2855:
#line 15833 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 42832 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2856:
#line 15837 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 42838 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2857:
#line 15838 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 42844 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2858:
#line 15839 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 42850 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2859:
#line 15840 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 42856 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2860:
#line 15844 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_DEFAULT; }
#line 42862 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2861:
#line 15845 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 42868 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2862:
#line 15846 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 42874 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2863:
#line 15847 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 42880 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2864:
#line 15851 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_DEFAULT; }
#line 42886 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2865:
#line 15852 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_PERSIST; }
#line 42892 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2866:
#line 15853 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.var_type)=OPT_PERSIST_ONLY; }
#line 42898 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2867:
#line 15854 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 42904 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2868:
#line 15855 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 42910 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2869:
#line 15856 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 42916 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2870:
#line 15862 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_following_option_type) = NEW_PTN PT_set_scoped_system_variable(
                (yylsp[-2]), (yyvsp[-2].bipartite_name).prefix, (yyvsp[-2].bipartite_name).name, (yyvsp[0].item));
          }
#line 42925 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2871:
#line 15871 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type) = NEW_PTN PT_set_variable((yylsp[-2]), (yyvsp[-2].bipartite_name).prefix, (yyvsp[-2].bipartite_name).name, (yylsp[0]), (yyvsp[0].item));
          }
#line 42933 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2872:
#line 15875 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_user_var((yyvsp[-2].lexer.lex_str), (yyvsp[0].item));
          }
#line 42941 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2873:
#line 15880 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type) = NEW_PTN PT_set_system_variable(
                (yyvsp[-3].var_type), (yylsp[-2]), (yyvsp[-2].bipartite_name).prefix, (yyvsp[-2].bipartite_name).name, (yyvsp[0].item));
          }
#line 42950 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2874:
#line 15885 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_charset((yyvsp[0].lexer.charset));
          }
#line 42958 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2875:
#line 15889 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Bad syntax, always fails with an error
            */
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_names((yylsp[-1]));
          }
#line 42969 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2876:
#line 15896 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_set_names((yyvsp[-1].lexer.charset), (yyvsp[0].lexer.charset));
          }
#line 42977 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2877:
#line 15900 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type) = NEW_PTN PT_set_names(nullptr, nullptr);
          }
#line 42985 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2878:
#line 15907 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bipartite_name) = Bipartite_name{{}, to_lex_cstring((yyvsp[0].lexer.lex_str))};
          }
#line 42993 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2879:
#line 15911 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Reject names prefixed by `GLOBAL.`, `LOCAL.`, or `SESSION.` --
              if one of those prefixes is there then we are parsing something
              like `GLOBAL.GLOBAL.foo` or `LOCAL.SESSION.bar` etc.
            */
            if (check_reserved_words((yyvsp[-2].lexer.lex_str).str)) {
              YYTHD->syntax_error_at((yylsp[-2]));
              MYSQL_YYABORT;
            }
            (yyval.bipartite_name) = Bipartite_name{to_lex_cstring((yyvsp[-2].lexer.lex_str)), to_lex_cstring((yyvsp[0].lexer.lex_str))};
          }
#line 43010 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2880:
#line 15924 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bipartite_name) = Bipartite_name{{STRING_WITH_LEN("default")}, to_lex_cstring((yyvsp[0].lexer.lex_str))};
          }
#line 43018 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2881:
#line 15931 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bipartite_name) = Bipartite_name{{}, to_lex_cstring((yyvsp[0].lexer.lex_str))};
          }
#line 43026 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2882:
#line 15935 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // disallow "SELECT @@global.global.variable"
            if (check_reserved_words((yyvsp[-2].lexer.lex_str).str)) {
              YYTHD->syntax_error_at((yylsp[-2]));
              MYSQL_YYABORT;
            }
            (yyval.bipartite_name) = Bipartite_name{to_lex_cstring((yyvsp[-2].lexer.lex_str)), to_lex_cstring((yyvsp[0].lexer.lex_str))};
          }
#line 43039 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2883:
#line 15947 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.transaction_characteristics)= NEW_PTN PT_transaction_characteristics((yyvsp[-1].transaction_access_mode), (yyvsp[0].isolation_level));
          }
#line 43047 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2884:
#line 15951 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.transaction_characteristics)= NEW_PTN PT_transaction_characteristics((yyvsp[-1].isolation_level), (yyvsp[0].transaction_access_mode));
          }
#line 43055 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2885:
#line 15958 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.transaction_access_mode)= NEW_PTN PT_transaction_access_mode((yyvsp[0].num));
          }
#line 43063 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2886:
#line 15964 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.transaction_access_mode)= NULL; }
#line 43069 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2887:
#line 15965 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.transaction_access_mode)= (yyvsp[0].transaction_access_mode); }
#line 43075 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2888:
#line 15970 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.isolation_level)= NEW_PTN PT_isolation_level((yyvsp[0].tx_isolation));
          }
#line 43083 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2889:
#line 15976 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.isolation_level)= NULL; }
#line 43089 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2890:
#line 15977 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.isolation_level)= (yyvsp[0].isolation_level); }
#line 43095 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2891:
#line 15981 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= true; }
#line 43101 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2892:
#line 15982 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 43107 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2893:
#line 15986 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_READ_UNCOMMITTED; }
#line 43113 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2894:
#line 15987 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_READ_COMMITTED; }
#line 43119 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2895:
#line 15988 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_REPEATABLE_READ; }
#line 43125 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2896:
#line 15989 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_SERIALIZABLE; }
#line 43131 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2898:
#line 15994 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 43137 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2899:
#line 15996 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ON", 2, system_charset_info);
          }
#line 43145 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2900:
#line 16000 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ALL", 3, system_charset_info);
          }
#line 43153 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2901:
#line 16004 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "binary", 6, system_charset_info);
          }
#line 43161 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2902:
#line 16008 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ROW", 3, system_charset_info);
          }
#line 43169 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2903:
#line 16012 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "SYSTEM", 6, system_charset_info);
          }
#line 43177 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2904:
#line 16021 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "LOCK");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_LOCK_TABLES;
          }
#line 43192 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2905:
#line 16032 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43198 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2906:
#line 16034 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_LOCK_INSTANCE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_lock_instance();
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 43209 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2911:
#line 16054 "sql_yacc.yy" /* yacc.c:1646  */
    {
            thr_lock_type lock_type= (thr_lock_type) (yyvsp[0].num);
            enum_mdl_type mdl_lock_type;

            if (lock_type >= TL_WRITE_ALLOW_WRITE)
            {
              /* LOCK TABLE ... WRITE/LOW_PRIORITY WRITE */
              mdl_lock_type= MDL_SHARED_NO_READ_WRITE;
            }
            else if (lock_type == TL_READ)
            {
              /* LOCK TABLE ... READ LOCAL */
              mdl_lock_type= MDL_SHARED_READ;
            }
            else
            {
              /* LOCK TABLE ... READ */
              mdl_lock_type= MDL_SHARED_READ_ONLY;
            }

            if (!Select->add_table_to_list(YYTHD, (yyvsp[-2].table), (yyvsp[-1].lex_cstr).str, 0, lock_type,
                                           mdl_lock_type))
              MYSQL_YYABORT;
          }
#line 43238 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2912:
#line 16081 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_READ_NO_INSERT; }
#line 43244 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2913:
#line 16082 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_WRITE_DEFAULT; }
#line 43250 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2914:
#line 16084 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= TL_WRITE_LOW_PRIORITY;
            push_deprecated_warn(YYTHD, "LOW_PRIORITY WRITE", "WRITE");
          }
#line 43259 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2915:
#line 16088 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_READ; }
#line 43265 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2916:
#line 16093 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "UNLOCK");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_UNLOCK_TABLES;
          }
#line 43280 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2917:
#line 16104 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43286 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2918:
#line 16106 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_UNLOCK_INSTANCE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_unlock_instance();
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 43297 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2919:
#line 16117 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHUTDOWN;
            (yyval.top_level_node)= NEW_PTN PT_shutdown();
          }
#line 43306 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2920:
#line 16125 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_restart_server();
          }
#line 43314 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2921:
#line 16132 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_ALTER_INSTANCE;
            (yyval.top_level_node)= (yyvsp[0].alter_instance_cmd);
          }
#line 43323 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2922:
#line 16139 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[-2].lexer.lex_str), "INNODB"))
            {
              (yyval.alter_instance_cmd)= NEW_PTN PT_alter_instance(ROTATE_INNODB_MASTER_KEY, EMPTY_CSTR);
            }
            else if (is_identifier((yyvsp[-2].lexer.lex_str), "BINLOG"))
            {
              (yyval.alter_instance_cmd)= NEW_PTN PT_alter_instance(ROTATE_BINLOG_MASTER_KEY, EMPTY_CSTR);
            }
            else
            {
              YYTHD->syntax_error_at((yylsp[-2]));
              MYSQL_YYABORT;
            }
          }
#line 43343 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2923:
#line 16155 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_RELOAD_TLS_ROLLBACK_ON_ERROR, to_lex_cstring("mysql_main"));
          }
#line 43351 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2924:
#line 16159 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_RELOAD_TLS, to_lex_cstring("mysql_main"));
          }
#line 43359 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2925:
#line 16162 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_RELOAD_TLS_ROLLBACK_ON_ERROR, to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 43367 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2926:
#line 16165 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_RELOAD_TLS, to_lex_cstring((yyvsp[-4].lexer.lex_str)));
          }
#line 43375 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2927:
#line 16169 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!is_identifier((yyvsp[-1].lexer.lex_str), "INNODB"))
            {
              YYTHD->syntax_error_at((yylsp[-1]));
              MYSQL_YYABORT;
            }

            if (!is_identifier((yyvsp[0].lexer.lex_str), "REDO_LOG"))
            {
              YYTHD->syntax_error_at((yylsp[0]));
              MYSQL_YYABORT;
            }
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_ENABLE_INNODB_REDO, EMPTY_CSTR);
          }
#line 43394 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2928:
#line 16184 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!is_identifier((yyvsp[-1].lexer.lex_str), "INNODB"))
            {
              YYTHD->syntax_error_at((yylsp[-1]));
              MYSQL_YYABORT;
            }

            if (!is_identifier((yyvsp[0].lexer.lex_str), "REDO_LOG"))
            {
              YYTHD->syntax_error_at((yylsp[0]));
              MYSQL_YYABORT;
            }
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(ALTER_INSTANCE_DISABLE_INNODB_REDO, EMPTY_CSTR);
          }
#line 43413 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2929:
#line 16198 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_instance_cmd) = NEW_PTN PT_alter_instance(RELOAD_KEYRING, EMPTY_CSTR);
          }
#line 43421 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2930:
#line 16209 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_open((yyvsp[-2].table), (yyvsp[0].lex_cstr));
          }
#line 43429 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2931:
#line 16213 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_close(to_lex_cstring((yyvsp[-1].lexer.lex_str)));
          }
#line 43437 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2932:
#line 16222 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_table_scan(to_lex_cstring((yyvsp[-4].lexer.lex_str)), (yyvsp[-2].ha_read_mode), (yyvsp[-1].item), (yyvsp[0].limit_clause));
          }
#line 43445 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2933:
#line 16232 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_index_scan(to_lex_cstring((yyvsp[-5].lexer.lex_str)),
                                              to_lex_cstring((yyvsp[-3].lexer.lex_str)), (yyvsp[-2].ha_read_mode), (yyvsp[-1].item), (yyvsp[0].limit_clause));
          }
#line 43454 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2934:
#line 16244 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_index_range_scan(to_lex_cstring((yyvsp[-8].lexer.lex_str)),
                                                    to_lex_cstring((yyvsp[-6].lexer.lex_str)),
                                                    (yyvsp[-5].ha_rkey_mode), (yyvsp[-3].item_list2), (yyvsp[-1].item), (yyvsp[0].limit_clause));
          }
#line 43464 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2935:
#line 16252 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RFIRST; }
#line 43470 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2936:
#line 16253 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RNEXT;  }
#line 43476 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2937:
#line 16257 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RFIRST; }
#line 43482 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2938:
#line 16258 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RNEXT;  }
#line 43488 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2939:
#line 16259 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RPREV;  }
#line 43494 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2940:
#line 16260 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RLAST;  }
#line 43500 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2941:
#line 16264 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_EXACT;   }
#line 43506 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2942:
#line 16265 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_NEXT; }
#line 43512 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2943:
#line 16266 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_PREV; }
#line 43518 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2944:
#line 16267 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_AFTER_KEY;   }
#line 43524 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2945:
#line 16268 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_BEFORE_KEY;  }
#line 43530 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2946:
#line 16275 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->grant_if_exists = (yyvsp[-4].num);
            Lex->ignore_unknown_user = (yyvsp[0].num);
            auto *tmp= NEW_PTN PT_revoke_roles((yyvsp[-3].role_or_privilege_list), (yyvsp[-1].user_list));
            MAKE_CMD(tmp);
          }
#line 43541 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2947:
#line 16282 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->grant_if_exists = (yyvsp[-7].num);
            Lex->ignore_unknown_user = (yyvsp[0].num);
            if (apply_privileges(YYTHD, *(yyvsp[-6].role_or_privilege_list)))
              MYSQL_YYABORT;
            lex->sql_command= (lex->grant == GLOBAL_ACLS) ? SQLCOM_REVOKE_ALL
                                                          : SQLCOM_REVOKE;
            if ((yyvsp[-4].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-4].acl_type));
            lex->users_list= *(yyvsp[-1].user_list);
          }
#line 43562 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2948:
#line 16299 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->grant_if_exists = (yyvsp[-2].num);
            Lex->all_privileges= 1;
            Lex->grant= GLOBAL_ACLS;
          }
#line 43572 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2949:
#line 16305 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= (lex->grant == (GLOBAL_ACLS & ~GRANT_ACL)) ?
                                                            SQLCOM_REVOKE_ALL
                                                          : SQLCOM_REVOKE;
            if ((yyvsp[-4].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-4].acl_type));
            lex->users_list= *(yyvsp[-1].user_list);
            lex->ignore_unknown_user = (yyvsp[0].num);
          }
#line 43591 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2950:
#line 16320 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->grant_if_exists = (yyvsp[-8].num);
            Lex->ignore_unknown_user = (yyvsp[0].num);
            Lex->sql_command = SQLCOM_REVOKE_ALL;
            Lex->users_list= *(yyvsp[-1].user_list);
          }
#line 43602 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2951:
#line 16327 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->grant_if_exists = (yyvsp[-6].num);
            lex->ignore_unknown_user = (yyvsp[0].num);
            lex->sql_command= SQLCOM_REVOKE;
            lex->users_list= *(yyvsp[-1].user_list);
            lex->users_list.push_front ((yyvsp[-3].lex_user));
            lex->type= TYPE_ENUM_PROXY;
          }
#line 43616 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2952:
#line 16340 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_grant_roles((yyvsp[-3].role_or_privilege_list), (yyvsp[-1].user_list), (yyvsp[0].is_not_empty));
            MAKE_CMD(tmp);
          }
#line 43625 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2953:
#line 16346 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if (apply_privileges(YYTHD, *(yyvsp[-7].role_or_privilege_list)))
              MYSQL_YYABORT;

            if ((yyvsp[-5].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-5].acl_type));
            lex->users_list= *(yyvsp[-2].user_list);
          }
#line 43644 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2954:
#line 16361 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->all_privileges= 1;
            Lex->grant= GLOBAL_ACLS;
          }
#line 43653 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2955:
#line 16366 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if ((yyvsp[-5].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-5].acl_type));
            lex->users_list= *(yyvsp[-2].user_list);
          }
#line 43669 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2956:
#line 16378 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if ((yyvsp[0].is_not_empty))
              lex->grant |= GRANT_ACL;
            lex->users_list= *(yyvsp[-1].user_list);
            lex->users_list.push_front ((yyvsp[-3].lex_user));
            lex->type= TYPE_ENUM_PROXY;
          }
#line 43683 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2957:
#line 16390 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::TABLE; }
#line 43689 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2958:
#line 16391 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::TABLE; }
#line 43695 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2959:
#line 16392 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::FUNCTION; }
#line 43701 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2960:
#line 16393 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::PROCEDURE; }
#line 43707 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2963:
#line 16403 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.role_or_privilege_list)= NEW_PTN Mem_root_array<PT_role_or_privilege *>(YYMEM_ROOT);
            if ((yyval.role_or_privilege_list) == NULL || (yyval.role_or_privilege_list)->push_back((yyvsp[0].role_or_privilege)))
              MYSQL_YYABORT; // OOM
          }
#line 43717 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2964:
#line 16409 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.role_or_privilege_list)= (yyvsp[-2].role_or_privilege_list);
            if ((yyval.role_or_privilege_list)->push_back((yyvsp[0].role_or_privilege)))
              MYSQL_YYABORT; // OOM
          }
#line 43727 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2965:
#line 16418 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].lex_cstring_list) == NULL)
              (yyval.role_or_privilege)= NEW_PTN PT_role_or_dynamic_privilege((yylsp[-1]), (yyvsp[-1].lexer.lex_str));
            else
              (yyval.role_or_privilege)= NEW_PTN PT_dynamic_privilege((yylsp[-1]), (yyvsp[-1].lexer.lex_str));
          }
#line 43738 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2966:
#line 16425 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_role_at_host((yylsp[-2]), (yyvsp[-2].lexer.lex_str), (yyvsp[0].lexer.lex_str)); }
#line 43744 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2967:
#line 16427 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), SELECT_ACL, (yyvsp[0].lex_cstring_list)); }
#line 43750 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2968:
#line 16429 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), INSERT_ACL, (yyvsp[0].lex_cstring_list)); }
#line 43756 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2969:
#line 16431 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), UPDATE_ACL, (yyvsp[0].lex_cstring_list)); }
#line 43762 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2970:
#line 16433 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), REFERENCES_ACL, (yyvsp[0].lex_cstring_list)); }
#line 43768 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2971:
#line 16435 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), DELETE_ACL); }
#line 43774 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2972:
#line 16437 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), 0); }
#line 43780 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2973:
#line 16439 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), INDEX_ACL); }
#line 43786 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2974:
#line 16441 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), ALTER_ACL); }
#line 43792 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2975:
#line 16443 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), CREATE_ACL); }
#line 43798 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2976:
#line 16445 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), DROP_ACL); }
#line 43804 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2977:
#line 16447 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), EXECUTE_ACL); }
#line 43810 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2978:
#line 16449 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), RELOAD_ACL); }
#line 43816 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2979:
#line 16451 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), SHUTDOWN_ACL); }
#line 43822 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2980:
#line 16453 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), PROCESS_ACL); }
#line 43828 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2981:
#line 16455 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), FILE_ACL); }
#line 43834 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2982:
#line 16457 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), GRANT_ACL);
            Lex->grant_privilege= true;
          }
#line 43843 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2983:
#line 16462 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), SHOW_DB_ACL); }
#line 43849 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2984:
#line 16464 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* DEPRECATED */
            (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), SUPER_ACL);
            if (Lex->grant != GLOBAL_ACLS)
            {
              /*
                 An explicit request was made for the SUPER priv id
              */
              push_warning(Lex->thd, Sql_condition::SL_WARNING,
                           ER_WARN_DEPRECATED_SYNTAX,
                           "The SUPER privilege identifier is deprecated");
            }
          }
#line 43867 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2985:
#line 16478 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-2]), CREATE_TMP_ACL); }
#line 43873 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2986:
#line 16480 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), LOCK_TABLES_ACL); }
#line 43879 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2987:
#line 16482 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), REPL_SLAVE_ACL); }
#line 43885 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2988:
#line 16484 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), REPL_CLIENT_ACL); }
#line 43891 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2989:
#line 16486 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_VIEW_ACL); }
#line 43897 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2990:
#line 16488 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), SHOW_VIEW_ACL); }
#line 43903 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2991:
#line 16490 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_PROC_ACL); }
#line 43909 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2992:
#line 16492 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), ALTER_PROC_ACL); }
#line 43915 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2993:
#line 16494 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_USER_ACL); }
#line 43921 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2994:
#line 16496 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), EVENT_ACL); }
#line 43927 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2995:
#line 16498 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), TRIGGER_ACL); }
#line 43933 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2996:
#line 16500 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_TABLESPACE_ACL); }
#line 43939 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2997:
#line 16502 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_ROLE_ACL); }
#line 43945 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2998:
#line 16504 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), DROP_ROLE_ACL); }
#line 43951 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2999:
#line 16508 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 43957 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3000:
#line 16509 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 43963 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3005:
#line 16524 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->x509_subject)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "SUBJECT");
              MYSQL_YYABORT;
            }
            lex->x509_subject=(yyvsp[0].lexer.lex_str).str;
          }
#line 43977 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3006:
#line 16534 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->x509_issuer)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "ISSUER");
              MYSQL_YYABORT;
            }
            lex->x509_issuer=(yyvsp[0].lexer.lex_str).str;
          }
#line 43991 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3007:
#line 16544 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->ssl_cipher)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "CIPHER");
              MYSQL_YYABORT;
            }
            lex->ssl_cipher=(yyvsp[0].lexer.lex_str).str;
          }
#line 44005 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3008:
#line 16557 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            size_t dummy;
            if (lex->copy_db_to(&lex->current_query_block()->db, &dummy))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_OP_ACLS;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 44023 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3009:
#line 16571 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->current_query_block()->db = (yyvsp[-2].lexer.lex_str).str;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_OP_ACLS;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 44039 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3010:
#line 16583 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->current_query_block()->db = NULL;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant= GLOBAL_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 44055 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3011:
#line 16595 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto tmp = NEW_PTN Table_ident(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if (tmp == NULL)
              MYSQL_YYABORT;
            LEX *lex=Lex;
            if (!lex->current_query_block()->add_table_to_list(lex->thd, tmp, NULL,
                                                        TL_OPTION_UPDATING))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_OP_ACLS;
          }
#line 44071 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3012:
#line 16607 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto schema_name = YYCLIENT_NO_SCHEMA ? LEX_CSTRING{}
                                                  : to_lex_cstring((yyvsp[-2].lexer.lex_str).str);
            auto tmp = NEW_PTN Table_ident(schema_name, to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if (tmp == NULL)
              MYSQL_YYABORT;
            LEX *lex=Lex;
            if (!lex->current_query_block()->add_table_to_list(lex->thd, tmp, NULL,
                                                        TL_OPTION_UPDATING))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_OP_ACLS;
          }
#line 44089 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3013:
#line 16624 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= new (YYMEM_ROOT) List<LEX_USER>;
            if ((yyval.user_list) == NULL || (yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 44099 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3014:
#line 16630 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= (yyvsp[-2].user_list);
            if ((yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 44109 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3015:
#line 16639 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= new (YYMEM_ROOT) List<LEX_USER>;
            if ((yyval.user_list) == NULL || (yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 44119 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3016:
#line 16645 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= (yyvsp[-2].user_list);
            if ((yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 44129 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3017:
#line 16653 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 44135 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3018:
#line 16654 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 44141 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3019:
#line 16658 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 44147 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3020:
#line 16659 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 44153 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3021:
#line 16664 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->nth_factor= (yyvsp[-2].ulong_num);
            m->init_registration= true;
            m->requires_registration= true;
            (yyval.lex_mfa) = m;
          }
#line 44167 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3022:
#line 16674 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->nth_factor= (yyvsp[-1].ulong_num);
            m->unregister= true;
            (yyval.lex_mfa) = m;
          }
#line 44180 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3023:
#line 16683 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->nth_factor= (yyvsp[-6].ulong_num);
            m->finish_registration= true;
            m->requires_registration= true;
            m->challenge_response= to_lex_cstring((yyvsp[0].lexer.lex_str));
            (yyval.lex_mfa) = m;
          }
#line 44195 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3024:
#line 16697 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-2].lex_user);
            (yyval.lex_user)->first_factor_auth_info = *(yyvsp[-1].lex_mfa);
            if ((yyval.lex_user)->add_mfa_identifications((yyvsp[0].lex_mfas).mfa2, (yyvsp[0].lex_mfas).mfa3))
              MYSQL_YYABORT;  // OOM
          }
#line 44206 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3025:
#line 16704 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-2].lex_user);
            /* set $3 as first factor auth method */
            (yyvsp[0].lex_mfa)->nth_factor = 1;
            (yyvsp[0].lex_mfa)->passwordless = false;
            (yyval.lex_user)->first_factor_auth_info = *(yyvsp[0].lex_mfa);
            /* set $2 as second factor auth method */
            (yyvsp[-1].lex_mfa)->nth_factor = 2;
            (yyvsp[-1].lex_mfa)->passwordless = true;
            if ((yyval.lex_user)->mfa_list.push_back((yyvsp[-1].lex_mfa)))
              MYSQL_YYABORT;  // OOM
            (yyval.lex_user)->with_initial_auth = true;
          }
#line 44224 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3026:
#line 16718 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-1].lex_user);
            if ((yyval.lex_user)->add_mfa_identifications((yyvsp[0].lex_mfas).mfa2, (yyvsp[0].lex_mfas).mfa3))
              MYSQL_YYABORT;  // OOM
          }
#line 44234 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3027:
#line 16726 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_mfas) = {}; }
#line 44240 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3028:
#line 16728 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].lex_mfa)->nth_factor = 2;
            (yyval.lex_mfas) = {(yyvsp[0].lex_mfa), nullptr};
          }
#line 44249 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3029:
#line 16733 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].lex_mfa)->nth_factor = 2;
            (yyvsp[0].lex_mfa)->nth_factor = 3;
            (yyval.lex_mfas) = {(yyvsp[-2].lex_mfa), (yyvsp[0].lex_mfa)};
          }
#line 44259 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3036:
#line 16751 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->auth = to_lex_cstring((yyvsp[0].lexer.lex_str));
            m->uses_identified_by_clause = true;
            (yyval.lex_mfa) = m;
            Lex->contains_plaintext_password= true;
          }
#line 44273 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3037:
#line 16764 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->auth = EMPTY_CSTR;
            m->has_password_generator = true;
            m->uses_identified_by_clause = true;
            (yyval.lex_mfa) = m;
            Lex->contains_plaintext_password = true;
          }
#line 44288 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3038:
#line 16778 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->plugin = to_lex_cstring((yyvsp[0].lexer.lex_str));
            m->auth = EMPTY_CSTR;
            m->uses_identified_by_clause = false;
            m->uses_identified_with_clause = true;
            (yyval.lex_mfa) = m;
          }
#line 44303 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3039:
#line 16792 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->plugin = to_lex_cstring((yyvsp[-2].lexer.lex_str));
            m->auth = to_lex_cstring((yyvsp[0].lexer.lex_str));
            m->uses_authentication_string_clause = true;
            m->uses_identified_with_clause = true;
            (yyval.lex_mfa) = m;
          }
#line 44318 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3040:
#line 16806 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->plugin = to_lex_cstring((yyvsp[-2].lexer.lex_str));
            m->auth = to_lex_cstring((yyvsp[0].lexer.lex_str));
            m->uses_identified_by_clause = true;
            m->uses_identified_with_clause = true;
            (yyval.lex_mfa) = m;
            Lex->contains_plaintext_password= true;
          }
#line 44334 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3041:
#line 16821 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->plugin = to_lex_cstring((yyvsp[-3].lexer.lex_str));
            m->uses_identified_by_clause = true;
            m->uses_identified_with_clause = true;
            m->has_password_generator = true;
            (yyval.lex_mfa) = m;
            Lex->contains_plaintext_password= true;
          }
#line 44350 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3042:
#line 16836 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_mfa) = (yyvsp[0].lex_mfa);
            (yyvsp[0].lex_mfa)->passwordless = true;
            (yyvsp[0].lex_mfa)->nth_factor = 2;
          }
#line 44360 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3043:
#line 16842 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_mfa) = (yyvsp[0].lex_mfa);
            (yyvsp[0].lex_mfa)->passwordless = true;
            (yyvsp[0].lex_mfa)->nth_factor = 2;
          }
#line 44370 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3044:
#line 16848 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_mfa) = (yyvsp[0].lex_mfa);
            (yyvsp[0].lex_mfa)->passwordless = true;
            (yyvsp[0].lex_mfa)->nth_factor = 2;
          }
#line 44380 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3045:
#line 16859 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-4].lex_user);
            (yyvsp[-4].lex_user)->first_factor_auth_info = *(yyvsp[-3].lex_mfa);
            (yyvsp[-4].lex_user)->current_auth = to_lex_cstring((yyvsp[-1].lexer.lex_str));
            (yyvsp[-4].lex_user)->uses_replace_clause = true;
            (yyvsp[-4].lex_user)->discard_old_password = false;
            (yyvsp[-4].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
          }
#line 44393 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3046:
#line 16870 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-4].lex_user);
            (yyvsp[-4].lex_user)->first_factor_auth_info = *(yyvsp[-3].lex_mfa);
            (yyvsp[-4].lex_user)->current_auth = to_lex_cstring((yyvsp[-1].lexer.lex_str));
            (yyvsp[-4].lex_user)->uses_replace_clause = true;
            (yyvsp[-4].lex_user)->discard_old_password = false;
            (yyvsp[-4].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
          }
#line 44406 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3047:
#line 16879 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-2].lex_user);
            (yyvsp[-2].lex_user)->first_factor_auth_info = *(yyvsp[-1].lex_mfa);
            (yyvsp[-2].lex_user)->discard_old_password = false;
            (yyvsp[-2].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
          }
#line 44417 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3048:
#line 16886 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-2].lex_user);
            (yyvsp[-2].lex_user)->first_factor_auth_info = *(yyvsp[-1].lex_mfa);
            (yyvsp[-2].lex_user)->discard_old_password = false;
            (yyvsp[-2].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
          }
#line 44428 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3049:
#line 16895 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-4].lex_user);
            (yyvsp[-4].lex_user)->first_factor_auth_info = *(yyvsp[-3].lex_mfa);
            (yyvsp[-4].lex_user)->uses_replace_clause = true;
            (yyvsp[-4].lex_user)->discard_old_password = false;
            (yyvsp[-4].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
            (yyvsp[-4].lex_user)->current_auth = to_lex_cstring((yyvsp[-1].lexer.lex_str));
          }
#line 44441 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3050:
#line 16904 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-1].lex_user);
            (yyvsp[-1].lex_user)->first_factor_auth_info = *(yyvsp[0].lex_mfa);
            (yyvsp[-1].lex_user)->discard_old_password = false;
            (yyvsp[-1].lex_user)->retain_current_password = false;
          }
#line 44452 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3051:
#line 16911 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-2].lex_user);
            (yyvsp[-2].lex_user)->first_factor_auth_info = *(yyvsp[-1].lex_mfa);
            (yyvsp[-2].lex_user)->discard_old_password = false;
            (yyvsp[-2].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
          }
#line 44463 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3052:
#line 16918 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-2].lex_user);
            (yyvsp[-2].lex_user)->first_factor_auth_info = *(yyvsp[-1].lex_mfa);
            (yyvsp[-2].lex_user)->discard_old_password = false;
            (yyvsp[-2].lex_user)->retain_current_password = (yyvsp[0].is_not_empty);
          }
#line 44474 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3053:
#line 16926 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-2].lex_user);
            (yyvsp[-2].lex_user)->first_factor_auth_info = *(yyvsp[-1].lex_mfa);
            (yyvsp[-2].lex_user)->discard_old_password= false;
            (yyvsp[-2].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
          }
#line 44485 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3054:
#line 16933 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user) = (yyvsp[-1].lex_user);
            (yyvsp[-1].lex_user)->discard_old_password = (yyvsp[0].is_not_empty);
            (yyvsp[-1].lex_user)->retain_current_password = false;
          }
#line 44495 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3055:
#line 16939 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].lex_mfa)->nth_factor = (yyvsp[-1].ulong_num);
            (yyvsp[0].lex_mfa)->add_factor = true;
            if ((yyvsp[-3].lex_user)->add_mfa_identifications((yyvsp[0].lex_mfa)))
              MYSQL_YYABORT;  // OOM
            (yyval.lex_user) = (yyvsp[-3].lex_user);
           }
#line 44507 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3056:
#line 16947 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-4].ulong_num) == (yyvsp[-1].ulong_num)) {
              my_error(ER_MFA_METHODS_IDENTICAL, MYF(0));
              MYSQL_YYABORT;
            } else if ((yyvsp[-4].ulong_num) > (yyvsp[-1].ulong_num)) {
              my_error(ER_MFA_METHODS_INVALID_ORDER, MYF(0), (yyvsp[-1].ulong_num), (yyvsp[-4].ulong_num));
              MYSQL_YYABORT;
            }
            (yyvsp[-3].lex_mfa)->nth_factor = (yyvsp[-4].ulong_num);
            (yyvsp[-3].lex_mfa)->add_factor = true;
            (yyvsp[0].lex_mfa)->nth_factor = (yyvsp[-1].ulong_num);
            (yyvsp[0].lex_mfa)->add_factor = true;
            if ((yyvsp[-6].lex_user)->add_mfa_identifications((yyvsp[-3].lex_mfa), (yyvsp[0].lex_mfa)))
              MYSQL_YYABORT;  // OOM
            (yyval.lex_user) = (yyvsp[-6].lex_user);
          }
#line 44528 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3057:
#line 16964 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].lex_mfa)->nth_factor = (yyvsp[-1].ulong_num);
            (yyvsp[0].lex_mfa)->modify_factor = true;
            if ((yyvsp[-3].lex_user)->add_mfa_identifications((yyvsp[0].lex_mfa)))
              MYSQL_YYABORT;  // OOM
            (yyval.lex_user) = (yyvsp[-3].lex_user);
           }
#line 44540 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3058:
#line 16972 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-4].ulong_num) == (yyvsp[-1].ulong_num)) {
              my_error(ER_MFA_METHODS_IDENTICAL, MYF(0));
              MYSQL_YYABORT;
            }
            (yyvsp[-3].lex_mfa)->nth_factor = (yyvsp[-4].ulong_num);
            (yyvsp[-3].lex_mfa)->modify_factor = true;
            (yyvsp[0].lex_mfa)->nth_factor = (yyvsp[-1].ulong_num);
            (yyvsp[0].lex_mfa)->modify_factor = true;
            if ((yyvsp[-6].lex_user)->add_mfa_identifications((yyvsp[-3].lex_mfa), (yyvsp[0].lex_mfa)))
              MYSQL_YYABORT;  // OOM
            (yyval.lex_user) = (yyvsp[-6].lex_user);
          }
#line 44558 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3059:
#line 16986 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_MFA *m = NEW_PTN LEX_MFA;
            if (m == nullptr)
              MYSQL_YYABORT;  // OOM
            m->nth_factor = (yyvsp[0].ulong_num);
            m->drop_factor = true;
            if ((yyvsp[-2].lex_user)->add_mfa_identifications(m))
              MYSQL_YYABORT;  // OOM
            (yyval.lex_user) = (yyvsp[-2].lex_user);
           }
#line 44573 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3060:
#line 16997 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].ulong_num) == (yyvsp[0].ulong_num)) {
              my_error(ER_MFA_METHODS_IDENTICAL, MYF(0));
              MYSQL_YYABORT;
            }
            LEX_MFA *m1 = NEW_PTN LEX_MFA;
            if (m1 == nullptr)
              MYSQL_YYABORT;  // OOM
            m1->nth_factor = (yyvsp[-2].ulong_num);
            m1->drop_factor = true;
            LEX_MFA *m2 = NEW_PTN LEX_MFA;
            if (m2 == nullptr)
              MYSQL_YYABORT;  // OOM
            m2->nth_factor = (yyvsp[0].ulong_num);
            m2->drop_factor = true;
            if ((yyvsp[-4].lex_user)->add_mfa_identifications(m1, m2))
              MYSQL_YYABORT;  // OOM
            (yyval.lex_user) = (yyvsp[-4].lex_user);
           }
#line 44597 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3061:
#line 17020 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (my_strcasecmp(system_charset_info, (yyvsp[-1].lexer.lex_str).str, "2") == 0) {
              (yyval.ulong_num) = 2;
            } else if (my_strcasecmp(system_charset_info, (yyvsp[-1].lexer.lex_str).str, "3") == 0) {
              (yyval.ulong_num) = 3;
            } else {
               my_error(ER_WRONG_VALUE, MYF(0), "nth factor", (yyvsp[-1].lexer.lex_str).str);
               MYSQL_YYABORT;
            }
          }
#line 44612 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3062:
#line 17034 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 44621 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3063:
#line 17039 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 44630 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3064:
#line 17047 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
         }
#line 44639 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3065:
#line 17052 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 44648 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3066:
#line 17059 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstring_list)= NULL; }
#line 44654 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3067:
#line 17060 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstring_list)= (yyvsp[-1].lex_cstring_list); }
#line 44660 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3068:
#line 17065 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_cstring_list)= NEW_PTN Mem_root_array<LEX_CSTRING>(YYMEM_ROOT);
            if ((yyval.lex_cstring_list) == NULL || (yyval.lex_cstring_list)->push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT; // OOM
          }
#line 44670 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3069:
#line 17071 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_cstring_list)= (yyvsp[-2].lex_cstring_list);
            if ((yyval.lex_cstring_list)->push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT; // OOM
          }
#line 44680 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3071:
#line 17081 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_SPECIFIED;
          }
#line 44688 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3072:
#line 17085 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_ANY;
          }
#line 44696 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3073:
#line 17089 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_X509;
          }
#line 44704 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3074:
#line 17093 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_NONE;
          }
#line 44712 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3075:
#line 17099 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44718 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3076:
#line 17101 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= GRANT_ACL;}
#line 44724 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3077:
#line 17105 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 44730 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3078:
#line 17106 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 44736 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3079:
#line 17110 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_NONE; }
#line 44742 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3080:
#line 17112 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_NAME;
            Lex->grant_as.role_list = (yyvsp[0].user_list);
          }
#line 44750 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3081:
#line 17116 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->grant_as.role_type = role_enum::ROLE_ALL;
            Lex->grant_as.role_list = (yyvsp[0].user_list);
          }
#line 44759 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3082:
#line 17121 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_NONE; }
#line 44765 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3083:
#line 17123 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_DEFAULT; }
#line 44771 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3084:
#line 17127 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.grant_as_used = false; }
#line 44777 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3085:
#line 17129 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->grant_as.grant_as_used = true;
            Lex->grant_as.user = (yyvsp[-1].lex_user);
          }
#line 44786 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3086:
#line 17136 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_BEGIN;
            lex->start_transaction_opt= 0;
          }
#line 44796 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3087:
#line 17141 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44802 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3088:
#line 17145 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44808 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3089:
#line 17146 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44814 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3090:
#line 17151 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 44820 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3091:
#line 17152 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_NO; }
#line 44826 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3092:
#line 17153 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_YES; }
#line 44832 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3093:
#line 17158 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 44838 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3094:
#line 17159 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_YES; }
#line 44844 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3095:
#line 17160 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_NO; }
#line 44850 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3096:
#line 17164 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44856 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3097:
#line 17165 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 44862 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3098:
#line 17170 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_COMMIT;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 44875 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3099:
#line 17182 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 44888 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3100:
#line 17192 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[0].lexer.lex_str);
          }
#line 44898 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3101:
#line 17201 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SAVEPOINT;
            lex->ident= (yyvsp[0].lexer.lex_str);
          }
#line 44908 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3102:
#line 17210 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RELEASE_SAVEPOINT;
            lex->ident= (yyvsp[0].lexer.lex_str);
          }
#line 44918 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3103:
#line 17223 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=1; }
#line 44924 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3104:
#line 17224 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=1; }
#line 44930 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3105:
#line 17225 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=0; }
#line 44936 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3108:
#line 17238 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.subquery)= NEW_PTN PT_subquery((yyloc), (yyvsp[0].query_primary));
          }
#line 44944 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3109:
#line 17244 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_STRAIGHT_JOIN; }
#line 44950 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3110:
#line 17245 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_HIGH_PRIORITY; }
#line 44956 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3111:
#line 17246 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_DISTINCT; }
#line 44962 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3112:
#line 17247 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_SMALL_RESULT; }
#line 44968 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3113:
#line 17248 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_BIG_RESULT; }
#line 44974 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3114:
#line 17249 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= OPTION_BUFFER_RESULT; }
#line 44980 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3115:
#line 17250 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning(YYTHD, Sql_condition::SL_WARNING,
                         ER_WARN_DEPRECATED_SYNTAX,
                         ER_THD(YYTHD, ER_WARN_DEPRECATED_SQL_CALC_FOUND_ROWS));
            (yyval.ulonglong_number)= OPTION_FOUND_ROWS;
          }
#line 44991 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3116:
#line 17256 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_ALL; }
#line 44997 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3117:
#line 17267 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Initialize context for 'CREATE view_or_trigger_or_sp_or_event'
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
          }
#line 45008 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3118:
#line 17277 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45014 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3119:
#line 17279 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45020 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3120:
#line 17281 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45026 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3134:
#line 17314 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              We have to distinguish missing DEFINER-clause from case when
              CURRENT_USER specified as definer explicitly in order to properly
              handle CREATE TRIGGER statements which come to replication thread
              from older master servers (i.e. to create non-suid trigger in this
              case).
            */
            YYTHD->lex->definer= 0;
          }
#line 45041 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3135:
#line 17328 "sql_yacc.yy" /* yacc.c:1646  */
    {
            YYTHD->lex->definer= get_current_user(YYTHD, (yyvsp[0].lex_user));
          }
#line 45049 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3136:
#line 17341 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45055 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3137:
#line 17343 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45061 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3138:
#line 17345 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45067 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3139:
#line 17350 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_mode= enum_view_create_mode::VIEW_CREATE_OR_REPLACE; }
#line 45073 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3140:
#line 17355 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED; }
#line 45079 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3141:
#line 17357 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_algorithm= VIEW_ALGORITHM_MERGE; }
#line 45085 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3142:
#line 17359 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_algorithm= VIEW_ALGORITHM_TEMPTABLE; }
#line 45091 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3143:
#line 17364 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_suid= VIEW_SUID_DEFAULT; }
#line 45097 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3144:
#line 17366 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_suid= VIEW_SUID_DEFINER; }
#line 45103 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3145:
#line 17368 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_suid= VIEW_SUID_INVOKER; }
#line 45109 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3146:
#line 17373 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_CREATE_VIEW;
            /* first table in list is target VIEW name */
            if (!lex->query_block->add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    TL_IGNORE,
                                                    MDL_EXCLUSIVE))
              MYSQL_YYABORT;
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
            thd->parsing_system_view= lex->query_tables->is_system_view;
            if ((yyvsp[0].simple_ident_list).size())
            {
              for (auto column_alias : (yyvsp[0].simple_ident_list))
              {
                // Report error if the column name/length is incorrect.
                if (check_column_name(column_alias.str))
                {
                  my_error(ER_WRONG_COLUMN_NAME, MYF(0), column_alias.str);
                  MYSQL_YYABORT;
                }
              }
              /*
                The $4 object is short-lived (its 'm_array' is not);
                so we have to duplicate it, and then we can store a
                pointer.
              */
              void *rawmem= thd->memdup(&((yyvsp[0].simple_ident_list)), sizeof((yyvsp[0].simple_ident_list)));
              if (!rawmem)
                MYSQL_YYABORT; /* purecov: inspected */
              lex->query_tables->
                set_derived_column_names(static_cast<Create_col_name_list* >(rawmem));
            }
          }
#line 45149 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3148:
#line 17413 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            lex->parsing_options.allows_variable= false;
            lex->parsing_options.allows_select_into= false;

            /*
              In CREATE VIEW v ... the table_list initially contains
              here a table entry for the destination "table" `v'.
              Backup it and clean the table list for the processing of
              the query expression and push `v' back to the beginning of the
              table_list finally.

              @todo: Don't save the CREATE destination table in
                     Query_block::table_list and remove this backup & restore.

              The following work only with the local list, the global list
              is created correctly in this case
            */
            SQL_I_List<TABLE_LIST> save_list;
            Query_block * const save_query_block= Select;
            save_query_block->table_list.save_and_clear(&save_list);

            CONTEXTUALIZE((yyvsp[-1].query_primary));

            /*
              The following work only with the local list, the global list
              is created correctly in this case
            */
            save_query_block->table_list.push_front(&save_list);

            Lex->create_view_check= (yyvsp[0].num);

            /*
              It's simpler to use @$ to grab the whole rule text, OTOH  it's
              also simple to lose something that way when changing this rule,
              so let use explicit @1 and @2 to memdup this view definition:
            */
            const size_t len= (yylsp[0]).cpp.end - (yylsp[-1]).cpp.start;
            lex->create_view_query_block.str=
              static_cast<char *>(thd->memdup((yylsp[-1]).cpp.start, len));
            lex->create_view_query_block.length= len;
            trim_whitespace(thd->charset(), &lex->create_view_query_block);

            lex->parsing_options.allows_variable= true;
            lex->parsing_options.allows_select_into= true;
          }
#line 45201 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3149:
#line 17463 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_NONE; }
#line 45207 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3150:
#line 17464 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 45213 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3151:
#line 17465 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 45219 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3152:
#line 17466 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_LOCAL; }
#line 45225 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3153:
#line 17477 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trigger_action_order_type)= TRG_ORDER_FOLLOWS; }
#line 45231 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3154:
#line 17479 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trigger_action_order_type)= TRG_ORDER_PRECEDES; }
#line 45237 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3155:
#line 17484 "sql_yacc.yy" /* yacc.c:1646  */
    {
              (yyval.trg_characteristics).ordering_clause= TRG_ORDER_NONE;
              (yyval.trg_characteristics).anchor_trigger_name= NULL_CSTR;
            }
#line 45246 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3156:
#line 17490 "sql_yacc.yy" /* yacc.c:1646  */
    {
              (yyval.trg_characteristics).ordering_clause= (yyvsp[-1].trigger_action_order_type);
              (yyval.trg_characteristics).anchor_trigger_name= { (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length };
            }
#line 45255 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3157:
#line 17508 "sql_yacc.yy" /* yacc.c:1646  */
    {                               /* $12 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "TRIGGER");
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::TRIGGER, (yyvsp[-8].spname));

            if (!sp)
              MYSQL_YYABORT;

            sp->m_trg_chistics.action_time= (enum enum_trigger_action_time_type) (yyvsp[-7].num);
            sp->m_trg_chistics.event= (enum enum_trigger_event_type) (yyvsp[-6].num);
            sp->m_trg_chistics.ordering_clause= (yyvsp[0].trg_characteristics).ordering_clause;
            sp->m_trg_chistics.anchor_trigger_name= (yyvsp[0].trg_characteristics).anchor_trigger_name;

            lex->stmt_definition_begin= (yylsp[-10]).cpp.start;
            lex->create_info->options= (yyvsp[-9].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            lex->ident.str= const_cast<char *>((yylsp[-4]).cpp.start);
            lex->ident.length= (yylsp[-2]).cpp.start - (yylsp[-4]).cpp.start;

            lex->sphead= sp;
            lex->spname= (yyvsp[-8].spname);

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;
            sp->set_body_start(thd, (yylsp[0]).cpp.end);
          }
#line 45292 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3158:
#line 17541 "sql_yacc.yy" /* yacc.c:1646  */
    {                               /* $14 */
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_TRIGGER;

            if (sp->is_not_allowed_in_function("trigger"))
              MYSQL_YYABORT;

            /*
              We have to do it after parsing trigger body, because some of
              sp_proc_stmt alternatives are not saving/restoring LEX, so
              lex->query_tables can be wiped out.
            */
            if (!lex->query_block->add_table_to_list(thd, (yyvsp[-6].table),
                                                    nullptr,
                                                    TL_OPTION_UPDATING,
                                                    TL_READ_NO_INSERT,
                                                    MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;

            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_create_trigger();
          }
#line 45323 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3159:
#line 17584 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /* $9 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (is_native_function((yyvsp[-4].lexer.lex_str)))
            {
              if((yyvsp[-5].is_not_empty))
              {
                /*
                  IF NOT EXISTS clause is unsupported when creating a UDF with
                  the same name as a native function
                */
                my_error(ER_IF_NOT_EXISTS_UNSUPPORTED_UDF_NATIVE_FCT_NAME_COLLISION, MYF(0), (yyvsp[-4].lexer.lex_str).str);
              }
              else
                my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0), (yyvsp[-4].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_AGGREGATE;
            lex->stmt_definition_begin= (yylsp[-6]).cpp.start;
            lex->create_info->options= (yyvsp[-5].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            lex->udf.name = (yyvsp[-4].lexer.lex_str);
            lex->udf.returns=(Item_result) (yyvsp[-2].num);
            lex->udf.dl=(yyvsp[0].lexer.lex_str).str;
          }
#line 45354 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3160:
#line 17617 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (is_native_function((yyvsp[-4].lexer.lex_str)))
            {
              if((yyvsp[-5].is_not_empty))
              {
                /*
                  IF NOT EXISTS clause is unsupported when creating a UDF with
                  the same name as a native function
                */
                my_error(ER_IF_NOT_EXISTS_UNSUPPORTED_UDF_NATIVE_FCT_NAME_COLLISION, MYF(0), (yyvsp[-4].lexer.lex_str).str);
              }
              else
                my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0), (yyvsp[-4].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_FUNCTION;
            lex->stmt_definition_begin= (yylsp[-6]).cpp.start;
            lex->create_info->options= (yyvsp[-5].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            lex->udf.name = (yyvsp[-4].lexer.lex_str);
            lex->udf.returns=(Item_result) (yyvsp[-2].num);
            lex->udf.dl=(yyvsp[0].lexer.lex_str).str;
          }
#line 45385 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3161:
#line 17650 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /* $5 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->stmt_definition_begin= (yylsp[-3]).cpp.start;
            lex->spname= (yyvsp[-1].spname);

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }


            sp_head *sp= sp_start_parsing(thd, enum_sp_type::FUNCTION, lex->spname);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;
            lex->create_info->options= (yyvsp[-2].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;

            sp->m_parser_data.set_parameter_start_ptr((yylsp[0]).cpp.end);
          }
#line 45414 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3162:
#line 17676 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /* $8 */
            Lex->sphead->m_parser_data.set_parameter_end_ptr((yylsp[0]).cpp.start);
          }
#line 45422 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3163:
#line 17682 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /* $12 */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            CONTEXTUALIZE((yyvsp[-1].type));
            enum_field_types field_type= (yyvsp[-1].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-1].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[0].lexer.charset), &cs))
              MYSQL_YYABORT;

            /*
              This was disabled in 5.1.12. See bug #20701
              When collation support in SP is implemented, then this test
              should be removed.
            */
            if ((field_type == MYSQL_TYPE_STRING || field_type == MYSQL_TYPE_VARCHAR)
                && ((yyvsp[-1].type)->get_type_flags() & BINCMP_FLAG))
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0), "return value collation");
              MYSQL_YYABORT;
            }

            if (sp->m_return_field_def.init(YYTHD, "", field_type,
                                            (yyvsp[-1].type)->get_length(), (yyvsp[-1].type)->get_dec(),
                                            (yyvsp[-1].type)->get_type_flags(), NULL, NULL, &NULL_CSTR, 0,
                                            (yyvsp[-1].type)->get_interval_list(),
                                            cs ? cs : YYTHD->variables.collation_database,
                                            (yyvsp[0].lexer.charset) != nullptr, (yyvsp[-1].type)->get_uint_geom_type(),
                                            nullptr, nullptr, {},
                                            dd::Column::enum_hidden_type::HT_VISIBLE))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(YYTHD,
                                        &sp->m_return_field_def))
              MYSQL_YYABORT;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 45467 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3164:
#line 17723 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /* $14 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, yylloc.cpp.start);
          }
#line 45479 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3165:
#line 17731 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            if (sp->is_not_allowed_in_function("function"))
              MYSQL_YYABORT;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_SPFUNCTION;

            if (!(sp->m_flags & sp_head::HAS_RETURN))
            {
              my_error(ER_SP_NORETURN, MYF(0), sp->m_qname.str);
              MYSQL_YYABORT;
            }

            if (is_native_function(sp->m_name))
            {
              /*
                This warning will be printed when
                [1] A client query is parsed,
                [2] A stored function is loaded by db_load_routine.
                Printing the warning for [2] is intentional, to cover the
                following scenario:
                - A user define a SF 'foo' using MySQL 5.N
                - An application uses select foo(), and works.
                - MySQL 5.{N+1} defines a new native function 'foo', as
                part of a new feature.
                - MySQL 5.{N+1} documentation is updated, and should mention
                that there is a potential incompatible change in case of
                existing stored function named 'foo'.
                - The user deploys 5.{N+1}. At this point, 'select foo()'
                means something different, and the user code is most likely
                broken (it's only safe if the code is 'select db.foo()').
                With a warning printed when the SF is loaded (which has to occur
                before the call), the warning will provide a hint explaining
                the root cause of a later failure of 'select foo()'.
                With no warning printed, the user code will fail with no
                apparent reason.
                Printing a warning each time db_load_routine is executed for
                an ambiguous function is annoying, since that can happen a lot,
                but in practice should not happen unless there *are* name
                collisions.
                If a collision exists, it should not be silenced but fixed.
              */
              push_warning_printf(thd,
                                  Sql_condition::SL_NOTE,
                                  ER_NATIVE_FCT_NAME_COLLISION,
                                  ER_THD(thd, ER_NATIVE_FCT_NAME_COLLISION),
                                  sp->m_name.str);
            }
          }
#line 45538 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3166:
#line 17791 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$4*/
            THD *thd= YYTHD;
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }

            lex->stmt_definition_begin= (yylsp[-2]).cpp.start;

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::PROCEDURE, (yyvsp[0].spname));

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;
            lex->create_info->options= (yyvsp[-1].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
          }
#line 45563 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3167:
#line 17812 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$6*/
            Lex->sphead->m_parser_data.set_parameter_start_ptr((yylsp[0]).cpp.end);
          }
#line 45571 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3168:
#line 17817 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$9*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_parser_data.set_parameter_end_ptr((yylsp[0]).cpp.start);
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 45583 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3169:
#line 17825 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$11*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, yylloc.cpp.start);
          }
#line 45595 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3170:
#line 17833 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$13*/
            THD *thd= YYTHD;
            LEX *lex= Lex;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_PROCEDURE;
          }
#line 45608 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3171:
#line 17847 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_START;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_start((yyvsp[-1].xid), (yyvsp[0].xa_option_type));
          }
#line 45617 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3172:
#line 17852 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_END;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_end((yyvsp[-1].xid), (yyvsp[0].xa_option_type));
          }
#line 45626 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3173:
#line 17857 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_PREPARE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_prepare((yyvsp[0].xid));
          }
#line 45635 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3174:
#line 17862 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_COMMIT;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_commit((yyvsp[-1].xid), (yyvsp[0].xa_option_type));
          }
#line 45644 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3175:
#line 17867 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_ROLLBACK;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_rollback((yyvsp[0].xid));
          }
#line 45653 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3176:
#line 17872 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_RECOVER;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_recover((yyvsp[0].is_not_empty));
          }
#line 45662 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3177:
#line 17879 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 45668 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3178:
#line 17880 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 45674 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3179:
#line 17884 "sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[0].string)->length() <= MAXGTRIDSIZE);
            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set(1L, (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length(), 0, 0);
            (yyval.xid)= xid;
          }
#line 45687 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3180:
#line 17893 "sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].string)->length() <= MAXGTRIDSIZE &&
                                 (yyvsp[0].string)->length() <= MAXBQUALSIZE);
            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set(1L, (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length(), (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length());
            (yyval.xid)= xid;
          }
#line 45701 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3181:
#line 17903 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // check for overwflow of xid format id
            bool format_id_overflow_detected= ((yyvsp[0].ulong_num) > LONG_MAX);

            MYSQL_YYABORT_UNLESS((yyvsp[-4].string)->length() <= MAXGTRIDSIZE &&
                                 (yyvsp[-2].string)->length() <= MAXBQUALSIZE
                                 && !format_id_overflow_detected);

            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set((yyvsp[0].ulong_num), (yyvsp[-4].string)->ptr(), (yyvsp[-4].string)->length(), (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length());
            (yyval.xid)= xid;
          }
#line 45720 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3182:
#line 17920 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45726 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3183:
#line 17921 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 45732 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3184:
#line 17925 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_NONE;        }
#line 45738 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3185:
#line 17926 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_JOIN;        }
#line 45744 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3186:
#line 17927 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_RESUME;      }
#line 45750 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3187:
#line 17931 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_NONE;        }
#line 45756 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3188:
#line 17932 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_ONE_PHASE;   }
#line 45762 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3189:
#line 17937 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_NONE;        }
#line 45768 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3190:
#line 17939 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_SUSPEND;     }
#line 45774 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3191:
#line 17941 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_FOR_MIGRATE; }
#line 45780 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3192:
#line 17946 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_PLUGIN;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_install_plugin(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].lexer.lex_str));
          }
#line 45790 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3193:
#line 17952 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_COMPONENT;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_install_component((yyvsp[0].lex_str_list));
          }
#line 45800 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3194:
#line 17961 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_PLUGIN;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_uninstall_plugin(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 45810 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3195:
#line 17967 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_COMPONENT;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_uninstall_component((yyvsp[0].lex_str_list));
          }
#line 45820 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3196:
#line 17976 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_list).init(YYTHD->mem_root);
            if ((yyval.lex_str_list).push_back((yyvsp[0].lexer.lex_str)))
              MYSQL_YYABORT; // OOM
          }
#line 45830 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3197:
#line 17982 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_list)= (yyvsp[-2].lex_str_list);
            if ((yyval.lex_str_list).push_back((yyvsp[0].lexer.lex_str)))
              MYSQL_YYABORT; // OOM
          }
#line 45840 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3198:
#line 17991 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->m_sql_cmd=
              new (YYTHD->mem_root) Sql_cmd_import_table((yyvsp[0].lex_str_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
            lex->sql_command= SQLCOM_IMPORT;
          }
#line 45853 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3199:
#line 18009 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CLONE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_clone(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT;
          }
#line 45864 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3200:
#line 18019 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CLONE;
            /* Reject space characters around ':' */
            if ((yylsp[-4]).raw.start - (yylsp[-6]).raw.end != 1) {
              YYTHD->syntax_error_at((yylsp[-5]));
              MYSQL_YYABORT;
            }
            (yyvsp[-6].lex_user)->first_factor_auth_info.auth = to_lex_cstring((yyvsp[-1].lexer.lex_str));
            (yyvsp[-6].lex_user)->first_factor_auth_info.uses_identified_by_clause = true;
            Lex->contains_plaintext_password= true;

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_clone((yyvsp[-6].lex_user), (yyvsp[-4].ulong_num), to_lex_cstring((yyvsp[0].lexer.lex_str)));

            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT;
          }
#line 45885 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3201:
#line 18039 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= null_lex_str;
          }
#line 45893 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3202:
#line 18043 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= (yyvsp[-1].lexer.lex_str);
          }
#line 45901 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3203:
#line 18050 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type= SSL_TYPE_NOT_SPECIFIED;
          }
#line 45909 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3204:
#line 18054 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type= SSL_TYPE_SPECIFIED;
          }
#line 45917 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3205:
#line 18058 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type= SSL_TYPE_NONE;
          }
#line 45925 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3206:
#line 18064 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_type)= resourcegroups::Type::USER_RESOURCE_GROUP; }
#line 45931 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3207:
#line 18065 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_type)= resourcegroups::Type::SYSTEM_RESOURCE_GROUP; }
#line 45937 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3208:
#line 18070 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Make an empty list. */
            (yyval.resource_group_vcpu_list_type)= NEW_PTN Mem_root_array<resourcegroups::Range>(YYMEM_ROOT);
            if ((yyval.resource_group_vcpu_list_type) == nullptr)
              MYSQL_YYABORT;
          }
#line 45948 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3209:
#line 18076 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_vcpu_list_type)= (yyvsp[0].resource_group_vcpu_list_type); }
#line 45954 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3210:
#line 18081 "sql_yacc.yy" /* yacc.c:1646  */
    {
            resourcegroups::Range r((yyvsp[0].vcpu_range_type).start, (yyvsp[0].vcpu_range_type).end);
            (yyval.resource_group_vcpu_list_type)= NEW_PTN Mem_root_array<resourcegroups::Range>(YYMEM_ROOT);
            if ((yyval.resource_group_vcpu_list_type) == nullptr || (yyval.resource_group_vcpu_list_type)->push_back(r))
              MYSQL_YYABORT;
          }
#line 45965 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3211:
#line 18088 "sql_yacc.yy" /* yacc.c:1646  */
    {
            resourcegroups::Range r((yyvsp[0].vcpu_range_type).start, (yyvsp[0].vcpu_range_type).end);
            (yyval.resource_group_vcpu_list_type)= (yyvsp[-2].resource_group_vcpu_list_type);
            if ((yyval.resource_group_vcpu_list_type) == nullptr || (yyval.resource_group_vcpu_list_type)->push_back(r))
              MYSQL_YYABORT;
          }
#line 45976 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3212:
#line 18098 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto cpu_id= my_strtoull((yyvsp[0].lexer.lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).start= (yyval.vcpu_range_type).end=
              static_cast<resourcegroups::platform::cpu_id_t>(cpu_id);
            assert((yyval.vcpu_range_type).start == cpu_id); // truncation check
          }
#line 45987 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3213:
#line 18105 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto start= my_strtoull((yyvsp[-2].lexer.lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).start= static_cast<resourcegroups::platform::cpu_id_t>(start);
            assert((yyval.vcpu_range_type).start == start); // truncation check

            auto end= my_strtoull((yyvsp[0].lexer.lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).end= static_cast<resourcegroups::platform::cpu_id_t>(end);
            assert((yyval.vcpu_range_type).end == end); // truncation check
          }
#line 46001 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3214:
#line 18117 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= static_cast<int>(my_strtoll((yyvsp[0].lexer.lex_str).str, nullptr, 10)); }
#line 46007 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3215:
#line 18118 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= -static_cast<int>(my_strtoll((yyvsp[0].lexer.lex_str).str, nullptr, 10)); }
#line 46013 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3216:
#line 18122 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_priority_type).is_default= true; }
#line 46019 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3217:
#line 18124 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.resource_group_priority_type).is_default= false;
            (yyval.resource_group_priority_type).value= (yyvsp[0].num);
          }
#line 46028 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3218:
#line 18131 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_state_type).is_default= true; }
#line 46034 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3219:
#line 18133 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.resource_group_state_type).is_default= false;
            (yyval.resource_group_state_type).value= true;
          }
#line 46043 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3220:
#line 18138 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.resource_group_state_type).is_default= false;
            (yyval.resource_group_state_type).value= false;
          }
#line 46052 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3221:
#line 18145 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_flag_type)= false; }
#line 46058 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3222:
#line 18146 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_flag_type)= true; }
#line 46064 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 3223:
#line 18152 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].lexer.lex_str).str[0] != '\0') {
              size_t eoff = 0;
              std::string emsg;
              if (!is_valid_json_syntax((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, &eoff, &emsg,
                  JsonDocumentDefaultDepthHandler)) {
                my_error(ER_INVALID_JSON_ATTRIBUTE, MYF(0),
                         emsg.c_str(), eoff, (yyvsp[0].lexer.lex_str).str+eoff);
                MYSQL_YYABORT;
              }
            }
            (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str));
          }
#line 46082 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;


#line 46086 "/var/lib/pb2/sb_1-7663233-1657143500.24/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
      default: break;
    }
  /* User semantic actions sometimes alter yychar, and that requires
     that yytoken be updated with the new translation.  We take the
     approach of translating immediately before every use of yytoken.
     One alternative is translating here after every semantic action,
     but that translation would be missed if the semantic action invokes
     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
     incorrect destructor might then be invoked immediately.  In the
     case of YYERROR or YYBACKUP, subsequent parser actions might lead
     to an incorrect destructor call or verbose syntax error message
     before the lookahead is translated.  */
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now 'shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*--------------------------------------.
| yyerrlab -- here on detecting error.  |
`--------------------------------------*/
yyerrlab:
  /* Make sure we have latest lookahead translation.  See comments at
     user semantic actions for why this is necessary.  */
  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);

  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, YYTHD, parse_tree, YY_("syntax error"));
#else
# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
                                        yyssp, yytoken)
      {
        char const *yymsgp = YY_("syntax error");
        int yysyntax_error_status;
        yysyntax_error_status = YYSYNTAX_ERROR;
        if (yysyntax_error_status == 0)
          yymsgp = yymsg;
        else if (yysyntax_error_status == 1)
          {
            if (yymsg != yymsgbuf)
              YYSTACK_FREE (yymsg);
            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
            if (!yymsg)
              {
                yymsg = yymsgbuf;
                yymsg_alloc = sizeof yymsgbuf;
                yysyntax_error_status = 2;
              }
            else
              {
                yysyntax_error_status = YYSYNTAX_ERROR;
                yymsgp = yymsg;
              }
          }
        yyerror (&yylloc, YYTHD, parse_tree, yymsgp);
        if (yysyntax_error_status == 2)
          goto yyexhaustedlab;
      }
# undef YYSYNTAX_ERROR
#endif
    }

  yyerror_range[1] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse lookahead token after an
         error, discard it.  */

      if (yychar <= YYEOF)
        {
          /* Return failure if at end of input.  */
          if (yychar == YYEOF)
            YYABORT;
        }
      else
        {
          yydestruct ("Error: discarding",
                      yytoken, &yylval, &yylloc, YYTHD, parse_tree);
          yychar = YYEMPTY;
        }
    }

  /* Else will try to reuse lookahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[1] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule whose action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;      /* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (!yypact_value_is_default (yyn))
        {
          yyn += YYTERROR;
          if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
            {
              yyn = yytable[yyn];
              if (0 < yyn)
                break;
            }
        }

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
        YYABORT;

      yyerror_range[1] = *yylsp;
      yydestruct ("Error: popping",
                  yystos[yystate], yyvsp, yylsp, YYTHD, parse_tree);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END

  yyerror_range[2] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the lookahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, yyerror_range, 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#if !defined yyoverflow || YYERROR_VERBOSE
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, YYTHD, parse_tree, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEMPTY)
    {
      /* Make sure we have latest lookahead translation.  See comments at
         user semantic actions for why this is necessary.  */
      yytoken = YYTRANSLATE (yychar);
      yydestruct ("Cleanup: discarding lookahead",
                  yytoken, &yylval, &yylloc, YYTHD, parse_tree);
    }
  /* Do not reclaim the symbols of the rule whose action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
                  yystos[*yyssp], yyvsp, yylsp, YYTHD, parse_tree);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  return yyresult;
}
